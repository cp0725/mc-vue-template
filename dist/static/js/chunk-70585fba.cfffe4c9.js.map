{"version":3,"sources":["webpack:///./src/2demo/blocks/gauge-chart/GaugeChart.vue?c688","webpack:///src/2demo/blocks/gauge-chart/GaugeChart.vue","webpack:///./src/2demo/blocks/gauge-chart/GaugeChart.vue?5873","webpack:///./src/2demo/blocks/gauge-chart/GaugeChart.vue","webpack:///./src/2demo/blocks/gauge-chart/GaugeChart.vue?5adf","webpack:///./node_modules/_echarts@4.1.0@echarts/lib/chart/gauge.js","webpack:///./node_modules/_echarts@4.1.0@echarts/lib/chart/gauge/GaugeSeries.js","webpack:///./node_modules/_echarts@4.1.0@echarts/lib/chart/gauge/GaugeView.js","webpack:///./node_modules/_echarts@4.1.0@echarts/lib/chart/gauge/PointerPath.js","webpack:///./node_modules/_v-charts@1.18.0@v-charts/lib/gauge.js"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","attrs","data","chartData","settings","chartSettings","staticRenderFns","GaugeChartvue_type_script_lang_js_","components","VeGauge","gauge_default","a","name","initValue","dimension","metrics","columns","rows","type","value","b","created","runValue","watch","methods","minNum","maxNum","_this","timeOut","setTimeout","Math","floor","random","clearTimeout","gauge_chart_GaugeChartvue_type_script_lang_js_","component","Object","componentNormalizer","options","__file","__webpack_exports__","_node_modules_mini_css_extract_plugin_0_4_4_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_1_0_0_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_15_4_2_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_2_1_6_postcss_loader_lib_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_1_2_2_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_15_4_2_vue_loader_lib_index_js_vue_loader_options_GaugeChart_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","_node_modules_mini_css_extract_plugin_0_4_4_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_1_0_0_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_15_4_2_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_2_1_6_postcss_loader_lib_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_1_2_2_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_15_4_2_vue_loader_lib_index_js_vue_loader_options_GaugeChart_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0___default","n","createListSimply","SeriesModel","zrUtil","GaugeSeries","extend","getInitialData","option","ecModel","dataOpt","isArray","defaultOption","zlevel","z","center","legendHoverLink","radius","startAngle","endAngle","clockwise","min","max","splitNumber","axisLine","show","lineStyle","color","width","splitLine","length","axisTick","axisLabel","distance","pointer","itemStyle","title","offsetCenter","fontSize","detail","backgroundColor","borderWidth","borderColor","height","padding","_default","module","exports","PointerPath","graphic","ChartView","_number","parsePercent","round","linearMap","parsePosition","seriesModel","api","get","getWidth","getHeight","size","cx","cy","r","formatLabel","label","labelFormatter","replace","PI2","PI","GaugeView","group","removeAll","colorList","posInfo","_renderMain","dispose","axisLineModel","getModel","lineStyleModel","angleRangeSpan","prevEndAngle","axisLineWidth","i","percent","sector","Sector","shape","r0","silent","setStyle","fill","getLineStyle","add","getColor","tmp","_renderTicks","_renderPointer","_renderTitle","_renderDetail","minVal","maxVal","splitLineModel","tickModel","labelModel","subSplitNumber","splitLineLen","tickLen","angle","step","subStep","splitLineStyle","tickLineStyle","unitX","cos","unitY","sin","Line","x1","y1","x2","y2","style","stroke","autoColor","Text","setTextStyle","text","x","y","textVerticalAlign","textAlign","j","tickLine","oldData","_data","valueExtent","angleExtent","getData","valueDim","mapDimension","diff","idx","initProps","setItemGraphicEl","update","newIdx","oldIdx","getItemGraphicEl","updateProps","remove","execute","eachItemGraphicEl","itemModel","getItemModel","pointerModel","setShape","useStyle","getItemStyle","setHoverStyle","el","titleModel","getName","forceRich","detailModel","textWidth","isNaN","textHeight","Path","buildPath","ctx","mathCos","mathSin","moveTo","lineTo","global","factory","echartsLib","hasOwnProperty","ABBR","th","mi","bi","tr","DEFAULT_OPTIONS","zeroFormat","nullFormat","defaultFormat","scalePercentBy100","abbrLabel","TRILLION","BILLION","MILLION","THOUSAND","numIsNaN","toFixed","maxDecimals","roundingFunction","optionals","splitValue","toString","split","minDecimals","boundedPrecision","power","pow","output","optionalsRegExp","RegExp","numberToFormat","format","abs","negP","optDec","abbr","decimal","neg","abbrForce","signed","indexOf","match","int","precision","thousands","leadingCount","slice","trillion","million","target","sub","keys","forEach","key","numerifyPercent","regexp","formatType","numerify","space","_numberToFormat","splice","join","formats","formatFunction","kind","bind","input","register","unregister","setOptions","opts","reset","_typeof","Symbol","iterator","obj","constructor","prototype","_extends","assign","arguments","source","call","debounce","fn","delay","timer","self","args","apply","set$1","path","targetTemp","pathArr","item","index","_typeof$1","getType","v","getTypeof","isObject","isFunction","cloneDeep","JSON","parse","stringify","camelToKebab","s","toLowerCase","hasOwn","isEqual","alice","bob","aliceValue","bobValue","aliceType","_key","getFormated","val","digit","defaultVal","undefined","digitStr","Array","formatter","getTooltip","tooltipFormatter","dataType","seriesName","_options$data","tpl","push","getSeries","labelMap","seriesMap","dataName","series","map","row","seriesItem","result","gauge$1","extra","_settings$dimension","_settings$metrics","_settings$digit","_settings$dataType","_settings$labelMap","_settings$seriesMap","_settings$dataName","tooltipVisible","tooltip$$1","tooltip","Loading","viewBox","DataEmpty","_v","DEFAULT_THEME","categoryAxis","valueAxis","line","smooth","grid","containLabel","left","right","DEFAULT_COLORS","STATIC_PROPS","ECHARTS_SETTINGS","setExtend","attr","setMark","marks","setAnimation","animation","Core","h","class","$options","_componentTag","canvasStyle","v-charts-mask-status","dataEmpty","loading","ref","display","$slots","default","props","String","beforeConfig","Function","afterConfig","afterSetOption","afterSetOptionOnce","events","colors","Boolean","legendVisible","legendPosition","markLine","markArea","markPoint","visualMap","dataZoom","toolbox","initOptions","legend","xAxis","yAxis","radar","axisPointer","brush","geo","timeline","textStyle","theme","themeName","judgeWidth","widthChangeDelay","Number","resizeable","resizeDelay","changeDelay","setOptionOpts","cancelResizeCheck","notSetUnchange","log","deep","handler","changeHandler","chartLib","chartHandler","computed","position","chartColor","dataHandler","_data$columns","_data$rows","echarts","_once","then","optionsHandler","nextTickResize","$nextTick","resize","echartsResize","$el","clientWidth","clientHeight","top","orient","setting","bmap","amap","_store","notMerge","_isDestroyed","console","setOption","$emit","judgeWidthHandler","_this2","_","warn","resizeableHandler","onresize","addResizeListener","removeResizeListener","init","$refs","canvas","createEventProxy","window","addEventListener","resizeHandler","removeEventListener","addWatchToProps","_this3","watchedVariable","_watchers","watcher","expression","$props","prop","$watch","_this4","ev","registeredEvents","on","_len","themeChange","clean","mounted","beforeDestroy","_numerify"],"mappings":"uHAAA,IAAAA,EAAA,WAA0B,IAAAC,EAAAC,KAAaC,EAAAF,EAAAG,eAA0BC,EAAAJ,EAAAK,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,OAAiBE,YAAA,gBAA0BF,EAAA,YAAiBG,OAAOC,KAAAR,EAAAS,UAAAC,SAAAV,EAAAW,kBAAmD,IAC/MC,0BCQAC,GACAC,YAAAC,QAAAC,EAAAC,GACAC,KAAA,aACAV,KAHA,WAIA,OACAW,UAAA,GACAR,eACAS,UAAA,OACAC,QAAA,SAEAZ,WACAa,SAAA,wBACAC,OAAAC,KAAA,KAAAC,MAAAxB,KAAAkB,UAAAF,EAAA,EAAAS,EAAA,OAIAC,QAhBA,WAiBA1B,KAAA2B,SAAA,OAEAC,OACAV,UAAA,WACAlB,KAAAQ,UAAAc,KAAA,GAAAE,MAAAxB,KAAAkB,YAGAW,SACAF,SADA,SACAG,EAAAC,GACA,IAAAC,EAAAhC,KACAiC,EAAAC,WAAA,WACAF,EAAAd,WAAAY,GAAAE,EAAAd,WAAAa,GACAC,EAAAd,WAAAiB,KAAAC,MAAA,GAAAD,KAAAE,SAAA,KACAL,EAAAL,SAAA,OAGAW,aAAAL,IAEA,QC5CsdM,EAAA,0BCQtdC,EAAgBC,OAAAC,EAAA,KAAAD,CACdF,EACAzC,EACAa,GACF,EACA,KACA,KACA,MAIA6B,EAAAG,QAAAC,OAAA,iBACeC,EAAA,WAAAL,+CCpBf,IAAAM,EAAAC,EAAA,QAAAC,EAAAD,EAAAE,EAAAH,GAAmnBE,EAAG,mDCAtnBD,EAAQ,QAERA,EAAQ,8BCFR,IAAAG,EAAuBH,EAAQ,QAE/BI,EAAkBJ,EAAQ,QAE1BK,EAAaL,EAAQ,QAoBrBM,EAAAF,EAAAG,QACA/B,KAAA,eACAgC,eAAA,SAAAC,EAAAC,GACA,IAAAC,EAAAF,EAAAjD,SAOA,OALA6C,EAAAO,QAAAD,KACAA,OAGAF,EAAAjD,KAAAmD,EACAR,EAAAlD,MAAA,WAEA4D,eACAC,OAAA,EACAC,EAAA,EAEAC,QAAA,aACAC,iBAAA,EACAC,OAAA,MACAC,WAAA,IACAC,UAAA,GACAC,WAAA,EAEAC,IAAA,EAEAC,IAAA,IAEAC,YAAA,GAEAC,UAEAC,MAAA,EACAC,WAEAC,QAAA,4CACAC,MAAA,KAIAC,WAEAJ,MAAA,EAEAK,OAAA,GAEAJ,WACAC,MAAA,OACAC,MAAA,EACArD,KAAA,UAIAwD,UAEAN,MAAA,EAEAF,YAAA,EAEAO,OAAA,EAEAJ,WACAC,MAAA,OACAC,MAAA,EACArD,KAAA,UAGAyD,WACAP,MAAA,EACAQ,SAAA,EAEAN,MAAA,QAEAO,SACAT,MAAA,EACAK,OAAA,MACAF,MAAA,GAEAO,WACAR,MAAA,QAEAS,OACAX,MAAA,EAEAY,cAAA,UAEAV,MAAA,OACAW,SAAA,IAEAC,QACAd,MAAA,EACAe,gBAAA,gBACAC,YAAA,EACAC,YAAA,OACAd,MAAA,IACAe,OAAA,KAEAC,SAAA,MAEAP,cAAA,SAGAV,MAAA,OACAW,SAAA,OAIAO,EAAAxC,EACAyC,EAAAC,QAAAF,wBCnIA,IAAAG,EAAkBjD,EAAQ,QAE1BkD,EAAclD,EAAQ,QAEtBmD,EAAgBnD,EAAQ,QAExBoD,EAAcpD,EAAQ,QAEtBqD,EAAAD,EAAAC,aACAC,EAAAF,EAAAE,MACAC,EAAAH,EAAAG,UAoBA,SAAAC,EAAAC,EAAAC,GACA,IAAA1C,EAAAyC,EAAAE,IAAA,UACA9B,EAAA6B,EAAAE,WACAhB,EAAAc,EAAAG,YACAC,EAAA1E,KAAAkC,IAAAO,EAAAe,GACAmB,EAAAV,EAAArC,EAAA,GAAA0C,EAAAE,YACAI,EAAAX,EAAArC,EAAA,GAAA0C,EAAAG,aACAI,EAAAZ,EAAAI,EAAAE,IAAA,UAAAG,EAAA,GACA,OACAC,KACAC,KACAC,KAIA,SAAAC,EAAAC,EAAAC,GASA,OARAA,IACA,kBAAAA,EACAD,EAAAC,EAAAC,QAAA,UAA6C,MAAAF,IAAA,IACxC,oBAAAC,IACLD,EAAAC,EAAAD,KAIAA,EAGA,IAAAG,EAAA,EAAAlF,KAAAmF,GACAC,EAAArB,EAAA5C,QACA/B,KAAA,QACAzB,OAAA,SAAA0G,EAAA/C,EAAAgD,GACAzG,KAAAwH,MAAAC,YACA,IAAAC,EAAAlB,EAAAE,IAAA,4BACAiB,EAAApB,EAAAC,EAAAC,GAEAzG,KAAA4H,YAAApB,EAAA/C,EAAAgD,EAAAiB,EAAAC,IAEAE,QAAA,aACAD,YAAA,SAAApB,EAAA/C,EAAAgD,EAAAiB,EAAAC,GAWA,IAVA,IAAAH,EAAAxH,KAAAwH,MACAM,EAAAtB,EAAAuB,SAAA,YACAC,EAAAF,EAAAC,SAAA,aACA3D,EAAAoC,EAAAE,IAAA,aACAxC,GAAAsC,EAAAE,IAAA,kBAAAvE,KAAAmF,GACAnD,GAAAqC,EAAAE,IAAA,gBAAAvE,KAAAmF,GACAW,GAAA9D,EAAAD,GAAAmD,EACAa,EAAAhE,EACAiE,EAAAH,EAAAtB,IAAA,SAEA0B,EAAA,EAAmBA,EAAAV,EAAA5C,OAAsBsD,IAAA,CAEzC,IAAAC,EAAAlG,KAAAkC,IAAAlC,KAAAmC,IAAAoD,EAAAU,GAAA,SAEAE,GADAnE,EAAAD,EAAA+D,EAAAI,EACA,IAAApC,EAAAsC,QACAC,OACAtE,WAAAgE,EACA/D,WACA2C,GAAAa,EAAAb,GACAC,GAAAY,EAAAZ,GACA3C,YACAqE,GAAAd,EAAAX,EAAAmB,EACAnB,EAAAW,EAAAX,GAEA0B,QAAA,KAEAJ,EAAAK,UACAC,KAAAlB,EAAAU,GAAA,KAEAE,EAAAK,SAAAX,EAAAa,cAEA,uCACArB,EAAAsB,IAAAR,GACAJ,EAAA/D,EAGA,IAAA4E,EAAA,SAAAV,GAEA,GAAAA,GAAA,EACA,OAAAX,EAAA,MAGA,QAAAU,EAAA,EAAqBA,EAAAV,EAAA5C,OAAsBsD,IAC3C,GAAAV,EAAAU,GAAA,IAAAC,IAAA,IAAAD,EAAA,EAAAV,EAAAU,EAAA,OAAAC,EACA,OAAAX,EAAAU,GAAA,GAKA,OAAAV,EAAAU,EAAA,OAGA,IAAAhE,EAAA,CACA,IAAA4E,EAAA9E,EACAA,EAAAC,EACAA,EAAA6E,EAGAhJ,KAAAiJ,aAAAzC,EAAA/C,EAAAgD,EAAAsC,EAAApB,EAAAzD,EAAAC,EAAAC,GAEApE,KAAAkJ,eAAA1C,EAAA/C,EAAAgD,EAAAsC,EAAApB,EAAAzD,EAAAC,EAAAC,GAEApE,KAAAmJ,aAAA3C,EAAA/C,EAAAgD,EAAAsC,EAAApB,GAEA3H,KAAAoJ,cAAA5C,EAAA/C,EAAAgD,EAAAsC,EAAApB,IAEAsB,aAAA,SAAAzC,EAAA/C,EAAAgD,EAAAsC,EAAApB,EAAAzD,EAAAC,EAAAC,GAoBA,IAnBA,IAAAoD,EAAAxH,KAAAwH,MACAV,EAAAa,EAAAb,GACAC,EAAAY,EAAAZ,GACAC,EAAAW,EAAAX,EACAqC,GAAA7C,EAAAE,IAAA,OACA4C,GAAA9C,EAAAE,IAAA,OACA6C,EAAA/C,EAAAuB,SAAA,aACAyB,EAAAhD,EAAAuB,SAAA,YACA0B,EAAAjD,EAAAuB,SAAA,aACAxD,EAAAiC,EAAAE,IAAA,eACAgD,EAAAF,EAAA9C,IAAA,eACAiD,EAAAvD,EAAAmD,EAAA7C,IAAA,UAAAM,GACA4C,EAAAxD,EAAAoD,EAAA9C,IAAA,UAAAM,GACA6C,EAAA3F,EACA4F,GAAA3F,EAAAD,GAAAK,EACAwF,EAAAD,EAAAJ,EACAM,EAAAT,EAAAxB,SAAA,aAAAc,eACAoB,EAAAT,EAAAzB,SAAA,aAAAc,eAEAT,EAAA,EAAmBA,GAAA7D,EAAkB6D,IAAA,CACrC,IAAA8B,EAAA/H,KAAAgI,IAAAN,GACAO,EAAAjI,KAAAkI,IAAAR,GAEA,GAAAN,EAAA7C,IAAA,SACA,IAAA7B,EAAA,IAAAoB,EAAAqE,MACA9B,OACA+B,GAAAL,EAAAlD,EAAAF,EACA0D,GAAAJ,EAAApD,EAAAD,EACA0D,GAAAP,GAAAlD,EAAA2C,GAAA7C,EACA4D,GAAAN,GAAApD,EAAA2C,GAAA5C,GAEA4D,MAAAX,EACAtB,QAAA,IAGA,SAAAsB,EAAAY,QACA/F,EAAA8D,UACAiC,OAAA7B,EAAAX,EAAA7D,KAIAiD,EAAAsB,IAAAjE,GAIA,GAAA4E,EAAA/C,IAAA,SACA,IAAAQ,EAAAD,EAAAZ,EAAA+B,EAAA7D,GAAA+E,EAAAD,MAAAI,EAAA/C,IAAA,cACAzB,EAAAwE,EAAA/C,IAAA,YACAmE,EAAA9B,EAAAX,EAAA7D,GACAiD,EAAAsB,IAAA,IAAA7C,EAAA6E,MACAH,MAAA1E,EAAA8E,gBAAwCtB,GACxCuB,KAAA9D,EACA+D,EAAAf,GAAAlD,EAAA2C,EAAA1E,GAAA6B,EACAoE,EAAAd,GAAApD,EAAA2C,EAAA1E,GAAA8B,EACAoE,kBAAAf,GAAA,SAAAA,EAAA,qBACAgB,UAAAlB,GAAA,UAAAA,EAAA,sBAEAW,cAEAnC,QAAA,KAKA,GAAAc,EAAA9C,IAAA,SAAA0B,IAAA7D,EAAA,CACA,QAAA8G,EAAA,EAAuBA,GAAA3B,EAAqB2B,IAAA,CAC5CnB,EAAA/H,KAAAgI,IAAAN,GACAO,EAAAjI,KAAAkI,IAAAR,GADA,IAEAyB,EAAA,IAAArF,EAAAqE,MACA9B,OACA+B,GAAAL,EAAAlD,EAAAF,EACA0D,GAAAJ,EAAApD,EAAAD,EACA0D,GAAAP,GAAAlD,EAAA4C,GAAA9C,EACA4D,GAAAN,GAAApD,EAAA4C,GAAA7C,GAEA2B,QAAA,EACAiC,MAAAV,IAGA,SAAAA,EAAAW,QACAU,EAAA3C,UACAiC,OAAA7B,GAAAX,EAAAiD,EAAA3B,GAAAnF,KAIAiD,EAAAsB,IAAAwC,GACAzB,GAAAE,EAGAF,GAAAE,OAEAF,GAAAC,IAIAZ,eAAA,SAAA1C,EAAA/C,EAAAgD,EAAAsC,EAAApB,EAAAzD,EAAAC,EAAAC,GACA,IAAAoD,EAAAxH,KAAAwH,MACA+D,EAAAvL,KAAAwL,MAEA,GAAAhF,EAAAE,IAAA,iBAQA,IAAA+E,IAAAjF,EAAAE,IAAA,QAAAF,EAAAE,IAAA,QACAgF,GAAAxH,EAAAC,GACA5D,EAAAiG,EAAAmF,UACAC,EAAArL,EAAAsL,aAAA,SACAtL,EAAAuL,KAAAP,GAAAzC,IAAA,SAAAiD,GACA,IAAA7G,EAAA,IAAAc,GACAwC,OACAqB,MAAA3F,KAGA+B,EAAA+F,UAAA9G,GACAsD,OACAqB,MAAAvD,EAAA/F,EAAAmG,IAAAkF,EAAAG,GAAAN,EAAAC,GAAA,KAEOlF,GACPgB,EAAAsB,IAAA5D,GACA3E,EAAA0L,iBAAAF,EAAA7G,KACKgH,OAAA,SAAAC,EAAAC,GACL,IAAAlH,EAAAqG,EAAAc,iBAAAD,GACAnG,EAAAqG,YAAApH,GACAsD,OACAqB,MAAAvD,EAAA/F,EAAAmG,IAAAkF,EAAAO,GAAAV,EAAAC,GAAA,KAEOlF,GACPgB,EAAAsB,IAAA5D,GACA3E,EAAA0L,iBAAAE,EAAAjH,KACKqH,OAAA,SAAAR,GACL,IAAA7G,EAAAqG,EAAAc,iBAAAN,GACAvE,EAAA+E,OAAArH,KACKsH,UACLjM,EAAAkM,kBAAA,SAAAvH,EAAA6G,GACA,IAAAW,EAAAnM,EAAAoM,aAAAZ,GACAa,EAAAF,EAAA3E,SAAA,WACA7C,EAAA2H,UACA5B,EAAAtD,EAAAb,GACAoE,EAAAvD,EAAAZ,GACAnC,MAAAwB,EAAAwG,EAAAlG,IAAA,SAAAiB,EAAAX,GACAA,EAAAZ,EAAAwG,EAAAlG,IAAA,UAAAiB,EAAAX,KAEA9B,EAAA4H,SAAAJ,EAAA3E,SAAA,aAAAgF,gBAEA,SAAA7H,EAAAyF,MAAA/B,MACA1D,EAAAyD,SAAA,OAAAI,EAAAzC,EAAA/F,EAAAmG,IAAAkF,EAAAG,GAAAN,GAAA,WAGAxF,EAAA+G,cAAA9H,EAAAwH,EAAA3E,SAAA,sBAAAgF,kBAEA/M,KAAAwL,MAAAjL,OArDAgL,KAAAkB,kBAAA,SAAAQ,GACAzF,EAAA+E,OAAAU,MAsDA9D,aAAA,SAAA3C,EAAA/C,EAAAgD,EAAAsC,EAAApB,GACA,IAAApH,EAAAiG,EAAAmF,UACAC,EAAArL,EAAAsL,aAAA,SACAqB,EAAA1G,EAAAuB,SAAA,SAEA,GAAAmF,EAAAxG,IAAA,SACA,IAAArB,EAAA6H,EAAAxG,IAAA,gBACAuE,EAAAtD,EAAAb,GAAAV,EAAAf,EAAA,GAAAsC,EAAAX,GACAkE,EAAAvD,EAAAZ,GAAAX,EAAAf,EAAA,GAAAsC,EAAAX,GACAqC,GAAA7C,EAAAE,IAAA,OACA4C,GAAA9C,EAAAE,IAAA,OACAlF,EAAAgF,EAAAmF,UAAAjF,IAAAkF,EAAA,GACAf,EAAA9B,EAAAzC,EAAA9E,GAAA6H,EAAAC,IAAA,UACAtJ,KAAAwH,MAAAsB,IAAA,IAAA7C,EAAA6E,MACApC,QAAA,EACAiC,MAAA1E,EAAA8E,gBAAsCmC,GACtCjC,IACAC,IAEAF,KAAAzK,EAAA4M,QAAA,GACA/B,UAAA,SACAD,kBAAA,WAEAN,YACAuC,WAAA,SAKAhE,cAAA,SAAA5C,EAAA/C,EAAAgD,EAAAsC,EAAApB,GACA,IAAA0F,EAAA7G,EAAAuB,SAAA,UACAsB,GAAA7C,EAAAE,IAAA,OACA4C,GAAA9C,EAAAE,IAAA,OAEA,GAAA2G,EAAA3G,IAAA,SACA,IAAArB,EAAAgI,EAAA3G,IAAA,gBACAuE,EAAAtD,EAAAb,GAAAV,EAAAf,EAAA,GAAAsC,EAAAX,GACAkE,EAAAvD,EAAAZ,GAAAX,EAAAf,EAAA,GAAAsC,EAAAX,GACApC,EAAAwB,EAAAiH,EAAA3G,IAAA,SAAAiB,EAAAX,GACArB,EAAAS,EAAAiH,EAAA3G,IAAA,UAAAiB,EAAAX,GACAzG,EAAAiG,EAAAmF,UACAnK,EAAAjB,EAAAmG,IAAAnG,EAAAsL,aAAA,YACAhB,EAAA9B,EAAAzC,EAAA9E,GAAA6H,EAAAC,IAAA,UACAtJ,KAAAwH,MAAAsB,IAAA,IAAA7C,EAAA6E,MACApC,QAAA,EACAiC,MAAA1E,EAAA8E,gBAAsCsC,GACtCpC,IACAC,IACAF,KAAA/D,EACAzF,EAAA6L,EAAA3G,IAAA,cACA4G,UAAAC,MAAA3I,GAAA,KAAAA,EACA4I,WAAAD,MAAA5H,GAAA,KAAAA,EACAyF,UAAA,SACAD,kBAAA,WAEAN,YACAuC,WAAA,WAMAvH,EAAA0B,EACAzB,EAAAC,QAAAF,wBCnWA,IAAA4H,EAAW1K,EAAQ,QAoBnB8C,EAAA4H,EAAAnK,QACA/B,KAAA,sBACAiH,OACAqB,MAAA,EACAjF,MAAA,GACAoC,EAAA,GACAiE,EAAA,EACAC,EAAA,GAEAwC,UAAA,SAAAC,EAAAnF,GACA,IAAAoF,EAAAzL,KAAAgI,IACA0D,EAAA1L,KAAAkI,IACArD,EAAAwB,EAAAxB,EACApC,EAAA4D,EAAA5D,MACAiF,EAAArB,EAAAqB,MACAoB,EAAAzC,EAAAyC,EAAA2C,EAAA/D,GAAAjF,MAAAoC,EAAA,OACAkE,EAAA1C,EAAA0C,EAAA2C,EAAAhE,GAAAjF,MAAAoC,EAAA,OACA6C,EAAArB,EAAAqB,MAAA1H,KAAAmF,GAAA,EACAqG,EAAAG,OAAA7C,EAAAC,GACAyC,EAAAI,OAAAvF,EAAAyC,EAAA2C,EAAA/D,GAAAjF,EAAA4D,EAAA0C,EAAA2C,EAAAhE,GAAAjF,GACA+I,EAAAI,OAAAvF,EAAAyC,EAAA2C,EAAApF,EAAAqB,OAAA7C,EAAAwB,EAAA0C,EAAA2C,EAAArF,EAAAqB,OAAA7C,GACA2G,EAAAI,OAAAvF,EAAAyC,EAAA2C,EAAA/D,GAAAjF,EAAA4D,EAAA0C,EAAA2C,EAAAhE,GAAAjF,GACA+I,EAAAI,OAAA9C,EAAAC,MAKApF,EAAAC,QAAAF,yBC/CA,SAAAmI,EAAAC,GAC8DnI,EAAAC,QAAAkI,EAA4BlL,EAAQ,QAAwBA,EAAQ,QAAkCA,EAAQ,QAAiCA,EAAQ,UADrN,CAIC/C,EAAA,SAAAkO,GAA+B,aAEhCA,OAAAC,eAAA,WAAAD,EAAA,WAAAA,EAEA,IAAAE,GACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,IAGAC,GACAC,WAAA,KACAC,WAAA,KACAC,cAAA,MACAC,mBAAA,EACAC,WACAT,GAAA,IACAC,GAAA,IACAC,GAAA,IACAC,GAAA,MAIAO,EAAA,KACAC,EAAA,IACAC,EAAA,IACAC,EAAA,IAEA,SAAAC,EAAA3N,GACA,wBAAAA,GAAA+L,MAAA/L,GAGA,SAAA4N,EAAA5N,EAAA6N,EAAAC,EAAAC,GACA,IAAAC,EAAAhO,EAAAiO,WAAAC,MAAA,KACAC,EAAAN,GAAAE,GAAA,GACAK,EAAA,IAAAJ,EAAA1K,OAAA3C,KAAAkC,IAAAlC,KAAAmC,IAAAkL,EAAA,GAAA1K,OAAA6K,GAAAN,GAAAM,EACAE,EAAA1N,KAAA2N,IAAA,GAAAF,GACAG,GAAAT,EAAA9N,EAAA,KAAAoO,GAAAC,GAAAT,QAAAQ,GAEA,GAAAL,EAAAF,EAAAO,EAAA,CACA,IAAAI,EAAA,IAAAC,OAAA,YAA8CV,GAAAF,EAAAO,IAAA,MAC9CG,IAAA3I,QAAA4I,EAAA,IAGA,OAAAD,EAGA,SAAAG,EAAAvN,EAAAnB,EAAA2O,EAAAb,GACA,IAAAc,EAAAjO,KAAAiO,IAAA5O,GACA6O,GAAA,EACAC,GAAA,EACAC,EAAA,GACAC,EAAA,GACAC,GAAA,EACAC,OAAA,EACAC,OAAA,EACAR,KAAA,GAEA3O,KAAA,GAEA2O,EAAAS,QAAA,MACAP,GAAA,EACAF,IAAA/I,QAAA,gBACK+I,EAAAS,QAAA,OAAAT,EAAAS,QAAA,QACLD,GAAAR,EAAAS,QAAA,KAAAT,EAAAS,QAAA,KAAApP,EAAA,EAAA2O,EAAAS,QAAA,QACAT,IAAA/I,QAAA,eAEA+I,EAAAS,QAAA,OACAF,EAAAP,EAAAU,MAAA,eAEAH,SAAA,IAEAP,EAAAS,QAAA,QAAAL,EAAA,KACAJ,IAAA/I,QAAA,IAAA6I,OAAAM,EAAA,gBAEAH,GAAArB,IAAA2B,GAAA,MAAAA,GACAH,GAAA5N,EAAAmM,UAAAN,GACAhN,GAAAuN,GACOqB,EAAArB,GAAAqB,GAAApB,IAAA0B,GAAA,MAAAA,GACPH,GAAA5N,EAAAmM,UAAAP,GACA/M,GAAAwN,GACOoB,EAAApB,GAAAoB,GAAAnB,IAAAyB,GAAA,MAAAA,GACPH,GAAA5N,EAAAmM,UAAAR,GACA9M,GAAAyN,IACOmB,EAAAnB,GAAAmB,GAAAlB,IAAAwB,GAAA,MAAAA,KACPH,GAAA5N,EAAAmM,UAAAT,GACA7M,GAAA0N,KAGAiB,EAAAS,QAAA,SACAN,GAAA,EACAH,IAAA/I,QAAA,YAEA,IAAA0J,EAAAtP,EAAAiO,WAAAC,MAAA,QACAqB,EAAAZ,EAAAT,MAAA,QACAsB,EAAAb,EAAAS,QAAA,KACAK,GAAAd,EAAAT,MAAA,QAAAA,MAAA,QAAAmB,MAAA,WAAA/L,OAyBA,GAvBAiM,IACAA,EAAAH,QAAA,MACAG,IAAA3J,QAAA,QACA2J,IAAArB,MAAA,KACAc,EAAApB,EAAA5N,EAAAuP,EAAA,GAAAjM,OAAAiM,EAAA,GAAAjM,OAAAwK,EAAAyB,EAAA,GAAAjM,SAEA0L,EAAApB,EAAA5N,EAAAuP,EAAAjM,OAAAwK,GAGAwB,EAAAN,EAAAd,MAAA,QACAc,KAAAI,QAAA,SAAAJ,EAAAd,MAAA,WACAY,GAAA,KAAAE,EAAAU,MAAA,KAAAV,EAAA,KAEAM,EAAA1B,EAAA5N,EAAA,EAAA8N,GAEAiB,IAAAG,IAAAI,GAAA,KAAAP,IAAAnC,EAAA+C,WACAL,EAAA,KAAAA,EAAA,IACAP,EAAAnC,EAAAgD,UAEAN,EAAAF,QAAA,OACAE,IAAAI,MAAA,GACAT,GAAA,GAEAK,EAAAhM,OAAAmM,EACA,QAAA7I,EAAA6I,EAAAH,EAAAhM,OAA6CsD,EAAA,EAAOA,IACpD0I,EAAA,IAAAA,EAIAE,GAAA,IACAF,IAAArB,WAAArI,QAAA,0BAAiD,QAGjD+I,EAAAS,QAAA,OAAAE,EAAA,IAEA,IAAAf,EAAAe,EAAAN,GAAAD,GAAA,IAYA,OAVAF,EACAN,GAAAM,GAAAI,EAAA,QAAAV,GAAAM,GAAAI,EAAA,QAEAE,GAAA,EACAZ,EAAA,IAAAY,GAAAF,EAAA,SAAAV,KAAAU,EAAA,SACOA,IACPV,EAAA,IAAAA,GAIAA,EAGA,SAAAzM,EAAA+N,EAAAC,GACA7O,OAAA8O,KAAAD,GAAAE,QAAA,SAAAC,GACAJ,EAAAI,GAAAH,EAAAG,KAIA,IAAAC,GACAC,OAAA,IACAxB,OAAA,SAAA3O,EAAAoQ,EAAAtC,EAAAuC,GACA,IAAAC,GAAAF,EAAAhB,QAAA,aACAb,OAAA,EAgBA,OAdA8B,EAAAlP,QAAAkM,oBAAArN,GAAA,KAEAoQ,IAAAxK,QAAA,WAEA2I,EAAA8B,EAAAE,gBAAAvQ,EAAAoQ,EAAAtC,IAEAS,EAAAa,QAAA,MACAb,IAAAL,MAAA,IACAK,EAAAiC,QAAA,IAAAF,EAAA,KACA/B,IAAAkC,KAAA,KAEAlC,IAAA+B,EAAA,IAGA/B,IAIApN,KACAuP,KAIA,SAAA/B,EAAA3O,EAAAoQ,EAAAtC,GACAsC,KAAAjP,EAAAiM,cACAU,KAAAnN,KAAAkE,MACA,IAAA0J,OAAA,EACAoC,OAAA,EAEA,OAAA3Q,GAAA,OAAAmB,EAAA+L,WACAqB,EAAApN,EAAA+L,gBACK,UAAAlN,GAAA,OAAAmB,EAAAgM,WACLoB,EAAApN,EAAAgM,eACK,CACL,QAAAyD,KAAAF,EACA,GAAAA,EAAAE,IAAAR,EAAAf,MAAAqB,EAAAE,GAAAT,QAAA,CACAQ,EAAAD,EAAAE,GAAAjC,OACA,MAGAgC,KAAAjC,EAAAmC,KAAA,KAAA1P,GACAoN,EAAAoC,EAAA3Q,EAAAoQ,EAAAtC,EAAAuC,GAGA,OAAA9B,EAGA,SAAA8B,EAAAS,EAAAV,EAAAtC,GACA,IAAA9N,OAAA,EAkBA,OAfAA,EADA,IAAA8Q,GAAA,qBAAAA,EACA,EACK,OAAAA,GAAAnD,EAAAmD,GACL,KACK,kBAAAA,EACL3P,EAAA+L,YAAA4D,IAAA3P,EAAA+L,WACA,EACO/L,EAAAgM,YAAA2D,IAAA3P,EAAAgM,aAAA2D,EAAAlL,QAAA,eAAAtC,OACP,MAEAwN,GAGAA,GAAA,KAGAnC,EAAA3O,EAAAoQ,EAAAtC,GA7CAhM,EAAAX,EAAA8L,GAgDAoD,EAAAlP,UACAkP,EAAAE,gBAAA7B,EAAAmC,KAAA,KAAA1P,GACAkP,EAAAU,SAAA,SAAAtR,EAAAkP,GACA+B,EAAAjR,GAAAkP,GAEA0B,EAAAW,WAAA,SAAAvR,GACAiR,EAAAjR,GAAA,MAEA4Q,EAAAY,WAAA,SAAAC,GACApP,EAAAX,EAAA+P,IAEAb,EAAAc,MAAA,WACArP,EAAAX,EAAA8L,IAGAoD,EAAAU,SAAA,aAAAb,GAEA,IAAAkB,EAAA,oBAAAC,QAAA,kBAAAA,OAAAC,SAAA,SAAAC,GACA,cAAAA,GACG,SAAAA,GACH,OAAAA,GAAA,oBAAAF,QAAAE,EAAAC,cAAAH,QAAAE,IAAAF,OAAAI,UAAA,gBAAAF,GAGAG,EAAAzQ,OAAA0Q,QAAA,SAAA9B,GACA,QAAAjJ,EAAA,EAAmBA,EAAAgL,UAAAtO,OAAsBsD,IAAA,CACzC,IAAAiL,EAAAD,UAAAhL,GAEA,QAAAqJ,KAAA4B,EACA5Q,OAAAwQ,UAAA9E,eAAAmF,KAAAD,EAAA5B,KACAJ,EAAAI,GAAA4B,EAAA5B,IAKA,OAAAJ,GAGA,SAAAkC,EAAAC,EAAAC,GACA,IAAAC,EAAA,KACA,kBACA,IAAAC,EAAA3T,KACA4T,EAAAR,UACA9Q,aAAAoR,GACAA,EAAAxR,WAAA,WACAsR,EAAAK,MAAAF,EAAAC,IACOH,IAIP,SAAAK,EAAAzC,EAAA0C,EAAAvS,GACA,GAAAuS,EAAA,CACA,IAAAC,EAAA3C,EACA4C,EAAAF,EAAArE,MAAA,KACAuE,EAAAzC,QAAA,SAAA0C,EAAAC,GACAA,IAAAF,EAAAnP,OAAA,EACAkP,EAAAE,GAAA1S,GAEAwS,EAAAE,KAAAF,EAAAE,OACAF,IAAAE,OAKA,IAAAE,EAAA,oBAAAvB,QAAA,WAAAD,EAAAC,OAAAC,UAAA,SAAAC,GACA,2BAAAA,EAAA,YAAAH,EAAAG,IACG,SAAAA,GACH,OAAAA,GAAA,oBAAAF,QAAAE,EAAAC,cAAAH,QAAAE,IAAAF,OAAAI,UAAA,8BAAAF,EAAA,YAAAH,EAAAG,IAGA,SAAAsB,EAAAC,GACA,OAAA7R,OAAAwQ,UAAAxD,SAAA6D,KAAAgB,GAGA,SAAAC,EAAAD,GACA,2BAAAA,EAAA,YAAAF,EAAAE,GAGA,SAAAE,EAAAF,GACA,0BAAAD,EAAAC,GAGA,SAAA3Q,EAAA2Q,GACA,yBAAAD,EAAAC,GAGA,SAAAG,EAAAH,GACA,4BAAAD,EAAAC,GAGA,SAAAI,EAAAJ,GACA,OAAAK,KAAAC,MAAAD,KAAAE,UAAAP,IAGA,SAAAQ,EAAAC,GACA,OAAAA,EAAA3N,QAAA,2BAAA4N,cAGA,SAAAC,EAAA5B,EAAAhC,GACA,OAAA5O,OAAAwQ,UAAA9E,eAAAmF,KAAAD,EAAAhC,GAGA,SAAA6D,EAAAC,EAAAC,GACA,GAAAD,IAAAC,EAAA,SACA,UAAAD,GAAA,OAAAC,GAAA,WAAAb,EAAAY,IAAA,WAAAZ,EAAAa,GACA,OAAAD,IAAAC,EAGA,QAAA3D,KAAA0D,EACA,GAAAF,EAAAE,EAAA1D,GAAA,CACA,IAAA4D,EAAAF,EAAA1D,GACA6D,EAAAF,EAAA3D,GACA8D,EAAAhB,EAAAc,GAEA,iBAAAd,EAAAe,GACA,SACO,cAAAC,GACP,IAAAL,EAAAG,EAAAC,GAAA,cACO,GAAAD,IAAAC,EACP,SAGA,QAAAE,KAAAJ,EACA,GAAAH,EAAAG,EAAAI,IACA,cAAAjB,EAAAY,GAAAK,GAAA,SAGA,SAGA,IAAAC,EAAA,SAAAC,EAAAnU,EAAAoU,GACA,IAAAC,EAAAxC,UAAAtO,OAAA,QAAA+Q,IAAAzC,UAAA,GAAAA,UAAA,OAEA,GAAA7F,MAAAmI,GAAA,OAAAE,EACA,IAAArU,EAAA,OAAAmU,EACA,GAAAjB,EAAAlT,GAAA,OAAAA,EAAAmU,EAAA7D,GAEA8D,EAAApI,MAAAoI,GAAA,IAAAA,EACA,IAAAG,EAAA,SAAAC,MAAAJ,GAAA1D,KAAA,OACA+D,EAAAzU,EACA,OAAAA,GACA,UACAyU,EAAAL,EAAA,MAAAG,EAAA,WACA,MACA,aACAE,EAAAL,EAAA,MAAAG,EAAA,MACA,MACA,cACAE,EAAAL,EAAA,MAAAG,EAAA,gBACA,MAEA,OAAAjE,EAAA6D,EAAAM,IAGA,SAAAC,EAAArC,GACA,IAAAsC,EAAAtC,EAAAsC,iBACAC,EAAAvC,EAAAuC,SACAR,EAAA/B,EAAA+B,MAEA,OACAK,UAAA,SAAArT,GACA,IAAAyT,EAAAzT,EAAAyT,WACAC,EAAA1T,EAAApC,KACAiB,EAAA6U,EAAA7U,MACAP,EAAAoV,EAAApV,KAEA,GAAAiV,EACA,OAAAA,EAAArC,MAAA,KAAAT,WAEA,IAAAkD,KAGA,OAFAA,EAAAC,KAAAH,EAAA,MACAE,EAAAC,KAAAd,EAAAjU,EAAA2U,EAAAC,GAAAT,GAAA,IAAA1U,GACAqV,EAAArE,KAAA,MAKA,SAAAuE,EAAA5C,GACA,IAAAtS,EAAAsS,EAAAtS,KACAH,EAAAyS,EAAAzS,UACAC,EAAAwS,EAAAxS,QACAuU,EAAA/B,EAAA+B,MACAQ,EAAAvC,EAAAuC,SACAM,EAAA7C,EAAA6C,SACAC,EAAA9C,EAAA8C,UACAC,EAAA/C,EAAA+C,SAGAC,EAAAtV,EAAAuV,IAAA,SAAAC,GACA,IAAA5P,EAAA4P,EAAA3V,GACA4V,EAAAL,EAAAxP,GACA8P,GACAzV,KAAA,QACAN,KAAA,MAAAwV,EAAAvP,GAAAuP,EAAAvP,KACA3G,OACAU,KAAA0V,EAAAzP,IAAA,GACA1F,MAAAsV,EAAA1V,KAEAmE,QACAyQ,UAAA,SAAA1B,GACA,OAAAmB,EAAAnB,EAAA6B,EAAAjP,GAAAyO,KAGA3Q,WACAgR,UAAA,SAAA1B,GACA,OAAAmB,EAAAnB,EAAA6B,EAAAjP,GAAAyO,MAeA,OAVAoB,GACAtU,OAAA8O,KAAAwF,GAAAvF,QAAA,SAAAC,GACA+C,EAAAwC,EAAAvF,IACAyB,EAAA8D,EAAAvF,GAAAsF,EAAAtF,IAEAuF,EAAAvF,GAAAsF,EAAAtF,KAKAuF,IAGA,OAAAJ,EAGA,IAAAK,EAAA,SAAA5V,EAAAC,EAAAb,EAAAyW,GACA,IAAAC,EAAA1W,EAAAU,UACAA,OAAA0U,IAAAsB,EAAA9V,EAAA,GAAA8V,EACAC,EAAA3W,EAAAW,QACAA,OAAAyU,IAAAuB,EAAA/V,EAAA,GAAA+V,EACAC,EAAA5W,EAAAkV,MACAA,OAAAE,IAAAwB,EAAA,EAAAA,EACAC,EAAA7W,EAAA0V,SACAA,OAAAN,IAAAyB,KAAwDA,EACxDC,EAAA9W,EAAAgW,SACAA,OAAAZ,IAAA0B,KAAwDA,EACxDC,EAAA/W,EAAAiW,UACAA,OAAAb,IAAA2B,KAA0DA,EAC1DC,EAAAhX,EAAAkW,SACAA,OAAAd,IAAA4B,KAAwDA,EACxDvB,EAAAgB,EAAAhB,iBACAwB,EAAAR,EAAAQ,eAGAC,EAAAD,GAAAzB,GACAC,mBACAC,aAGAS,EAAAJ,GACAlV,OACAH,YACAC,UACAuU,QACAQ,WACAM,WACAC,YACAC,aAEA,OAAYiB,QAAAD,EAAAf,WAGZiB,GAAiB/X,OAAA,WACjB,IAAAC,EAAAC,KAAqBC,EAAAF,EAAAG,eAA4BC,EAAAJ,EAAAK,MAAAD,IAAAF,EAA4B,OAAAE,EAAA,OAAkBE,YAAA,+BAA4CF,EAAA,OAAcE,YAAA,WAAwBF,EAAA,OAAcE,YAAA,oBAAiCF,EAAA,OAAcE,YAAA,WAAAC,OAAkCwX,QAAA,iBAA6B3X,EAAA,UAAiBE,YAAA,OAAAC,OAA8BwG,GAAA,KAAAC,GAAA,KAAAC,EAAA,KAAA4B,KAAA,mBACvVjI,oBAGLoX,GAAmBjY,OAAA,WACnB,IAAAC,EAAAC,KAAqBC,EAAAF,EAAAG,eAA4BC,EAAAJ,EAAAK,MAAAD,IAAAF,EAA4B,OAAAE,EAAA,OAAkBE,YAAA,wBAAqCN,EAAAiY,GAAA,aAC/HrX,oBAGLsX,GACAC,cACA1T,UAAiBC,MAAA,GACjBM,UAAiBN,MAAA,GACjBI,WAAkBJ,MAAA,IAElB0T,WACA3T,UAAiBC,MAAA,IAEjB2T,MACAC,QAAA,GAEAC,MACAC,cAAA,EACAC,KAAA,GACAC,MAAA,KAIAC,GAAA,mIAEAC,GAAA,qEAEAC,GAAA,oLAEA,SAAAC,EAAAlW,EAAAW,GACAb,OAAA8O,KAAAjO,GAAAkO,QAAA,SAAAsH,GACA,IAAAtX,EAAA8B,EAAAwV,IACAA,EAAAlI,QAAA,KAEAkD,EAAAnR,EAAAmW,EAAAtX,GACO,oBAAAA,EAEPmB,EAAAmW,GAAAtX,EAAAmB,EAAAmW,IAGAnV,EAAAhB,EAAAmW,KAAAtE,EAAA7R,EAAAmW,GAAA,IAEAnW,EAAAmW,GAAAtH,QAAA,SAAAhO,EAAA2Q,GACAxR,EAAAmW,GAAA3E,GAAAjB,KAA8C1P,EAAAhC,KAErCgT,EAAA7R,EAAAmW,IAETnW,EAAAmW,GAAA5F,KAAqCvQ,EAAAmW,GAAAtX,GAErCmB,EAAAmW,GAAAtX,IAMA,SAAAuX,EAAAhC,EAAAiC,GACAvW,OAAA8O,KAAAyH,GAAAxH,QAAA,SAAAC,GACAuH,EAAAvH,KAAAsF,EAAAtF,GAAAuH,EAAAvH,MAIA,SAAAwH,EAAAtW,EAAAuW,GACAzW,OAAA8O,KAAA2H,GAAA1H,QAAA,SAAAC,GACA9O,EAAA8O,GAAAyH,EAAAzH,KAIA,IAAA0H,GACArZ,OAAA,SAAAsZ,GACA,OAAAA,EAAA,OACAC,OAAAvE,EAAA9U,KAAAsZ,SAAArY,MAAAjB,KAAAsZ,SAAAC,gBACA5O,MAAA3K,KAAAwZ,cACOJ,EAAA,OACPzO,MAAA3K,KAAAwZ,YACAH,OAAgBI,uBAAAzZ,KAAA0Z,WAAA1Z,KAAA2Z,SAChBC,IAAA,WACOR,EAAArB,GACPpN,OAAgBkP,QAAA7Z,KAAA0Z,UAAA,aACTN,EAAAvB,GACPlN,OAAgBkP,QAAA7Z,KAAA2Z,QAAA,aACT3Z,KAAA8Z,OAAAC,WAIPC,OACAzZ,MAAagB,MAAAkB,OAAAsT,OAAAgE,QAAA,WACb,WAGAtZ,UAAiBc,KAAAkB,OAAAsX,QAAA,WACjB,WAGAnV,OAAcrD,KAAA0Y,OAAAF,QAAA,QACdpU,QAAepE,KAAA0Y,OAAAF,QAAA,SACfG,cAAqB3Y,KAAA4Y,UACrBC,aAAoB7Y,KAAA4Y,UACpBE,gBAAuB9Y,KAAA4Y,UACvBG,oBAA2B/Y,KAAA4Y,UAC3BI,QAAehZ,KAAAkB,QACf6V,MAAa/W,MAAAkB,OAAAsT,QACbyE,QAAejZ,KAAAwU,OACf2B,gBAAuBnW,KAAAkZ,QAAAV,SAAA,GACvBW,eAAsBnZ,KAAAkZ,QAAAV,SAAA,GACtBY,gBAAuBpZ,KAAA0Y,QACvBW,UAAiBrZ,KAAAkB,QACjBoY,UAAiBtZ,KAAAkB,QACjBqY,WAAkBvZ,KAAAkB,QAClBsY,WAAkBxZ,MAAAkB,OAAAsT,QAClBiF,UAAiBzZ,MAAAkB,OAAAsT,QACjBkF,SAAgB1Z,MAAAkB,OAAAsT,QAChBmF,aAAoB3Z,KAAAkB,OAAAsX,QAAA,WACpB,WAGA3U,OAAA3C,OAAAsT,OACAoF,QAAA1Y,OAAAsT,OACAqF,OAAA3Y,OAAAsT,OACAsF,OAAA5Y,OAAAsT,OACAuF,MAAA7Y,OACAmV,QAAAnV,OACA8Y,aAAA9Y,OAAAsT,OACAyF,OAAA/Y,OAAAsT,OACA0F,KAAAhZ,OAAAsT,OACA2F,UAAAjZ,OAAAsT,OACA9P,SAAAxD,OAAAsT,OACAa,QAAAnU,OAAAsT,OACAvQ,iBAAA/C,OAAAwX,QACA0B,WAAAlZ,OAAAsT,OACAmD,UAAAzW,OACAmZ,MAAAnZ,OACAoZ,UAAA5B,OACAN,QAAAc,QACAf,UAAAe,QACAnX,OAAAb,OACAqZ,YAAmBva,KAAAkZ,QAAAV,SAAA,GACnBgC,kBAAyBxa,KAAAya,OAAAjC,QAAA,KACzB7D,kBAAyB3U,KAAA4Y,UACzB8B,YAAmB1a,KAAAkZ,QAAAV,SAAA,GACnBmC,aAAoB3a,KAAAya,OAAAjC,QAAA,KACpBoC,aAAoB5a,KAAAya,OAAAjC,QAAA,GACpBqC,eAAsB7a,MAAAkZ,QAAAhY,QAAAsX,SAAA,GACtBsC,kBAAA5B,QACA6B,eAAAvG,MACAwG,IAAA9B,SAGA7Y,OACArB,MACAic,MAAA,EACAC,QAAA,SAAAnI,GACAA,GACAtU,KAAA0c,kBAKAjc,UACA+b,MAAA,EACAC,QAAA,SAAAnI,GACAA,EAAA/S,MAAAvB,KAAA2c,WAAA3c,KAAA4c,aAAA5c,KAAA2c,SAAArI,EAAA/S,OACAvB,KAAA0c,kBAIA9X,MAAA,iBACAe,OAAA,iBAEA4U,QACAiC,MAAA,EACAC,QAAA,oBAGAb,OACAY,MAAA,EACAC,QAAA,eAGAZ,UAAA,cAEAI,WAAA,qBAGAY,UACArD,YAAA,WACA,OACA5U,MAAA5E,KAAA4E,MACAe,OAAA3F,KAAA2F,OACAmX,SAAA,aAGAC,WAAA,WACA,OAAA/c,KAAAwa,QAAAxa,KAAA4b,OAAA5b,KAAA4b,MAAAjX,OAAA+T,IAIA7W,SACAmb,YAAA,WACA,GAAAhd,KAAA4c,aAAA,CACA,IAAArc,EAAAP,KAAAO,KACAiL,EAAAjL,EACA0c,EAAAzR,EAAAnK,QACAA,OAAAwU,IAAAoH,OACAC,EAAA1R,EAAAlK,KACAA,OAAAuU,IAAAqH,OAEAhG,GACAQ,eAAA1X,KAAA0X,eACAgD,cAAA1a,KAAA0a,cACAyC,QAAAnd,KAAAmd,QACAxY,MAAA3E,KAAA+c,WACA7G,iBAAAlW,KAAAkW,iBACAkH,MAAApd,KAAAod,OAEApd,KAAAka,eAAA3Z,EAAAP,KAAAka,aAAA3Z,IAEA,IAAAoC,EAAA3C,KAAA4c,aAAAvb,EAAAC,EAAAtB,KAAAS,SAAAyW,GACAvU,IACA,oBAAAA,EAAA0a,KACA1a,EAAA0a,KAAArd,KAAAsd,gBAEAtd,KAAAsd,eAAA3a,MAIA4a,eAAA,WACAvd,KAAAwd,UAAAxd,KAAAyd,SAEAA,OAAA,WACAzd,KAAAqc,kBAKArc,KAAA0d,gBAJA1d,KAAA2d,KAAA3d,KAAA2d,IAAAC,aAAA5d,KAAA2d,IAAAE,cACA7d,KAAA0d,iBAMAA,cAAA,WACA1d,KAAAmd,SAAAnd,KAAAmd,QAAAM,UAEAH,eAAA,SAAA3a,GACA,IAAAX,EAAAhC,KAmBA,GAhBAA,KAAA2a,gBAAAhY,EAAAwY,SACAxY,EAAAwY,OAAAnb,KAAA2a,gBAAA,KACA,gBAAA/J,QAAA5Q,KAAA2a,kBACAhY,EAAAwY,OAAA2C,IAAA,SACAnb,EAAAwY,OAAA4C,OAAA,aAIApb,EAAAgC,MAAA3E,KAAA+c,WAEAnE,EAAApH,QAAA,SAAAwM,GACAhc,EAAAgc,KAAArb,EAAAqb,GAAAhc,EAAAgc,MAGAhe,KAAAkZ,WAAAD,EAAAtW,EAAA3C,KAAAkZ,WAEAlZ,KAAA6a,UAAA7a,KAAA4a,UAAA5a,KAAA8a,UAAA,CACA,IAAA9B,GACA6B,SAAA7a,KAAA6a,SACAD,SAAA5a,KAAA4a,SACAE,UAAA9a,KAAA8a,WAEAlE,EAAAjU,EAAAiU,OACAjT,EAAAiT,GACAA,EAAApF,QAAA,SAAA0C,GACA6E,EAAA7E,EAAA8E,KAEWxE,EAAAoC,IACXmC,EAAAnC,EAAAoC,GAIAhZ,KAAAsD,QAAAuV,EAAAlW,EAAA3C,KAAAsD,QACAtD,KAAAoa,cAAAzX,EAAA3C,KAAAoa,YAAAzX,IACA,IAAAyZ,EAAApc,KAAAoc,eAEApc,KAAAS,SAAAwd,OAAAje,KAAAS,SAAAyd,MAAA1J,EAAA4H,KACAA,GAAA,GAGApc,KAAAsc,gBAAAtc,KAAAsc,eAAAxX,SACA9E,KAAAsc,eAAA9K,QAAA,SAAA0C,GACA,IAAA1S,EAAAmB,EAAAuR,GACA1S,IACA0T,EAAA1T,EAAAQ,EAAAmc,OAAAjK,IACAvR,EAAAuR,QAAA2B,EAEA7T,EAAAmc,OAAAjK,GAAAQ,EAAAlT,MAIAgT,EAAA4H,GACAA,EAAAgC,UAAA,EAEAhC,GAAA,GAGApc,KAAAqe,eACAre,KAAAuc,KAAA+B,QAAA/B,IAAA5Z,GACA3C,KAAAmd,QAAAoB,UAAA5b,EAAAyZ,GACApc,KAAAwe,MAAA,QAAAxe,KAAAmd,QAAAxa,EAAAuL,GACAlO,KAAAod,MAAA,gBACApd,KAAAod,MAAA,iBACApd,KAAAwe,MAAA,aAAAxe,KAAAmd,QAAAxa,EAAAuL,IAEAlO,KAAA8b,YAAA9b,KAAAye,kBAAA9b,GACA3C,KAAAqa,gBAAAra,KAAAqa,eAAAra,KAAAmd,QAAAxa,EAAAuL,GACAlO,KAAAsa,qBAAAta,KAAAod,MAAA,wBACApd,KAAAod,MAAA,yBACApd,KAAAsa,mBAAAta,KAAAmd,QAAAxa,EAAAuL,MAGAuQ,kBAAA,SAAA9b,GACA,IAAA+b,EAAA1e,KAEA+b,EAAA/b,KAAA+b,iBACA0B,EAAAzd,KAAAyd,OAEAzd,KAAA2d,IAAAC,aAAA5d,KAAA2d,IAAAE,aACAJ,IAEAzd,KAAAwd,UAAA,SAAAmB,GACAD,EAAAf,IAAAC,aAAAc,EAAAf,IAAAE,aACAJ,IAEAvb,WAAA,SAAAyc,GACAlB,IACAiB,EAAAf,IAAAC,aAAAc,EAAAf,IAAAE,cACAS,QAAAM,KAAA,oCAEe7C,MAKf8C,kBAAA,SAAA5C,GACAA,IAAAjc,KAAAod,MAAA0B,UAAA9e,KAAA+e,qBACA9C,GAAAjc,KAAAod,MAAA0B,UAAA9e,KAAAgf,wBAEAC,KAAA,WACA,IAAAjf,KAAAmd,QAAA,CACA,IAAAtB,EAAA7b,KAAA6b,WAAA7b,KAAA4b,OAAA3D,EACAjY,KAAAmd,QAAAjP,EAAA+Q,KAAAjf,KAAAkf,MAAAC,OAAAtD,EAAA7b,KAAAkb,aACAlb,KAAAO,MAAAP,KAAA0c,gBACA1c,KAAAof,mBACApf,KAAAic,YAAAjc,KAAA+e,sBAEAA,kBAAA,WACAM,OAAAC,iBAAA,SAAAtf,KAAAuf,eACAvf,KAAAod,MAAA0B,UAAA,GAEAE,qBAAA,WACAK,OAAAG,oBAAA,SAAAxf,KAAAuf,eACAvf,KAAAod,MAAA0B,UAAA,GAEAW,gBAAA,WACA,IAAAC,EAAA1f,KAEA2f,EAAA3f,KAAA4f,UAAA/I,IAAA,SAAAgJ,GACA,OAAAA,EAAAC,aAEArd,OAAA8O,KAAAvR,KAAA+f,QAAAvO,QAAA,SAAAwO,GACA,KAAAL,EAAA/O,QAAAoP,MAAArH,EAAA/H,QAAAoP,GAAA,CACA,IAAAtN,OACA,oCAAA9B,QAAAyD,EAAAqL,EAAAK,OAAAC,OACAtN,EAAA8J,MAAA,GAEAkD,EAAAO,OAAAD,EAAA,WACAN,EAAAhD,iBACahK,OAIb0M,iBAAA,WACA,IAAAc,EAAAlgB,KAKA2T,EAAA3T,KACAuR,EAAA9O,OAAA8O,KAAAvR,KAAAua,YACAhJ,EAAAzM,QAAAyM,EAAAC,QAAA,SAAA2O,IACA,IAAAD,EAAAE,iBAAAxP,QAAAuP,KACAD,EAAAE,iBAAA7J,KAAA4J,GACAD,EAAA/C,QAAAkD,GAAAF,EAAA,SAAAA,GACA,kBACA,GAAAA,KAAAxM,EAAA4G,OAAA,CACA,QAAA+F,EAAAlN,UAAAtO,OAAA8O,EAAAmC,MAAAuK,GAAA9K,EAAA,EAAiFA,EAAA8K,EAAa9K,IAC9F5B,EAAA4B,GAAApC,UAAAoC,GAGA7B,EAAA4G,OAAA4F,GAAAtM,MAAA,KAAAD,KAPA,CAUauM,QAIbI,YAAA,SAAA3E,GACA5b,KAAAwgB,QACAxgB,KAAAmd,QAAA,KACAnd,KAAAif,QAEAuB,MAAA,WACAxgB,KAAAic,YAAAjc,KAAAgf,uBACAhf,KAAAmd,QAAAtV,YAIAnG,QAAA,WACA1B,KAAAmd,QAAA,KACAnd,KAAAogB,oBACApgB,KAAAod,SACApd,KAAAme,UACAne,KAAAuf,cAAAhM,EAAAvT,KAAAyd,OAAAzd,KAAAkc,aACAlc,KAAA0c,cAAAnJ,EAAAvT,KAAAgd,YAAAhd,KAAAmc,aACAnc,KAAAyf,mBAEAgB,QAAA,WACAzgB,KAAAif,QAEAyB,cAAA,WACA1gB,KAAAwgB,SAIAG,UAAA9O,GAGAsC,EAAAjB,KAAyBiG,GACzBlY,KAAA,UACAV,KAAA,WAEA,OADAP,KAAA4c,aAAA3F,QAKA,OAAA9C","file":"static/js/chunk-70585fba.cfffe4c9.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"gauge-chart\"},[_c('ve-gauge',{attrs:{\"data\":_vm.chartData,\"settings\":_vm.chartSettings}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"gauge-chart\">\r\n    <ve-gauge :data=\"chartData\" :settings=\"chartSettings\"></ve-gauge>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import VeGauge from 'v-charts/lib/gauge';\r\n\r\n  export default {\r\n    components: { VeGauge },\r\n    name: 'GaugeChart',\r\n    data() {\r\n      return {\r\n        initValue: 40,\r\n        chartSettings: {\r\n          dimension: 'type',\r\n          metrics: 'value',\r\n        },\r\n        chartData: {\r\n          columns: ['type', 'a', 'b', 'value'],\r\n          rows: [{ type: '速度', value: this.initValue, a: 1, b: 2 }]\r\n        }\r\n      };\r\n    },\r\n    created() {\r\n      this.runValue(5,80);\r\n    },\r\n    watch: {\r\n      \"initValue\": function () {\r\n        this.chartData.rows[0].value = this.initValue;\r\n      }\r\n    },\r\n    methods: {\r\n      runValue(minNum,maxNum){\r\n        const _this =this;\r\n        let timeOut = setTimeout(() => {\r\n          if (_this.initValue >= minNum && _this.initValue <= maxNum) {\r\n            _this.initValue += Math.floor((Math.random()-0.3)* 3);\r\n            _this.runValue(5,80);\r\n          }\r\n          else{\r\n            clearTimeout(timeOut);\r\n          }\r\n        }, 100);\r\n      }\r\n    }\r\n  };\r\n</script>\r\n\r\n<style>\r\n  .gauge-chart {\r\n  }\r\n</style>\r\n","import mod from \"-!../../../../node_modules/_cache-loader@1.2.2@cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/_thread-loader@1.2.0@thread-loader/dist/cjs.js!../../../../node_modules/_babel-loader@8.0.4@babel-loader/lib/index.js!../../../../node_modules/_cache-loader@1.2.2@cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/_vue-loader@15.4.2@vue-loader/lib/index.js??vue-loader-options!./GaugeChart.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/_cache-loader@1.2.2@cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/_thread-loader@1.2.0@thread-loader/dist/cjs.js!../../../../node_modules/_babel-loader@8.0.4@babel-loader/lib/index.js!../../../../node_modules/_cache-loader@1.2.2@cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/_vue-loader@15.4.2@vue-loader/lib/index.js??vue-loader-options!./GaugeChart.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./GaugeChart.vue?vue&type=template&id=4423b2c3&\"\nimport script from \"./GaugeChart.vue?vue&type=script&lang=js&\"\nexport * from \"./GaugeChart.vue?vue&type=script&lang=js&\"\nimport style0 from \"./GaugeChart.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/_vue-loader@15.4.2@vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\ncomponent.options.__file = \"GaugeChart.vue\"\nexport default component.exports","import mod from \"-!../../../../node_modules/_mini-css-extract-plugin@0.4.4@mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../../node_modules/_css-loader@1.0.0@css-loader/index.js??ref--6-oneOf-1-1!../../../../node_modules/_vue-loader@15.4.2@vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/_postcss-loader@2.1.6@postcss-loader/lib/index.js??ref--6-oneOf-1-2!../../../../node_modules/_cache-loader@1.2.2@cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/_vue-loader@15.4.2@vue-loader/lib/index.js??vue-loader-options!./GaugeChart.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../../../node_modules/_mini-css-extract-plugin@0.4.4@mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../../node_modules/_css-loader@1.0.0@css-loader/index.js??ref--6-oneOf-1-1!../../../../node_modules/_vue-loader@15.4.2@vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/_postcss-loader@2.1.6@postcss-loader/lib/index.js??ref--6-oneOf-1-2!../../../../node_modules/_cache-loader@1.2.2@cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/_vue-loader@15.4.2@vue-loader/lib/index.js??vue-loader-options!./GaugeChart.vue?vue&type=style&index=0&lang=css&\"","require(\"./gauge/GaugeSeries\");\n\nrequire(\"./gauge/GaugeView\");","var createListSimply = require(\"../helper/createListSimply\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar GaugeSeries = SeriesModel.extend({\n  type: 'series.gauge',\n  getInitialData: function (option, ecModel) {\n    var dataOpt = option.data || [];\n\n    if (!zrUtil.isArray(dataOpt)) {\n      dataOpt = [dataOpt];\n    }\n\n    option.data = dataOpt;\n    return createListSimply(this, ['value']);\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    // 默认全局居中\n    center: ['50%', '50%'],\n    legendHoverLink: true,\n    radius: '75%',\n    startAngle: 225,\n    endAngle: -45,\n    clockwise: true,\n    // 最小值\n    min: 0,\n    // 最大值\n    max: 100,\n    // 分割段数，默认为10\n    splitNumber: 10,\n    // 坐标轴线\n    axisLine: {\n      // 默认显示，属性show控制显示与否\n      show: true,\n      lineStyle: {\n        // 属性lineStyle控制线条样式\n        color: [[0.2, '#91c7ae'], [0.8, '#63869e'], [1, '#c23531']],\n        width: 30\n      }\n    },\n    // 分隔线\n    splitLine: {\n      // 默认显示，属性show控制显示与否\n      show: true,\n      // 属性length控制线长\n      length: 30,\n      // 属性lineStyle（详见lineStyle）控制线条样式\n      lineStyle: {\n        color: '#eee',\n        width: 2,\n        type: 'solid'\n      }\n    },\n    // 坐标轴小标记\n    axisTick: {\n      // 属性show控制显示与否，默认不显示\n      show: true,\n      // 每份split细分多少段\n      splitNumber: 5,\n      // 属性length控制线长\n      length: 8,\n      // 属性lineStyle控制线条样式\n      lineStyle: {\n        color: '#eee',\n        width: 1,\n        type: 'solid'\n      }\n    },\n    axisLabel: {\n      show: true,\n      distance: 5,\n      // formatter: null,\n      color: 'auto'\n    },\n    pointer: {\n      show: true,\n      length: '80%',\n      width: 8\n    },\n    itemStyle: {\n      color: 'auto'\n    },\n    title: {\n      show: true,\n      // x, y，单位px\n      offsetCenter: [0, '-40%'],\n      // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n      color: '#333',\n      fontSize: 15\n    },\n    detail: {\n      show: true,\n      backgroundColor: 'rgba(0,0,0,0)',\n      borderWidth: 0,\n      borderColor: '#ccc',\n      width: 100,\n      height: null,\n      // self-adaption\n      padding: [5, 10],\n      // x, y，单位px\n      offsetCenter: [0, '40%'],\n      // formatter: null,\n      // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n      color: 'auto',\n      fontSize: 30\n    }\n  }\n});\nvar _default = GaugeSeries;\nmodule.exports = _default;","var PointerPath = require(\"./PointerPath\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar ChartView = require(\"../../view/Chart\");\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\nvar round = _number.round;\nvar linearMap = _number.linearMap;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction parsePosition(seriesModel, api) {\n  var center = seriesModel.get('center');\n  var width = api.getWidth();\n  var height = api.getHeight();\n  var size = Math.min(width, height);\n  var cx = parsePercent(center[0], api.getWidth());\n  var cy = parsePercent(center[1], api.getHeight());\n  var r = parsePercent(seriesModel.get('radius'), size / 2);\n  return {\n    cx: cx,\n    cy: cy,\n    r: r\n  };\n}\n\nfunction formatLabel(label, labelFormatter) {\n  if (labelFormatter) {\n    if (typeof labelFormatter === 'string') {\n      label = labelFormatter.replace('{value}', label != null ? label : '');\n    } else if (typeof labelFormatter === 'function') {\n      label = labelFormatter(label);\n    }\n  }\n\n  return label;\n}\n\nvar PI2 = Math.PI * 2;\nvar GaugeView = ChartView.extend({\n  type: 'gauge',\n  render: function (seriesModel, ecModel, api) {\n    this.group.removeAll();\n    var colorList = seriesModel.get('axisLine.lineStyle.color');\n    var posInfo = parsePosition(seriesModel, api);\n\n    this._renderMain(seriesModel, ecModel, api, colorList, posInfo);\n  },\n  dispose: function () {},\n  _renderMain: function (seriesModel, ecModel, api, colorList, posInfo) {\n    var group = this.group;\n    var axisLineModel = seriesModel.getModel('axisLine');\n    var lineStyleModel = axisLineModel.getModel('lineStyle');\n    var clockwise = seriesModel.get('clockwise');\n    var startAngle = -seriesModel.get('startAngle') / 180 * Math.PI;\n    var endAngle = -seriesModel.get('endAngle') / 180 * Math.PI;\n    var angleRangeSpan = (endAngle - startAngle) % PI2;\n    var prevEndAngle = startAngle;\n    var axisLineWidth = lineStyleModel.get('width');\n\n    for (var i = 0; i < colorList.length; i++) {\n      // Clamp\n      var percent = Math.min(Math.max(colorList[i][0], 0), 1);\n      var endAngle = startAngle + angleRangeSpan * percent;\n      var sector = new graphic.Sector({\n        shape: {\n          startAngle: prevEndAngle,\n          endAngle: endAngle,\n          cx: posInfo.cx,\n          cy: posInfo.cy,\n          clockwise: clockwise,\n          r0: posInfo.r - axisLineWidth,\n          r: posInfo.r\n        },\n        silent: true\n      });\n      sector.setStyle({\n        fill: colorList[i][1]\n      });\n      sector.setStyle(lineStyleModel.getLineStyle( // Because we use sector to simulate arc\n      // so the properties for stroking are useless\n      ['color', 'borderWidth', 'borderColor']));\n      group.add(sector);\n      prevEndAngle = endAngle;\n    }\n\n    var getColor = function (percent) {\n      // Less than 0\n      if (percent <= 0) {\n        return colorList[0][1];\n      }\n\n      for (var i = 0; i < colorList.length; i++) {\n        if (colorList[i][0] >= percent && (i === 0 ? 0 : colorList[i - 1][0]) < percent) {\n          return colorList[i][1];\n        }\n      } // More than 1\n\n\n      return colorList[i - 1][1];\n    };\n\n    if (!clockwise) {\n      var tmp = startAngle;\n      startAngle = endAngle;\n      endAngle = tmp;\n    }\n\n    this._renderTicks(seriesModel, ecModel, api, getColor, posInfo, startAngle, endAngle, clockwise);\n\n    this._renderPointer(seriesModel, ecModel, api, getColor, posInfo, startAngle, endAngle, clockwise);\n\n    this._renderTitle(seriesModel, ecModel, api, getColor, posInfo);\n\n    this._renderDetail(seriesModel, ecModel, api, getColor, posInfo);\n  },\n  _renderTicks: function (seriesModel, ecModel, api, getColor, posInfo, startAngle, endAngle, clockwise) {\n    var group = this.group;\n    var cx = posInfo.cx;\n    var cy = posInfo.cy;\n    var r = posInfo.r;\n    var minVal = +seriesModel.get('min');\n    var maxVal = +seriesModel.get('max');\n    var splitLineModel = seriesModel.getModel('splitLine');\n    var tickModel = seriesModel.getModel('axisTick');\n    var labelModel = seriesModel.getModel('axisLabel');\n    var splitNumber = seriesModel.get('splitNumber');\n    var subSplitNumber = tickModel.get('splitNumber');\n    var splitLineLen = parsePercent(splitLineModel.get('length'), r);\n    var tickLen = parsePercent(tickModel.get('length'), r);\n    var angle = startAngle;\n    var step = (endAngle - startAngle) / splitNumber;\n    var subStep = step / subSplitNumber;\n    var splitLineStyle = splitLineModel.getModel('lineStyle').getLineStyle();\n    var tickLineStyle = tickModel.getModel('lineStyle').getLineStyle();\n\n    for (var i = 0; i <= splitNumber; i++) {\n      var unitX = Math.cos(angle);\n      var unitY = Math.sin(angle); // Split line\n\n      if (splitLineModel.get('show')) {\n        var splitLine = new graphic.Line({\n          shape: {\n            x1: unitX * r + cx,\n            y1: unitY * r + cy,\n            x2: unitX * (r - splitLineLen) + cx,\n            y2: unitY * (r - splitLineLen) + cy\n          },\n          style: splitLineStyle,\n          silent: true\n        });\n\n        if (splitLineStyle.stroke === 'auto') {\n          splitLine.setStyle({\n            stroke: getColor(i / splitNumber)\n          });\n        }\n\n        group.add(splitLine);\n      } // Label\n\n\n      if (labelModel.get('show')) {\n        var label = formatLabel(round(i / splitNumber * (maxVal - minVal) + minVal), labelModel.get('formatter'));\n        var distance = labelModel.get('distance');\n        var autoColor = getColor(i / splitNumber);\n        group.add(new graphic.Text({\n          style: graphic.setTextStyle({}, labelModel, {\n            text: label,\n            x: unitX * (r - splitLineLen - distance) + cx,\n            y: unitY * (r - splitLineLen - distance) + cy,\n            textVerticalAlign: unitY < -0.4 ? 'top' : unitY > 0.4 ? 'bottom' : 'middle',\n            textAlign: unitX < -0.4 ? 'left' : unitX > 0.4 ? 'right' : 'center'\n          }, {\n            autoColor: autoColor\n          }),\n          silent: true\n        }));\n      } // Axis tick\n\n\n      if (tickModel.get('show') && i !== splitNumber) {\n        for (var j = 0; j <= subSplitNumber; j++) {\n          var unitX = Math.cos(angle);\n          var unitY = Math.sin(angle);\n          var tickLine = new graphic.Line({\n            shape: {\n              x1: unitX * r + cx,\n              y1: unitY * r + cy,\n              x2: unitX * (r - tickLen) + cx,\n              y2: unitY * (r - tickLen) + cy\n            },\n            silent: true,\n            style: tickLineStyle\n          });\n\n          if (tickLineStyle.stroke === 'auto') {\n            tickLine.setStyle({\n              stroke: getColor((i + j / subSplitNumber) / splitNumber)\n            });\n          }\n\n          group.add(tickLine);\n          angle += subStep;\n        }\n\n        angle -= subStep;\n      } else {\n        angle += step;\n      }\n    }\n  },\n  _renderPointer: function (seriesModel, ecModel, api, getColor, posInfo, startAngle, endAngle, clockwise) {\n    var group = this.group;\n    var oldData = this._data;\n\n    if (!seriesModel.get('pointer.show')) {\n      // Remove old element\n      oldData && oldData.eachItemGraphicEl(function (el) {\n        group.remove(el);\n      });\n      return;\n    }\n\n    var valueExtent = [+seriesModel.get('min'), +seriesModel.get('max')];\n    var angleExtent = [startAngle, endAngle];\n    var data = seriesModel.getData();\n    var valueDim = data.mapDimension('value');\n    data.diff(oldData).add(function (idx) {\n      var pointer = new PointerPath({\n        shape: {\n          angle: startAngle\n        }\n      });\n      graphic.initProps(pointer, {\n        shape: {\n          angle: linearMap(data.get(valueDim, idx), valueExtent, angleExtent, true)\n        }\n      }, seriesModel);\n      group.add(pointer);\n      data.setItemGraphicEl(idx, pointer);\n    }).update(function (newIdx, oldIdx) {\n      var pointer = oldData.getItemGraphicEl(oldIdx);\n      graphic.updateProps(pointer, {\n        shape: {\n          angle: linearMap(data.get(valueDim, newIdx), valueExtent, angleExtent, true)\n        }\n      }, seriesModel);\n      group.add(pointer);\n      data.setItemGraphicEl(newIdx, pointer);\n    }).remove(function (idx) {\n      var pointer = oldData.getItemGraphicEl(idx);\n      group.remove(pointer);\n    }).execute();\n    data.eachItemGraphicEl(function (pointer, idx) {\n      var itemModel = data.getItemModel(idx);\n      var pointerModel = itemModel.getModel('pointer');\n      pointer.setShape({\n        x: posInfo.cx,\n        y: posInfo.cy,\n        width: parsePercent(pointerModel.get('width'), posInfo.r),\n        r: parsePercent(pointerModel.get('length'), posInfo.r)\n      });\n      pointer.useStyle(itemModel.getModel('itemStyle').getItemStyle());\n\n      if (pointer.style.fill === 'auto') {\n        pointer.setStyle('fill', getColor(linearMap(data.get(valueDim, idx), valueExtent, [0, 1], true)));\n      }\n\n      graphic.setHoverStyle(pointer, itemModel.getModel('emphasis.itemStyle').getItemStyle());\n    });\n    this._data = data;\n  },\n  _renderTitle: function (seriesModel, ecModel, api, getColor, posInfo) {\n    var data = seriesModel.getData();\n    var valueDim = data.mapDimension('value');\n    var titleModel = seriesModel.getModel('title');\n\n    if (titleModel.get('show')) {\n      var offsetCenter = titleModel.get('offsetCenter');\n      var x = posInfo.cx + parsePercent(offsetCenter[0], posInfo.r);\n      var y = posInfo.cy + parsePercent(offsetCenter[1], posInfo.r);\n      var minVal = +seriesModel.get('min');\n      var maxVal = +seriesModel.get('max');\n      var value = seriesModel.getData().get(valueDim, 0);\n      var autoColor = getColor(linearMap(value, [minVal, maxVal], [0, 1], true));\n      this.group.add(new graphic.Text({\n        silent: true,\n        style: graphic.setTextStyle({}, titleModel, {\n          x: x,\n          y: y,\n          // FIXME First data name ?\n          text: data.getName(0),\n          textAlign: 'center',\n          textVerticalAlign: 'middle'\n        }, {\n          autoColor: autoColor,\n          forceRich: true\n        })\n      }));\n    }\n  },\n  _renderDetail: function (seriesModel, ecModel, api, getColor, posInfo) {\n    var detailModel = seriesModel.getModel('detail');\n    var minVal = +seriesModel.get('min');\n    var maxVal = +seriesModel.get('max');\n\n    if (detailModel.get('show')) {\n      var offsetCenter = detailModel.get('offsetCenter');\n      var x = posInfo.cx + parsePercent(offsetCenter[0], posInfo.r);\n      var y = posInfo.cy + parsePercent(offsetCenter[1], posInfo.r);\n      var width = parsePercent(detailModel.get('width'), posInfo.r);\n      var height = parsePercent(detailModel.get('height'), posInfo.r);\n      var data = seriesModel.getData();\n      var value = data.get(data.mapDimension('value'), 0);\n      var autoColor = getColor(linearMap(value, [minVal, maxVal], [0, 1], true));\n      this.group.add(new graphic.Text({\n        silent: true,\n        style: graphic.setTextStyle({}, detailModel, {\n          x: x,\n          y: y,\n          text: formatLabel( // FIXME First data name ?\n          value, detailModel.get('formatter')),\n          textWidth: isNaN(width) ? null : width,\n          textHeight: isNaN(height) ? null : height,\n          textAlign: 'center',\n          textVerticalAlign: 'middle'\n        }, {\n          autoColor: autoColor,\n          forceRich: true\n        })\n      }));\n    }\n  }\n});\nvar _default = GaugeView;\nmodule.exports = _default;","var Path = require(\"zrender/lib/graphic/Path\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = Path.extend({\n  type: 'echartsGaugePointer',\n  shape: {\n    angle: 0,\n    width: 10,\n    r: 10,\n    x: 0,\n    y: 0\n  },\n  buildPath: function (ctx, shape) {\n    var mathCos = Math.cos;\n    var mathSin = Math.sin;\n    var r = shape.r;\n    var width = shape.width;\n    var angle = shape.angle;\n    var x = shape.x - mathCos(angle) * width * (width >= r / 3 ? 1 : 2);\n    var y = shape.y - mathSin(angle) * width * (width >= r / 3 ? 1 : 2);\n    angle = shape.angle - Math.PI / 2;\n    ctx.moveTo(x, y);\n    ctx.lineTo(shape.x + mathCos(angle) * width, shape.y + mathSin(angle) * width);\n    ctx.lineTo(shape.x + mathCos(shape.angle) * r, shape.y + mathSin(shape.angle) * r);\n    ctx.lineTo(shape.x - mathCos(angle) * width, shape.y - mathSin(angle) * width);\n    ctx.lineTo(x, y);\n    return;\n  }\n});\n\nmodule.exports = _default;","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('echarts/lib/echarts'), require('echarts/lib/component/tooltip'), require('echarts/lib/component/legend'), require('echarts/lib/chart/gauge')) :\n  typeof define === 'function' && define.amd ? define(['echarts/lib/echarts', 'echarts/lib/component/tooltip', 'echarts/lib/component/legend', 'echarts/lib/chart/gauge'], factory) :\n  (global.VeGauge = factory(global.echarts));\n}(this, (function (echartsLib) { 'use strict';\n\n  echartsLib = echartsLib && echartsLib.hasOwnProperty('default') ? echartsLib['default'] : echartsLib;\n\n  var ABBR = {\n    th: 3,\n    mi: 6,\n    bi: 9,\n    tr: 12\n  };\n\n  var DEFAULT_OPTIONS = {\n    zeroFormat: null,\n    nullFormat: null,\n    defaultFormat: '0,0',\n    scalePercentBy100: true,\n    abbrLabel: {\n      th: 'k',\n      mi: 'm',\n      bi: 'b',\n      tr: 't'\n    }\n  };\n\n  var TRILLION = 1e12;\n  var BILLION = 1e9;\n  var MILLION = 1e6;\n  var THOUSAND = 1e3;\n\n  function numIsNaN(value) {\n    return typeof value === 'number' && isNaN(value);\n  }\n\n  function toFixed(value, maxDecimals, roundingFunction, optionals) {\n    var splitValue = value.toString().split('.');\n    var minDecimals = maxDecimals - (optionals || 0);\n    var boundedPrecision = splitValue.length === 2 ? Math.min(Math.max(splitValue[1].length, minDecimals), maxDecimals) : minDecimals;\n    var power = Math.pow(10, boundedPrecision);\n    var output = (roundingFunction(value + 'e+' + boundedPrecision) / power).toFixed(boundedPrecision);\n\n    if (optionals > maxDecimals - boundedPrecision) {\n      var optionalsRegExp = new RegExp('\\\\.?0{1,' + (optionals - (maxDecimals - boundedPrecision)) + '}$');\n      output = output.replace(optionalsRegExp, '');\n    }\n\n    return output;\n  }\n\n  function numberToFormat(options, value, format, roundingFunction) {\n    var abs = Math.abs(value);\n    var negP = false;\n    var optDec = false;\n    var abbr = '';\n    var decimal = '';\n    var neg = false;\n    var abbrForce = void 0;\n    var signed = void 0;\n    format = format || '';\n\n    value = value || 0;\n\n    if (~format.indexOf('(')) {\n      negP = true;\n      format = format.replace(/[(|)]/g, '');\n    } else if (~format.indexOf('+') || ~format.indexOf('-')) {\n      signed = ~format.indexOf('+') ? format.indexOf('+') : value < 0 ? format.indexOf('-') : -1;\n      format = format.replace(/[+|-]/g, '');\n    }\n    if (~format.indexOf('a')) {\n      abbrForce = format.match(/a(k|m|b|t)?/);\n\n      abbrForce = abbrForce ? abbrForce[1] : false;\n\n      if (~format.indexOf(' a')) abbr = ' ';\n      format = format.replace(new RegExp(abbr + 'a[kmbt]?'), '');\n\n      if (abs >= TRILLION && !abbrForce || abbrForce === 't') {\n        abbr += options.abbrLabel.tr;\n        value = value / TRILLION;\n      } else if (abs < TRILLION && abs >= BILLION && !abbrForce || abbrForce === 'b') {\n        abbr += options.abbrLabel.bi;\n        value = value / BILLION;\n      } else if (abs < BILLION && abs >= MILLION && !abbrForce || abbrForce === 'm') {\n        abbr += options.abbrLabel.mi;\n        value = value / MILLION;\n      } else if (abs < MILLION && abs >= THOUSAND && !abbrForce || abbrForce === 'k') {\n        abbr += options.abbrLabel.th;\n        value = value / THOUSAND;\n      }\n    }\n    if (~format.indexOf('[.]')) {\n      optDec = true;\n      format = format.replace('[.]', '.');\n    }\n    var int = value.toString().split('.')[0];\n    var precision = format.split('.')[1];\n    var thousands = format.indexOf(',');\n    var leadingCount = (format.split('.')[0].split(',')[0].match(/0/g) || []).length;\n\n    if (precision) {\n      if (~precision.indexOf('[')) {\n        precision = precision.replace(']', '');\n        precision = precision.split('[');\n        decimal = toFixed(value, precision[0].length + precision[1].length, roundingFunction, precision[1].length);\n      } else {\n        decimal = toFixed(value, precision.length, roundingFunction);\n      }\n\n      int = decimal.split('.')[0];\n      decimal = ~decimal.indexOf('.') ? '.' + decimal.split('.')[1] : '';\n      if (optDec && +decimal.slice(1) === 0) decimal = '';\n    } else {\n      int = toFixed(value, 0, roundingFunction);\n    }\n    if (abbr && !abbrForce && +int >= 1000 && abbr !== ABBR.trillion) {\n      int = '' + +int / 1000;\n      abbr = ABBR.million;\n    }\n    if (~int.indexOf('-')) {\n      int = int.slice(1);\n      neg = true;\n    }\n    if (int.length < leadingCount) {\n      for (var i = leadingCount - int.length; i > 0; i--) {\n        int = '0' + int;\n      }\n    }\n\n    if (thousands > -1) {\n      int = int.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1' + ',');\n    }\n\n    if (!format.indexOf('.')) int = '';\n\n    var output = int + decimal + (abbr || '');\n\n    if (negP) {\n      output = (negP && neg ? '(' : '') + output + (negP && neg ? ')' : '');\n    } else {\n      if (signed >= 0) {\n        output = signed === 0 ? (neg ? '-' : '+') + output : output + (neg ? '-' : '+');\n      } else if (neg) {\n        output = '-' + output;\n      }\n    }\n\n    return output;\n  }\n\n  function extend(target, sub) {\n    Object.keys(sub).forEach(function (key) {\n      target[key] = sub[key];\n    });\n  }\n\n  var numerifyPercent = {\n    regexp: /%/,\n    format: function format(value, formatType, roundingFunction, numerify) {\n      var space = ~formatType.indexOf(' %') ? ' ' : '';\n      var output = void 0;\n\n      if (numerify.options.scalePercentBy100) value = value * 100;\n\n      formatType = formatType.replace(/\\s?%/, '');\n\n      output = numerify._numberToFormat(value, formatType, roundingFunction);\n\n      if (~output.indexOf(')')) {\n        output = output.split('');\n        output.splice(-1, 0, space + '%');\n        output = output.join('');\n      } else {\n        output = output + space + '%';\n      }\n\n      return output;\n    }\n  };\n\n  var options = {};\n  var formats = {};\n\n  extend(options, DEFAULT_OPTIONS);\n\n  function format(value, formatType, roundingFunction) {\n    formatType = formatType || options.defaultFormat;\n    roundingFunction = roundingFunction || Math.round;\n    var output = void 0;\n    var formatFunction = void 0;\n\n    if (value === 0 && options.zeroFormat !== null) {\n      output = options.zeroFormat;\n    } else if (value === null && options.nullFormat !== null) {\n      output = options.nullFormat;\n    } else {\n      for (var kind in formats) {\n        if (formats[kind] && formatType.match(formats[kind].regexp)) {\n          formatFunction = formats[kind].format;\n          break;\n        }\n      }\n      formatFunction = formatFunction || numberToFormat.bind(null, options);\n      output = formatFunction(value, formatType, roundingFunction, numerify);\n    }\n\n    return output;\n  }\n\n  function numerify(input, formatType, roundingFunction) {\n    var value = void 0;\n\n    if (input === 0 || typeof input === 'undefined') {\n      value = 0;\n    } else if (input === null || numIsNaN(input)) {\n      value = null;\n    } else if (typeof input === 'string') {\n      if (options.zeroFormat && input === options.zeroFormat) {\n        value = 0;\n      } else if (options.nullFormat && input === options.nullFormat || !input.replace(/[^0-9]+/g, '').length) {\n        value = null;\n      } else {\n        value = +input;\n      }\n    } else {\n      value = +input || null;\n    }\n\n    return format(value, formatType, roundingFunction);\n  }\n\n  numerify.options = options;\n  numerify._numberToFormat = numberToFormat.bind(null, options);\n  numerify.register = function (name, format) {\n    formats[name] = format;\n  };\n  numerify.unregister = function (name) {\n    formats[name] = null;\n  };\n  numerify.setOptions = function (opts) {\n    extend(options, opts);\n  };\n  numerify.reset = function () {\n    extend(options, DEFAULT_OPTIONS);\n  };\n\n  numerify.register('percentage', numerifyPercent);\n\n  var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  };\n\n  var _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  function debounce(fn, delay) {\n    var timer = null;\n    return function () {\n      var self = this;\n      var args = arguments;\n      clearTimeout(timer);\n      timer = setTimeout(function () {\n        fn.apply(self, args);\n      }, delay);\n    };\n  }\n\n  function set$1(target, path, value) {\n    if (!path) return;\n    var targetTemp = target;\n    var pathArr = path.split('.');\n    pathArr.forEach(function (item, index) {\n      if (index === pathArr.length - 1) {\n        targetTemp[item] = value;\n      } else {\n        if (!targetTemp[item]) targetTemp[item] = {};\n        targetTemp = targetTemp[item];\n      }\n    });\n  }\n\n  var _typeof$1 = typeof Symbol === \"function\" && _typeof(Symbol.iterator) === \"symbol\" ? function (obj) {\n    return typeof obj === 'undefined' ? 'undefined' : _typeof(obj);\n  } : function (obj) {\n    return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj === 'undefined' ? 'undefined' : _typeof(obj);\n  };\n\n  function getType(v) {\n    return Object.prototype.toString.call(v);\n  }\n\n  function getTypeof(v) {\n    return typeof v === 'undefined' ? 'undefined' : _typeof$1(v);\n  }\n\n  function isObject(v) {\n    return getType(v) === '[object Object]';\n  }\n\n  function isArray(v) {\n    return getType(v) === '[object Array]';\n  }\n\n  function isFunction(v) {\n    return getType(v) === '[object Function]';\n  }\n\n  function cloneDeep(v) {\n    return JSON.parse(JSON.stringify(v));\n  }\n\n  function camelToKebab(s) {\n    return s.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n  }\n\n  function hasOwn(source, target) {\n    return Object.prototype.hasOwnProperty.call(source, target);\n  }\n\n  function isEqual(alice, bob) {\n    if (alice === bob) return true;\n    if (alice === null || bob === null || getTypeof(alice) !== 'object' || getTypeof(bob) !== 'object') {\n      return alice === bob;\n    }\n\n    for (var key in alice) {\n      if (!hasOwn(alice, key)) continue;\n      var aliceValue = alice[key];\n      var bobValue = bob[key];\n      var aliceType = getTypeof(aliceValue);\n\n      if (getTypeof(bobValue) === 'undefined') {\n        return false;\n      } else if (aliceType === 'object') {\n        if (!isEqual(aliceValue, bobValue)) return false;\n      } else if (aliceValue !== bobValue) {\n        return false;\n      }\n    }\n    for (var _key in bob) {\n      if (!hasOwn(bob, _key)) continue;\n      if (getTypeof(alice)[_key] === 'undefined') return false;\n    }\n\n    return true;\n  }\n\n  var getFormated = function getFormated(val, type, digit) {\n    var defaultVal = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : '-';\n\n    if (isNaN(val)) return defaultVal;\n    if (!type) return val;\n    if (isFunction(type)) return type(val, numerify);\n\n    digit = isNaN(digit) ? 0 : ++digit;\n    var digitStr = '.[' + new Array(digit).join(0) + ']';\n    var formatter = type;\n    switch (type) {\n      case 'KMB':\n        formatter = digit ? '0,0' + digitStr + 'a' : '0,0a';\n        break;\n      case 'normal':\n        formatter = digit ? '0,0' + digitStr : '0,0';\n        break;\n      case 'percent':\n        formatter = digit ? '0,0' + digitStr + '%' : '0,0.[00]%';\n        break;\n    }\n    return numerify(val, formatter);\n  };\n\n  function getTooltip(args) {\n    var tooltipFormatter = args.tooltipFormatter,\n        dataType = args.dataType,\n        digit = args.digit;\n\n    return {\n      formatter: function formatter(options) {\n        var seriesName = options.seriesName,\n            _options$data = options.data,\n            value = _options$data.value,\n            name = _options$data.name;\n\n        if (tooltipFormatter) {\n          return tooltipFormatter.apply(null, arguments);\n        }\n        var tpl = [];\n        tpl.push(seriesName + ': ');\n        tpl.push(getFormated(value, dataType[seriesName], digit) + ' ' + name);\n        return tpl.join('');\n      }\n    };\n  }\n\n  function getSeries(args) {\n    var rows = args.rows,\n        dimension = args.dimension,\n        metrics = args.metrics,\n        digit = args.digit,\n        dataType = args.dataType,\n        labelMap = args.labelMap,\n        seriesMap = args.seriesMap,\n        dataName = args.dataName;\n\n\n    var series = rows.map(function (row) {\n      var label = row[dimension];\n      var seriesItem = seriesMap[label];\n      var result = {\n        type: 'gauge',\n        name: labelMap[label] != null ? labelMap[label] : label,\n        data: [{\n          name: dataName[label] || '',\n          value: row[metrics]\n        }],\n        detail: {\n          formatter: function formatter(v) {\n            return getFormated(v, dataType[label], digit);\n          }\n        },\n        axisLabel: {\n          formatter: function formatter(v) {\n            return getFormated(v, dataType[label], digit);\n          }\n        }\n      };\n\n      if (seriesItem) {\n        Object.keys(seriesItem).forEach(function (key) {\n          if (isObject(result[key])) {\n            _extends(result[key], seriesItem[key]);\n          } else {\n            result[key] = seriesItem[key];\n          }\n        });\n      }\n\n      return result;\n    });\n\n    return series;\n  }\n\n  var gauge$1 = function gauge$$1(columns, rows, settings, extra) {\n    var _settings$dimension = settings.dimension,\n        dimension = _settings$dimension === undefined ? columns[0] : _settings$dimension,\n        _settings$metrics = settings.metrics,\n        metrics = _settings$metrics === undefined ? columns[1] : _settings$metrics,\n        _settings$digit = settings.digit,\n        digit = _settings$digit === undefined ? 2 : _settings$digit,\n        _settings$dataType = settings.dataType,\n        dataType = _settings$dataType === undefined ? {} : _settings$dataType,\n        _settings$labelMap = settings.labelMap,\n        labelMap = _settings$labelMap === undefined ? {} : _settings$labelMap,\n        _settings$seriesMap = settings.seriesMap,\n        seriesMap = _settings$seriesMap === undefined ? {} : _settings$seriesMap,\n        _settings$dataName = settings.dataName,\n        dataName = _settings$dataName === undefined ? {} : _settings$dataName;\n    var tooltipFormatter = extra.tooltipFormatter,\n        tooltipVisible = extra.tooltipVisible;\n\n\n    var tooltip$$1 = tooltipVisible && getTooltip({\n      tooltipFormatter: tooltipFormatter,\n      dataType: dataType\n    });\n\n    var series = getSeries({\n      rows: rows,\n      dimension: dimension,\n      metrics: metrics,\n      digit: digit,\n      dataType: dataType,\n      labelMap: labelMap,\n      seriesMap: seriesMap,\n      dataName: dataName\n    });\n    return { tooltip: tooltip$$1, series: series };\n  };\n\n  var Loading = { render: function render() {\n      var _vm = this;var _h = _vm.$createElement;var _c = _vm._self._c || _h;return _c('div', { staticClass: \"v-charts-component-loading\" }, [_c('div', { staticClass: \"loader\" }, [_c('div', { staticClass: \"loading-spinner\" }, [_c('svg', { staticClass: \"circular\", attrs: { \"viewBox\": \"25 25 50 50\" } }, [_c('circle', { staticClass: \"path\", attrs: { \"cx\": \"50\", \"cy\": \"50\", \"r\": \"20\", \"fill\": \"none\" } })])])])]);\n    }, staticRenderFns: []\n  };\n\n  var DataEmpty = { render: function render() {\n      var _vm = this;var _h = _vm.$createElement;var _c = _vm._self._c || _h;return _c('div', { staticClass: \"v-charts-data-empty\" }, [_vm._v(\" 暂无数据 \")]);\n    }, staticRenderFns: []\n  };\n\n  var DEFAULT_THEME = {\n    categoryAxis: {\n      axisLine: { show: false },\n      axisTick: { show: false },\n      splitLine: { show: false }\n    },\n    valueAxis: {\n      axisLine: { show: false }\n    },\n    line: {\n      smooth: true\n    },\n    grid: {\n      containLabel: true,\n      left: 10,\n      right: 10\n    }\n  };\n\n  var DEFAULT_COLORS = ['#19d4ae', '#5ab1ef', '#fa6e86', '#ffb980', '#0067a6', '#c4b4e4', '#d87a80', '#9cbbff', '#d9d0c7', '#87a997', '#d49ea2', '#5b4947', '#7ba3a8'];\n\n  var STATIC_PROPS = ['initOptions', 'loading', 'dataEmpty', 'judgeWidth', 'widthChangeDelay'];\n\n  var ECHARTS_SETTINGS = ['grid', 'dataZoom', 'visualMap', 'toolbox', 'title', 'legend', 'xAxis', 'yAxis', 'radar', 'tooltip', 'axisPointer', 'brush', 'geo', 'timeline', 'graphic', 'series', 'backgroundColor', 'textStyle'];\n\n  function setExtend (options, extend) {\n    Object.keys(extend).forEach(function (attr) {\n      var value = extend[attr];\n      if (~attr.indexOf('.')) {\n        // eg: a.b.c a.1.b\n        set$1(options, attr, value);\n      } else if (typeof value === 'function') {\n        // get callback value\n        options[attr] = value(options[attr]);\n      } else {\n        // mixin extend value\n        if (isArray(options[attr]) && isObject(options[attr][0])) {\n          // eg: [{ xx: 1 }, { xx: 2 }]\n          options[attr].forEach(function (option, index) {\n            options[attr][index] = _extends({}, option, value);\n          });\n        } else if (isObject(options[attr])) {\n          // eg: { xx: 1, yy: 2 }\n          options[attr] = _extends({}, options[attr], value);\n        } else {\n          options[attr] = value;\n        }\n      }\n    });\n  }\n\n  function setMark (seriesItem, marks) {\n    Object.keys(marks).forEach(function (key) {\n      if (marks[key]) seriesItem[key] = marks[key];\n    });\n  }\n\n  function setAnimation (options, animation) {\n    Object.keys(animation).forEach(function (key) {\n      options[key] = animation[key];\n    });\n  }\n\n  var Core = {\n    render: function render(h) {\n      return h('div', {\n        class: [camelToKebab(this.$options.name || this.$options._componentTag)],\n        style: this.canvasStyle\n      }, [h('div', {\n        style: this.canvasStyle,\n        class: { 'v-charts-mask-status': this.dataEmpty || this.loading },\n        ref: 'canvas'\n      }), h(DataEmpty, {\n        style: { display: this.dataEmpty ? '' : 'none' }\n      }), h(Loading, {\n        style: { display: this.loading ? '' : 'none' }\n      }), this.$slots.default]);\n    },\n\n\n    props: {\n      data: { type: [Object, Array], default: function _default() {\n          return {};\n        }\n      },\n      settings: { type: Object, default: function _default() {\n          return {};\n        }\n      },\n      width: { type: String, default: 'auto' },\n      height: { type: String, default: '400px' },\n      beforeConfig: { type: Function },\n      afterConfig: { type: Function },\n      afterSetOption: { type: Function },\n      afterSetOptionOnce: { type: Function },\n      events: { type: Object },\n      grid: { type: [Object, Array] },\n      colors: { type: Array },\n      tooltipVisible: { type: Boolean, default: true },\n      legendVisible: { type: Boolean, default: true },\n      legendPosition: { type: String },\n      markLine: { type: Object },\n      markArea: { type: Object },\n      markPoint: { type: Object },\n      visualMap: { type: [Object, Array] },\n      dataZoom: { type: [Object, Array] },\n      toolbox: { type: [Object, Array] },\n      initOptions: { type: Object, default: function _default() {\n          return {};\n        }\n      },\n      title: [Object, Array],\n      legend: [Object, Array],\n      xAxis: [Object, Array],\n      yAxis: [Object, Array],\n      radar: Object,\n      tooltip: Object,\n      axisPointer: [Object, Array],\n      brush: [Object, Array],\n      geo: [Object, Array],\n      timeline: [Object, Array],\n      graphic: [Object, Array],\n      series: [Object, Array],\n      backgroundColor: [Object, String],\n      textStyle: [Object, Array],\n      animation: Object,\n      theme: Object,\n      themeName: String,\n      loading: Boolean,\n      dataEmpty: Boolean,\n      extend: Object,\n      judgeWidth: { type: Boolean, default: false },\n      widthChangeDelay: { type: Number, default: 300 },\n      tooltipFormatter: { type: Function },\n      resizeable: { type: Boolean, default: true },\n      resizeDelay: { type: Number, default: 200 },\n      changeDelay: { type: Number, default: 0 },\n      setOptionOpts: { type: [Boolean, Object], default: true },\n      cancelResizeCheck: Boolean,\n      notSetUnchange: Array,\n      log: Boolean\n    },\n\n    watch: {\n      data: {\n        deep: true,\n        handler: function handler(v) {\n          if (v) {\n            this.changeHandler();\n          }\n        }\n      },\n\n      settings: {\n        deep: true,\n        handler: function handler(v) {\n          if (v.type && this.chartLib) this.chartHandler = this.chartLib[v.type];\n          this.changeHandler();\n        }\n      },\n\n      width: 'nextTickResize',\n      height: 'nextTickResize',\n\n      events: {\n        deep: true,\n        handler: 'createEventProxy'\n      },\n\n      theme: {\n        deep: true,\n        handler: 'themeChange'\n      },\n\n      themeName: 'themeChange',\n\n      resizeable: 'resizeableHandler'\n    },\n\n    computed: {\n      canvasStyle: function canvasStyle() {\n        return {\n          width: this.width,\n          height: this.height,\n          position: 'relative'\n        };\n      },\n      chartColor: function chartColor() {\n        return this.colors || this.theme && this.theme.color || DEFAULT_COLORS;\n      }\n    },\n\n    methods: {\n      dataHandler: function dataHandler() {\n        if (!this.chartHandler) return;\n        var data = this.data;\n        var _data = data,\n            _data$columns = _data.columns,\n            columns = _data$columns === undefined ? [] : _data$columns,\n            _data$rows = _data.rows,\n            rows = _data$rows === undefined ? [] : _data$rows;\n\n        var extra = {\n          tooltipVisible: this.tooltipVisible,\n          legendVisible: this.legendVisible,\n          echarts: this.echarts,\n          color: this.chartColor,\n          tooltipFormatter: this.tooltipFormatter,\n          _once: this._once\n        };\n        if (this.beforeConfig) data = this.beforeConfig(data);\n\n        var options = this.chartHandler(columns, rows, this.settings, extra);\n        if (options) {\n          if (typeof options.then === 'function') {\n            options.then(this.optionsHandler);\n          } else {\n            this.optionsHandler(options);\n          }\n        }\n      },\n      nextTickResize: function nextTickResize() {\n        this.$nextTick(this.resize);\n      },\n      resize: function resize() {\n        if (!this.cancelResizeCheck) {\n          if (this.$el && this.$el.clientWidth && this.$el.clientHeight) {\n            this.echartsResize();\n          }\n        } else {\n          this.echartsResize();\n        }\n      },\n      echartsResize: function echartsResize() {\n        this.echarts && this.echarts.resize();\n      },\n      optionsHandler: function optionsHandler(options) {\n        var _this = this;\n\n        // legend\n        if (this.legendPosition && options.legend) {\n          options.legend[this.legendPosition] = 10;\n          if (~['left', 'right'].indexOf(this.legendPosition)) {\n            options.legend.top = 'middle';\n            options.legend.orient = 'vertical';\n          }\n        }\n        // color\n        options.color = this.chartColor;\n        // echarts self settings\n        ECHARTS_SETTINGS.forEach(function (setting) {\n          if (_this[setting]) options[setting] = _this[setting];\n        });\n        // animation\n        if (this.animation) setAnimation(options, this.animation);\n        // marks\n        if (this.markArea || this.markLine || this.markPoint) {\n          var marks = {\n            markArea: this.markArea,\n            markLine: this.markLine,\n            markPoint: this.markPoint\n          };\n          var series = options.series;\n          if (isArray(series)) {\n            series.forEach(function (item) {\n              setMark(item, marks);\n            });\n          } else if (isObject(series)) {\n            setMark(series, marks);\n          }\n        }\n        // change inited echarts settings\n        if (this.extend) setExtend(options, this.extend);\n        if (this.afterConfig) options = this.afterConfig(options);\n        var setOptionOpts = this.setOptionOpts;\n        // map chart not merge\n        if ((this.settings.bmap || this.settings.amap) && !isObject(setOptionOpts)) {\n          setOptionOpts = false;\n        }\n        // exclude unchange options\n        if (this.notSetUnchange && this.notSetUnchange.length) {\n          this.notSetUnchange.forEach(function (item) {\n            var value = options[item];\n            if (value) {\n              if (isEqual(value, _this._store[item])) {\n                options[item] = undefined;\n              } else {\n                _this._store[item] = cloneDeep(value);\n              }\n            }\n          });\n          if (isObject(setOptionOpts)) {\n            setOptionOpts.notMerge = false;\n          } else {\n            setOptionOpts = false;\n          }\n        }\n        if (this._isDestroyed) return;\n        if (this.log) console.log(options);\n        this.echarts.setOption(options, setOptionOpts);\n        this.$emit('ready', this.echarts, options, echartsLib);\n        if (!this._once['ready-once']) {\n          this._once['ready-once'] = true;\n          this.$emit('ready-once', this.echarts, options, echartsLib);\n        }\n        if (this.judgeWidth) this.judgeWidthHandler(options);\n        if (this.afterSetOption) this.afterSetOption(this.echarts, options, echartsLib);\n        if (this.afterSetOptionOnce && !this._once['afterSetOptionOnce']) {\n          this._once['afterSetOptionOnce'] = true;\n          this.afterSetOptionOnce(this.echarts, options, echartsLib);\n        }\n      },\n      judgeWidthHandler: function judgeWidthHandler(options) {\n        var _this2 = this;\n\n        var widthChangeDelay = this.widthChangeDelay,\n            resize = this.resize;\n\n        if (this.$el.clientWidth || this.$el.clientHeight) {\n          resize();\n        } else {\n          this.$nextTick(function (_) {\n            if (_this2.$el.clientWidth || _this2.$el.clientHeight) {\n              resize();\n            } else {\n              setTimeout(function (_) {\n                resize();\n                if (!_this2.$el.clientWidth || !_this2.$el.clientHeight) {\n                  console.warn(' Can\\'t get dom width or height ');\n                }\n              }, widthChangeDelay);\n            }\n          });\n        }\n      },\n      resizeableHandler: function resizeableHandler(resizeable) {\n        if (resizeable && !this._once.onresize) this.addResizeListener();\n        if (!resizeable && this._once.onresize) this.removeResizeListener();\n      },\n      init: function init() {\n        if (this.echarts) return;\n        var themeName = this.themeName || this.theme || DEFAULT_THEME;\n        this.echarts = echartsLib.init(this.$refs.canvas, themeName, this.initOptions);\n        if (this.data) this.changeHandler();\n        this.createEventProxy();\n        if (this.resizeable) this.addResizeListener();\n      },\n      addResizeListener: function addResizeListener() {\n        window.addEventListener('resize', this.resizeHandler);\n        this._once.onresize = true;\n      },\n      removeResizeListener: function removeResizeListener() {\n        window.removeEventListener('resize', this.resizeHandler);\n        this._once.onresize = false;\n      },\n      addWatchToProps: function addWatchToProps() {\n        var _this3 = this;\n\n        var watchedVariable = this._watchers.map(function (watcher) {\n          return watcher.expression;\n        });\n        Object.keys(this.$props).forEach(function (prop) {\n          if (!~watchedVariable.indexOf(prop) && !~STATIC_PROPS.indexOf(prop)) {\n            var opts = {};\n            if (~['[object Object]', '[object Array]'].indexOf(getType(_this3.$props[prop]))) {\n              opts.deep = true;\n            }\n            _this3.$watch(prop, function () {\n              _this3.changeHandler();\n            }, opts);\n          }\n        });\n      },\n      createEventProxy: function createEventProxy() {\n        var _this4 = this;\n\n        // 只要用户使用 on 方法绑定的事件都做一层代理，\n        // 是否真正执行相应的事件方法取决于该方法是否仍然存在 events 中\n        // 实现 events 的动态响应\n        var self = this;\n        var keys = Object.keys(this.events || {});\n        keys.length && keys.forEach(function (ev) {\n          if (_this4.registeredEvents.indexOf(ev) === -1) {\n            _this4.registeredEvents.push(ev);\n            _this4.echarts.on(ev, function (ev) {\n              return function () {\n                if (ev in self.events) {\n                  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n                    args[_key] = arguments[_key];\n                  }\n\n                  self.events[ev].apply(null, args);\n                }\n              };\n            }(ev));\n          }\n        });\n      },\n      themeChange: function themeChange(theme) {\n        this.clean();\n        this.echarts = null;\n        this.init();\n      },\n      clean: function clean() {\n        if (this.resizeable) this.removeResizeListener();\n        this.echarts.dispose();\n      }\n    },\n\n    created: function created() {\n      this.echarts = null;\n      this.registeredEvents = [];\n      this._once = {};\n      this._store = {};\n      this.resizeHandler = debounce(this.resize, this.resizeDelay);\n      this.changeHandler = debounce(this.dataHandler, this.changeDelay);\n      this.addWatchToProps();\n    },\n    mounted: function mounted() {\n      this.init();\n    },\n    beforeDestroy: function beforeDestroy() {\n      this.clean();\n    },\n\n\n    _numerify: numerify\n  };\n\n  var index = _extends({}, Core, {\n    name: 'VeGauge',\n    data: function data() {\n      this.chartHandler = gauge$1;\n      return {};\n    }\n  });\n\n  return index;\n\n})));\n"],"sourceRoot":""}