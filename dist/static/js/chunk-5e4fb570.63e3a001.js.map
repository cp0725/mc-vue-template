{"version":3,"sources":["webpack:///./node_modules/_echarts@4.1.0@echarts/lib/component/axisPointer/globalListener.js","webpack:///./node_modules/_echarts@4.1.0@echarts/lib/layout/barGrid.js","webpack:///./node_modules/_zrender@4.0.4@zrender/lib/animation/easing.js","webpack:///./node_modules/_echarts@4.1.0@echarts/lib/scale/helper.js","webpack:///./node_modules/_echarts@4.1.0@echarts/lib/data/DataDiffer.js","webpack:///./node_modules/_echarts@4.1.0@echarts/lib/util/number.js","webpack:///./node_modules/_echarts@4.1.0@echarts/lib/model/Component.js","webpack:///./node_modules/_zrender@4.0.4@zrender/lib/contain/quadratic.js","webpack:///./node_modules/_zrender@4.0.4@zrender/lib/contain/arc.js","webpack:///./node_modules/_echarts@4.1.0@echarts/lib/component/axisPointer/CartesianAxisPointer.js","webpack:///./node_modules/_zrender@4.0.4@zrender/lib/graphic/Gradient.js","webpack:///./node_modules/_zrender@4.0.4@zrender/lib/graphic/IncrementalDisplayable.js","webpack:///./node_modules/_zrender@4.0.4@zrender/lib/graphic/helper/smoothBezier.js","webpack:///./node_modules/_echarts@4.1.0@echarts/lib/component/legend/legendFilter.js","webpack:///./node_modules/_zrender@4.0.4@zrender/lib/contain/text.js","webpack:///./node_modules/_zrender@4.0.4@zrender/lib/container/Group.js","webpack:///./node_modules/_echarts@4.1.0@echarts/lib/util/graphic.js","webpack:///./node_modules/_echarts@4.1.0@echarts/lib/data/helper/dimensionHelper.js","webpack:///./node_modules/_zrender@4.0.4@zrender/lib/core/BoundingRect.js","webpack:///./node_modules/_zrender@4.0.4@zrender/lib/core/env.js","webpack:///./node_modules/_echarts@4.1.0@echarts/lib/util/clazz.js","webpack:///./node_modules/_zrender@4.0.4@zrender/lib/contain/path.js","webpack:///./node_modules/_echarts@4.1.0@echarts/lib/model/Model.js","webpack:///./node_modules/_zrender@4.0.4@zrender/lib/graphic/shape/Polygon.js","webpack:///./node_modules/_echarts@4.1.0@echarts/lib/ExtensionAPI.js","webpack:///./node_modules/_zrender@4.0.4@zrender/lib/contain/polygon.js","webpack:///./node_modules/_zrender@4.0.4@zrender/lib/mixin/Transformable.js","webpack:///./node_modules/_zrender@4.0.4@zrender/lib/graphic/shape/BezierCurve.js","webpack:///./node_modules/_echarts@4.1.0@echarts/lib/coord/geo/Region.js","webpack:///./node_modules/_echarts@4.1.0@echarts/lib/component/legend/LegendModel.js","webpack:///./node_modules/_echarts@4.1.0@echarts/lib/component/tooltip.js","webpack:///./node_modules/_zrender@4.0.4@zrender/lib/tool/color.js","webpack:///./node_modules/_echarts@4.1.0@echarts/lib/view/Chart.js","webpack:///./node_modules/_echarts@4.1.0@echarts/lib/util/symbol.js","webpack:///./node_modules/_echarts@4.1.0@echarts/lib/model/mixin/lineStyle.js","webpack:///./node_modules/_echarts@4.1.0@echarts/lib/processor/dataStack.js","webpack:///./node_modules/_zrender@4.0.4@zrender/lib/contain/cubic.js","webpack:///./node_modules/_echarts@4.1.0@echarts/lib/component/helper/listComponent.js","webpack:///./node_modules/_echarts@4.1.0@echarts/lib/preprocessor/backwardCompat.js","webpack:///./node_modules/_echarts@4.1.0@echarts/lib/theme/dark.js","webpack:///./node_modules/_echarts@4.1.0@echarts/lib/model/OptionManager.js","webpack:///./node_modules/_zrender@4.0.4@zrender/lib/mixin/Draggable.js","webpack:///./node_modules/_zrender@4.0.4@zrender/lib/core/event.js","webpack:///./node_modules/_echarts@4.1.0@echarts/lib/model/referHelper.js","webpack:///./node_modules/_zrender@4.0.4@zrender/lib/graphic/CompoundPath.js","webpack:///./node_modules/_echarts@4.1.0@echarts/lib/data/Source.js","webpack:///./node_modules/_zrender@4.0.4@zrender/lib/graphic/LinearGradient.js","webpack:///./node_modules/_echarts@4.1.0@echarts/lib/scale/Time.js","webpack:///./node_modules/_echarts@4.1.0@echarts/lib/component/axis/AxisView.js","webpack:///./node_modules/_zrender@4.0.4@zrender/lib/mixin/Eventful.js","webpack:///./node_modules/_zrender@4.0.4@zrender/lib/graphic/shape/Polyline.js","webpack:///./node_modules/_zrender@4.0.4@zrender/lib/core/log.js","webpack:///./node_modules/_zrender@4.0.4@zrender/lib/core/util.js","webpack:///./node_modules/_echarts@4.1.0@echarts/lib/util/throttle.js","webpack:///./node_modules/_echarts@4.1.0@echarts/lib/model/mixin/itemStyle.js","webpack:///./node_modules/_zrender@4.0.4@zrender/lib/zrender.js","webpack:///./node_modules/_zrender@4.0.4@zrender/lib/contain/util.js","webpack:///./node_modules/_echarts@4.1.0@echarts/lib/CoordinateSystem.js","webpack:///./node_modules/_zrender@4.0.4@zrender/lib/core/matrix.js","webpack:///./node_modules/_echarts@4.1.0@echarts/lib/visual/aria.js","webpack:///./node_modules/_echarts@4.1.0@echarts/lib/util/format.js","webpack:///./node_modules/_echarts@4.1.0@echarts/lib/view/Component.js","webpack:///./node_modules/_echarts@4.1.0@echarts/lib/coord/axisTickLabelBuilder.js","webpack:///./node_modules/_zrender@4.0.4@zrender/lib/animation/Animator.js","webpack:///./node_modules/_echarts@4.1.0@echarts/lib/model/mixin/areaStyle.js","webpack:///./node_modules/_echarts@4.1.0@echarts/lib/util/layout.js","webpack:///./node_modules/_zrender@4.0.4@zrender/lib/graphic/Image.js","webpack:///./node_modules/_zrender@4.0.4@zrender/lib/graphic/shape/Rect.js","webpack:///./node_modules/_echarts@4.1.0@echarts/lib/model/Global.js","webpack:///./node_modules/_echarts@4.1.0@echarts/lib/coord/Axis.js","webpack:///./node_modules/_zrender@4.0.4@zrender/lib/config.js","webpack:///./node_modules/_echarts@4.1.0@echarts/lib/model/globalDefault.js","webpack:///./node_modules/_echarts@4.1.0@echarts/lib/component/tooltip/TooltipContent.js","webpack:///./node_modules/_zrender@4.0.4@zrender/lib/graphic/helper/roundRect.js","webpack:///./node_modules/_echarts@4.1.0@echarts/lib/helper.js","webpack:///./node_modules/_echarts@4.1.0@echarts/lib/data/helper/sourceType.js","webpack:///./node_modules/_echarts@4.1.0@echarts/lib/model/mixin/dataFormat.js","webpack:///./node_modules/_echarts@4.1.0@echarts/lib/model/Series.js","webpack:///./node_modules/_zrender@4.0.4@zrender/lib/contain/line.js","webpack:///./node_modules/_zrender@4.0.4@zrender/lib/graphic/shape/Sector.js","webpack:///./node_modules/_echarts@4.1.0@echarts/lib/chart/helper/createListFromArray.js","webpack:///./node_modules/_echarts@4.1.0@echarts/lib/data/helper/sourceHelper.js","webpack:///./node_modules/_echarts@4.1.0@echarts/lib/scale/Interval.js","webpack:///./node_modules/_echarts@4.1.0@echarts/lib/visual/seriesColor.js","webpack:///./node_modules/_zrender@4.0.4@zrender/lib/animation/requestAnimationFrame.js","webpack:///./node_modules/_echarts@4.1.0@echarts/lib/config.js","webpack:///./node_modules/_echarts@4.1.0@echarts/lib/component/axisPointer/viewHelper.js","webpack:///./node_modules/_echarts@4.1.0@echarts/lib/component/tooltip/TooltipModel.js","webpack:///./node_modules/_echarts@4.1.0@echarts/lib/loading/default.js","webpack:///./node_modules/_echarts@4.1.0@echarts/lib/coord/geo/parseGeoJson.js","webpack:///./node_modules/_echarts@4.1.0@echarts/lib/scale/Ordinal.js","webpack:///./node_modules/_zrender@4.0.4@zrender/lib/graphic/helper/poly.js","webpack:///./node_modules/_zrender@4.0.4@zrender/lib/graphic/helper/image.js","webpack:///./node_modules/_zrender@4.0.4@zrender/lib/core/PathProxy.js","webpack:///./node_modules/_echarts@4.1.0@echarts/lib/component/axisPointer/BaseAxisPointer.js","webpack:///./node_modules/_echarts@4.1.0@echarts/lib/component/axisPointer/AxisPointerView.js","webpack:///./node_modules/_echarts@4.1.0@echarts/lib/component/axisPointer/findPointFromSeries.js","webpack:///./node_modules/_zrender@4.0.4@zrender/lib/dom/HandlerProxy.js","webpack:///./node_modules/_echarts@4.1.0@echarts/lib/scale/Log.js","webpack:///./node_modules/_echarts@4.1.0@echarts/lib/data/helper/dataProvider.js","webpack:///./node_modules/_zrender@4.0.4@zrender/lib/graphic/helper/smoothSpline.js","webpack:///./node_modules/_echarts@4.1.0@echarts/lib/component/axisPointer.js","webpack:///./node_modules/_zrender@4.0.4@zrender/lib/graphic/helper/fixClipWithShadow.js","webpack:///./node_modules/_zrender@4.0.4@zrender/lib/graphic/Text.js","webpack:///./node_modules/_zrender@4.0.4@zrender/lib/graphic/shape/Line.js","webpack:///./node_modules/_zrender@4.0.4@zrender/lib/Layer.js","webpack:///./node_modules/_echarts@4.1.0@echarts/lib/data/helper/completeDimensions.js","webpack:///./node_modules/_zrender@4.0.4@zrender/lib/core/curve.js","webpack:///./node_modules/_echarts@4.1.0@echarts/lib/data/OrdinalMeta.js","webpack:///./node_modules/_echarts@4.1.0@echarts/lib/component/legend/legendAction.js","webpack:///./node_modules/_zrender@4.0.4@zrender/lib/core/guid.js","webpack:///./node_modules/_zrender@4.0.4@zrender/lib/graphic/shape/Ring.js","webpack:///./node_modules/_zrender@4.0.4@zrender/lib/core/GestureMgr.js","webpack:///./node_modules/_zrender@4.0.4@zrender/lib/animation/Animation.js","webpack:///./node_modules/_echarts@4.1.0@echarts/lib/component/axisPointer/AxisPointerModel.js","webpack:///./node_modules/_echarts@4.1.0@echarts/lib/coord/cartesian/cartesianAxisHelper.js","webpack:///./node_modules/_zrender@4.0.4@zrender/lib/core/timsort.js","webpack:///./node_modules/_echarts@4.1.0@echarts/lib/component/axis/AxisBuilder.js","webpack:///./node_modules/_zrender@4.0.4@zrender/lib/graphic/shape/Arc.js","webpack:///./node_modules/_zrender@4.0.4@zrender/lib/graphic/Path.js","webpack:///./node_modules/_echarts@4.1.0@echarts/lib/theme/light.js","webpack:///./node_modules/_echarts@4.1.0@echarts/lib/component/tooltip/TooltipView.js","webpack:///./node_modules/_zrender@4.0.4@zrender/lib/graphic/RadialGradient.js","webpack:///./node_modules/_zrender@4.0.4@zrender/lib/tool/path.js","webpack:///./node_modules/_echarts@4.1.0@echarts/lib/coord/axisHelper.js","webpack:///./node_modules/_zrender@4.0.4@zrender/lib/Handler.js","webpack:///./node_modules/_echarts@4.1.0@echarts/lib/model/mixin/colorPalette.js","webpack:///./node_modules/_echarts@4.1.0@echarts/lib/component/dataset.js","webpack:///./node_modules/_zrender@4.0.4@zrender/lib/mixin/Animatable.js","webpack:///./node_modules/_echarts@4.1.0@echarts/lib/chart/helper/createRenderPlanner.js","webpack:///./node_modules/_echarts@4.1.0@echarts/lib/util/model.js","webpack:///./node_modules/_echarts@4.1.0@echarts/lib/lang.js","webpack:///./node_modules/_echarts@4.1.0@echarts/lib/export.js","webpack:///./node_modules/_zrender@4.0.4@zrender/lib/graphic/helper/fixShadow.js","webpack:///./node_modules/_echarts@4.1.0@echarts/lib/util/component.js","webpack:///./node_modules/_zrender@4.0.4@zrender/lib/graphic/shape/Circle.js","webpack:///./node_modules/_echarts@4.1.0@echarts/lib/data/List.js","webpack:///./node_modules/_zrender@4.0.4@zrender/lib/tool/transformPath.js","webpack:///./node_modules/_zrender@4.0.4@zrender/lib/graphic/Displayable.js","webpack:///./node_modules/_echarts@4.1.0@echarts/lib/data/helper/dataStackHelper.js","webpack:///./node_modules/_echarts@4.1.0@echarts/lib/coord/axisModelCommonMixin.js","webpack:///./node_modules/_echarts@4.1.0@echarts/lib/scale/Scale.js","webpack:///./node_modules/_zrender@4.0.4@zrender/lib/graphic/Style.js","webpack:///./node_modules/_echarts@4.1.0@echarts/lib/echarts.js","webpack:///./node_modules/_zrender@4.0.4@zrender/lib/Painter.js","webpack:///./node_modules/_zrender@4.0.4@zrender/lib/graphic/mixin/RectText.js","webpack:///./node_modules/_zrender@4.0.4@zrender/lib/Element.js","webpack:///./node_modules/_echarts@4.1.0@echarts/lib/model/mixin/textStyle.js","webpack:///./node_modules/_zrender@4.0.4@zrender/lib/graphic/Pattern.js","webpack:///./node_modules/_zrender@4.0.4@zrender/lib/Storage.js","webpack:///./node_modules/_echarts@4.1.0@echarts/lib/data/helper/createDimensions.js","webpack:///./node_modules/_echarts@4.1.0@echarts/lib/component/legend/LegendView.js","webpack:///./node_modules/_zrender@4.0.4@zrender/lib/core/vector.js","webpack:///./node_modules/_echarts@4.1.0@echarts/lib/component/axisPointer/axisTrigger.js","webpack:///./node_modules/_zrender@4.0.4@zrender/lib/core/LRU.js","webpack:///./node_modules/_echarts@4.1.0@echarts/lib/preprocessor/helper/compatStyle.js","webpack:///./node_modules/_echarts@4.1.0@echarts/lib/component/axisPointer/modelHelper.js","webpack:///./node_modules/_echarts@4.1.0@echarts/lib/model/mixin/makeStyleMapper.js","webpack:///./node_modules/_echarts@4.1.0@echarts/lib/component/legend.js","webpack:///./node_modules/_echarts@4.1.0@echarts/lib/stream/task.js","webpack:///./node_modules/_zrender@4.0.4@zrender/lib/core/bbox.js","webpack:///./node_modules/_zrender@4.0.4@zrender/lib/contain/windingLine.js","webpack:///./node_modules/_echarts@4.1.0@echarts/lib/stream/Scheduler.js","webpack:///./node_modules/_zrender@4.0.4@zrender/lib/animation/Clip.js","webpack:///./node_modules/_echarts@4.1.0@echarts/lib/model/mixin/boxLayout.js","webpack:///./node_modules/_zrender@4.0.4@zrender/lib/graphic/helper/text.js"],"names":["zrUtil","__webpack_require__","env","_model","makeInner","inner","each","register","key","api","handler","node","zr","getZr","records","initGlobalListeners","record","useHandler","eventType","cb","on","e","dis","makeDispatchAction","dispatchAction","dispatchTooltipFinally","pendings","initialized","curry","doEnter","onLeave","actuallyPayload","showLen","showTip","length","hideLen","hideTip","currTrigger","payload","pendingList","type","push","unregister","exports","_number","parsePercent","_dataStackHelper","isDimensionStacked","createRenderPlanner","STACK_PREFIX","LARGE_BAR_MIN_WIDTH","LargeArr","Float32Array","Array","getSeriesStackId","seriesModel","get","seriesIndex","getAxisKey","axis","dim","index","getLayoutOnAxis","opt","params","baseAxis","axisKey","bandWidth","getBandWidth","i","count","defaults","stackId","widthAndOffsets","doCalBarWidthAndOffset","result","item","offsetCenter","offset","width","prepareLayoutBarSeries","seriesType","ecModel","seriesModels","eachSeriesByType","isOnCartesian","isInLargeMode","makeColumnLayout","barSeries","seriesInfoList","data","getData","cartesian","coordinateSystem","getBaseAxis","axisExtent","getExtent","Math","abs","barWidth","barMaxWidth","barGap","barCategoryGap","columnsMap","seriesInfo","idx","columnsOnAxis","remainedWidth","autoWidthCount","categoryGap","gap","stacks","maxWidth","min","coordSysName","barGapPercent","autoWidth","max","column","stack","lastColumn","widthSum","retrieveColumnLayout","barWidthAndOffset","layout","lastStackCoords","lastStackCoordsOrigin","columnLayoutInfo","columnOffset","columnWidth","valueAxis","getOtherAxis","barMinHeight","setLayout","size","valueDim","mapDimension","baseDim","stacked","isValueAxisH","isHorizontal","valueAxisStart","getValueAxisStart","len","value","baseValue","isNaN","x","y","height","sign","baseCoord","p","n","coord","dataToPoint","setItemLayout","this","largeLayout","plan","reset","valueAxisHorizontal","valueDimIdx","progress","dataIndex","largePoints","valuePair","next","pipelineContext","large","indexOf","getAxesOnZeroOf","toGlobalCoord","dataToCoord","getGlobalExtent","easing","linear","k","quadraticIn","quadraticOut","quadraticInOut","cubicIn","cubicOut","cubicInOut","quarticIn","quarticOut","quarticInOut","quinticIn","quinticOut","quinticInOut","sinusoidalIn","cos","PI","sinusoidalOut","sin","sinusoidalInOut","exponentialIn","pow","exponentialOut","exponentialInOut","circularIn","sqrt","circularOut","circularInOut","elasticIn","s","a","asin","elasticOut","elasticInOut","backIn","backOut","backInOut","bounceIn","bounceOut","bounceInOut","_default","module","numberUtil","roundNumber","round","intervalScaleNiceTicks","extent","splitNumber","minInterval","maxInterval","span","interval","nice","precision","intervalPrecision","getIntervalPrecision","niceTickExtent","ceil","floor","fixExtent","getPrecisionSafe","clamp","isFinite","intervalScaleGetTicks","ticks","safeLimit","tick","defaultKeyGetter","DataDiffer","oldArr","newArr","oldKeyGetter","newKeyGetter","context","_old","_new","_oldKeyGetter","_newKeyGetter","initIndexMap","arr","map","keyArr","keyGetterName","dataDiffer","existence","prototype","constructor","add","func","_add","update","_update","remove","_remove","execute","oldDataIndexMap","newDataIndexMap","oldDataKeyArr","newDataKeyArr","unshift","hasOwnProperty","j","RADIAN_EPSILON","_trim","str","replace","linearMap","val","domain","range","subDomain","subRange","percent","all","match","parseFloat","NaN","returnStr","toFixed","asc","sort","b","getPrecision","toString","eIndex","slice","dotIndex","getPixelPrecision","dataExtent","pixelExtent","log","LN10","dataQuantity","sizeQuantity","getPercentWithPrecision","valueList","sum","reduce","acc","digits","votesPerQuota","targetSeats","seats","votes","currentSum","remainder","Number","NEGATIVE_INFINITY","maxId","MAX_SAFE_INTEGER","remRadian","radian","pi2","isRadianAroundZero","TIME_REG","parseDate","Date","exec","hour","toUpperCase","UTC","quantity","quantityExponent","nf","exponent","exp10","f","reformIntervals","list","littleThan","curr","Infinity","currClose","close","lg","splice","isNumeric","v","Model","componentUtil","_clazz","enableClassManagement","parseClassType","boxLayoutMixin","ComponentModel","extend","id","name","mainType","subType","componentIndex","defaultOption","dependentModels","uid","layoutMode","$constructor","option","parentModel","extraOpt","call","getUID","init","mergeDefaultAndTheme","inputPositionParams","getLayoutParams","themeModel","getTheme","merge","getDefaultOption","mergeLayoutParam","mergeOption","optionUpdated","newCptOption","isInit","fields","optList","Class","superClass","getReferringComponents","queryComponents","getDependencies","componentType","deps","getClassesByMainType","Clazz","concat","dependencies","main","registerWhenExtend","enableSubTypeDefaulter","enableTopologicalTravel","mixin","_curve","quadraticProjectPoint","containStroke","x0","y0","x1","y1","x2","y2","lineWidth","_l","d","_util","normalizeRadian","PI2","cx","cy","r","startAngle","endAngle","anticlockwise","tmp","angle","atan2","graphic","BaseAxisPointer","viewHelper","cartesianAxisHelper","AxisView","CartesianAxisPointer","makeElOption","elOption","axisModel","axisPointerModel","grid","axisPointerType","otherExtent","getCartesian","pixelValue","elStyle","buildElStyle","pointerOption","pointerShapeBuilder","style","graphicKey","pointer","layoutInfo","model","buildCartesianSingleLabelElOption","getHandleTransform","labelInside","labelMargin","position","getTransformedPosition","rotation","labelDirection","updateHandleTransform","transform","delta","dimIndex","currPosition","cursorOtherValue","cursorPoint","tooltipOptions","verticalAlign","align","tooltipOption","line","targetShape","makeLineShape","getAxisDimIndex","subPixelOptimizeLine","shape","shadow","makeRectShape","registerAxisPointerClass","Gradient","colorStops","addColorStop","color","inherits","Displayble","BoundingRect","IncrementalDisplayble","opts","_displayables","_temporaryDisplayables","_cursor","notClear","incremental","clearDisplaybles","dirty","addDisplayable","displayable","notPersistent","addDisplayables","displayables","eachPendingDisplayable","updateTransform","parent","brush","ctx","prevEl","beforeBrush","afterBrush","m","getBoundingRect","_rect","rect","childRect","clone","needLocalTransform","applyTransform","getLocalTransform","union","contain","localPos","transformCoordToLocal","_vector","v2Min","v2Max","v2Scale","scale","v2Distance","distance","v2Add","v2Clone","v2Sub","sub","points","smooth","isLoop","constraint","prevPoint","nextPoint","cps","v1","v2","point","d0","d1","cp0","cp1","shift","legendModels","findComponents","filterSeries","series","isSelected","imageHelper","getContext","retrieve2","retrieve3","trim","textWidthCache","textWidthCacheCounter","TEXT_CACHE_MAX","STYLE_REG","DEFAULT_FONT","methods","$override","fn","getWidth","text","font","textLines","split","l","measureText","textAlign","textVerticalAlign","textPadding","rich","truncate","getRichTextRect","getPlainTextRect","contentBlock","parsePlainText","outerWidth","outerHeight","adjustTextX","adjustTextY","lineHeight","parseRichText","adjustTextPositionOnRect","textPosition","halfHeight","truncateText","containerWidth","ellipsis","options","prepareTruncateOptions","truncateSingleLine","join","maxIterations","minChar","cnCharWidth","ascCharWidth","placeholder","contentWidth","ellipsisWidth","textLine","subLength","estimateLength","substr","charCode","charCodeAt","getLineHeight","padding","lines","truncOuterHeight","truncOuterWidth","lastIndex","matchedIndex","pushTokens","substring","contentHeight","stlPadding","truncateWidth","truncateHeight","tokens","token","tokenStyle","styleName","tokenHeight","textHeight","textLineHeight","textWidth","tokenWidth","tokenWidthNotSpecified","charAt","percentWidth","textBackgroundColor","bgImg","image","findExistImage","isImageReady","paddingW","remianTruncWidth","parseInt","block","isEmptyStr","strs","isLineHolder","tokensLen","makeFont","fontSize","fontFamily","fontStyle","fontWeight","textFont","Element","Group","_children","__storage","__dirty","isGroup","silent","children","childAt","childOfName","childCount","child","_doAdd","addBefore","nextSibling","storage","__zr","addToStorage","addChildrenToStorage","refresh","delFromStorage","delChildrenFromStorage","removeAll","eachChild","traverse","includeChildren","tmpRect","tmpMat","ignore","invisible","copy","pathTool","colorTool","matrix","vector","Path","Transformable","ZImage","Image","Text","Circle","Sector","Ring","Polygon","Polyline","Rect","Line","BezierCurve","Arc","CompoundPath","LinearGradient","RadialGradient","IncrementalDisplayable","mathMax","mathMin","EMPTY_OBJ","extendShape","extendPath","pathData","extendFromString","makePath","path","createFromString","boundingRect","centerGraphic","resizePath","makeImage","imageUrl","onload","img","setStyle","aspect","mergePath","pathRect","calculateTransform","param","subPixelOptimize","subPixelOptimizeRect","originX","originY","originWidth","originHeight","positiveOrNegative","doubledPosition","hasFillOrStroke","fillOrStroke","liftColor","lift","cacheElementStl","el","__hoverStlDirty","stroke","fill","hoverStyle","__hoverStl","normalStyle","__normalStl","doSingleEnterHover","__isHover","useHoverLayer","addHover","insideRollbackOpt","rollbackInsideStyle","extendFrom","applyInsideStyle","insideOriginalTextPosition","textFill","autoColor","z2","doSingleLeaveHover","normalStl","removeHover","doEnterHover","doLeaveHover","setElementHoverStl","hoverStl","onElementMouseOver","__hoverSilentOnTouch","zrByTouch","__isEmphasis","onElementMouseOut","enterEmphasis","leaveEmphasis","setHoverStyle","hoverSilentOnTouch","setLabelStyle","emphasisStyle","normalModel","emphasisModel","normalSpecified","emphasisSpecified","baseText","labelFetcher","labelDataIndex","labelDimIndex","showNormal","getShallow","showEmphasis","getFormattedLabel","isFunction","defaultText","normalStyleText","emphasisStyleText","setTextStyle","textStyle","textStyleModel","specifiedTextStyle","isEmphasis","setTextStyleCommon","host","setText","labelModel","defaultColor","isRectText","textOffset","labelRotate","textRotation","textDistance","richResult","globalTextStyle","richItemNames","getRichItemNames","richTextStyle","getModel","setTokenTextStyle","forceRich","richItemNameMap","isBlock","getAutoColor","textStroke","textBorderColor","textStrokeWidth","textBorderWidth","originalTextPosition","insideRollback","textTag","disableBox","textBorderRadius","textBoxShadowColor","textBoxShadowBlur","textBoxShadowOffsetX","textBoxShadowOffsetY","textShadowColor","textShadowBlur","textShadowOffsetX","textShadowOffsetY","useInsideStyle","getFont","gTextStyleModel","animateOrSetProps","isUpdate","props","animatableModel","animationEnabled","isAnimationEnabled","postfix","duration","animationEasing","animationDelay","getAnimationDelayParams","animateTo","stopAnimation","attr","updateProps","initProps","getTransform","target","ancestor","mat","identity","mul","invert","isArrayLike","transformDirection","direction","hBase","vBase","vertex","groupTransition","g1","g2","elMap1","getElMap","anid","oldEl","newProp","getAnimatableProps","g","elMap","obj","clipPointsByRect","clipRectByRect","targetRect","createIcon","iconStr","rectHover","strokeNoScale","createHashMap","_config","assert","OTHER_DIMENSIONS","__DEV__","summarizeDimensions","summary","encode","notExtraCoordDimMap","defaultedLabel","defaultedTooltip","dimensions","dimName","dimItem","getDimensionInfo","coordDim","coordDimArr","coordDimIndex","isExtraCoord","set","mayLabelDimType","defaultTooltip","otherDim","otherDimArr","otherDims","dataDimsOnCoord","encodeFirstDimNotExtra","dimArr","encodeLabel","label","encodeTooltip","tooltip","getDimensionTypeByAxis","axisType","dimType","vec2","v2ApplyTransform","other","lt","rb","lb","rt","maxX","maxY","sx","sy","create","translate","intersect","ax0","ax1","ay0","ay1","bx0","bx1","by0","by1","plain","wx","getSystemInfoSync","browser","os","wxa","canvasSupported","svgSupported","touchEventsSupported","document","self","worker","navigator","detect","userAgent","ua","firefox","ie","edge","weChat","test","version","createElement","SVGRect","window","pointerEventsSupported","TYPE_DELIMITER","IS_CONTAINER","ret","checkClassType","enableClassExtend","RootClass","mandatoryMethods","proto","ExtendedClass","apply","arguments","superCall","superApply","classBase","enableClassCheck","Clz","classAttr","random","isInstance","methodName","args","entity","makeContainer","container","registerClass","getClass","componentMainType","throwWhenNotFound","Error","o","hasClass","getAllClassMainTypes","types","hasSubTypes","originalExtend","setReadOnly","properties","PathProxy","cubic","quadratic","arc","curve","windingLine","CMD","EPSILON","isAroundEqual","roots","extrema","swapExtrema","windingCubic","x3","y3","nRoots","cubicRootAt","y0_","y1_","w","nExtrema","t","unit","x_","cubicAt","cubicExtrema","windingQuadratic","quadraticRootAt","quadraticExtremum","y_","quadraticAt","windingArc","diff","dir","containPath","isStroke","xi","yi","cmd","M","L","C","Q","A","rx","ry","theta","dTheta","_x","R","Z","lineStyleMixin","areaStyleMixin","textStyleMixin","itemStyleMixin","doGet","pathArr","getParent","getParentMethod","ignoreParent","parsePath","thisParentModel","isEmpty","restoreData","Ctor","customizeGetParent","animation","polyHelper","smoothConstraint","buildPath","echartsAPIList","ExtensionAPI","chartInstance","bind","p2","p0","mIdentity","isNotAroundZero","origin","transformableProto","parentHasTransform","invTransform","setTransform","dpr","restoreTransform","tmpTransform","decomposeTransform","getGlobalScale","transformCoordToGlobal","rotate","quadraticSubdivide","cubicSubdivide","quadraticDerivativeAt","cubicDerivativeAt","out","someVectorAt","isTangent","cpx2","cpy2","cpx1","cpy1","moveTo","quadraticCurveTo","bezierCurveTo","pointAt","tangentAt","normalize","bbox","polygonContain","Region","geometries","cp","center","MAX_NUMBER","MAX_VALUE","min2","max2","exterior","fromPoints","loopGeo","interiors","transformTo","h","echarts","isNameSpecified","LegendModel","extendComponentModel","ignoreSize","selected","_updateData","legendData","_data","hasSelected","select","potentialData","availableNames","eachRawSeries","isPotential","seriesName","legendDataProvider","names","mapArray","getName","isSeriesFiltered","_availableNames","rawData","dataItem","selectedMode","unSelect","toggleSelected","zlevel","z","show","orient","left","top","backgroundColor","borderColor","borderRadius","borderWidth","itemGap","itemWidth","itemHeight","inactiveColor","registerAction","event","LRU","kCSSColorTable","transparent","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","clampCssByte","clampCssAngle","clampCssFloat","parseCssInt","parseCssFloat","cssHueToRgb","m1","m2","lerpNumber","setRgba","copyRgba","colorCache","lastRemovedArr","putToCache","colorStr","rgbaArr","put","parse","cached","toLowerCase","op","ep","fname","alpha","pop","hsla2rgba","iv","hsla","rgba","rgba2hsla","H","S","G","B","vMin","vMax","deltaR","deltaG","deltaB","level","colorArr","stringify","toHex","fastLerp","normalizedValue","colors","leftIndex","rightIndex","leftColor","rightColor","dv","fastMapToColor","lerp","fullOutput","mapToColor","modifyHSL","modifyAlpha","arrColor","clazzUtil","modelUtil","_task","createTask","renderPlanner","Chart","group","renderTask","renderTaskPlan","renderTaskReset","view","render","highlight","toggleHighlight","downplay","dispose","incrementalPrepareRender","incrementalRender","chartProto","elSetState","state","trigger","queryDataIndex","normalizeToArray","dataIdx","getItemGraphicEl","eachItemGraphicEl","progressiveRender","updateMethod","progressMethodMap","updateView","updateLayout","updateVisual","markUpdateMethod","forceFirstProgress","Triangle","lineTo","closePath","Diamond","Pin","dy","dx","tanX","tanY","cpLen","cpLen2","Arrow","symbolCtors","roundRect","square","circle","diamond","pin","arrow","triangle","symbolShapeMakers","symbolBuildProxies","SymbolClz","symbolType","inBundle","proxySymbol","symbolPathSetColor","innerColor","symbolStyle","symbolShape","__isEmptyBrush","createSymbol","keepAspect","symbolPath","setColor","makeStyleMapper","getLineStyle","excludes","lineDash","getLineDash","lineType","dotSize","dashSize","stackInfoMap","eachSeries","stackInfoList","stackInfo","stackResultDimension","getCalculationInfo","stackedOverDimension","stackedDimension","stackedByDimension","isStackedByIndex","setCalculationInfo","calculateStack","targetStackInfo","idxInStack","resultVal","resultNaN","dims","targetData","newData","v0","byValue","stackedDataRawIndex","getRawIndex","stackedOver","rawIndexOf","getByRawIndex","hostModel","setData","cubicProjectPoint","_layout","getLayoutRect","layoutBox","box","positionElement","formatUtil","componentModel","boxLayoutParams","getBoxLayoutParams","viewportSize","getHeight","makeBackground","normalizeCssArray","getItemStyle","isArray","isObject","compatStyle","overwrite","compatLayoutProperties","LAYOUT_PROPERTIES","prop","COMPATITABLE_COMPONENTS","isTheme","seriesOpt","clockWise","clockwise","pointerColor","dataRange","visualMap","componentName","contrastColor","axisCommon","axisLine","lineStyle","axisTick","axisLabel","splitLine","splitArea","areaStyle","colorPalette","theme","axisPointer","crossStyle","legend","title","toolbox","iconStyle","normal","dataZoom","timeline","itemStyle","controlStyle","timeAxis","logAxis","categoryAxis","symbol","graph","gauge","candlestick","color0","borderColor0","QUERY_REG","OptionManager","_api","_timelineOptions","_mediaList","_mediaDefault","_currentMediaIndices","_optionBackup","_newBaseOption","parseRawOption","rawOption","optionPreprocessorFuncs","isNew","mediaDefault","baseOption","timelineOptions","mediaList","timelineOpt","media","singleMedia","query","preProcess","applyMediaQuery","ecWidth","ecHeight","realMap","aspectratio","applicatable","matched","operator","realAttr","compare","real","expect","indicesEquals","indices1","indices2","oldOption","newOption","newCptOpt","oldCptOpt","mapResult","mappingToExists","exist","setOption","isTypedArray","setAsPrimitive","oldOptionBackup","newParsedOption","mountOption","isRecreate","optionBackup","getTimelineOption","timelineModel","getComponent","getCurrentIndex","getMediaOption","indices","Draggable","_dragStart","_drag","_dragEnd","topTarget","draggingTarget","draggable","_draggingTarget","dragging","offsetX","_y","offsetY","dispatchToElement","drift","dropTarget","findHover","lastDropTarget","_dropTarget","Eventful","Dispatcher","isDomLevel2","addEventListener","MOUSE_EVENT_REG","getBoundingClientRect","clientToLocal","calculate","defaultGetZrXY","layerX","zrX","zrY","layerY","clientX","clientY","normalizeEvent","isTouch","touch","targetTouches","changedTouches","zrDelta","wheelDelta","detail","button","which","undefined","attachEvent","removeEventListener","detachEvent","stop","preventDefault","stopPropagation","cancelBubble","returnValue","notLeftMouse","retrieve","getCoordSysDefineBySeries","coordSysDims","axisMap","categoryAxisMap","fetch","fetchers","cartesian2d","xAxisModel","yAxisModel","isCategory","firstCategoryDimIndex","singleAxis","singleAxisModel","polar","polarModel","radiusAxisModel","findAxisModel","angleAxisModel","geo","parallel","parallelModel","parallelAxisIndex","axisIndex","axisDim","paths","_updatePathDirty","dirtyPath","__dirtyPath","createPathProxy","setScale","_sourceType","SOURCE_FORMAT_ORIGINAL","SERIES_LAYOUT_BY_COLUMN","SOURCE_FORMAT_UNKNOWN","SOURCE_FORMAT_TYPED_ARRAY","SOURCE_FORMAT_KEYED_COLUMNS","Source","fromDataset","sourceFormat","seriesLayoutBy","dimensionsDefine","encodeDefine","startIndex","dimensionsDetectCount","seriesDataToSource","globalCoord","global","scaleHelper","IntervalScale","intervalScaleProto","mathCeil","mathFloor","ONE_SECOND","ONE_MINUTE","ONE_HOUR","ONE_DAY","bisect","lo","hi","mid","TimeScale","getLabel","stepLvl","_stepLvl","date","formatTime","getSetting","niceExtent","_extent","getFullYear","getMonth","getDate","niceTicks","_interval","fixMin","fixMax","approxTickNum","approxInterval","scaleLevelsLen","scaleLevels","yearSpan","yearStep","timezoneOffset","getTimezoneOffset","_niceExtent","useUTC","axisPointerModelHelper","extendComponentView","_axisPointer","axisPointerClass","fixValue","updateAxisPointer","force","disposeAxisPointer","axisView","forceRender","getAxisPointerClass","getAxisPointerModel","axisPointerClazz","clazz","arrySlice","_$handlers","one","_h","isSilent","off","newList","argLen","triggerWithContext","debugMode","console","BUILTIN_OBJECT","[object Function]","[object RegExp]","[object Date]","[object Error]","[object CanvasGradient]","[object CanvasPattern]","[object Image]","[object Canvas]","TYPED_ARRAY","[object Int8Array]","[object Uint8Array]","[object Uint8ClampedArray]","[object Int16Array]","[object Uint16Array]","[object Int32Array]","[object Uint32Array]","[object Float32Array]","[object Float64Array]","objToString","Object","arrayProto","nativeForEach","forEach","nativeFilter","filter","nativeSlice","nativeMap","nativeReduce","_ctx","source","typeStr","isPrimitive","from","isDom","targetProp","sourceProp","isBuiltInObject","mergeAll","targetAndSources","overlay","createCanvas","array","baseClazz","clazzPrototype","F","memo","find","isString","nodeType","ownerDocument","eqNaN","values","value0","value1","value2","Function","condition","message","primitiveKey","HashMap","isArr","thisMap","visit","concatArray","newArray","noop","removeKey","ORIGIN_METHOD","RATE","THROTTLE_TYPE","throttle","delay","debounce","currCall","scope","debounceNextCall","lastCall","lastExec","timer","getTime","thisDelay","thisDebounce","clearTimeout","setTimeout","clear","debounceDelay","createOrUpdate","fnAttr","rate","throttleType","originFn","lastThrottleType","lastRate","includes","getBorderLineDash","guid","Handler","Storage","Painter","Animation","HandlerProxy","useVML","painterCtors","canvas","instances","dom","ZRender","getInstance","registerPainter","delInstance","rendererType","renderer","vml","painter","handerProxy","getViewportRoot","root","stage","flush","start","_needsRefresh","oldDelFromStorage","oldAddToStorage","removeSelfFromZr","addSelfToZr","getId","addRoot","delRoot","configLayer","zLevel","config","setBackgroundColor","refreshImmediately","triggerRendered","_needsRefreshHover","refreshHoverImmediately","refreshHover","clearHover","resize","clearAnimation","pathToImage","setCursorStyle","cursorStyle","eventName","eventHandler","coordinateSystemCreators","CoordinateSystemManager","_coordinateSystems","coordinateSystems","creater","coordSys","getCoordinateSystems","coordinateSystemCreator","ArrayCtor","out0","out1","out2","out3","out4","out5","rad","aa","ac","atx","ab","ad","aty","st","ct","vx","vy","det","lang","_dataProvider","retrieveRawValue","ariaModel","setAttribute","seriesCnt","ariaLabel","maxDataCnt","maxSeriesCnt","displaySeriesCnt","getTitle","getConfig","seriesLabels","prefix","seriesCount","seriesLabel","seriesTpl","seriesId","getSeriesTypeName","displayCnt","dataLabels","keyValues","RegExp","userConfig","aria","typeNames","textContain","addCommas","toCamelCase","upperCaseFirst","group1","replaceReg","replaceMap","&","<",">","\"","'","encodeHTML","c","TPL_VAR_ALIAS","wrapVar","varName","seriesIdx","formatTpl","tpl","paramsList","seriesLen","$vars","alias","formatTplSimple","getTooltipMarker","extraCssText","pad","isUTC","utc","capitalFirst","getTextRect","Component","componentProto","_axisHelper","makeLabelFormatter","createAxisLabels","makeCategoryLabels","makeRealNumberLabels","createAxisTicks","tickModel","makeCategoryTicks","getTicks","getLabelModel","makeCategoryLabelsActually","isBlank","labels","labelCategoryInterval","numericLabelInterval","labelsCache","getListCache","optionLabelInterval","getOptionCategoryInterval","listCacheGet","makeLabelsByCustomizedCategoryInterval","makeAutoCategoryInterval","makeLabelsByNumericCategoryInterval","listCacheSet","tickCategoryInterval","ticksCache","optionTickInterval","labelsResult","labelItem","tickValue","labelFormatter","formattedLabel","rawLabel","cache","autoInterval","calculateCategoryInterval","fetchAutoCategoryIntervalCalculationParams","axisRotate","ordinalScale","ordinalExtent","tickCount","step","unitSpan","unitW","unitH","maxW","maxH","dw","dh","lastAutoInterval","lastTickCount","getRotate","categoryInterval","onlyTick","startTick","showMinMax","addItem","tVal","Clip","arraySlice","defaultGetter","defaultSetter","interpolateNumber","p1","interpolateString","interpolateArray","arrDim","len2","fillArr","arr0","arr1","arr0Len","arr1Len","isPreviousLarger","isArraySame","catmullRomInterpolateArray","p3","t2","t3","catmullRomInterpolate","cloneValue","rgba2String","getArrayDim","keyframes","lastValue","createTrackClip","animator","oneTrackDone","propName","forceAnimate","getter","_getter","setter","_setter","useSpline","trackLen","trackMaxTime","firstVal","isValueArray","isValueColor","isValueString","time","kfPercents","kfValues","prevValue","isAllValueEqual","colorArray","_target","lastFrame","lastFramePercent","onframe","frame","clip","life","loop","_loop","_delay","ondestroy","Animator","_tracks","_clipCount","_doneList","_onframeList","_clipList","when","tracks","during","callback","pause","_paused","resume","isPaused","_doneCallback","doneList","lastClip","clipCount","addClip","oldOnFrame","forwardToLast","clipList","removeClip","done","getClips","getAreaStyle","LOCATION_PARAMS","HV_NAMES","boxLayout","maxHeight","currentLineMaxSize","nextX","nextY","nextChild","nextChildRect","moveX","newline","moveY","vbox","hbox","getAvailableSize","positionInfo","containerRect","margin","containerHeight","right","bottom","verticalMargin","horizontalMargin","hv","boundingMode","elPos","sizeCalculable","hvIdx","targetOption","hResult","vResult","newParams","newValueCount","merged","mergedValueCount","enoughParamNumber","hasProp","hasValue","copyLayoutParams","Displayable","src","_image","createOrUpdateImage","sWidth","sHeight","drawImage","drawRectText","roundRectHelper","globalDefault","colorPaletteMixin","_sourceHelper","resetSourceDefaulter","OPTION_INNER_KEY","GlobalModel","optionManager","_theme","_optionManager","resetOption","optionChanged","initBase","timelineOption","mediaOptions","mediaOption","componentsMap","_componentsMap","newCptTypes","visitComponent","newCptOptionList","makeIdAndName","keyInfo","determineSubType","getComponentsByTypes","resultItem","ComponentModelClass","createSeriesIndices","componentOption","topologicalTravel","_seriesIndicesMap","_seriesIndices","getOption","isIdInner","cpts","isIdArray","cpt","isNameArray","filterBySubType","queryCond","getQueryCond","doFilter","q","indexAttr","idAttr","nameAttr","res","eachComponent","components","component","queryResult","getSeriesByName","oneSeries","getSeriesByIndex","getSeriesByType","getSeries","getSeriesCount","assertSeriesInitialized","rawSeriesIndex","eachRawSeriesByType","getCurrentSeriesIndices","filteredSeries","componentTypes","isNotTargetSeries","seiresIndex","mergeTheme","notMergeColorLayer","colorLayer","themeItem","existComponent","_axisTickLabelBuilder","NORMALIZED_EXTENT","Axis","inverse","onBand","fixExtentWithBands","nTick","fixOnBandTicksCoords","ticksCoords","alignWithLabel","ticksLen","last","ticksItem","containData","setExtent","end","coordToData","pointToData","getTicksCoords","getTickModel","getViewLabels","devicePixelRatio","platform","gradientColor","blendMode","animationDuration","animationDurationUpdate","animationEasingUpdate","animationThreshold","progressiveThreshold","progressive","hoverLayerThreshold","zrColor","eventUtil","vendors","gCssText","assembleTransition","transitionCurve","transitionText","vendorPrefix","assembleFont","cssText","getTextColor","assembleCssText","tooltipModel","transitionDuration","borderName","camelCase","TooltipContent","_zr","appendChild","_container","_show","_hideTimeout","onmouseenter","_enterable","_inContent","onmousemove","dispatch","onmouseleave","hideLater","_hideDelay","stl","currentStyle","defaultView","getComputedStyle","domStyle","display","innerHTML","setContent","content","setEnterable","enterable","getSize","clientWidth","clientHeight","viewportRootOffset","getViewportRootOffset","offsetLeft","offsetTop","hide","isShow","r1","r2","r3","r4","total","createListFromArray","axisHelper","axisModelCommonMixin","enableDataStack","getStackedDimension","_completeDimensions","completeDimensions","_createDimensions","createDimensions","_symbol","createList","getSource","dataStack","createScale","createScaleByModel","niceScaleExtent","mixinAxisModelCommonMethods","SOURCE_FORMAT_ARRAY_ROWS","SOURCE_FORMAT_OBJECT_ROWS","SERIES_LAYOUT_BY_ROW","_format","DIMENSION_LABEL_REG","getDataParams","dataType","rawValue","getRawValue","rawDataIndex","itemOpt","getRawDataItem","getItemVisual","componentSubType","marker","status","labelProp","itemModel","getItemModel","formatter","formatTooltip","dataFormatMixin","prepareSource","SeriesModel","visualColorAccessPath","dataTask","dataTaskCount","dataTaskReset","getInitialData","wrapData","dataBeforeProcessed","autoSeriesName","themeSubType","defaultEmphasis","fillDataTextStyle","newSeriesOption","appendData","getRawData","task","getCurrentTask","getLinkedData","modifyOutputEnd","setOutputEnd","outputData","multipleSeries","formatArrayValue","vertially","displayName","setEachItem","dimInfo","dimHead","valStr","tooltipDims","formatSingleValue","tooltipDimLen","isValueArr","formattedValue","colorEl","getColorFromPalette","requestColorNum","coordDimToDataDim","getProgressive","getProgressiveThreshold","getAxisTooltipData","getTooltipPosition","pipeTask","preventIncremental","getSeriesAutoName","dataDims","nameArr","dataDim","cloneShallow","dataTaskProgress","CHANGABLE_METHODS","wrapMethod","onDataSelfChange","scheduler","pipeline","getPipeline","currentTask","agentStubMap","_a","_b","_s","fixClipWithShadow","r0","unitX","unitY","List","_dimensionHelper","getDataItemValue","CoordinateSystem","_referHelper","coordSysDimDefs","registeredCoordSys","coordSysDefine","getDimensionsInfo","hasNameEncode","dimInfoList","coordDimensions","generateCoord","categoryAxisModel","ordinalMeta","getOrdinalMeta","itemName","stackCalculationInfo","dimValueGetter","isNeedCompleteOrdinalData","defaultDimValueGetter","hasItemOption","initData","sampleItem","firstDataNotNull","detectSourceFormat","datasetModel","datasetMap","seriesOption","sourceHeader","getDatasetModel","datasetOption","completeResult","completeBySourceData","makeDefaultEncode","normalizeDimensionsDefine","findPotentialName","potentialNameDimIndex","arrayRowsTravelFirst","objectRowsCollectDimensions","colArr","nameMap","maxLoop","firstIndex","encodeItemName","encodeSeriesName","nSeriesMap","cSeriesMap","datasetRecord","categoryWayDim","valueWayDim","firstNotOrdinal","doGuessOrdinal","nameDimIndex","thisData","datasetIndex","guessOrdinal","sample","detectValue","row","Scale","helper","_intervalPrecision","thisExtent","unionExtent","getInterval","setInterval","reverse","expandSize","createOnAllSeries","performRawSeries","colorAccessPath","setVisual","setItemVisual","dataEach","requestAnimationFrame","msRequestAnimationFrame","mozRequestAnimationFrame","webkitRequestAnimationFrame","dev","AxisBuilder","styleModel","buildLabelElOption","labelPos","getValueLabel","paddings","textRect","confineInContainer","bgColor","shadowBlur","shadowColor","shadowOffsetX","shadowOffsetY","viewWidth","viewHeight","seriesDataIndices","getAxisRawValue","seriesData","idxItem","dataIndexInside","dataParams","labelOffset","textLayout","innerTextLayout","xDimIndex","xy","wh","makeSectorShape","showContent","triggerOn","alwaysShowContent","displayMode","confine","showDelay","hideDelay","textColor","maskColor","mask","lineCap","labelRect","animateShape","setShape","decode","json","UTF8Encoding","encodeScale","UTF8Scale","features","feature","geometry","coordinates","encodeOffsets","coordinate","decodePolygon","c2","polygon","prevX","prevY","geoJson","featureObj","region","OrdinalMeta","scaleProto","OrdinalScale","categories","_ordinalMeta","getOrdinal","rank","unionExtentFromData","getApproximateExtent","smoothSpline","smoothBezier","controlPoints","cp2","globalImageCache","newImageOrSrc","cachedImgObj","hostEl","cbPayload","__zrImageSrc","pendingWrap","pending","imageOnLoad","__cachedImgObj","mathCos","mathSin","mathSqrt","mathAbs","hasTypedArray","notSaveData","_saveData","_xi","_yi","_x0","_y0","_ux","_uy","_len","_lineDash","_dashOffset","_dashIdx","_dashSum","beginPath","addData","exceedUnit","_needsDash","_dashedLineTo","_dashedBezierTo","_dashedQuadraticTo","arcTo","radius","toStatic","setLineDash","lineDashSum","setLineDashOffset","appendPath","appendSize","appendPathData","_expandData","_prevCmd","dash","dashSum","dist","nDash","bezierLen","tmpLen","fromLine","fromCubic","fromQuadratic","fromArc","rebuildPath","ux","uy","psi","fs","scaleX","scaleY","isEllipse","eventTool","throttleUtil","animationModel","moveAnimation","propsEqual","lastProp","lastProps","newProps","equals","updateLabelShowHide","labelEl","getHandleTransProps","trans","updateMandatoryProps","_group","_lastGraphicKey","_handle","_dragging","_lastValue","_lastStatus","_payloadInfo","_axisModel","_axisPointerModel","handle","_moveAnimation","determineAnimation","doUpdateProps","updatePointerEl","updateLabelEl","createPointerEl","createLabelEl","_renderHandle","isCategoryAxis","useSnap","seriesDataCount","getAxisInfo","pointerEl","handleModel","cursor","onmousedown","_onHandleDragMove","ondragend","_onHandleDragEnd","includeStyles","handleSize","_moveHandleToValue","_doDispatchAxisPointer","payloadInfo","axesInfo","doClear","buildLabel","globalListener","AxisPointerView","globalAxisPointerModel","globalTooltipModel","finder","getValues","_event","GestureMgr","TOUCH_CLICK_DELAY","mouseHandlerNames","touchHandlerNames","pointerEventNames","pointerdown","pointerup","pointermove","pointerout","pointerHandlerNames","nm","eventNameFix","processGesture","proxy","gestureMgr","_gestureMgr","gestureInfo","recognize","gestureEvent","setTouchTimer","instance","_touching","_touchTimer","domHandlers","mousemove","mouseout","element","toElement","relatedTarget","parentNode","touchstart","_lastTouchMoment","mousedown","touchmove","touchend","mouseup","click","isPointerFromTouch","pointerType","initDomHandler","makeMouseHandler","_handlers","HandlerDomProxy","mountHandlers","handlerNames","handlerDomProxyProto","setCursor","roundingErrorFix","mathPow","mathLog","LogScale","base","_originalScale","originalScale","originalExtent","powVal","__fixMin","fixRoundingError","__fixMax","err","originalVal","isDataItemOption","DefaultDataProvider","dimSize","_source","_offset","_dimSize","providerMethods","providerProto","pure","persistent","arrayRows_column","getItem","appendDataSimply","arrayRows_row","objectRows","countSimply","getItemSimply","keyedColumns","col","newCol","oldCol","original","typedArray","clean","rawValueGetters","arrayRows","getRawValueSimply","defaultDimValueGetters","getDimValueSimply","converDataValue","_dimensionInfos","_rawData","parseAndCollect","getProvider","retrieveRawAttr","interpolate","segs","pos","w2","w3","axisTrigger","registerPreprocessor","link","registerProcessor","PRIORITY","PROCESSOR","STATISTIC","coordSysAxesInfo","collect","shadowTemp","orignalBrush","modified","clipPaths","__clipPaths","clipPath","textHelper","normalizeTextStyle","needDrawText","renderText","getStroke","util","Style","Pattern","returnFalse","createDom","newDom","newDomStyle","Layer","onselectstart","domBack","ctxBack","clearColor","motionBlur","lastFrameAlpha","__used","__drawIndex","__startIndex","__endIndex","getElementCount","initContext","createBackBuffer","clearAll","clearColorGradientOrPattern","haveMotionBLur","globalCompositeOperation","clearRect","__canvasGradient","getGradient","getCanvasPattern","save","fillStyle","fillRect","restore","globalAlpha","sysDims","dimsDef","encodeDef","dataDimNameMap","coordDimNameMap","dimCount","getDimCount","dimDefItem","userDimName","validDataDims","resultDimIdx","applyDim","availDimIdx","sysDimItem","sysDimIndex","sysDimItemDimsDef","sysDimItemOtherDims","sysDimItemDimsDefItem","generateCoordCount","fromZero","extra","genName","optDimCount","v2Create","v2DistSquare","distSquare","EPSILON_NUMERIC","THREE_SQRT","ONE_THIRD","_v0","_v1","_v2","isAroundZero","onet","t1","disc","K","discSqrt","Y1","Y2","T","acos","ASqrt","p01","p12","p23","p012","p123","p0123","prev","d2","_t","divider","_needCollect","needCollect","_deduplication","deduplication","_map","createByAxisModel","dedplication","getOrCreateMap","category","legendSelectActionHandler","selectedMap","isToggleSelect","legendModel","isItemSelected","idStart","_track","pointPair","_doTrack","_recognize","touches","trackItem","recognizers","pinch","track","pinchEnd","pinchPre","pinchScale","pinchCenter","pinchX","pinchY","_clips","_running","_time","_pausedTime","_pauseStart","addAnimator","clips","removeAnimator","deferredEvents","deferredClips","_needsRemove","fire","_startLoop","isFinished","animate","AxisPointerModel","snap","triggerTooltip","shadowStyle","icon","gridModel","otherAxisOnZeroOf","rawAxisPosition","axisPosition","getRect","rectBound","onZero","axisOffset","posBound","onZeroCoord","dirMap","tickDirection","nameDirection","DEFAULT_MIN_MERGE","DEFAULT_MIN_GALLOPING","minRunLength","makeAscendingRun","runHi","reverseRun","binaryInsertionSort","pivot","gallopLeft","hint","lastOffset","maxOffset","gallopRight","TimSort","runStart","runLength","minGallop","stackSize","pushRun","_runStart","_runLength","mergeRuns","mergeAt","forceMergeRuns","start1","length1","start2","length2","mergeLow","mergeHigh","cursor1","cursor2","dest","count1","count2","exit","_minGallop","customCursor","customDest","remaining","ts","minRun","matrixUtil","makeAxisEventDataBase","eventData","dumbGroup","_transform","_dumbGroup","hasBuilder","builders","getGroup","pt1","pt2","strokeContainThreshold","arrows","arrowSize","arrowOffset","symbolWidth","symbolHeight","axisTickLabel","tickEls","buildAxisTick","labelEls","buildAxisLabel","fixMinMaxLabelShow","axisName","labelLayout","axisNameAvailableWidth","nameLocation","gapSignal","isNameLocationCenter","nameRotation","endTextLayout","truncateOpt","nameTruncateMaxWidth","truncatedText","tooltipOpt","formatterParams","textEl","__fullText","__truncatedText","targetType","axisRotation","rotationDiff","textRotate","onLeft","showMinLabel","showMaxLabel","firstLabel","nextLabel","lastLabel","prevLabel","firstTick","nextTick","lastTick","prevTick","ignoreEl","isTwoLabelOverlapped","current","firstRect","nextRect","mRotationBack","axisBuilder","lineStyleModel","tickLen","tickCoord","tickEl","axisLabelShow","labelRotation","rawCategoryData","getCategories","triggerEvent","itemLabelModel","pathContain","pathProxyForDraw","hasStroke","hasFill","hasFillGradient","hasStrokeGradient","hasFillPattern","hasStrokePattern","_fillGradient","_strokeGradient","strokeStyle","lineDashOffset","ctxLineDash","shapeCfg","needsUpdateRect","rectWithStroke","_rectWithStroke","lineScale","getLineScale","__clipTarget","attrKV","Sub","defaultShape","thisShape","colorAll","findPointFromSeries","layoutUtil","axisPointerViewHelper","proxyRect","tooltipContent","getDom","_tooltipContent","_tooltipModel","_ecModel","_lastDataByCoordSys","_alwaysShowContent","_initGlobalListener","_keepShow","_tryShow","_hide","_lastX","_lastY","_refreshUpdateTimeout","manuallyShowTip","_ticket","dataByCoordSys","_manuallyAxisShowTip","pointInfo","manuallyHideTip","buildTooltipModel","_showAxisTooltip","_showSeriesItemTooltip","_showComponentItemTooltip","_showOrMove","_showTimout","singleDefaultHTML","singleParamsList","singleTooltipModel","itemCoordSys","dataByAxis","axisValue","seriesDefaultHTML","valueLabel","valueLabelOpt","axisId","axisValueLabel","firstLine","positionExpr","_updateContentNotChangedOnAxis","_updatePosition","_showTooltipContent","dataModel","tooltipTrigger","defaultHtml","asyncTicket","subTooltipModel","html","cbTicket","contentSize","vAlign","viewSize","layoutRect","calcTooltipPosition","refixTooltipPosition","isCenterAlign","confineTooltipPosition","lastCoordSys","contentNotChanged","lastItemCoordSys","indexCoordSys","lastDataByAxis","thisItemCoordSys","thisDataByAxis","lastItem","indexAxis","thisItem","lastIndices","newIndices","lastIdxItem","newIdxItem","modelCascade","resultModel","gapH","gapV","getOuterSize","paddingLeft","paddingRight","borderLeftWidth","borderRightWidth","paddingTop","paddingBottom","borderTopWidth","borderBottomWidth","domWidth","domHeight","rectWidth","rectHeight","transformPath","cc","vMag","vRatio","u","vAngle","processArc","fa","psiDeg","xp","yp","lambda","cxp","cyp","createPathProxyFromString","cs","prevCmd","cpx","cpy","ctlPtx","ctlPty","createPathOptions","pathProxy","pathEls","pathList","pathEl","pathBundle","_barGrid","getScaleExtent","axisDataLen","boundaryGap","scaleType","getMin","getMax","setBlank","getNeedCrossZero","isBaseAxisAndHasBarSeries","barSeriesModels","adjustedScale","adjustScaleForOverflow","axisLength","barsOnCurrentAxis","minOverflow","maxOverflow","totalOverFlow","oldRange","oldRangePercentOfNew","overflowBuffer","ifAxisCrossZero","categoryTickStart","estimateLabelUnionRect","realNumberScaleTicks","categoryScaleExtent","axisLabelModel","unrotatedSingleRect","singleRect","rotateTextRect","rotateRadians","boundingBox","beforeWidth","beforeHeight","afterWidth","afterHeight","rotatedRect","SILENT","makeEventPacket","eveType","targetInfo","EmptyProxy","painterRoot","_hovered","setHandlerProxy","isHover","lastHovered","lastHoveredTarget","hovered","hoveredTarget","innerDom","eventArgs","eventPacket","eachOtherLayer","layer","exclude","getDisplayList","hoverCheckResult","_downEl","_downPoint","_upEl","getNearestColorPalette","paletteNum","clearColorPalette","colorIdx","colorNameMap","scopeFields","defaultColorPalette","layeredColorPalette","ComponentView","Animatable","animators","animatingShape","pathSplitted","_animateToShallow","objShallow","propertyCount","originalLarge","originalProgressive","DUMMY_COMPONENT_NAME_PREFIX","subOpts","emphasis","subOptName","TEXT_STYLE_OPTIONS","exists","newCptOptions","cptOption","idMap","existCpt","idNum","compressBatches","batchA","batchB","mapA","mapB","makeMap","mapToArray","sourceBatch","otherMap","dataIndices","otherDataIndices","lenj","isData","indexOfRawIndex","indexOfName","innerUniqueIndex","hostObj","parseFinder","defaultMainType","has","parsedKey","queryType","includeMainTypes","queryParam","models","getAttribute","lineX","lineY","keep","dataView","zoom","back","magicType","bar","tiled","saveAsImage","pie","scatter","effectScatter","radar","tree","treemap","boxplot","heatmap","sankey","funnel","pictorialBar","themeRiver","sunburst","general","withTitle","withoutTitle","single","withName","withoutName","multiple","separator","middle","allData","partialData","zrender","number","format","_throttle","ecHelper","parseGeoJSON","_List","_Model","_Axis","_env","parseGeoJson","ecUtil","SHADOW_PROPS","subTypeDefaulters","registerSubTypeDefaulter","defaulter","componentTypeMain","dependencyGetter","makeDepndencyGraph","fullNameList","noEntryList","createDependencyGraphItem","originalDeps","availableDeps","getAvailableDependencies","entryCount","dependentName","predecessor","thatItem","successor","dep","targetNameList","targetNameSet","currComponentType","currVertex","isInTargetNameSet","removeEdgeAndAdd","removeEdge","succComponentType","UNDEFINED","ID_PREFIX","dataCtors","float","Float64Array","int","Int32Array","ordinal","CtorUint32Array","Uint32Array","CtorUint16Array","Uint16Array","getIndicesCtor","_rawCount","cloneChunk","originalChunk","TRANSFERABLE_PROPERTIES","CLONE_PROPERTIES","transferProperties","__wrappedMethods","_calculationInfo","dimensionInfos","dimensionNames","invertedIndicesMap","dimensionInfo","dimensionName","createInvertedIndices","_indices","_count","_storage","_nameList","_idList","_optionModels","_visual","_itemVisuals","hasItemVisual","_itemLayouts","_graphicEls","_chunkSize","_chunkCount","_rawExtent","_approximateExtent","_dimensionsSummary","_invertedIndicesMap","listProto","prepareInvertedIndex","invertedIndices","getRawValueFromStore","rawIndex","chunkSize","chunkIndex","chunkOffset","chunk","getRawIndexWithoutIndices","getRawIndexWithIndices","_idDimIdx","normalizeDimensions","cloneListForMapAndSample","excludeDimensions","allDimensions","originalStorage","cloneDimStore","getInitialExtent","originalDimStore","newDimStore","getDimension","getDimensionsOnCoord","dimensionsSummary","nameList","notProvider","_nameRepeatCount","_dimValueGetter","_initDataFromProvider","nameDimIdx","dimLen","dimensionInfoMap","idList","rawExtent","nameRepeatCount","chunkCount","lastChunkIndex","_nameDimIdx","itemId","DataCtor","resizeChunkArray","newStore","dimStorage","dimRawExtent","nameDim","nameDimChunk","getIndices","thisCount","buffer","chunkStore","rawIdx","dimStore","_getFast","getDataExtent","dimData","initialExtent","dimExtent","currEnd","useRaw","setApproximateExtent","getSum","getMedian","dimDataArray","sortedDimDataArray","indicesOfNearest","maxDistance","nearestIndices","minDist","minDiff","contextCompat","filterSelf","dim0","selectRange","originalCount","quickFinished","chunkStorage","dimStorage2","chunkStorage2","val2","dimk","tmpRetValue","dataCount","retValue","rawExtentOnDim","downSample","dimension","sampleValue","sampleIndex","targetStorage","frameValues","frameSize","originalChunkIndex","originalChunkOffset","sampleFrameIdx","sampleChunkIndex","sampleChunkOffset","otherList","thisList","getVisual","visual","getLayout","getItemLayout","clearItemLayouts","itemVisual","clearAllVisual","setItemDataAndSeriesIndex","setItemGraphicEl","dimensionInfoList","injectFunction","originalMethod","TRANSFERABLE_METHODS","mathAtan2","nPoint","RectText","culling","inplace","rectContain","animateStyle","useStyle","stackedByDimInfo","stackedDimInfo","byIndex","stackedCoordDimension","mayStack","stackedDimCoordDim","stackedDimType","stackedDimCoordIndex","isCalculationCoord","stackedDim","targetDim","rangeStart","rangeEnd","getCoordSysModel","setRange","resetRange","setting","_setting","_isBlank","fixShadow","STYLE_COMMON_PROPS","createLinearGradient","canvasGradient","createRadialGradient","opacity","transformText","textOrigin","blend","prevStyle","firstDraw","otherStyle","newStyle","method","styleProto","timsort","backwardCompat","ChartView","seriesColor","loadingDefault","Scheduler","lightTheme","darkTheme","TEST_FRAME_REMAIN_TIME","PRIORITY_PROCESSOR_FILTER","PRIORITY_PROCESSOR_STATISTIC","PRIORITY_VISUAL_LAYOUT","PRIORITY_VISUAL_GLOBAL","PRIORITY_VISUAL_CHART","PRIORITY_VISUAL_COMPONENT","PRIORITY_VISUAL_BRUSH","FILTER","VISUAL","LAYOUT","GLOBAL","CHART","COMPONENT","BRUSH","IN_MAIN_PROCESS","OPTION_UPDATED","ACTION_REG","createRegisterEventWithLowercaseName","MessageCenter","ECharts","themeStorage","_dom","defaultRenderer","_throttledZrFlush","_chartsViews","_chartsMap","_componentsViews","_coordSysMgr","createExtensionAPI","prioritySortFunc","__prio","visualFuncs","dataProcessorFuncs","_scheduler","_messageCenter","_initEvents","_pendingActions","_onframe","bindRenderedEvent","echartsProto","doConvertPixel","coordSysList","_disposed","prepare","updateMethods","flushPendingActions","triggerUpdatedEvent","unfinished","remainTime","startTime","performSeriesTasks","performDataProcessorTasks","updateStreamModes","performVisualTasks","renderSeries","notMerge","lazyUpdate","setTheme","getDevicePixelRatio","getRenderedCanvas","pixelRatio","getSvgDataUrl","pathToDataUrl","getDataURL","excludeComponents","excludesComponentViews","__viewId","url","getType","toDataURL","getConnectedDataURL","groupId","connectedGroups","canvasList","chart","targetCanvas","convertToPixel","convertFromPixel","containPixel","containPoint","visualType","getViewOfComponentModel","getViewOfSeriesModel","prepareAndUpdate","coordSysMgr","performPostUpdateFuncs","ecIns","componentDirtyList","componentView","__alive","seriesDirtyMap","chartView","setDirty","dirtyMap","restorePipelines","prepareStageTasks","prepareView","updateDirectly","excludeSeriesId","callView","__model","chartsMap","doDispatchAction","payloadType","escapeConnect","actionWrap","actions","actionInfo","cptType","payloads","batched","batch","eventObj","eventObjBatch","isHighDown","batchItem","action","pendingActions","isComponent","viewList","viewMap","doPrepare","viewId","classType","__id","__ecComponentInfo","renderComponents","dirtyList","updateZ","updatePayload","perform","getPerformArgs","updateBlend","updateHoverLayerStatus","postUpdateFuncs","_loadingFX","showLoading","cfg","hideLoading","loadingEffects","makeActionFromEvent","eventActionMap","MOUSE_EVENT_NAMES","elCount","ecInstance","getComponentByElement","modelInfo","eveName","actionType","isDisposed","DOM_ATTRIBUTE_KEY","idBase","groupIdBase","mapDataStores","enableConnect","STATUS_PENDING","STATUS_UPDATING","STATUS_UPDATED","STATUS_KEY","updateConnectedChartsStatus","charts","otherChart","otherCharts","existInstance","getInstanceByDom","connect","disConnect","disconnect","getInstanceById","registerTheme","preprocessorFunc","priority","processor","normalizeRegister","registerPostUpdate","postUpdateFunc","registerCoordinateSystem","getCoordinateSystemDimensions","coordSysCreator","registerLayout","layoutTask","registerVisual","visualTask","targetList","defaultPriority","stageHandler","wrapStageHandler","__raw","registerLoading","loadingFx","extendSeriesModel","extendChartView","setCanvasCreator","creator","registerMap","mapName","specialAreas","JSON","getMap","dataTool","___ec_export","HOVER_LAYER_ZLEVEL","CANVAS_ZLEVEL","EL_AFTER_INCREMENTAL_INC","INCREMENTAL_INC","parseInt10","isLayerValid","__builtin__","viewRect","isDisplayableCulled","isClipPathChanged","prevClipPaths","doClip","createRoot","domRoot","singleCanvas","nodeName","_opts","_singleCanvas","rootStyle","zlevelList","_zlevelList","layers","_layers","_layerConfig","_needsManuallyCompositing","_width","_height","mainLayer","_domRoot","_getSize","_hoverlayer","_hoverElements","isSingleCanvas","viewportRoot","paintAll","_redrawId","_paintList","_backgroundColor","__hoverMir","elMirror","__from","hoverElements","hoverLayer","displayableSortFunc","getLayer","originalEl","_doPaintEl","getHoverLayer","redrawId","_updateLayerStatus","finished","_doPaintList","_compositeManually","eachBuiltinLayer","virtual","layerList","zi","useTimer","now","firstEl","error","dTime","prevElClipPaths","draw","currentLayer","forcePaint","insertLayer","layersMap","prevLayer","prevDom","insertBefore","firstChild","eachLayer","getLayers","updatePrevLayer","incrementalLayerCount","_clearLayer","layerConfig","_zlevel","delLayer","removeChild","_progressiveLayers","clearLayer","imageLayer","renderToCanvas","displayList","whIdx","cwh","plt","prb","shadowBlurSize","leftMargin","rightMargin","topMargin","bottomMargin","pathTransform","ImageShape","imgShape","beforeUpdate","afterUpdate","setClipPath","removeClipPath","graphicUtil","PATH_COLOR","repeat","createPattern","shapeCompareFunc","_roots","_displayList","_displayListLen","includeIgnore","updateDisplayList","_updateAndAddDisplayable","userSetClipPath","currentClipPath","parentClipPath","_renderList","dimensionsCount","_listComponent","newlineDisabled","_contentGroup","_backgroundEl","getContentGroup","resetInner","itemAlign","renderInner","maxSize","mainRect","layoutInner","contentGroup","legendDrawnMap","selectMode","legendSymbolType","itemGroup","_createItem","dispatchSelectAction","dispatchHighlightAction","dispatchDownplayAction","symbolKeepAspect","itemIcon","legendGlobalTooltipModel","textX","hitRect","legendIndex","__legendDataIndex","contentRect","dataName","scaleAndAdd","lenSquare","lengthSquare","div","dot","distanceSquare","negate","modelHelper","illegalPoint","isIllegalPoint","inputAxesInfo","shouldHide","outputFinder","showValueMap","updaters","showPointer","showTooltip","coordSysMap","coordSysKey","coordSysContainsPoint","axisInfo","inputAxisInfo","findInputAxisInfo","processOnAxis","linkTriggers","tarAxisInfo","tarKey","linkGroup","srcAxisInfo","srcKey","srcValItem","mapper","makeMapperParam","updateModelActually","dispatchTooltipActually","dispatchHighDownActually","newValue","dontSnap","involveSeries","buildPayloadsBySeries","payloadBatch","snapToValue","seriesNestestValue","nestestValue","coordSysModel","makeKey","coordSysItem","coordSysId","coordSysIndex","coordSysType","coordSysMainType","outputAxesInfo","valItem","useHandle","highDownKey","lastHighlights","newHighlights","toHighlight","toDownplay","LinkedList","head","tail","linkedListProto","insert","entry","Entry","insertEntry","_list","_maxSize","_lastRemovedEntry","LRUProto","removed","leastUsedEntry","POSSIBLE_STYLES","compatEC2ItemStyle","itemStyleOpt","normalItemStyleOpt","emphasisItemStyleOpt","convertNormalEmphasis","optType","useExtend","normalOpt","emphasisOpt","removeEC3NormalStatus","compatTextStyle","labelOptSingle","compatEC3CommonStyles","processSeries","markPoint","markLine","markArea","nodes","edgeData","links","edges","mpData","mlData","breadcrumb","levels","leaves","toArr","toObj","axes","axisOpt","parallelOpt","parallelAxisDefault","calendar","calendarOpt","radarOpt","geoOpt","regions","regionObj","toolboxOpt","featureOpt","seriesInvolved","collectAxesInfo","collectSeriesInfo","linksOption","linkGroups","axisPointerEnabled","axesInfoInCoordSys","baseTooltipModel","getAxes","saveTooltipAxisInfo","getTooltipAxes","triggerAxis","cross","tooltipAxes","baseAxes","otherAxes","fromTooltip","axisPointerShow","isHandleTrigger","makeAxisPointerModel","groupIndex","getLinkGroupIndex","tooltipAxisPointerModel","volatileOption","field","labelOption","tooltipAxisPointerLabelShow","seriesTooltipTrigger","seriesTooltipShow","getAxis","linkOption","checkPropInLink","linkPropValue","axisPropValue","legendFilter","define","Task","_reset","_plan","_onDirty","onDirty","_dirty","taskProto","performArgs","planResult","upTask","_upstream","skip","__pipeline","lastModBy","normalizeModBy","_modBy","lastModDataCount","_modDataCount","modBy","modDataCount","_dueEnd","_outputDueEnd","_progress","_dueIndex","doProgress","outputDueEnd","_settedOutputEnd","iterator","winCount","it","sStep","sCount","modNext","sequentialNext","taskIns","_callingProgress","downstream","_downstream","pipe","downTask","getUpstream","getDownstream","extremity","xDim","yDim","tx","ty","vec2Min","vec2Max","_component","dataProcessorHandlers","visualHandlers","_dataProcessorHandlers","_visualHandlers","_allHandlers","_stageTaskMap","performStageTasks","stageHandlers","needSetDirty","stageHandlerRecord","seriesTaskMap","overallTask","overallNeedDirty","stub","pipelineId","taskRecord","_pipelineMap","pCtx","progressiveEnabled","__idxInPipeline","blockIndex","dataLen","threshold","pipelineMap","stageTaskMap","createSeriesStageTask","overallReset","createOverallStageTask","__block","getTargetSeries","seriesTaskPlan","seriesTaskReset","seriesTaskCount","useClearVisual","isVisual","isLayout","overallTaskReset","overallProgress","createStub","stubReset","stubOnDirty","agent","upstreamContext","stubProgress","resetDefines","makeSeriesTaskProgress","singleSeriesTaskProgress","resetDefineIdx","resetDefine","detectSeriseType","legacyFunc","ecModelMock","apiMock","mockMethods","cond","easingFuncs","_life","_initialized","onrestart","globalTime","deltaTime","_startTime","easingFunc","schedule","restart","arg","VALID_TEXT_ALIGN","VALID_TEXT_VERTICAL_ALIGN","normalizeStyle","textBaseline","renderRichText","renderPlainText","setCtx","__textCotentBlock","boxPos","getBoxPosition","baseX","baseY","applyTextRotation","boxY","textY","needDrawBg","needDrawBackground","boxX","drawBackground","getTextXForPadding","getFill","strokeText","fillText","drawRichText","xLeft","lineTop","xRight","tokenCount","usedWidth","lineXLeft","lineXRight","placeToken","isPlainBg","onBgImageLoaded","blockHeiht","maxValue","lastIndexOf"],"mappings":"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","file":"static/js/chunk-5e4fb570.63e3a001.js","sourcesContent":["var zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar _model = require(\"../../util/model\");\n\nvar makeInner = _model.makeInner;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar inner = makeInner();\nvar each = zrUtil.each;\n/**\n * @param {string} key\n * @param {module:echarts/ExtensionAPI} api\n * @param {Function} handler\n *      param: {string} currTrigger\n *      param: {Array.<number>} point\n */\n\nfunction register(key, api, handler) {\n  if (env.node) {\n    return;\n  }\n\n  var zr = api.getZr();\n  inner(zr).records || (inner(zr).records = {});\n  initGlobalListeners(zr, api);\n  var record = inner(zr).records[key] || (inner(zr).records[key] = {});\n  record.handler = handler;\n}\n\nfunction initGlobalListeners(zr, api) {\n  if (inner(zr).initialized) {\n    return;\n  }\n\n  inner(zr).initialized = true;\n  useHandler('click', zrUtil.curry(doEnter, 'click'));\n  useHandler('mousemove', zrUtil.curry(doEnter, 'mousemove')); // useHandler('mouseout', onLeave);\n\n  useHandler('globalout', onLeave);\n\n  function useHandler(eventType, cb) {\n    zr.on(eventType, function (e) {\n      var dis = makeDispatchAction(api);\n      each(inner(zr).records, function (record) {\n        record && cb(record, e, dis.dispatchAction);\n      });\n      dispatchTooltipFinally(dis.pendings, api);\n    });\n  }\n}\n\nfunction dispatchTooltipFinally(pendings, api) {\n  var showLen = pendings.showTip.length;\n  var hideLen = pendings.hideTip.length;\n  var actuallyPayload;\n\n  if (showLen) {\n    actuallyPayload = pendings.showTip[showLen - 1];\n  } else if (hideLen) {\n    actuallyPayload = pendings.hideTip[hideLen - 1];\n  }\n\n  if (actuallyPayload) {\n    actuallyPayload.dispatchAction = null;\n    api.dispatchAction(actuallyPayload);\n  }\n}\n\nfunction onLeave(record, e, dispatchAction) {\n  record.handler('leave', null, dispatchAction);\n}\n\nfunction doEnter(currTrigger, record, e, dispatchAction) {\n  record.handler(currTrigger, e, dispatchAction);\n}\n\nfunction makeDispatchAction(api) {\n  var pendings = {\n    showTip: [],\n    hideTip: []\n  }; // FIXME\n  // better approach?\n  // 'showTip' and 'hideTip' can be triggered by axisPointer and tooltip,\n  // which may be conflict, (axisPointer call showTip but tooltip call hideTip);\n  // So we have to add \"final stage\" to merge those dispatched actions.\n\n  var dispatchAction = function (payload) {\n    var pendingList = pendings[payload.type];\n\n    if (pendingList) {\n      pendingList.push(payload);\n    } else {\n      payload.dispatchAction = dispatchAction;\n      api.dispatchAction(payload);\n    }\n  };\n\n  return {\n    dispatchAction: dispatchAction,\n    pendings: pendings\n  };\n}\n/**\n * @param {string} key\n * @param {module:echarts/ExtensionAPI} api\n */\n\n\nfunction unregister(key, api) {\n  if (env.node) {\n    return;\n  }\n\n  var zr = api.getZr();\n  var record = (inner(zr).records || {})[key];\n\n  if (record) {\n    inner(zr).records[key] = null;\n  }\n}\n\nexports.register = register;\nexports.unregister = unregister;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _number = require(\"../util/number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar _dataStackHelper = require(\"../data/helper/dataStackHelper\");\n\nvar isDimensionStacked = _dataStackHelper.isDimensionStacked;\n\nvar createRenderPlanner = require(\"../chart/helper/createRenderPlanner\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar STACK_PREFIX = '__ec_stack_';\nvar LARGE_BAR_MIN_WIDTH = 0.5;\nvar LargeArr = typeof Float32Array !== 'undefined' ? Float32Array : Array;\n\nfunction getSeriesStackId(seriesModel) {\n  return seriesModel.get('stack') || STACK_PREFIX + seriesModel.seriesIndex;\n}\n\nfunction getAxisKey(axis) {\n  return axis.dim + axis.index;\n}\n/**\n * @param {Object} opt\n * @param {module:echarts/coord/Axis} opt.axis Only support category axis currently.\n * @param {number} opt.count Positive interger.\n * @param {number} [opt.barWidth]\n * @param {number} [opt.barMaxWidth]\n * @param {number} [opt.barGap]\n * @param {number} [opt.barCategoryGap]\n * @return {Object} {width, offset, offsetCenter} If axis.type is not 'category', return undefined.\n */\n\n\nfunction getLayoutOnAxis(opt) {\n  var params = [];\n  var baseAxis = opt.axis;\n  var axisKey = 'axis0';\n\n  if (baseAxis.type !== 'category') {\n    return;\n  }\n\n  var bandWidth = baseAxis.getBandWidth();\n\n  for (var i = 0; i < opt.count || 0; i++) {\n    params.push(zrUtil.defaults({\n      bandWidth: bandWidth,\n      axisKey: axisKey,\n      stackId: STACK_PREFIX + i\n    }, opt));\n  }\n\n  var widthAndOffsets = doCalBarWidthAndOffset(params);\n  var result = [];\n\n  for (var i = 0; i < opt.count; i++) {\n    var item = widthAndOffsets[axisKey][STACK_PREFIX + i];\n    item.offsetCenter = item.offset + item.width / 2;\n    result.push(item);\n  }\n\n  return result;\n}\n\nfunction prepareLayoutBarSeries(seriesType, ecModel) {\n  var seriesModels = [];\n  ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n    // Check series coordinate, do layout for cartesian2d only\n    if (isOnCartesian(seriesModel) && !isInLargeMode(seriesModel)) {\n      seriesModels.push(seriesModel);\n    }\n  });\n  return seriesModels;\n}\n\nfunction makeColumnLayout(barSeries) {\n  var seriesInfoList = [];\n  zrUtil.each(barSeries, function (seriesModel) {\n    var data = seriesModel.getData();\n    var cartesian = seriesModel.coordinateSystem;\n    var baseAxis = cartesian.getBaseAxis();\n    var axisExtent = baseAxis.getExtent();\n    var bandWidth = baseAxis.type === 'category' ? baseAxis.getBandWidth() : Math.abs(axisExtent[1] - axisExtent[0]) / data.count();\n    var barWidth = parsePercent(seriesModel.get('barWidth'), bandWidth);\n    var barMaxWidth = parsePercent(seriesModel.get('barMaxWidth'), bandWidth);\n    var barGap = seriesModel.get('barGap');\n    var barCategoryGap = seriesModel.get('barCategoryGap');\n    seriesInfoList.push({\n      bandWidth: bandWidth,\n      barWidth: barWidth,\n      barMaxWidth: barMaxWidth,\n      barGap: barGap,\n      barCategoryGap: barCategoryGap,\n      axisKey: getAxisKey(baseAxis),\n      stackId: getSeriesStackId(seriesModel)\n    });\n  });\n  return doCalBarWidthAndOffset(seriesInfoList);\n}\n\nfunction doCalBarWidthAndOffset(seriesInfoList) {\n  // Columns info on each category axis. Key is cartesian name\n  var columnsMap = {};\n  zrUtil.each(seriesInfoList, function (seriesInfo, idx) {\n    var axisKey = seriesInfo.axisKey;\n    var bandWidth = seriesInfo.bandWidth;\n    var columnsOnAxis = columnsMap[axisKey] || {\n      bandWidth: bandWidth,\n      remainedWidth: bandWidth,\n      autoWidthCount: 0,\n      categoryGap: '20%',\n      gap: '30%',\n      stacks: {}\n    };\n    var stacks = columnsOnAxis.stacks;\n    columnsMap[axisKey] = columnsOnAxis;\n    var stackId = seriesInfo.stackId;\n\n    if (!stacks[stackId]) {\n      columnsOnAxis.autoWidthCount++;\n    }\n\n    stacks[stackId] = stacks[stackId] || {\n      width: 0,\n      maxWidth: 0\n    }; // Caution: In a single coordinate system, these barGrid attributes\n    // will be shared by series. Consider that they have default values,\n    // only the attributes set on the last series will work.\n    // Do not change this fact unless there will be a break change.\n    // TODO\n\n    var barWidth = seriesInfo.barWidth;\n\n    if (barWidth && !stacks[stackId].width) {\n      // See #6312, do not restrict width.\n      stacks[stackId].width = barWidth;\n      barWidth = Math.min(columnsOnAxis.remainedWidth, barWidth);\n      columnsOnAxis.remainedWidth -= barWidth;\n    }\n\n    var barMaxWidth = seriesInfo.barMaxWidth;\n    barMaxWidth && (stacks[stackId].maxWidth = barMaxWidth);\n    var barGap = seriesInfo.barGap;\n    barGap != null && (columnsOnAxis.gap = barGap);\n    var barCategoryGap = seriesInfo.barCategoryGap;\n    barCategoryGap != null && (columnsOnAxis.categoryGap = barCategoryGap);\n  });\n  var result = {};\n  zrUtil.each(columnsMap, function (columnsOnAxis, coordSysName) {\n    result[coordSysName] = {};\n    var stacks = columnsOnAxis.stacks;\n    var bandWidth = columnsOnAxis.bandWidth;\n    var categoryGap = parsePercent(columnsOnAxis.categoryGap, bandWidth);\n    var barGapPercent = parsePercent(columnsOnAxis.gap, 1);\n    var remainedWidth = columnsOnAxis.remainedWidth;\n    var autoWidthCount = columnsOnAxis.autoWidthCount;\n    var autoWidth = (remainedWidth - categoryGap) / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n    autoWidth = Math.max(autoWidth, 0); // Find if any auto calculated bar exceeded maxBarWidth\n\n    zrUtil.each(stacks, function (column, stack) {\n      var maxWidth = column.maxWidth;\n\n      if (maxWidth && maxWidth < autoWidth) {\n        maxWidth = Math.min(maxWidth, remainedWidth);\n\n        if (column.width) {\n          maxWidth = Math.min(maxWidth, column.width);\n        }\n\n        remainedWidth -= maxWidth;\n        column.width = maxWidth;\n        autoWidthCount--;\n      }\n    }); // Recalculate width again\n\n    autoWidth = (remainedWidth - categoryGap) / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n    autoWidth = Math.max(autoWidth, 0);\n    var widthSum = 0;\n    var lastColumn;\n    zrUtil.each(stacks, function (column, idx) {\n      if (!column.width) {\n        column.width = autoWidth;\n      }\n\n      lastColumn = column;\n      widthSum += column.width * (1 + barGapPercent);\n    });\n\n    if (lastColumn) {\n      widthSum -= lastColumn.width * barGapPercent;\n    }\n\n    var offset = -widthSum / 2;\n    zrUtil.each(stacks, function (column, stackId) {\n      result[coordSysName][stackId] = result[coordSysName][stackId] || {\n        offset: offset,\n        width: column.width\n      };\n      offset += column.width * (1 + barGapPercent);\n    });\n  });\n  return result;\n}\n/**\n * @param {Object} barWidthAndOffset The result of makeColumnLayout\n * @param {module:echarts/coord/Axis} axis\n * @param {module:echarts/model/Series} [seriesModel] If not provided, return all.\n * @return {Object} {stackId: {offset, width}} or {offset, width} if seriesModel provided.\n */\n\n\nfunction retrieveColumnLayout(barWidthAndOffset, axis, seriesModel) {\n  if (barWidthAndOffset && axis) {\n    var result = barWidthAndOffset[getAxisKey(axis)];\n\n    if (result != null && seriesModel != null) {\n      result = result[getSeriesStackId(seriesModel)];\n    }\n\n    return result;\n  }\n}\n/**\n * @param {string} seriesType\n * @param {module:echarts/model/Global} ecModel\n */\n\n\nfunction layout(seriesType, ecModel) {\n  var seriesModels = prepareLayoutBarSeries(seriesType, ecModel);\n  var barWidthAndOffset = makeColumnLayout(seriesModels);\n  var lastStackCoords = {};\n  var lastStackCoordsOrigin = {};\n  zrUtil.each(seriesModels, function (seriesModel) {\n    var data = seriesModel.getData();\n    var cartesian = seriesModel.coordinateSystem;\n    var baseAxis = cartesian.getBaseAxis();\n    var stackId = getSeriesStackId(seriesModel);\n    var columnLayoutInfo = barWidthAndOffset[getAxisKey(baseAxis)][stackId];\n    var columnOffset = columnLayoutInfo.offset;\n    var columnWidth = columnLayoutInfo.width;\n    var valueAxis = cartesian.getOtherAxis(baseAxis);\n    var barMinHeight = seriesModel.get('barMinHeight') || 0;\n    lastStackCoords[stackId] = lastStackCoords[stackId] || [];\n    lastStackCoordsOrigin[stackId] = lastStackCoordsOrigin[stackId] || []; // Fix #4243\n\n    data.setLayout({\n      offset: columnOffset,\n      size: columnWidth\n    });\n    var valueDim = data.mapDimension(valueAxis.dim);\n    var baseDim = data.mapDimension(baseAxis.dim);\n    var stacked = isDimensionStacked(data, valueDim\n    /*, baseDim*/\n    );\n    var isValueAxisH = valueAxis.isHorizontal();\n    var valueAxisStart = getValueAxisStart(baseAxis, valueAxis, stacked);\n\n    for (var idx = 0, len = data.count(); idx < len; idx++) {\n      var value = data.get(valueDim, idx);\n      var baseValue = data.get(baseDim, idx);\n\n      if (isNaN(value)) {\n        continue;\n      }\n\n      var sign = value >= 0 ? 'p' : 'n';\n      var baseCoord = valueAxisStart; // Because of the barMinHeight, we can not use the value in\n      // stackResultDimension directly.\n\n      if (stacked) {\n        // Only ordinal axis can be stacked.\n        if (!lastStackCoords[stackId][baseValue]) {\n          lastStackCoords[stackId][baseValue] = {\n            p: valueAxisStart,\n            // Positive stack\n            n: valueAxisStart // Negative stack\n\n          };\n        } // Should also consider #4243\n\n\n        baseCoord = lastStackCoords[stackId][baseValue][sign];\n      }\n\n      var x;\n      var y;\n      var width;\n      var height;\n\n      if (isValueAxisH) {\n        var coord = cartesian.dataToPoint([value, baseValue]);\n        x = baseCoord;\n        y = coord[1] + columnOffset;\n        width = coord[0] - valueAxisStart;\n        height = columnWidth;\n\n        if (Math.abs(width) < barMinHeight) {\n          width = (width < 0 ? -1 : 1) * barMinHeight;\n        }\n\n        stacked && (lastStackCoords[stackId][baseValue][sign] += width);\n      } else {\n        var coord = cartesian.dataToPoint([baseValue, value]);\n        x = coord[0] + columnOffset;\n        y = baseCoord;\n        width = columnWidth;\n        height = coord[1] - valueAxisStart;\n\n        if (Math.abs(height) < barMinHeight) {\n          // Include zero to has a positive bar\n          height = (height <= 0 ? -1 : 1) * barMinHeight;\n        }\n\n        stacked && (lastStackCoords[stackId][baseValue][sign] += height);\n      }\n\n      data.setItemLayout(idx, {\n        x: x,\n        y: y,\n        width: width,\n        height: height\n      });\n    }\n  }, this);\n} // TODO: Do not support stack in large mode yet.\n\n\nvar largeLayout = {\n  seriesType: 'bar',\n  plan: createRenderPlanner(),\n  reset: function (seriesModel) {\n    if (!isOnCartesian(seriesModel) || !isInLargeMode(seriesModel)) {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var cartesian = seriesModel.coordinateSystem;\n    var baseAxis = cartesian.getBaseAxis();\n    var valueAxis = cartesian.getOtherAxis(baseAxis);\n    var valueDim = data.mapDimension(valueAxis.dim);\n    var baseDim = data.mapDimension(baseAxis.dim);\n    var valueAxisHorizontal = valueAxis.isHorizontal();\n    var valueDimIdx = valueAxisHorizontal ? 0 : 1;\n    var barWidth = retrieveColumnLayout(makeColumnLayout([seriesModel]), baseAxis, seriesModel).width;\n\n    if (!(barWidth > LARGE_BAR_MIN_WIDTH)) {\n      // jshint ignore:line\n      barWidth = LARGE_BAR_MIN_WIDTH;\n    }\n\n    return {\n      progress: progress\n    };\n\n    function progress(params, data) {\n      var largePoints = new LargeArr(params.count * 2);\n      var dataIndex;\n      var coord = [];\n      var valuePair = [];\n      var offset = 0;\n\n      while ((dataIndex = params.next()) != null) {\n        valuePair[valueDimIdx] = data.get(valueDim, dataIndex);\n        valuePair[1 - valueDimIdx] = data.get(baseDim, dataIndex);\n        coord = cartesian.dataToPoint(valuePair, null, coord);\n        largePoints[offset++] = coord[0];\n        largePoints[offset++] = coord[1];\n      }\n\n      data.setLayout({\n        largePoints: largePoints,\n        barWidth: barWidth,\n        valueAxisStart: getValueAxisStart(baseAxis, valueAxis, false),\n        valueAxisHorizontal: valueAxisHorizontal\n      });\n    }\n  }\n};\n\nfunction isOnCartesian(seriesModel) {\n  return seriesModel.coordinateSystem && seriesModel.coordinateSystem.type === 'cartesian2d';\n}\n\nfunction isInLargeMode(seriesModel) {\n  return seriesModel.pipelineContext && seriesModel.pipelineContext.large;\n}\n\nfunction getValueAxisStart(baseAxis, valueAxis, stacked) {\n  return zrUtil.indexOf(baseAxis.getAxesOnZeroOf(), valueAxis) >= 0 || stacked ? valueAxis.toGlobalCoord(valueAxis.dataToCoord(0)) : valueAxis.getGlobalExtent()[0];\n}\n\nexports.getLayoutOnAxis = getLayoutOnAxis;\nexports.prepareLayoutBarSeries = prepareLayoutBarSeries;\nexports.makeColumnLayout = makeColumnLayout;\nexports.retrieveColumnLayout = retrieveColumnLayout;\nexports.layout = layout;\nexports.largeLayout = largeLayout;","/**\n * 缓动代码来自 https://github.com/sole/tween.js/blob/master/src/Tween.js\n * @see http://sole.github.io/tween.js/examples/03_graphs.html\n * @exports zrender/animation/easing\n */\nvar easing = {\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  linear: function (k) {\n    return k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quadraticIn: function (k) {\n    return k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quadraticOut: function (k) {\n    return k * (2 - k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quadraticInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k;\n    }\n\n    return -0.5 * (--k * (k - 2) - 1);\n  },\n  // 三次方的缓动（t^3）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  cubicIn: function (k) {\n    return k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  cubicOut: function (k) {\n    return --k * k * k + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  cubicInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k * k;\n    }\n\n    return 0.5 * ((k -= 2) * k * k + 2);\n  },\n  // 四次方的缓动（t^4）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quarticIn: function (k) {\n    return k * k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quarticOut: function (k) {\n    return 1 - --k * k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quarticInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k * k * k;\n    }\n\n    return -0.5 * ((k -= 2) * k * k * k - 2);\n  },\n  // 五次方的缓动（t^5）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quinticIn: function (k) {\n    return k * k * k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quinticOut: function (k) {\n    return --k * k * k * k * k + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quinticInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k * k * k * k;\n    }\n\n    return 0.5 * ((k -= 2) * k * k * k * k + 2);\n  },\n  // 正弦曲线的缓动（sin(t)）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  sinusoidalIn: function (k) {\n    return 1 - Math.cos(k * Math.PI / 2);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  sinusoidalOut: function (k) {\n    return Math.sin(k * Math.PI / 2);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  sinusoidalInOut: function (k) {\n    return 0.5 * (1 - Math.cos(Math.PI * k));\n  },\n  // 指数曲线的缓动（2^t）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  exponentialIn: function (k) {\n    return k === 0 ? 0 : Math.pow(1024, k - 1);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  exponentialOut: function (k) {\n    return k === 1 ? 1 : 1 - Math.pow(2, -10 * k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  exponentialInOut: function (k) {\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if ((k *= 2) < 1) {\n      return 0.5 * Math.pow(1024, k - 1);\n    }\n\n    return 0.5 * (-Math.pow(2, -10 * (k - 1)) + 2);\n  },\n  // 圆形曲线的缓动（sqrt(1-t^2)）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  circularIn: function (k) {\n    return 1 - Math.sqrt(1 - k * k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  circularOut: function (k) {\n    return Math.sqrt(1 - --k * k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  circularInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return -0.5 * (Math.sqrt(1 - k * k) - 1);\n    }\n\n    return 0.5 * (Math.sqrt(1 - (k -= 2) * k) + 1);\n  },\n  // 创建类似于弹簧在停止前来回振荡的动画\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  elasticIn: function (k) {\n    var s;\n    var a = 0.1;\n    var p = 0.4;\n\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if (!a || a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p * Math.asin(1 / a) / (2 * Math.PI);\n    }\n\n    return -(a * Math.pow(2, 10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p));\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  elasticOut: function (k) {\n    var s;\n    var a = 0.1;\n    var p = 0.4;\n\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if (!a || a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p * Math.asin(1 / a) / (2 * Math.PI);\n    }\n\n    return a * Math.pow(2, -10 * k) * Math.sin((k - s) * (2 * Math.PI) / p) + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  elasticInOut: function (k) {\n    var s;\n    var a = 0.1;\n    var p = 0.4;\n\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if (!a || a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p * Math.asin(1 / a) / (2 * Math.PI);\n    }\n\n    if ((k *= 2) < 1) {\n      return -0.5 * (a * Math.pow(2, 10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p));\n    }\n\n    return a * Math.pow(2, -10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p) * 0.5 + 1;\n  },\n  // 在某一动画开始沿指示的路径进行动画处理前稍稍收回该动画的移动\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  backIn: function (k) {\n    var s = 1.70158;\n    return k * k * ((s + 1) * k - s);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  backOut: function (k) {\n    var s = 1.70158;\n    return --k * k * ((s + 1) * k + s) + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  backInOut: function (k) {\n    var s = 1.70158 * 1.525;\n\n    if ((k *= 2) < 1) {\n      return 0.5 * (k * k * ((s + 1) * k - s));\n    }\n\n    return 0.5 * ((k -= 2) * k * ((s + 1) * k + s) + 2);\n  },\n  // 创建弹跳效果\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  bounceIn: function (k) {\n    return 1 - easing.bounceOut(1 - k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  bounceOut: function (k) {\n    if (k < 1 / 2.75) {\n      return 7.5625 * k * k;\n    } else if (k < 2 / 2.75) {\n      return 7.5625 * (k -= 1.5 / 2.75) * k + 0.75;\n    } else if (k < 2.5 / 2.75) {\n      return 7.5625 * (k -= 2.25 / 2.75) * k + 0.9375;\n    } else {\n      return 7.5625 * (k -= 2.625 / 2.75) * k + 0.984375;\n    }\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  bounceInOut: function (k) {\n    if (k < 0.5) {\n      return easing.bounceIn(k * 2) * 0.5;\n    }\n\n    return easing.bounceOut(k * 2 - 1) * 0.5 + 0.5;\n  }\n};\nvar _default = easing;\nmodule.exports = _default;","var numberUtil = require(\"../util/number\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * For testable.\n */\nvar roundNumber = numberUtil.round;\n/**\n * @param {Array.<number>} extent Both extent[0] and extent[1] should be valid number.\n *                                Should be extent[0] < extent[1].\n * @param {number} splitNumber splitNumber should be >= 1.\n * @param {number} [minInterval]\n * @param {number} [maxInterval]\n * @return {Object} {interval, intervalPrecision, niceTickExtent}\n */\n\nfunction intervalScaleNiceTicks(extent, splitNumber, minInterval, maxInterval) {\n  var result = {};\n  var span = extent[1] - extent[0];\n  var interval = result.interval = numberUtil.nice(span / splitNumber, true);\n\n  if (minInterval != null && interval < minInterval) {\n    interval = result.interval = minInterval;\n  }\n\n  if (maxInterval != null && interval > maxInterval) {\n    interval = result.interval = maxInterval;\n  } // Tow more digital for tick.\n\n\n  var precision = result.intervalPrecision = getIntervalPrecision(interval); // Niced extent inside original extent\n\n  var niceTickExtent = result.niceTickExtent = [roundNumber(Math.ceil(extent[0] / interval) * interval, precision), roundNumber(Math.floor(extent[1] / interval) * interval, precision)];\n  fixExtent(niceTickExtent, extent);\n  return result;\n}\n/**\n * @param {number} interval\n * @return {number} interval precision\n */\n\n\nfunction getIntervalPrecision(interval) {\n  // Tow more digital for tick.\n  return numberUtil.getPrecisionSafe(interval) + 2;\n}\n\nfunction clamp(niceTickExtent, idx, extent) {\n  niceTickExtent[idx] = Math.max(Math.min(niceTickExtent[idx], extent[1]), extent[0]);\n} // In some cases (e.g., splitNumber is 1), niceTickExtent may be out of extent.\n\n\nfunction fixExtent(niceTickExtent, extent) {\n  !isFinite(niceTickExtent[0]) && (niceTickExtent[0] = extent[0]);\n  !isFinite(niceTickExtent[1]) && (niceTickExtent[1] = extent[1]);\n  clamp(niceTickExtent, 0, extent);\n  clamp(niceTickExtent, 1, extent);\n\n  if (niceTickExtent[0] > niceTickExtent[1]) {\n    niceTickExtent[0] = niceTickExtent[1];\n  }\n}\n\nfunction intervalScaleGetTicks(interval, extent, niceTickExtent, intervalPrecision) {\n  var ticks = []; // If interval is 0, return [];\n\n  if (!interval) {\n    return ticks;\n  } // Consider this case: using dataZoom toolbox, zoom and zoom.\n\n\n  var safeLimit = 10000;\n\n  if (extent[0] < niceTickExtent[0]) {\n    ticks.push(extent[0]);\n  }\n\n  var tick = niceTickExtent[0];\n\n  while (tick <= niceTickExtent[1]) {\n    ticks.push(tick); // Avoid rounding error\n\n    tick = roundNumber(tick + interval, intervalPrecision);\n\n    if (tick === ticks[ticks.length - 1]) {\n      // Consider out of safe float point, e.g.,\n      // -3711126.9907707 + 2e-10 === -3711126.9907707\n      break;\n    }\n\n    if (ticks.length > safeLimit) {\n      return [];\n    }\n  } // Consider this case: the last item of ticks is smaller\n  // than niceTickExtent[1] and niceTickExtent[1] === extent[1].\n\n\n  if (extent[1] > (ticks.length ? ticks[ticks.length - 1] : niceTickExtent[1])) {\n    ticks.push(extent[1]);\n  }\n\n  return ticks;\n}\n\nexports.intervalScaleNiceTicks = intervalScaleNiceTicks;\nexports.getIntervalPrecision = getIntervalPrecision;\nexports.fixExtent = fixExtent;\nexports.intervalScaleGetTicks = intervalScaleGetTicks;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction defaultKeyGetter(item) {\n  return item;\n}\n/**\n * @param {Array} oldArr\n * @param {Array} newArr\n * @param {Function} oldKeyGetter\n * @param {Function} newKeyGetter\n * @param {Object} [context] Can be visited by this.context in callback.\n */\n\n\nfunction DataDiffer(oldArr, newArr, oldKeyGetter, newKeyGetter, context) {\n  this._old = oldArr;\n  this._new = newArr;\n  this._oldKeyGetter = oldKeyGetter || defaultKeyGetter;\n  this._newKeyGetter = newKeyGetter || defaultKeyGetter;\n  this.context = context;\n}\n\nDataDiffer.prototype = {\n  constructor: DataDiffer,\n\n  /**\n   * Callback function when add a data\n   */\n  add: function (func) {\n    this._add = func;\n    return this;\n  },\n\n  /**\n   * Callback function when update a data\n   */\n  update: function (func) {\n    this._update = func;\n    return this;\n  },\n\n  /**\n   * Callback function when remove a data\n   */\n  remove: function (func) {\n    this._remove = func;\n    return this;\n  },\n  execute: function () {\n    var oldArr = this._old;\n    var newArr = this._new;\n    var oldDataIndexMap = {};\n    var newDataIndexMap = {};\n    var oldDataKeyArr = [];\n    var newDataKeyArr = [];\n    var i;\n    initIndexMap(oldArr, oldDataIndexMap, oldDataKeyArr, '_oldKeyGetter', this);\n    initIndexMap(newArr, newDataIndexMap, newDataKeyArr, '_newKeyGetter', this); // Travel by inverted order to make sure order consistency\n    // when duplicate keys exists (consider newDataIndex.pop() below).\n    // For performance consideration, these code below do not look neat.\n\n    for (i = 0; i < oldArr.length; i++) {\n      var key = oldDataKeyArr[i];\n      var idx = newDataIndexMap[key]; // idx can never be empty array here. see 'set null' logic below.\n\n      if (idx != null) {\n        // Consider there is duplicate key (for example, use dataItem.name as key).\n        // We should make sure every item in newArr and oldArr can be visited.\n        var len = idx.length;\n\n        if (len) {\n          len === 1 && (newDataIndexMap[key] = null);\n          idx = idx.unshift();\n        } else {\n          newDataIndexMap[key] = null;\n        }\n\n        this._update && this._update(idx, i);\n      } else {\n        this._remove && this._remove(i);\n      }\n    }\n\n    for (var i = 0; i < newDataKeyArr.length; i++) {\n      var key = newDataKeyArr[i];\n\n      if (newDataIndexMap.hasOwnProperty(key)) {\n        var idx = newDataIndexMap[key];\n\n        if (idx == null) {\n          continue;\n        } // idx can never be empty array here. see 'set null' logic above.\n\n\n        if (!idx.length) {\n          this._add && this._add(idx);\n        } else {\n          for (var j = 0, len = idx.length; j < len; j++) {\n            this._add && this._add(idx[j]);\n          }\n        }\n      }\n    }\n  }\n};\n\nfunction initIndexMap(arr, map, keyArr, keyGetterName, dataDiffer) {\n  for (var i = 0; i < arr.length; i++) {\n    // Add prefix to avoid conflict with Object.prototype.\n    var key = '_ec_' + dataDiffer[keyGetterName](arr[i], i);\n    var existence = map[key];\n\n    if (existence == null) {\n      keyArr.push(key);\n      map[key] = i;\n    } else {\n      if (!existence.length) {\n        map[key] = existence = [existence];\n      }\n\n      existence.push(i);\n    }\n  }\n}\n\nvar _default = DataDiffer;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar RADIAN_EPSILON = 1e-4;\n\nfunction _trim(str) {\n  return str.replace(/^\\s+/, '').replace(/\\s+$/, '');\n}\n/**\n * Linear mapping a value from domain to range\n * @memberOf module:echarts/util/number\n * @param  {(number|Array.<number>)} val\n * @param  {Array.<number>} domain Domain extent domain[0] can be bigger than domain[1]\n * @param  {Array.<number>} range  Range extent range[0] can be bigger than range[1]\n * @param  {boolean} clamp\n * @return {(number|Array.<number>}\n */\n\n\nfunction linearMap(val, domain, range, clamp) {\n  var subDomain = domain[1] - domain[0];\n  var subRange = range[1] - range[0];\n\n  if (subDomain === 0) {\n    return subRange === 0 ? range[0] : (range[0] + range[1]) / 2;\n  } // Avoid accuracy problem in edge, such as\n  // 146.39 - 62.83 === 83.55999999999999.\n  // See echarts/test/ut/spec/util/number.js#linearMap#accuracyError\n  // It is a little verbose for efficiency considering this method\n  // is a hotspot.\n\n\n  if (clamp) {\n    if (subDomain > 0) {\n      if (val <= domain[0]) {\n        return range[0];\n      } else if (val >= domain[1]) {\n        return range[1];\n      }\n    } else {\n      if (val >= domain[0]) {\n        return range[0];\n      } else if (val <= domain[1]) {\n        return range[1];\n      }\n    }\n  } else {\n    if (val === domain[0]) {\n      return range[0];\n    }\n\n    if (val === domain[1]) {\n      return range[1];\n    }\n  }\n\n  return (val - domain[0]) / subDomain * subRange + range[0];\n}\n/**\n * Convert a percent string to absolute number.\n * Returns NaN if percent is not a valid string or number\n * @memberOf module:echarts/util/number\n * @param {string|number} percent\n * @param {number} all\n * @return {number}\n */\n\n\nfunction parsePercent(percent, all) {\n  switch (percent) {\n    case 'center':\n    case 'middle':\n      percent = '50%';\n      break;\n\n    case 'left':\n    case 'top':\n      percent = '0%';\n      break;\n\n    case 'right':\n    case 'bottom':\n      percent = '100%';\n      break;\n  }\n\n  if (typeof percent === 'string') {\n    if (_trim(percent).match(/%$/)) {\n      return parseFloat(percent) / 100 * all;\n    }\n\n    return parseFloat(percent);\n  }\n\n  return percent == null ? NaN : +percent;\n}\n/**\n * (1) Fix rounding error of float numbers.\n * (2) Support return string to avoid scientific notation like '3.5e-7'.\n *\n * @param {number} x\n * @param {number} [precision]\n * @param {boolean} [returnStr]\n * @return {number|string}\n */\n\n\nfunction round(x, precision, returnStr) {\n  if (precision == null) {\n    precision = 10;\n  } // Avoid range error\n\n\n  precision = Math.min(Math.max(0, precision), 20);\n  x = (+x).toFixed(precision);\n  return returnStr ? x : +x;\n}\n\nfunction asc(arr) {\n  arr.sort(function (a, b) {\n    return a - b;\n  });\n  return arr;\n}\n/**\n * Get precision\n * @param {number} val\n */\n\n\nfunction getPrecision(val) {\n  val = +val;\n\n  if (isNaN(val)) {\n    return 0;\n  } // It is much faster than methods converting number to string as follows\n  //      var tmp = val.toString();\n  //      return tmp.length - 1 - tmp.indexOf('.');\n  // especially when precision is low\n\n\n  var e = 1;\n  var count = 0;\n\n  while (Math.round(val * e) / e !== val) {\n    e *= 10;\n    count++;\n  }\n\n  return count;\n}\n/**\n * @param {string|number} val\n * @return {number}\n */\n\n\nfunction getPrecisionSafe(val) {\n  var str = val.toString(); // Consider scientific notation: '3.4e-12' '3.4e+12'\n\n  var eIndex = str.indexOf('e');\n\n  if (eIndex > 0) {\n    var precision = +str.slice(eIndex + 1);\n    return precision < 0 ? -precision : 0;\n  } else {\n    var dotIndex = str.indexOf('.');\n    return dotIndex < 0 ? 0 : str.length - 1 - dotIndex;\n  }\n}\n/**\n * Minimal dicernible data precisioin according to a single pixel.\n *\n * @param {Array.<number>} dataExtent\n * @param {Array.<number>} pixelExtent\n * @return {number} precision\n */\n\n\nfunction getPixelPrecision(dataExtent, pixelExtent) {\n  var log = Math.log;\n  var LN10 = Math.LN10;\n  var dataQuantity = Math.floor(log(dataExtent[1] - dataExtent[0]) / LN10);\n  var sizeQuantity = Math.round(log(Math.abs(pixelExtent[1] - pixelExtent[0])) / LN10); // toFixed() digits argument must be between 0 and 20.\n\n  var precision = Math.min(Math.max(-dataQuantity + sizeQuantity, 0), 20);\n  return !isFinite(precision) ? 20 : precision;\n}\n/**\n * Get a data of given precision, assuring the sum of percentages\n * in valueList is 1.\n * The largest remainer method is used.\n * https://en.wikipedia.org/wiki/Largest_remainder_method\n *\n * @param {Array.<number>} valueList a list of all data\n * @param {number} idx index of the data to be processed in valueList\n * @param {number} precision integer number showing digits of precision\n * @return {number} percent ranging from 0 to 100\n */\n\n\nfunction getPercentWithPrecision(valueList, idx, precision) {\n  if (!valueList[idx]) {\n    return 0;\n  }\n\n  var sum = zrUtil.reduce(valueList, function (acc, val) {\n    return acc + (isNaN(val) ? 0 : val);\n  }, 0);\n\n  if (sum === 0) {\n    return 0;\n  }\n\n  var digits = Math.pow(10, precision);\n  var votesPerQuota = zrUtil.map(valueList, function (val) {\n    return (isNaN(val) ? 0 : val) / sum * digits * 100;\n  });\n  var targetSeats = digits * 100;\n  var seats = zrUtil.map(votesPerQuota, function (votes) {\n    // Assign automatic seats.\n    return Math.floor(votes);\n  });\n  var currentSum = zrUtil.reduce(seats, function (acc, val) {\n    return acc + val;\n  }, 0);\n  var remainder = zrUtil.map(votesPerQuota, function (votes, idx) {\n    return votes - seats[idx];\n  }); // Has remainding votes.\n\n  while (currentSum < targetSeats) {\n    // Find next largest remainder.\n    var max = Number.NEGATIVE_INFINITY;\n    var maxId = null;\n\n    for (var i = 0, len = remainder.length; i < len; ++i) {\n      if (remainder[i] > max) {\n        max = remainder[i];\n        maxId = i;\n      }\n    } // Add a vote to max remainder.\n\n\n    ++seats[maxId];\n    remainder[maxId] = 0;\n    ++currentSum;\n  }\n\n  return seats[idx] / digits;\n} // Number.MAX_SAFE_INTEGER, ie do not support.\n\n\nvar MAX_SAFE_INTEGER = 9007199254740991;\n/**\n * To 0 - 2 * PI, considering negative radian.\n * @param {number} radian\n * @return {number}\n */\n\nfunction remRadian(radian) {\n  var pi2 = Math.PI * 2;\n  return (radian % pi2 + pi2) % pi2;\n}\n/**\n * @param {type} radian\n * @return {boolean}\n */\n\n\nfunction isRadianAroundZero(val) {\n  return val > -RADIAN_EPSILON && val < RADIAN_EPSILON;\n}\n\nvar TIME_REG = /^(?:(\\d{4})(?:[-\\/](\\d{1,2})(?:[-\\/](\\d{1,2})(?:[T ](\\d{1,2})(?::(\\d\\d)(?::(\\d\\d)(?:[.,](\\d+))?)?)?(Z|[\\+\\-]\\d\\d:?\\d\\d)?)?)?)?)?$/; // jshint ignore:line\n\n/**\n * @param {string|Date|number} value These values can be accepted:\n *   + An instance of Date, represent a time in its own time zone.\n *   + Or string in a subset of ISO 8601, only including:\n *     + only year, month, date: '2012-03', '2012-03-01', '2012-03-01 05', '2012-03-01 05:06',\n *     + separated with T or space: '2012-03-01T12:22:33.123', '2012-03-01 12:22:33.123',\n *     + time zone: '2012-03-01T12:22:33Z', '2012-03-01T12:22:33+8000', '2012-03-01T12:22:33-05:00',\n *     all of which will be treated as local time if time zone is not specified\n *     (see <https://momentjs.com/>).\n *   + Or other string format, including (all of which will be treated as loacal time):\n *     '2012', '2012-3-1', '2012/3/1', '2012/03/01',\n *     '2009/6/12 2:00', '2009/6/12 2:05:08', '2009/6/12 2:05:08.123'\n *   + a timestamp, which represent a time in UTC.\n * @return {Date} date\n */\n\nfunction parseDate(value) {\n  if (value instanceof Date) {\n    return value;\n  } else if (typeof value === 'string') {\n    // Different browsers parse date in different way, so we parse it manually.\n    // Some other issues:\n    // new Date('1970-01-01') is UTC,\n    // new Date('1970/01/01') and new Date('1970-1-01') is local.\n    // See issue #3623\n    var match = TIME_REG.exec(value);\n\n    if (!match) {\n      // return Invalid Date.\n      return new Date(NaN);\n    } // Use local time when no timezone offset specifed.\n\n\n    if (!match[8]) {\n      // match[n] can only be string or undefined.\n      // But take care of '12' + 1 => '121'.\n      return new Date(+match[1], +(match[2] || 1) - 1, +match[3] || 1, +match[4] || 0, +(match[5] || 0), +match[6] || 0, +match[7] || 0);\n    } // Timezoneoffset of Javascript Date has considered DST (Daylight Saving Time,\n    // https://tc39.github.io/ecma262/#sec-daylight-saving-time-adjustment).\n    // For example, system timezone is set as \"Time Zone: America/Toronto\",\n    // then these code will get different result:\n    // `new Date(1478411999999).getTimezoneOffset();  // get 240`\n    // `new Date(1478412000000).getTimezoneOffset();  // get 300`\n    // So we should not use `new Date`, but use `Date.UTC`.\n    else {\n        var hour = +match[4] || 0;\n\n        if (match[8].toUpperCase() !== 'Z') {\n          hour -= match[8].slice(0, 3);\n        }\n\n        return new Date(Date.UTC(+match[1], +(match[2] || 1) - 1, +match[3] || 1, hour, +(match[5] || 0), +match[6] || 0, +match[7] || 0));\n      }\n  } else if (value == null) {\n    return new Date(NaN);\n  }\n\n  return new Date(Math.round(value));\n}\n/**\n * Quantity of a number. e.g. 0.1, 1, 10, 100\n *\n * @param  {number} val\n * @return {number}\n */\n\n\nfunction quantity(val) {\n  return Math.pow(10, quantityExponent(val));\n}\n\nfunction quantityExponent(val) {\n  return Math.floor(Math.log(val) / Math.LN10);\n}\n/**\n * find a “nice” number approximately equal to x. Round the number if round = true,\n * take ceiling if round = false. The primary observation is that the “nicest”\n * numbers in decimal are 1, 2, and 5, and all power-of-ten multiples of these numbers.\n *\n * See \"Nice Numbers for Graph Labels\" of Graphic Gems.\n *\n * @param  {number} val Non-negative value.\n * @param  {boolean} round\n * @return {number}\n */\n\n\nfunction nice(val, round) {\n  var exponent = quantityExponent(val);\n  var exp10 = Math.pow(10, exponent);\n  var f = val / exp10; // 1 <= f < 10\n\n  var nf;\n\n  if (round) {\n    if (f < 1.5) {\n      nf = 1;\n    } else if (f < 2.5) {\n      nf = 2;\n    } else if (f < 4) {\n      nf = 3;\n    } else if (f < 7) {\n      nf = 5;\n    } else {\n      nf = 10;\n    }\n  } else {\n    if (f < 1) {\n      nf = 1;\n    } else if (f < 2) {\n      nf = 2;\n    } else if (f < 3) {\n      nf = 3;\n    } else if (f < 5) {\n      nf = 5;\n    } else {\n      nf = 10;\n    }\n  }\n\n  val = nf * exp10; // Fix 3 * 0.1 === 0.30000000000000004 issue (see IEEE 754).\n  // 20 is the uppper bound of toFixed.\n\n  return exponent >= -20 ? +val.toFixed(exponent < 0 ? -exponent : 0) : val;\n}\n/**\n * Order intervals asc, and split them when overlap.\n * expect(numberUtil.reformIntervals([\n *     {interval: [18, 62], close: [1, 1]},\n *     {interval: [-Infinity, -70], close: [0, 0]},\n *     {interval: [-70, -26], close: [1, 1]},\n *     {interval: [-26, 18], close: [1, 1]},\n *     {interval: [62, 150], close: [1, 1]},\n *     {interval: [106, 150], close: [1, 1]},\n *     {interval: [150, Infinity], close: [0, 0]}\n * ])).toEqual([\n *     {interval: [-Infinity, -70], close: [0, 0]},\n *     {interval: [-70, -26], close: [1, 1]},\n *     {interval: [-26, 18], close: [0, 1]},\n *     {interval: [18, 62], close: [0, 1]},\n *     {interval: [62, 150], close: [0, 1]},\n *     {interval: [150, Infinity], close: [0, 0]}\n * ]);\n * @param {Array.<Object>} list, where `close` mean open or close\n *        of the interval, and Infinity can be used.\n * @return {Array.<Object>} The origin list, which has been reformed.\n */\n\n\nfunction reformIntervals(list) {\n  list.sort(function (a, b) {\n    return littleThan(a, b, 0) ? -1 : 1;\n  });\n  var curr = -Infinity;\n  var currClose = 1;\n\n  for (var i = 0; i < list.length;) {\n    var interval = list[i].interval;\n    var close = list[i].close;\n\n    for (var lg = 0; lg < 2; lg++) {\n      if (interval[lg] <= curr) {\n        interval[lg] = curr;\n        close[lg] = !lg ? 1 - currClose : 1;\n      }\n\n      curr = interval[lg];\n      currClose = close[lg];\n    }\n\n    if (interval[0] === interval[1] && close[0] * close[1] !== 1) {\n      list.splice(i, 1);\n    } else {\n      i++;\n    }\n  }\n\n  return list;\n\n  function littleThan(a, b, lg) {\n    return a.interval[lg] < b.interval[lg] || a.interval[lg] === b.interval[lg] && (a.close[lg] - b.close[lg] === (!lg ? 1 : -1) || !lg && littleThan(a, b, 1));\n  }\n}\n/**\n * parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n * ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n * subtraction forces infinities to NaN\n *\n * @param {*} v\n * @return {boolean}\n */\n\n\nfunction isNumeric(v) {\n  return v - parseFloat(v) >= 0;\n}\n\nexports.linearMap = linearMap;\nexports.parsePercent = parsePercent;\nexports.round = round;\nexports.asc = asc;\nexports.getPrecision = getPrecision;\nexports.getPrecisionSafe = getPrecisionSafe;\nexports.getPixelPrecision = getPixelPrecision;\nexports.getPercentWithPrecision = getPercentWithPrecision;\nexports.MAX_SAFE_INTEGER = MAX_SAFE_INTEGER;\nexports.remRadian = remRadian;\nexports.isRadianAroundZero = isRadianAroundZero;\nexports.parseDate = parseDate;\nexports.quantity = quantity;\nexports.nice = nice;\nexports.reformIntervals = reformIntervals;\nexports.isNumeric = isNumeric;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"./Model\");\n\nvar componentUtil = require(\"../util/component\");\n\nvar _clazz = require(\"../util/clazz\");\n\nvar enableClassManagement = _clazz.enableClassManagement;\nvar parseClassType = _clazz.parseClassType;\n\nvar _model = require(\"../util/model\");\n\nvar makeInner = _model.makeInner;\n\nvar layout = require(\"../util/layout\");\n\nvar boxLayoutMixin = require(\"./mixin/boxLayout\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Component model\n *\n * @module echarts/model/Component\n */\nvar inner = makeInner();\n/**\n * @alias module:echarts/model/Component\n * @constructor\n * @param {Object} option\n * @param {module:echarts/model/Model} parentModel\n * @param {module:echarts/model/Model} ecModel\n */\n\nvar ComponentModel = Model.extend({\n  type: 'component',\n\n  /**\n   * @readOnly\n   * @type {string}\n   */\n  id: '',\n\n  /**\n   * Because simplified concept is probably better, series.name (or component.name)\n   * has been having too many resposibilities:\n   * (1) Generating id (which requires name in option should not be modified).\n   * (2) As an index to mapping series when merging option or calling API (a name\n   * can refer to more then one components, which is convinient is some case).\n   * (3) Display.\n   * @readOnly\n   */\n  name: '',\n\n  /**\n   * @readOnly\n   * @type {string}\n   */\n  mainType: '',\n\n  /**\n   * @readOnly\n   * @type {string}\n   */\n  subType: '',\n\n  /**\n   * @readOnly\n   * @type {number}\n   */\n  componentIndex: 0,\n\n  /**\n   * @type {Object}\n   * @protected\n   */\n  defaultOption: null,\n\n  /**\n   * @type {module:echarts/model/Global}\n   * @readOnly\n   */\n  ecModel: null,\n\n  /**\n   * key: componentType\n   * value:  Component model list, can not be null.\n   * @type {Object.<string, Array.<module:echarts/model/Model>>}\n   * @readOnly\n   */\n  dependentModels: [],\n\n  /**\n   * @type {string}\n   * @readOnly\n   */\n  uid: null,\n\n  /**\n   * Support merge layout params.\n   * Only support 'box' now (left/right/top/bottom/width/height).\n   * @type {string|Object} Object can be {ignoreSize: true}\n   * @readOnly\n   */\n  layoutMode: null,\n  $constructor: function (option, parentModel, ecModel, extraOpt) {\n    Model.call(this, option, parentModel, ecModel, extraOpt);\n    this.uid = componentUtil.getUID('ec_cpt_model');\n  },\n  init: function (option, parentModel, ecModel, extraOpt) {\n    this.mergeDefaultAndTheme(option, ecModel);\n  },\n  mergeDefaultAndTheme: function (option, ecModel) {\n    var layoutMode = this.layoutMode;\n    var inputPositionParams = layoutMode ? layout.getLayoutParams(option) : {};\n    var themeModel = ecModel.getTheme();\n    zrUtil.merge(option, themeModel.get(this.mainType));\n    zrUtil.merge(option, this.getDefaultOption());\n\n    if (layoutMode) {\n      layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n    }\n  },\n  mergeOption: function (option, extraOpt) {\n    zrUtil.merge(this.option, option, true);\n    var layoutMode = this.layoutMode;\n\n    if (layoutMode) {\n      layout.mergeLayoutParam(this.option, option, layoutMode);\n    }\n  },\n  // Hooker after init or mergeOption\n  optionUpdated: function (newCptOption, isInit) {},\n  getDefaultOption: function () {\n    var fields = inner(this);\n\n    if (!fields.defaultOption) {\n      var optList = [];\n      var Class = this.constructor;\n\n      while (Class) {\n        var opt = Class.prototype.defaultOption;\n        opt && optList.push(opt);\n        Class = Class.superClass;\n      }\n\n      var defaultOption = {};\n\n      for (var i = optList.length - 1; i >= 0; i--) {\n        defaultOption = zrUtil.merge(defaultOption, optList[i], true);\n      }\n\n      fields.defaultOption = defaultOption;\n    }\n\n    return fields.defaultOption;\n  },\n  getReferringComponents: function (mainType) {\n    return this.ecModel.queryComponents({\n      mainType: mainType,\n      index: this.get(mainType + 'Index', true),\n      id: this.get(mainType + 'Id', true)\n    });\n  }\n}); // Reset ComponentModel.extend, add preConstruct.\n// clazzUtil.enableClassExtend(\n//     ComponentModel,\n//     function (option, parentModel, ecModel, extraOpt) {\n//         // Set dependentModels, componentIndex, name, id, mainType, subType.\n//         zrUtil.extend(this, extraOpt);\n//         this.uid = componentUtil.getUID('componentModel');\n//         // this.setReadOnly([\n//         //     'type', 'id', 'uid', 'name', 'mainType', 'subType',\n//         //     'dependentModels', 'componentIndex'\n//         // ]);\n//     }\n// );\n// Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n\nenableClassManagement(ComponentModel, {\n  registerWhenExtend: true\n});\ncomponentUtil.enableSubTypeDefaulter(ComponentModel); // Add capability of ComponentModel.topologicalTravel.\n\ncomponentUtil.enableTopologicalTravel(ComponentModel, getDependencies);\n\nfunction getDependencies(componentType) {\n  var deps = [];\n  zrUtil.each(ComponentModel.getClassesByMainType(componentType), function (Clazz) {\n    deps = deps.concat(Clazz.prototype.dependencies || []);\n  }); // Ensure main type.\n\n  deps = zrUtil.map(deps, function (type) {\n    return parseClassType(type).main;\n  }); // Hack dataset for convenience.\n\n  if (componentType !== 'dataset' && zrUtil.indexOf(deps, 'dataset') <= 0) {\n    deps.unshift('dataset');\n  }\n\n  return deps;\n}\n\nzrUtil.mixin(ComponentModel, boxLayoutMixin);\nvar _default = ComponentModel;\nmodule.exports = _default;","var _curve = require(\"../core/curve\");\n\nvar quadraticProjectPoint = _curve.quadraticProjectPoint;\n\n/**\n * 二次贝塞尔曲线描边包含判断\n * @param  {number}  x0\n * @param  {number}  y0\n * @param  {number}  x1\n * @param  {number}  y1\n * @param  {number}  x2\n * @param  {number}  y2\n * @param  {number}  lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {boolean}\n */\nfunction containStroke(x0, y0, x1, y1, x2, y2, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth; // Quick reject\n\n  if (y > y0 + _l && y > y1 + _l && y > y2 + _l || y < y0 - _l && y < y1 - _l && y < y2 - _l || x > x0 + _l && x > x1 + _l && x > x2 + _l || x < x0 - _l && x < x1 - _l && x < x2 - _l) {\n    return false;\n  }\n\n  var d = quadraticProjectPoint(x0, y0, x1, y1, x2, y2, x, y, null);\n  return d <= _l / 2;\n}\n\nexports.containStroke = containStroke;","var _util = require(\"./util\");\n\nvar normalizeRadian = _util.normalizeRadian;\nvar PI2 = Math.PI * 2;\n/**\n * 圆弧描边包含判断\n * @param  {number}  cx\n * @param  {number}  cy\n * @param  {number}  r\n * @param  {number}  startAngle\n * @param  {number}  endAngle\n * @param  {boolean}  anticlockwise\n * @param  {number} lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {Boolean}\n */\n\nfunction containStroke(cx, cy, r, startAngle, endAngle, anticlockwise, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth;\n  x -= cx;\n  y -= cy;\n  var d = Math.sqrt(x * x + y * y);\n\n  if (d - _l > r || d + _l < r) {\n    return false;\n  }\n\n  if (Math.abs(startAngle - endAngle) % PI2 < 1e-4) {\n    // Is a circle\n    return true;\n  }\n\n  if (anticlockwise) {\n    var tmp = startAngle;\n    startAngle = normalizeRadian(endAngle);\n    endAngle = normalizeRadian(tmp);\n  } else {\n    startAngle = normalizeRadian(startAngle);\n    endAngle = normalizeRadian(endAngle);\n  }\n\n  if (startAngle > endAngle) {\n    endAngle += PI2;\n  }\n\n  var angle = Math.atan2(y, x);\n\n  if (angle < 0) {\n    angle += PI2;\n  }\n\n  return angle >= startAngle && angle <= endAngle || angle + PI2 >= startAngle && angle + PI2 <= endAngle;\n}\n\nexports.containStroke = containStroke;","var graphic = require(\"../../util/graphic\");\n\nvar BaseAxisPointer = require(\"./BaseAxisPointer\");\n\nvar viewHelper = require(\"./viewHelper\");\n\nvar cartesianAxisHelper = require(\"../../coord/cartesian/cartesianAxisHelper\");\n\nvar AxisView = require(\"../axis/AxisView\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar CartesianAxisPointer = BaseAxisPointer.extend({\n  /**\n   * @override\n   */\n  makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n    var axis = axisModel.axis;\n    var grid = axis.grid;\n    var axisPointerType = axisPointerModel.get('type');\n    var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n    var pixelValue = axis.toGlobalCoord(axis.dataToCoord(value, true));\n\n    if (axisPointerType && axisPointerType !== 'none') {\n      var elStyle = viewHelper.buildElStyle(axisPointerModel);\n      var pointerOption = pointerShapeBuilder[axisPointerType](axis, pixelValue, otherExtent, elStyle);\n      pointerOption.style = elStyle;\n      elOption.graphicKey = pointerOption.type;\n      elOption.pointer = pointerOption;\n    }\n\n    var layoutInfo = cartesianAxisHelper.layout(grid.model, axisModel);\n    viewHelper.buildCartesianSingleLabelElOption(value, elOption, layoutInfo, axisModel, axisPointerModel, api);\n  },\n\n  /**\n   * @override\n   */\n  getHandleTransform: function (value, axisModel, axisPointerModel) {\n    var layoutInfo = cartesianAxisHelper.layout(axisModel.axis.grid.model, axisModel, {\n      labelInside: false\n    });\n    layoutInfo.labelMargin = axisPointerModel.get('handle.margin');\n    return {\n      position: viewHelper.getTransformedPosition(axisModel.axis, value, layoutInfo),\n      rotation: layoutInfo.rotation + (layoutInfo.labelDirection < 0 ? Math.PI : 0)\n    };\n  },\n\n  /**\n   * @override\n   */\n  updateHandleTransform: function (transform, delta, axisModel, axisPointerModel) {\n    var axis = axisModel.axis;\n    var grid = axis.grid;\n    var axisExtent = axis.getGlobalExtent(true);\n    var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n    var dimIndex = axis.dim === 'x' ? 0 : 1;\n    var currPosition = transform.position;\n    currPosition[dimIndex] += delta[dimIndex];\n    currPosition[dimIndex] = Math.min(axisExtent[1], currPosition[dimIndex]);\n    currPosition[dimIndex] = Math.max(axisExtent[0], currPosition[dimIndex]);\n    var cursorOtherValue = (otherExtent[1] + otherExtent[0]) / 2;\n    var cursorPoint = [cursorOtherValue, cursorOtherValue];\n    cursorPoint[dimIndex] = currPosition[dimIndex]; // Make tooltip do not overlap axisPointer and in the middle of the grid.\n\n    var tooltipOptions = [{\n      verticalAlign: 'middle'\n    }, {\n      align: 'center'\n    }];\n    return {\n      position: currPosition,\n      rotation: transform.rotation,\n      cursorPoint: cursorPoint,\n      tooltipOption: tooltipOptions[dimIndex]\n    };\n  }\n});\n\nfunction getCartesian(grid, axis) {\n  var opt = {};\n  opt[axis.dim + 'AxisIndex'] = axis.index;\n  return grid.getCartesian(opt);\n}\n\nvar pointerShapeBuilder = {\n  line: function (axis, pixelValue, otherExtent, elStyle) {\n    var targetShape = viewHelper.makeLineShape([pixelValue, otherExtent[0]], [pixelValue, otherExtent[1]], getAxisDimIndex(axis));\n    graphic.subPixelOptimizeLine({\n      shape: targetShape,\n      style: elStyle\n    });\n    return {\n      type: 'Line',\n      shape: targetShape\n    };\n  },\n  shadow: function (axis, pixelValue, otherExtent, elStyle) {\n    var bandWidth = Math.max(1, axis.getBandWidth());\n    var span = otherExtent[1] - otherExtent[0];\n    return {\n      type: 'Rect',\n      shape: viewHelper.makeRectShape([pixelValue - bandWidth / 2, otherExtent[0]], [bandWidth, span], getAxisDimIndex(axis))\n    };\n  }\n};\n\nfunction getAxisDimIndex(axis) {\n  return axis.dim === 'x' ? 0 : 1;\n}\n\nAxisView.registerAxisPointerClass('CartesianAxisPointer', CartesianAxisPointer);\nvar _default = CartesianAxisPointer;\nmodule.exports = _default;","/**\n * @param {Array.<Object>} colorStops\n */\nvar Gradient = function (colorStops) {\n  this.colorStops = colorStops || [];\n};\n\nGradient.prototype = {\n  constructor: Gradient,\n  addColorStop: function (offset, color) {\n    this.colorStops.push({\n      offset: offset,\n      color: color\n    });\n  }\n};\nvar _default = Gradient;\nmodule.exports = _default;","var _util = require(\"../core/util\");\n\nvar inherits = _util.inherits;\n\nvar Displayble = require(\"./Displayable\");\n\nvar BoundingRect = require(\"../core/BoundingRect\");\n\n/**\n * Displayable for incremental rendering. It will be rendered in a separate layer\n * IncrementalDisplay have too main methods. `clearDisplayables` and `addDisplayables`\n * addDisplayables will render the added displayables incremetally.\n *\n * It use a not clearFlag to tell the painter don't clear the layer if it's the first element.\n */\n// TODO Style override ?\nfunction IncrementalDisplayble(opts) {\n  Displayble.call(this, opts);\n  this._displayables = [];\n  this._temporaryDisplayables = [];\n  this._cursor = 0;\n  this.notClear = true;\n}\n\nIncrementalDisplayble.prototype.incremental = true;\n\nIncrementalDisplayble.prototype.clearDisplaybles = function () {\n  this._displayables = [];\n  this._temporaryDisplayables = [];\n  this._cursor = 0;\n  this.dirty();\n  this.notClear = false;\n};\n\nIncrementalDisplayble.prototype.addDisplayable = function (displayable, notPersistent) {\n  if (notPersistent) {\n    this._temporaryDisplayables.push(displayable);\n  } else {\n    this._displayables.push(displayable);\n  }\n\n  this.dirty();\n};\n\nIncrementalDisplayble.prototype.addDisplayables = function (displayables, notPersistent) {\n  notPersistent = notPersistent || false;\n\n  for (var i = 0; i < displayables.length; i++) {\n    this.addDisplayable(displayables[i], notPersistent);\n  }\n};\n\nIncrementalDisplayble.prototype.eachPendingDisplayable = function (cb) {\n  for (var i = this._cursor; i < this._displayables.length; i++) {\n    cb && cb(this._displayables[i]);\n  }\n\n  for (var i = 0; i < this._temporaryDisplayables.length; i++) {\n    cb && cb(this._temporaryDisplayables[i]);\n  }\n};\n\nIncrementalDisplayble.prototype.update = function () {\n  this.updateTransform();\n\n  for (var i = this._cursor; i < this._displayables.length; i++) {\n    var displayable = this._displayables[i]; // PENDING\n\n    displayable.parent = this;\n    displayable.update();\n    displayable.parent = null;\n  }\n\n  for (var i = 0; i < this._temporaryDisplayables.length; i++) {\n    var displayable = this._temporaryDisplayables[i]; // PENDING\n\n    displayable.parent = this;\n    displayable.update();\n    displayable.parent = null;\n  }\n};\n\nIncrementalDisplayble.prototype.brush = function (ctx, prevEl) {\n  // Render persistant displayables.\n  for (var i = this._cursor; i < this._displayables.length; i++) {\n    var displayable = this._displayables[i];\n    displayable.beforeBrush && displayable.beforeBrush(ctx);\n    displayable.brush(ctx, i === this._cursor ? null : this._displayables[i - 1]);\n    displayable.afterBrush && displayable.afterBrush(ctx);\n  }\n\n  this._cursor = i; // Render temporary displayables.\n\n  for (var i = 0; i < this._temporaryDisplayables.length; i++) {\n    var displayable = this._temporaryDisplayables[i];\n    displayable.beforeBrush && displayable.beforeBrush(ctx);\n    displayable.brush(ctx, i === 0 ? null : this._temporaryDisplayables[i - 1]);\n    displayable.afterBrush && displayable.afterBrush(ctx);\n  }\n\n  this._temporaryDisplayables = [];\n  this.notClear = true;\n};\n\nvar m = [];\n\nIncrementalDisplayble.prototype.getBoundingRect = function () {\n  if (!this._rect) {\n    var rect = new BoundingRect(Infinity, Infinity, -Infinity, -Infinity);\n\n    for (var i = 0; i < this._displayables.length; i++) {\n      var displayable = this._displayables[i];\n      var childRect = displayable.getBoundingRect().clone();\n\n      if (displayable.needLocalTransform()) {\n        childRect.applyTransform(displayable.getLocalTransform(m));\n      }\n\n      rect.union(childRect);\n    }\n\n    this._rect = rect;\n  }\n\n  return this._rect;\n};\n\nIncrementalDisplayble.prototype.contain = function (x, y) {\n  var localPos = this.transformCoordToLocal(x, y);\n  var rect = this.getBoundingRect();\n\n  if (rect.contain(localPos[0], localPos[1])) {\n    for (var i = 0; i < this._displayables.length; i++) {\n      var displayable = this._displayables[i];\n\n      if (displayable.contain(x, y)) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n};\n\ninherits(IncrementalDisplayble, Displayble);\nvar _default = IncrementalDisplayble;\nmodule.exports = _default;","var _vector = require(\"../../core/vector\");\n\nvar v2Min = _vector.min;\nvar v2Max = _vector.max;\nvar v2Scale = _vector.scale;\nvar v2Distance = _vector.distance;\nvar v2Add = _vector.add;\nvar v2Clone = _vector.clone;\nvar v2Sub = _vector.sub;\n\n/**\n * 贝塞尔平滑曲线\n * @module zrender/shape/util/smoothBezier\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n/**\n * 贝塞尔平滑曲线\n * @alias module:zrender/shape/util/smoothBezier\n * @param {Array} points 线段顶点数组\n * @param {number} smooth 平滑等级, 0-1\n * @param {boolean} isLoop\n * @param {Array} constraint 将计算出来的控制点约束在一个包围盒内\n *                           比如 [[0, 0], [100, 100]], 这个包围盒会与\n *                           整个折线的包围盒做一个并集用来约束控制点。\n * @param {Array} 计算出来的控制点数组\n */\nfunction _default(points, smooth, isLoop, constraint) {\n  var cps = [];\n  var v = [];\n  var v1 = [];\n  var v2 = [];\n  var prevPoint;\n  var nextPoint;\n  var min, max;\n\n  if (constraint) {\n    min = [Infinity, Infinity];\n    max = [-Infinity, -Infinity];\n\n    for (var i = 0, len = points.length; i < len; i++) {\n      v2Min(min, min, points[i]);\n      v2Max(max, max, points[i]);\n    } // 与指定的包围盒做并集\n\n\n    v2Min(min, min, constraint[0]);\n    v2Max(max, max, constraint[1]);\n  }\n\n  for (var i = 0, len = points.length; i < len; i++) {\n    var point = points[i];\n\n    if (isLoop) {\n      prevPoint = points[i ? i - 1 : len - 1];\n      nextPoint = points[(i + 1) % len];\n    } else {\n      if (i === 0 || i === len - 1) {\n        cps.push(v2Clone(points[i]));\n        continue;\n      } else {\n        prevPoint = points[i - 1];\n        nextPoint = points[i + 1];\n      }\n    }\n\n    v2Sub(v, nextPoint, prevPoint); // use degree to scale the handle length\n\n    v2Scale(v, v, smooth);\n    var d0 = v2Distance(point, prevPoint);\n    var d1 = v2Distance(point, nextPoint);\n    var sum = d0 + d1;\n\n    if (sum !== 0) {\n      d0 /= sum;\n      d1 /= sum;\n    }\n\n    v2Scale(v1, v, -d0);\n    v2Scale(v2, v, d1);\n    var cp0 = v2Add([], point, v1);\n    var cp1 = v2Add([], point, v2);\n\n    if (constraint) {\n      v2Max(cp0, cp0, min);\n      v2Min(cp0, cp0, max);\n      v2Max(cp1, cp1, min);\n      v2Min(cp1, cp1, max);\n    }\n\n    cps.push(cp0);\n    cps.push(cp1);\n  }\n\n  if (isLoop) {\n    cps.push(cps.shift());\n  }\n\n  return cps;\n}\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(ecModel) {\n  var legendModels = ecModel.findComponents({\n    mainType: 'legend'\n  });\n\n  if (legendModels && legendModels.length) {\n    ecModel.filterSeries(function (series) {\n      // If in any legend component the status is not selected.\n      // Because in legend series is assumed selected when it is not in the legend data.\n      for (var i = 0; i < legendModels.length; i++) {\n        if (!legendModels[i].isSelected(series.name)) {\n          return false;\n        }\n      }\n\n      return true;\n    });\n  }\n}\n\nmodule.exports = _default;","var BoundingRect = require(\"../core/BoundingRect\");\n\nvar imageHelper = require(\"../graphic/helper/image\");\n\nvar _util = require(\"../core/util\");\n\nvar getContext = _util.getContext;\nvar extend = _util.extend;\nvar retrieve2 = _util.retrieve2;\nvar retrieve3 = _util.retrieve3;\nvar trim = _util.trim;\nvar textWidthCache = {};\nvar textWidthCacheCounter = 0;\nvar TEXT_CACHE_MAX = 5000;\nvar STYLE_REG = /\\{([a-zA-Z0-9_]+)\\|([^}]*)\\}/g;\nvar DEFAULT_FONT = '12px sans-serif'; // Avoid assign to an exported variable, for transforming to cjs.\n\nvar methods = {};\n\nfunction $override(name, fn) {\n  methods[name] = fn;\n}\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @return {number} width\n */\n\n\nfunction getWidth(text, font) {\n  font = font || DEFAULT_FONT;\n  var key = text + ':' + font;\n\n  if (textWidthCache[key]) {\n    return textWidthCache[key];\n  }\n\n  var textLines = (text + '').split('\\n');\n  var width = 0;\n\n  for (var i = 0, l = textLines.length; i < l; i++) {\n    // textContain.measureText may be overrided in SVG or VML\n    width = Math.max(measureText(textLines[i], font).width, width);\n  }\n\n  if (textWidthCacheCounter > TEXT_CACHE_MAX) {\n    textWidthCacheCounter = 0;\n    textWidthCache = {};\n  }\n\n  textWidthCacheCounter++;\n  textWidthCache[key] = width;\n  return width;\n}\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @param {string} [textAlign='left']\n * @param {string} [textVerticalAlign='top']\n * @param {Array.<number>} [textPadding]\n * @param {Object} [rich]\n * @param {Object} [truncate]\n * @return {Object} {x, y, width, height, lineHeight}\n */\n\n\nfunction getBoundingRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) {\n  return rich ? getRichTextRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) : getPlainTextRect(text, font, textAlign, textVerticalAlign, textPadding, truncate);\n}\n\nfunction getPlainTextRect(text, font, textAlign, textVerticalAlign, textPadding, truncate) {\n  var contentBlock = parsePlainText(text, font, textPadding, truncate);\n  var outerWidth = getWidth(text, font);\n\n  if (textPadding) {\n    outerWidth += textPadding[1] + textPadding[3];\n  }\n\n  var outerHeight = contentBlock.outerHeight;\n  var x = adjustTextX(0, outerWidth, textAlign);\n  var y = adjustTextY(0, outerHeight, textVerticalAlign);\n  var rect = new BoundingRect(x, y, outerWidth, outerHeight);\n  rect.lineHeight = contentBlock.lineHeight;\n  return rect;\n}\n\nfunction getRichTextRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) {\n  var contentBlock = parseRichText(text, {\n    rich: rich,\n    truncate: truncate,\n    font: font,\n    textAlign: textAlign,\n    textPadding: textPadding\n  });\n  var outerWidth = contentBlock.outerWidth;\n  var outerHeight = contentBlock.outerHeight;\n  var x = adjustTextX(0, outerWidth, textAlign);\n  var y = adjustTextY(0, outerHeight, textVerticalAlign);\n  return new BoundingRect(x, y, outerWidth, outerHeight);\n}\n/**\n * @public\n * @param {number} x\n * @param {number} width\n * @param {string} [textAlign='left']\n * @return {number} Adjusted x.\n */\n\n\nfunction adjustTextX(x, width, textAlign) {\n  // FIXME Right to left language\n  if (textAlign === 'right') {\n    x -= width;\n  } else if (textAlign === 'center') {\n    x -= width / 2;\n  }\n\n  return x;\n}\n/**\n * @public\n * @param {number} y\n * @param {number} height\n * @param {string} [textVerticalAlign='top']\n * @return {number} Adjusted y.\n */\n\n\nfunction adjustTextY(y, height, textVerticalAlign) {\n  if (textVerticalAlign === 'middle') {\n    y -= height / 2;\n  } else if (textVerticalAlign === 'bottom') {\n    y -= height;\n  }\n\n  return y;\n}\n/**\n * @public\n * @param {stirng} textPosition\n * @param {Object} rect {x, y, width, height}\n * @param {number} distance\n * @return {Object} {x, y, textAlign, textVerticalAlign}\n */\n\n\nfunction adjustTextPositionOnRect(textPosition, rect, distance) {\n  var x = rect.x;\n  var y = rect.y;\n  var height = rect.height;\n  var width = rect.width;\n  var halfHeight = height / 2;\n  var textAlign = 'left';\n  var textVerticalAlign = 'top';\n\n  switch (textPosition) {\n    case 'left':\n      x -= distance;\n      y += halfHeight;\n      textAlign = 'right';\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'right':\n      x += distance + width;\n      y += halfHeight;\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'top':\n      x += width / 2;\n      y -= distance;\n      textAlign = 'center';\n      textVerticalAlign = 'bottom';\n      break;\n\n    case 'bottom':\n      x += width / 2;\n      y += height + distance;\n      textAlign = 'center';\n      break;\n\n    case 'inside':\n      x += width / 2;\n      y += halfHeight;\n      textAlign = 'center';\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'insideLeft':\n      x += distance;\n      y += halfHeight;\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'insideRight':\n      x += width - distance;\n      y += halfHeight;\n      textAlign = 'right';\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'insideTop':\n      x += width / 2;\n      y += distance;\n      textAlign = 'center';\n      break;\n\n    case 'insideBottom':\n      x += width / 2;\n      y += height - distance;\n      textAlign = 'center';\n      textVerticalAlign = 'bottom';\n      break;\n\n    case 'insideTopLeft':\n      x += distance;\n      y += distance;\n      break;\n\n    case 'insideTopRight':\n      x += width - distance;\n      y += distance;\n      textAlign = 'right';\n      break;\n\n    case 'insideBottomLeft':\n      x += distance;\n      y += height - distance;\n      textVerticalAlign = 'bottom';\n      break;\n\n    case 'insideBottomRight':\n      x += width - distance;\n      y += height - distance;\n      textAlign = 'right';\n      textVerticalAlign = 'bottom';\n      break;\n  }\n\n  return {\n    x: x,\n    y: y,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n/**\n * Show ellipsis if overflow.\n *\n * @public\n * @param  {string} text\n * @param  {string} containerWidth\n * @param  {string} font\n * @param  {number} [ellipsis='...']\n * @param  {Object} [options]\n * @param  {number} [options.maxIterations=3]\n * @param  {number} [options.minChar=0] If truncate result are less\n *                  then minChar, ellipsis will not show, which is\n *                  better for user hint in some cases.\n * @param  {number} [options.placeholder=''] When all truncated, use the placeholder.\n * @return {string}\n */\n\n\nfunction truncateText(text, containerWidth, font, ellipsis, options) {\n  if (!containerWidth) {\n    return '';\n  }\n\n  var textLines = (text + '').split('\\n');\n  options = prepareTruncateOptions(containerWidth, font, ellipsis, options); // FIXME\n  // It is not appropriate that every line has '...' when truncate multiple lines.\n\n  for (var i = 0, len = textLines.length; i < len; i++) {\n    textLines[i] = truncateSingleLine(textLines[i], options);\n  }\n\n  return textLines.join('\\n');\n}\n\nfunction prepareTruncateOptions(containerWidth, font, ellipsis, options) {\n  options = extend({}, options);\n  options.font = font;\n  var ellipsis = retrieve2(ellipsis, '...');\n  options.maxIterations = retrieve2(options.maxIterations, 2);\n  var minChar = options.minChar = retrieve2(options.minChar, 0); // FIXME\n  // Other languages?\n\n  options.cnCharWidth = getWidth('国', font); // FIXME\n  // Consider proportional font?\n\n  var ascCharWidth = options.ascCharWidth = getWidth('a', font);\n  options.placeholder = retrieve2(options.placeholder, ''); // Example 1: minChar: 3, text: 'asdfzxcv', truncate result: 'asdf', but not: 'a...'.\n  // Example 2: minChar: 3, text: '维度', truncate result: '维', but not: '...'.\n\n  var contentWidth = containerWidth = Math.max(0, containerWidth - 1); // Reserve some gap.\n\n  for (var i = 0; i < minChar && contentWidth >= ascCharWidth; i++) {\n    contentWidth -= ascCharWidth;\n  }\n\n  var ellipsisWidth = getWidth(ellipsis);\n\n  if (ellipsisWidth > contentWidth) {\n    ellipsis = '';\n    ellipsisWidth = 0;\n  }\n\n  contentWidth = containerWidth - ellipsisWidth;\n  options.ellipsis = ellipsis;\n  options.ellipsisWidth = ellipsisWidth;\n  options.contentWidth = contentWidth;\n  options.containerWidth = containerWidth;\n  return options;\n}\n\nfunction truncateSingleLine(textLine, options) {\n  var containerWidth = options.containerWidth;\n  var font = options.font;\n  var contentWidth = options.contentWidth;\n\n  if (!containerWidth) {\n    return '';\n  }\n\n  var lineWidth = getWidth(textLine, font);\n\n  if (lineWidth <= containerWidth) {\n    return textLine;\n  }\n\n  for (var j = 0;; j++) {\n    if (lineWidth <= contentWidth || j >= options.maxIterations) {\n      textLine += options.ellipsis;\n      break;\n    }\n\n    var subLength = j === 0 ? estimateLength(textLine, contentWidth, options.ascCharWidth, options.cnCharWidth) : lineWidth > 0 ? Math.floor(textLine.length * contentWidth / lineWidth) : 0;\n    textLine = textLine.substr(0, subLength);\n    lineWidth = getWidth(textLine, font);\n  }\n\n  if (textLine === '') {\n    textLine = options.placeholder;\n  }\n\n  return textLine;\n}\n\nfunction estimateLength(text, contentWidth, ascCharWidth, cnCharWidth) {\n  var width = 0;\n  var i = 0;\n\n  for (var len = text.length; i < len && width < contentWidth; i++) {\n    var charCode = text.charCodeAt(i);\n    width += 0 <= charCode && charCode <= 127 ? ascCharWidth : cnCharWidth;\n  }\n\n  return i;\n}\n/**\n * @public\n * @param {string} font\n * @return {number} line height\n */\n\n\nfunction getLineHeight(font) {\n  // FIXME A rough approach.\n  return getWidth('国', font);\n}\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @return {Object} width\n */\n\n\nfunction measureText(text, font) {\n  return methods.measureText(text, font);\n} // Avoid assign to an exported variable, for transforming to cjs.\n\n\nmethods.measureText = function (text, font) {\n  var ctx = getContext();\n  ctx.font = font || DEFAULT_FONT;\n  return ctx.measureText(text);\n};\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @param {Object} [truncate]\n * @return {Object} block: {lineHeight, lines, height, outerHeight}\n *  Notice: for performance, do not calculate outerWidth util needed.\n */\n\n\nfunction parsePlainText(text, font, padding, truncate) {\n  text != null && (text += '');\n  var lineHeight = getLineHeight(font);\n  var lines = text ? text.split('\\n') : [];\n  var height = lines.length * lineHeight;\n  var outerHeight = height;\n\n  if (padding) {\n    outerHeight += padding[0] + padding[2];\n  }\n\n  if (text && truncate) {\n    var truncOuterHeight = truncate.outerHeight;\n    var truncOuterWidth = truncate.outerWidth;\n\n    if (truncOuterHeight != null && outerHeight > truncOuterHeight) {\n      text = '';\n      lines = [];\n    } else if (truncOuterWidth != null) {\n      var options = prepareTruncateOptions(truncOuterWidth - (padding ? padding[1] + padding[3] : 0), font, truncate.ellipsis, {\n        minChar: truncate.minChar,\n        placeholder: truncate.placeholder\n      }); // FIXME\n      // It is not appropriate that every line has '...' when truncate multiple lines.\n\n      for (var i = 0, len = lines.length; i < len; i++) {\n        lines[i] = truncateSingleLine(lines[i], options);\n      }\n    }\n  }\n\n  return {\n    lines: lines,\n    height: height,\n    outerHeight: outerHeight,\n    lineHeight: lineHeight\n  };\n}\n/**\n * For example: 'some text {a|some text}other text{b|some text}xxx{c|}xxx'\n * Also consider 'bbbb{a|xxx\\nzzz}xxxx\\naaaa'.\n *\n * @public\n * @param {string} text\n * @param {Object} style\n * @return {Object} block\n * {\n *      width,\n *      height,\n *      lines: [{\n *          lineHeight,\n *          width,\n *          tokens: [[{\n *              styleName,\n *              text,\n *              width,      // include textPadding\n *              height,     // include textPadding\n *              textWidth, // pure text width\n *              textHeight, // pure text height\n *              lineHeihgt,\n *              font,\n *              textAlign,\n *              textVerticalAlign\n *          }], [...], ...]\n *      }, ...]\n * }\n * If styleName is undefined, it is plain text.\n */\n\n\nfunction parseRichText(text, style) {\n  var contentBlock = {\n    lines: [],\n    width: 0,\n    height: 0\n  };\n  text != null && (text += '');\n\n  if (!text) {\n    return contentBlock;\n  }\n\n  var lastIndex = STYLE_REG.lastIndex = 0;\n  var result;\n\n  while ((result = STYLE_REG.exec(text)) != null) {\n    var matchedIndex = result.index;\n\n    if (matchedIndex > lastIndex) {\n      pushTokens(contentBlock, text.substring(lastIndex, matchedIndex));\n    }\n\n    pushTokens(contentBlock, result[2], result[1]);\n    lastIndex = STYLE_REG.lastIndex;\n  }\n\n  if (lastIndex < text.length) {\n    pushTokens(contentBlock, text.substring(lastIndex, text.length));\n  }\n\n  var lines = contentBlock.lines;\n  var contentHeight = 0;\n  var contentWidth = 0; // For `textWidth: 100%`\n\n  var pendingList = [];\n  var stlPadding = style.textPadding;\n  var truncate = style.truncate;\n  var truncateWidth = truncate && truncate.outerWidth;\n  var truncateHeight = truncate && truncate.outerHeight;\n\n  if (stlPadding) {\n    truncateWidth != null && (truncateWidth -= stlPadding[1] + stlPadding[3]);\n    truncateHeight != null && (truncateHeight -= stlPadding[0] + stlPadding[2]);\n  } // Calculate layout info of tokens.\n\n\n  for (var i = 0; i < lines.length; i++) {\n    var line = lines[i];\n    var lineHeight = 0;\n    var lineWidth = 0;\n\n    for (var j = 0; j < line.tokens.length; j++) {\n      var token = line.tokens[j];\n      var tokenStyle = token.styleName && style.rich[token.styleName] || {}; // textPadding should not inherit from style.\n\n      var textPadding = token.textPadding = tokenStyle.textPadding; // textFont has been asigned to font by `normalizeStyle`.\n\n      var font = token.font = tokenStyle.font || style.font; // textHeight can be used when textVerticalAlign is specified in token.\n\n      var tokenHeight = token.textHeight = retrieve2( // textHeight should not be inherited, consider it can be specified\n      // as box height of the block.\n      tokenStyle.textHeight, getLineHeight(font));\n      textPadding && (tokenHeight += textPadding[0] + textPadding[2]);\n      token.height = tokenHeight;\n      token.lineHeight = retrieve3(tokenStyle.textLineHeight, style.textLineHeight, tokenHeight);\n      token.textAlign = tokenStyle && tokenStyle.textAlign || style.textAlign;\n      token.textVerticalAlign = tokenStyle && tokenStyle.textVerticalAlign || 'middle';\n\n      if (truncateHeight != null && contentHeight + token.lineHeight > truncateHeight) {\n        return {\n          lines: [],\n          width: 0,\n          height: 0\n        };\n      }\n\n      token.textWidth = getWidth(token.text, font);\n      var tokenWidth = tokenStyle.textWidth;\n      var tokenWidthNotSpecified = tokenWidth == null || tokenWidth === 'auto'; // Percent width, can be `100%`, can be used in drawing separate\n      // line when box width is needed to be auto.\n\n      if (typeof tokenWidth === 'string' && tokenWidth.charAt(tokenWidth.length - 1) === '%') {\n        token.percentWidth = tokenWidth;\n        pendingList.push(token);\n        tokenWidth = 0; // Do not truncate in this case, because there is no user case\n        // and it is too complicated.\n      } else {\n        if (tokenWidthNotSpecified) {\n          tokenWidth = token.textWidth; // FIXME: If image is not loaded and textWidth is not specified, calling\n          // `getBoundingRect()` will not get correct result.\n\n          var textBackgroundColor = tokenStyle.textBackgroundColor;\n          var bgImg = textBackgroundColor && textBackgroundColor.image; // Use cases:\n          // (1) If image is not loaded, it will be loaded at render phase and call\n          // `dirty()` and `textBackgroundColor.image` will be replaced with the loaded\n          // image, and then the right size will be calculated here at the next tick.\n          // See `graphic/helper/text.js`.\n          // (2) If image loaded, and `textBackgroundColor.image` is image src string,\n          // use `imageHelper.findExistImage` to find cached image.\n          // `imageHelper.findExistImage` will always be called here before\n          // `imageHelper.createOrUpdateImage` in `graphic/helper/text.js#renderRichText`\n          // which ensures that image will not be rendered before correct size calcualted.\n\n          if (bgImg) {\n            bgImg = imageHelper.findExistImage(bgImg);\n\n            if (imageHelper.isImageReady(bgImg)) {\n              tokenWidth = Math.max(tokenWidth, bgImg.width * tokenHeight / bgImg.height);\n            }\n          }\n        }\n\n        var paddingW = textPadding ? textPadding[1] + textPadding[3] : 0;\n        tokenWidth += paddingW;\n        var remianTruncWidth = truncateWidth != null ? truncateWidth - lineWidth : null;\n\n        if (remianTruncWidth != null && remianTruncWidth < tokenWidth) {\n          if (!tokenWidthNotSpecified || remianTruncWidth < paddingW) {\n            token.text = '';\n            token.textWidth = tokenWidth = 0;\n          } else {\n            token.text = truncateText(token.text, remianTruncWidth - paddingW, font, truncate.ellipsis, {\n              minChar: truncate.minChar\n            });\n            token.textWidth = getWidth(token.text, font);\n            tokenWidth = token.textWidth + paddingW;\n          }\n        }\n      }\n\n      lineWidth += token.width = tokenWidth;\n      tokenStyle && (lineHeight = Math.max(lineHeight, token.lineHeight));\n    }\n\n    line.width = lineWidth;\n    line.lineHeight = lineHeight;\n    contentHeight += lineHeight;\n    contentWidth = Math.max(contentWidth, lineWidth);\n  }\n\n  contentBlock.outerWidth = contentBlock.width = retrieve2(style.textWidth, contentWidth);\n  contentBlock.outerHeight = contentBlock.height = retrieve2(style.textHeight, contentHeight);\n\n  if (stlPadding) {\n    contentBlock.outerWidth += stlPadding[1] + stlPadding[3];\n    contentBlock.outerHeight += stlPadding[0] + stlPadding[2];\n  }\n\n  for (var i = 0; i < pendingList.length; i++) {\n    var token = pendingList[i];\n    var percentWidth = token.percentWidth; // Should not base on outerWidth, because token can not be placed out of padding.\n\n    token.width = parseInt(percentWidth, 10) / 100 * contentWidth;\n  }\n\n  return contentBlock;\n}\n\nfunction pushTokens(block, str, styleName) {\n  var isEmptyStr = str === '';\n  var strs = str.split('\\n');\n  var lines = block.lines;\n\n  for (var i = 0; i < strs.length; i++) {\n    var text = strs[i];\n    var token = {\n      styleName: styleName,\n      text: text,\n      isLineHolder: !text && !isEmptyStr\n    }; // The first token should be appended to the last line.\n\n    if (!i) {\n      var tokens = (lines[lines.length - 1] || (lines[0] = {\n        tokens: []\n      })).tokens; // Consider cases:\n      // (1) ''.split('\\n') => ['', '\\n', ''], the '' at the first item\n      // (which is a placeholder) should be replaced by new token.\n      // (2) A image backage, where token likes {a|}.\n      // (3) A redundant '' will affect textAlign in line.\n      // (4) tokens with the same tplName should not be merged, because\n      // they should be displayed in different box (with border and padding).\n\n      var tokensLen = tokens.length;\n      tokensLen === 1 && tokens[0].isLineHolder ? tokens[0] = token : // Consider text is '', only insert when it is the \"lineHolder\" or\n      // \"emptyStr\". Otherwise a redundant '' will affect textAlign in line.\n      (text || !tokensLen || isEmptyStr) && tokens.push(token);\n    } // Other tokens always start a new line.\n    else {\n        // If there is '', insert it as a placeholder.\n        lines.push({\n          tokens: [token]\n        });\n      }\n  }\n}\n\nfunction makeFont(style) {\n  // FIXME in node-canvas fontWeight is before fontStyle\n  // Use `fontSize` `fontFamily` to check whether font properties are defined.\n  var font = (style.fontSize || style.fontFamily) && [style.fontStyle, style.fontWeight, (style.fontSize || 12) + 'px', // If font properties are defined, `fontFamily` should not be ignored.\n  style.fontFamily || 'sans-serif'].join(' ');\n  return font && trim(font) || style.textFont || style.font;\n}\n\nexports.DEFAULT_FONT = DEFAULT_FONT;\nexports.$override = $override;\nexports.getWidth = getWidth;\nexports.getBoundingRect = getBoundingRect;\nexports.adjustTextX = adjustTextX;\nexports.adjustTextY = adjustTextY;\nexports.adjustTextPositionOnRect = adjustTextPositionOnRect;\nexports.truncateText = truncateText;\nexports.getLineHeight = getLineHeight;\nexports.measureText = measureText;\nexports.parsePlainText = parsePlainText;\nexports.parseRichText = parseRichText;\nexports.makeFont = makeFont;","var zrUtil = require(\"../core/util\");\n\nvar Element = require(\"../Element\");\n\nvar BoundingRect = require(\"../core/BoundingRect\");\n\n/**\n * Group是一个容器，可以插入子节点，Group的变换也会被应用到子节点上\n * @module zrender/graphic/Group\n * @example\n *     var Group = require('zrender/container/Group');\n *     var Circle = require('zrender/graphic/shape/Circle');\n *     var g = new Group();\n *     g.position[0] = 100;\n *     g.position[1] = 100;\n *     g.add(new Circle({\n *         style: {\n *             x: 100,\n *             y: 100,\n *             r: 20,\n *         }\n *     }));\n *     zr.add(g);\n */\n\n/**\n * @alias module:zrender/graphic/Group\n * @constructor\n * @extends module:zrender/mixin/Transformable\n * @extends module:zrender/mixin/Eventful\n */\nvar Group = function (opts) {\n  opts = opts || {};\n  Element.call(this, opts);\n\n  for (var key in opts) {\n    if (opts.hasOwnProperty(key)) {\n      this[key] = opts[key];\n    }\n  }\n\n  this._children = [];\n  this.__storage = null;\n  this.__dirty = true;\n};\n\nGroup.prototype = {\n  constructor: Group,\n  isGroup: true,\n\n  /**\n   * @type {string}\n   */\n  type: 'group',\n\n  /**\n   * 所有子孙元素是否响应鼠标事件\n   * @name module:/zrender/container/Group#silent\n   * @type {boolean}\n   * @default false\n   */\n  silent: false,\n\n  /**\n   * @return {Array.<module:zrender/Element>}\n   */\n  children: function () {\n    return this._children.slice();\n  },\n\n  /**\n   * 获取指定 index 的儿子节点\n   * @param  {number} idx\n   * @return {module:zrender/Element}\n   */\n  childAt: function (idx) {\n    return this._children[idx];\n  },\n\n  /**\n   * 获取指定名字的儿子节点\n   * @param  {string} name\n   * @return {module:zrender/Element}\n   */\n  childOfName: function (name) {\n    var children = this._children;\n\n    for (var i = 0; i < children.length; i++) {\n      if (children[i].name === name) {\n        return children[i];\n      }\n    }\n  },\n\n  /**\n   * @return {number}\n   */\n  childCount: function () {\n    return this._children.length;\n  },\n\n  /**\n   * 添加子节点到最后\n   * @param {module:zrender/Element} child\n   */\n  add: function (child) {\n    if (child && child !== this && child.parent !== this) {\n      this._children.push(child);\n\n      this._doAdd(child);\n    }\n\n    return this;\n  },\n\n  /**\n   * 添加子节点在 nextSibling 之前\n   * @param {module:zrender/Element} child\n   * @param {module:zrender/Element} nextSibling\n   */\n  addBefore: function (child, nextSibling) {\n    if (child && child !== this && child.parent !== this && nextSibling && nextSibling.parent === this) {\n      var children = this._children;\n      var idx = children.indexOf(nextSibling);\n\n      if (idx >= 0) {\n        children.splice(idx, 0, child);\n\n        this._doAdd(child);\n      }\n    }\n\n    return this;\n  },\n  _doAdd: function (child) {\n    if (child.parent) {\n      child.parent.remove(child);\n    }\n\n    child.parent = this;\n    var storage = this.__storage;\n    var zr = this.__zr;\n\n    if (storage && storage !== child.__storage) {\n      storage.addToStorage(child);\n\n      if (child instanceof Group) {\n        child.addChildrenToStorage(storage);\n      }\n    }\n\n    zr && zr.refresh();\n  },\n\n  /**\n   * 移除子节点\n   * @param {module:zrender/Element} child\n   */\n  remove: function (child) {\n    var zr = this.__zr;\n    var storage = this.__storage;\n    var children = this._children;\n    var idx = zrUtil.indexOf(children, child);\n\n    if (idx < 0) {\n      return this;\n    }\n\n    children.splice(idx, 1);\n    child.parent = null;\n\n    if (storage) {\n      storage.delFromStorage(child);\n\n      if (child instanceof Group) {\n        child.delChildrenFromStorage(storage);\n      }\n    }\n\n    zr && zr.refresh();\n    return this;\n  },\n\n  /**\n   * 移除所有子节点\n   */\n  removeAll: function () {\n    var children = this._children;\n    var storage = this.__storage;\n    var child;\n    var i;\n\n    for (i = 0; i < children.length; i++) {\n      child = children[i];\n\n      if (storage) {\n        storage.delFromStorage(child);\n\n        if (child instanceof Group) {\n          child.delChildrenFromStorage(storage);\n        }\n      }\n\n      child.parent = null;\n    }\n\n    children.length = 0;\n    return this;\n  },\n\n  /**\n   * 遍历所有子节点\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  eachChild: function (cb, context) {\n    var children = this._children;\n\n    for (var i = 0; i < children.length; i++) {\n      var child = children[i];\n      cb.call(context, child, i);\n    }\n\n    return this;\n  },\n\n  /**\n   * 深度优先遍历所有子孙节点\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  traverse: function (cb, context) {\n    for (var i = 0; i < this._children.length; i++) {\n      var child = this._children[i];\n      cb.call(context, child);\n\n      if (child.type === 'group') {\n        child.traverse(cb, context);\n      }\n    }\n\n    return this;\n  },\n  addChildrenToStorage: function (storage) {\n    for (var i = 0; i < this._children.length; i++) {\n      var child = this._children[i];\n      storage.addToStorage(child);\n\n      if (child instanceof Group) {\n        child.addChildrenToStorage(storage);\n      }\n    }\n  },\n  delChildrenFromStorage: function (storage) {\n    for (var i = 0; i < this._children.length; i++) {\n      var child = this._children[i];\n      storage.delFromStorage(child);\n\n      if (child instanceof Group) {\n        child.delChildrenFromStorage(storage);\n      }\n    }\n  },\n  dirty: function () {\n    this.__dirty = true;\n    this.__zr && this.__zr.refresh();\n    return this;\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getBoundingRect: function (includeChildren) {\n    // TODO Caching\n    var rect = null;\n    var tmpRect = new BoundingRect(0, 0, 0, 0);\n    var children = includeChildren || this._children;\n    var tmpMat = [];\n\n    for (var i = 0; i < children.length; i++) {\n      var child = children[i];\n\n      if (child.ignore || child.invisible) {\n        continue;\n      }\n\n      var childRect = child.getBoundingRect();\n      var transform = child.getLocalTransform(tmpMat); // TODO\n      // The boundingRect cacluated by transforming original\n      // rect may be bigger than the actual bundingRect when rotation\n      // is used. (Consider a circle rotated aginst its center, where\n      // the actual boundingRect should be the same as that not be\n      // rotated.) But we can not find better approach to calculate\n      // actual boundingRect yet, considering performance.\n\n      if (transform) {\n        tmpRect.copy(childRect);\n        tmpRect.applyTransform(transform);\n        rect = rect || tmpRect.clone();\n        rect.union(tmpRect);\n      } else {\n        rect = rect || childRect.clone();\n        rect.union(childRect);\n      }\n    }\n\n    return rect || tmpRect;\n  }\n};\nzrUtil.inherits(Group, Element);\nvar _default = Group;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar pathTool = require(\"zrender/lib/tool/path\");\n\nvar colorTool = require(\"zrender/lib/tool/color\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar vector = require(\"zrender/lib/core/vector\");\n\nvar Path = require(\"zrender/lib/graphic/Path\");\n\nvar Transformable = require(\"zrender/lib/mixin/Transformable\");\n\nvar ZImage = require(\"zrender/lib/graphic/Image\");\n\nexports.Image = ZImage;\n\nvar Group = require(\"zrender/lib/container/Group\");\n\nexports.Group = Group;\n\nvar Text = require(\"zrender/lib/graphic/Text\");\n\nexports.Text = Text;\n\nvar Circle = require(\"zrender/lib/graphic/shape/Circle\");\n\nexports.Circle = Circle;\n\nvar Sector = require(\"zrender/lib/graphic/shape/Sector\");\n\nexports.Sector = Sector;\n\nvar Ring = require(\"zrender/lib/graphic/shape/Ring\");\n\nexports.Ring = Ring;\n\nvar Polygon = require(\"zrender/lib/graphic/shape/Polygon\");\n\nexports.Polygon = Polygon;\n\nvar Polyline = require(\"zrender/lib/graphic/shape/Polyline\");\n\nexports.Polyline = Polyline;\n\nvar Rect = require(\"zrender/lib/graphic/shape/Rect\");\n\nexports.Rect = Rect;\n\nvar Line = require(\"zrender/lib/graphic/shape/Line\");\n\nexports.Line = Line;\n\nvar BezierCurve = require(\"zrender/lib/graphic/shape/BezierCurve\");\n\nexports.BezierCurve = BezierCurve;\n\nvar Arc = require(\"zrender/lib/graphic/shape/Arc\");\n\nexports.Arc = Arc;\n\nvar CompoundPath = require(\"zrender/lib/graphic/CompoundPath\");\n\nexports.CompoundPath = CompoundPath;\n\nvar LinearGradient = require(\"zrender/lib/graphic/LinearGradient\");\n\nexports.LinearGradient = LinearGradient;\n\nvar RadialGradient = require(\"zrender/lib/graphic/RadialGradient\");\n\nexports.RadialGradient = RadialGradient;\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nexports.BoundingRect = BoundingRect;\n\nvar IncrementalDisplayable = require(\"zrender/lib/graphic/IncrementalDisplayable\");\n\nexports.IncrementalDisplayable = IncrementalDisplayable;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar round = Math.round;\nvar mathMax = Math.max;\nvar mathMin = Math.min;\nvar EMPTY_OBJ = {};\n/**\n * Extend shape with parameters\n */\n\nfunction extendShape(opts) {\n  return Path.extend(opts);\n}\n/**\n * Extend path\n */\n\n\nfunction extendPath(pathData, opts) {\n  return pathTool.extendFromString(pathData, opts);\n}\n/**\n * Create a path element from path data string\n * @param {string} pathData\n * @param {Object} opts\n * @param {module:zrender/core/BoundingRect} rect\n * @param {string} [layout=cover] 'center' or 'cover'\n */\n\n\nfunction makePath(pathData, opts, rect, layout) {\n  var path = pathTool.createFromString(pathData, opts);\n  var boundingRect = path.getBoundingRect();\n\n  if (rect) {\n    if (layout === 'center') {\n      rect = centerGraphic(rect, boundingRect);\n    }\n\n    resizePath(path, rect);\n  }\n\n  return path;\n}\n/**\n * Create a image element from image url\n * @param {string} imageUrl image url\n * @param {Object} opts options\n * @param {module:zrender/core/BoundingRect} rect constrain rect\n * @param {string} [layout=cover] 'center' or 'cover'\n */\n\n\nfunction makeImage(imageUrl, rect, layout) {\n  var path = new ZImage({\n    style: {\n      image: imageUrl,\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height\n    },\n    onload: function (img) {\n      if (layout === 'center') {\n        var boundingRect = {\n          width: img.width,\n          height: img.height\n        };\n        path.setStyle(centerGraphic(rect, boundingRect));\n      }\n    }\n  });\n  return path;\n}\n/**\n * Get position of centered element in bounding box.\n *\n * @param  {Object} rect         element local bounding box\n * @param  {Object} boundingRect constraint bounding box\n * @return {Object} element position containing x, y, width, and height\n */\n\n\nfunction centerGraphic(rect, boundingRect) {\n  // Set rect to center, keep width / height ratio.\n  var aspect = boundingRect.width / boundingRect.height;\n  var width = rect.height * aspect;\n  var height;\n\n  if (width <= rect.width) {\n    height = rect.height;\n  } else {\n    width = rect.width;\n    height = width / aspect;\n  }\n\n  var cx = rect.x + rect.width / 2;\n  var cy = rect.y + rect.height / 2;\n  return {\n    x: cx - width / 2,\n    y: cy - height / 2,\n    width: width,\n    height: height\n  };\n}\n\nvar mergePath = pathTool.mergePath;\n/**\n * Resize a path to fit the rect\n * @param {module:zrender/graphic/Path} path\n * @param {Object} rect\n */\n\nfunction resizePath(path, rect) {\n  if (!path.applyTransform) {\n    return;\n  }\n\n  var pathRect = path.getBoundingRect();\n  var m = pathRect.calculateTransform(rect);\n  path.applyTransform(m);\n}\n/**\n * Sub pixel optimize line for canvas\n *\n * @param {Object} param\n * @param {Object} [param.shape]\n * @param {number} [param.shape.x1]\n * @param {number} [param.shape.y1]\n * @param {number} [param.shape.x2]\n * @param {number} [param.shape.y2]\n * @param {Object} [param.style]\n * @param {number} [param.style.lineWidth]\n * @return {Object} Modified param\n */\n\n\nfunction subPixelOptimizeLine(param) {\n  var shape = param.shape;\n  var lineWidth = param.style.lineWidth;\n\n  if (round(shape.x1 * 2) === round(shape.x2 * 2)) {\n    shape.x1 = shape.x2 = subPixelOptimize(shape.x1, lineWidth, true);\n  }\n\n  if (round(shape.y1 * 2) === round(shape.y2 * 2)) {\n    shape.y1 = shape.y2 = subPixelOptimize(shape.y1, lineWidth, true);\n  }\n\n  return param;\n}\n/**\n * Sub pixel optimize rect for canvas\n *\n * @param {Object} param\n * @param {Object} [param.shape]\n * @param {number} [param.shape.x]\n * @param {number} [param.shape.y]\n * @param {number} [param.shape.width]\n * @param {number} [param.shape.height]\n * @param {Object} [param.style]\n * @param {number} [param.style.lineWidth]\n * @return {Object} Modified param\n */\n\n\nfunction subPixelOptimizeRect(param) {\n  var shape = param.shape;\n  var lineWidth = param.style.lineWidth;\n  var originX = shape.x;\n  var originY = shape.y;\n  var originWidth = shape.width;\n  var originHeight = shape.height;\n  shape.x = subPixelOptimize(shape.x, lineWidth, true);\n  shape.y = subPixelOptimize(shape.y, lineWidth, true);\n  shape.width = Math.max(subPixelOptimize(originX + originWidth, lineWidth, false) - shape.x, originWidth === 0 ? 0 : 1);\n  shape.height = Math.max(subPixelOptimize(originY + originHeight, lineWidth, false) - shape.y, originHeight === 0 ? 0 : 1);\n  return param;\n}\n/**\n * Sub pixel optimize for canvas\n *\n * @param {number} position Coordinate, such as x, y\n * @param {number} lineWidth Should be nonnegative integer.\n * @param {boolean=} positiveOrNegative Default false (negative).\n * @return {number} Optimized position.\n */\n\n\nfunction subPixelOptimize(position, lineWidth, positiveOrNegative) {\n  // Assure that (position + lineWidth / 2) is near integer edge,\n  // otherwise line will be fuzzy in canvas.\n  var doubledPosition = round(position * 2);\n  return (doubledPosition + round(lineWidth)) % 2 === 0 ? doubledPosition / 2 : (doubledPosition + (positiveOrNegative ? 1 : -1)) / 2;\n}\n\nfunction hasFillOrStroke(fillOrStroke) {\n  return fillOrStroke != null && fillOrStroke != 'none';\n}\n\nfunction liftColor(color) {\n  return typeof color === 'string' ? colorTool.lift(color, -0.1) : color;\n}\n/**\n * @private\n */\n\n\nfunction cacheElementStl(el) {\n  if (el.__hoverStlDirty) {\n    var stroke = el.style.stroke;\n    var fill = el.style.fill; // Create hoverStyle on mouseover\n\n    var hoverStyle = el.__hoverStl;\n    hoverStyle.fill = hoverStyle.fill || (hasFillOrStroke(fill) ? liftColor(fill) : null);\n    hoverStyle.stroke = hoverStyle.stroke || (hasFillOrStroke(stroke) ? liftColor(stroke) : null);\n    var normalStyle = {};\n\n    for (var name in hoverStyle) {\n      // See comment in `doSingleEnterHover`.\n      if (hoverStyle[name] != null) {\n        normalStyle[name] = el.style[name];\n      }\n    }\n\n    el.__normalStl = normalStyle;\n    el.__hoverStlDirty = false;\n  }\n}\n/**\n * @private\n */\n\n\nfunction doSingleEnterHover(el) {\n  if (el.__isHover) {\n    return;\n  }\n\n  cacheElementStl(el);\n\n  if (el.useHoverLayer) {\n    el.__zr && el.__zr.addHover(el, el.__hoverStl);\n  } else {\n    var style = el.style;\n    var insideRollbackOpt = style.insideRollbackOpt; // Consider case: only `position: 'top'` is set on emphasis, then text\n    // color should be returned to `autoColor`, rather than remain '#fff'.\n    // So we should rollback then apply again after style merging.\n\n    insideRollbackOpt && rollbackInsideStyle(style); // styles can be:\n    // {\n    //    label: {\n    //        show: false,\n    //        position: 'outside',\n    //        fontSize: 18\n    //    },\n    //    emphasis: {\n    //        label: {\n    //            show: true\n    //        }\n    //    }\n    // },\n    // where properties of `emphasis` may not appear in `normal`. We previously use\n    // module:echarts/util/model#defaultEmphasis to merge `normal` to `emphasis`.\n    // But consider rich text and setOption in merge mode, it is impossible to cover\n    // all properties in merge. So we use merge mode when setting style here, where\n    // only properties that is not `null/undefined` can be set. The disadventage:\n    // null/undefined can not be used to remove style any more in `emphasis`.\n\n    style.extendFrom(el.__hoverStl); // Do not save `insideRollback`.\n\n    if (insideRollbackOpt) {\n      applyInsideStyle(style, style.insideOriginalTextPosition, insideRollbackOpt); // textFill may be rollbacked to null.\n\n      if (style.textFill == null) {\n        style.textFill = insideRollbackOpt.autoColor;\n      }\n    }\n\n    el.dirty(false);\n    el.z2 += 1;\n  }\n\n  el.__isHover = true;\n}\n/**\n * @inner\n */\n\n\nfunction doSingleLeaveHover(el) {\n  if (!el.__isHover) {\n    return;\n  }\n\n  var normalStl = el.__normalStl;\n\n  if (el.useHoverLayer) {\n    el.__zr && el.__zr.removeHover(el);\n  } else {\n    // Consider null/undefined value, should use\n    // `setStyle` but not `extendFrom(stl, true)`.\n    normalStl && el.setStyle(normalStl);\n    el.z2 -= 1;\n  }\n\n  el.__isHover = false;\n}\n/**\n * @inner\n */\n\n\nfunction doEnterHover(el) {\n  el.type === 'group' ? el.traverse(function (child) {\n    if (child.type !== 'group') {\n      doSingleEnterHover(child);\n    }\n  }) : doSingleEnterHover(el);\n}\n\nfunction doLeaveHover(el) {\n  el.type === 'group' ? el.traverse(function (child) {\n    if (child.type !== 'group') {\n      doSingleLeaveHover(child);\n    }\n  }) : doSingleLeaveHover(el);\n}\n/**\n * @inner\n */\n\n\nfunction setElementHoverStl(el, hoverStl) {\n  // If element has sepcified hoverStyle, then use it instead of given hoverStyle\n  // Often used when item group has a label element and it's hoverStyle is different\n  el.__hoverStl = el.hoverStyle || hoverStl || {};\n  el.__hoverStlDirty = true;\n\n  if (el.__isHover) {\n    cacheElementStl(el);\n  }\n}\n/**\n * @inner\n */\n\n\nfunction onElementMouseOver(e) {\n  if (this.__hoverSilentOnTouch && e.zrByTouch) {\n    return;\n  } // Only if element is not in emphasis status\n\n\n  !this.__isEmphasis && doEnterHover(this);\n}\n/**\n * @inner\n */\n\n\nfunction onElementMouseOut(e) {\n  if (this.__hoverSilentOnTouch && e.zrByTouch) {\n    return;\n  } // Only if element is not in emphasis status\n\n\n  !this.__isEmphasis && doLeaveHover(this);\n}\n/**\n * @inner\n */\n\n\nfunction enterEmphasis() {\n  this.__isEmphasis = true;\n  doEnterHover(this);\n}\n/**\n * @inner\n */\n\n\nfunction leaveEmphasis() {\n  this.__isEmphasis = false;\n  doLeaveHover(this);\n}\n/**\n * Set hover style of element.\n * This method can be called repeatly without side-effects.\n * @param {module:zrender/Element} el\n * @param {Object} [hoverStyle]\n * @param {Object} [opt]\n * @param {boolean} [opt.hoverSilentOnTouch=false]\n *        In touch device, mouseover event will be trigger on touchstart event\n *        (see module:zrender/dom/HandlerProxy). By this mechanism, we can\n *        conviniently use hoverStyle when tap on touch screen without additional\n *        code for compatibility.\n *        But if the chart/component has select feature, which usually also use\n *        hoverStyle, there might be conflict between 'select-highlight' and\n *        'hover-highlight' especially when roam is enabled (see geo for example).\n *        In this case, hoverSilentOnTouch should be used to disable hover-highlight\n *        on touch device.\n */\n\n\nfunction setHoverStyle(el, hoverStyle, opt) {\n  el.__hoverSilentOnTouch = opt && opt.hoverSilentOnTouch;\n  el.type === 'group' ? el.traverse(function (child) {\n    if (child.type !== 'group') {\n      setElementHoverStl(child, hoverStyle);\n    }\n  }) : setElementHoverStl(el, hoverStyle); // Duplicated function will be auto-ignored, see Eventful.js.\n\n  el.on('mouseover', onElementMouseOver).on('mouseout', onElementMouseOut); // Emphasis, normal can be triggered manually\n\n  el.on('emphasis', enterEmphasis).on('normal', leaveEmphasis);\n}\n/**\n * @param {Object|module:zrender/graphic/Style} normalStyle\n * @param {Object} emphasisStyle\n * @param {module:echarts/model/Model} normalModel\n * @param {module:echarts/model/Model} emphasisModel\n * @param {Object} opt Check `opt` of `setTextStyleCommon` to find other props.\n * @param {string|Function} [opt.defaultText]\n * @param {module:echarts/model/Model} [opt.labelFetcher] Fetch text by\n *      `opt.labelFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n * @param {module:echarts/model/Model} [opt.labelDataIndex] Fetch text by\n *      `opt.textFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n * @param {module:echarts/model/Model} [opt.labelDimIndex] Fetch text by\n *      `opt.textFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n * @param {Object} [normalSpecified]\n * @param {Object} [emphasisSpecified]\n */\n\n\nfunction setLabelStyle(normalStyle, emphasisStyle, normalModel, emphasisModel, opt, normalSpecified, emphasisSpecified) {\n  opt = opt || EMPTY_OBJ;\n  var labelFetcher = opt.labelFetcher;\n  var labelDataIndex = opt.labelDataIndex;\n  var labelDimIndex = opt.labelDimIndex; // This scenario, `label.normal.show = true; label.emphasis.show = false`,\n  // is not supported util someone requests.\n\n  var showNormal = normalModel.getShallow('show');\n  var showEmphasis = emphasisModel.getShallow('show'); // Consider performance, only fetch label when necessary.\n  // If `normal.show` is `false` and `emphasis.show` is `true` and `emphasis.formatter` is not set,\n  // label should be displayed, where text is fetched by `normal.formatter` or `opt.defaultText`.\n\n  var baseText;\n\n  if (showNormal || showEmphasis) {\n    if (labelFetcher) {\n      baseText = labelFetcher.getFormattedLabel(labelDataIndex, 'normal', null, labelDimIndex);\n    }\n\n    if (baseText == null) {\n      baseText = zrUtil.isFunction(opt.defaultText) ? opt.defaultText(labelDataIndex, opt) : opt.defaultText;\n    }\n  }\n\n  var normalStyleText = showNormal ? baseText : null;\n  var emphasisStyleText = showEmphasis ? zrUtil.retrieve2(labelFetcher ? labelFetcher.getFormattedLabel(labelDataIndex, 'emphasis', null, labelDimIndex) : null, baseText) : null; // Optimize: If style.text is null, text will not be drawn.\n\n  if (normalStyleText != null || emphasisStyleText != null) {\n    // Always set `textStyle` even if `normalStyle.text` is null, because default\n    // values have to be set on `normalStyle`.\n    // If we set default values on `emphasisStyle`, consider case:\n    // Firstly, `setOption(... label: {normal: {text: null}, emphasis: {show: true}} ...);`\n    // Secondly, `setOption(... label: {noraml: {show: true, text: 'abc', color: 'red'} ...);`\n    // Then the 'red' will not work on emphasis.\n    setTextStyle(normalStyle, normalModel, normalSpecified, opt);\n    setTextStyle(emphasisStyle, emphasisModel, emphasisSpecified, opt, true);\n  }\n\n  normalStyle.text = normalStyleText;\n  emphasisStyle.text = emphasisStyleText;\n}\n/**\n * Set basic textStyle properties.\n * @param {Object|module:zrender/graphic/Style} textStyle\n * @param {module:echarts/model/Model} model\n * @param {Object} [specifiedTextStyle] Can be overrided by settings in model.\n * @param {Object} [opt] See `opt` of `setTextStyleCommon`.\n * @param {boolean} [isEmphasis]\n */\n\n\nfunction setTextStyle(textStyle, textStyleModel, specifiedTextStyle, opt, isEmphasis) {\n  setTextStyleCommon(textStyle, textStyleModel, opt, isEmphasis);\n  specifiedTextStyle && zrUtil.extend(textStyle, specifiedTextStyle);\n  textStyle.host && textStyle.host.dirty && textStyle.host.dirty(false);\n  return textStyle;\n}\n/**\n * Set text option in the style.\n * @deprecated\n * @param {Object} textStyle\n * @param {module:echarts/model/Model} labelModel\n * @param {string|boolean} defaultColor Default text color.\n *        If set as false, it will be processed as a emphasis style.\n */\n\n\nfunction setText(textStyle, labelModel, defaultColor) {\n  var opt = {\n    isRectText: true\n  };\n  var isEmphasis;\n\n  if (defaultColor === false) {\n    isEmphasis = true;\n  } else {\n    // Support setting color as 'auto' to get visual color.\n    opt.autoColor = defaultColor;\n  }\n\n  setTextStyleCommon(textStyle, labelModel, opt, isEmphasis);\n  textStyle.host && textStyle.host.dirty && textStyle.host.dirty(false);\n}\n/**\n * {\n *      disableBox: boolean, Whether diable drawing box of block (outer most).\n *      isRectText: boolean,\n *      autoColor: string, specify a color when color is 'auto',\n *              for textFill, textStroke, textBackgroundColor, and textBorderColor.\n *              If autoColor specified, it is used as default textFill.\n *      useInsideStyle:\n *              `true`: Use inside style (textFill, textStroke, textStrokeWidth)\n *                  if `textFill` is not specified.\n *              `false`: Do not use inside style.\n *              `null/undefined`: use inside style if `isRectText` is true and\n *                  `textFill` is not specified and textPosition contains `'inside'`.\n *      forceRich: boolean\n * }\n */\n\n\nfunction setTextStyleCommon(textStyle, textStyleModel, opt, isEmphasis) {\n  // Consider there will be abnormal when merge hover style to normal style if given default value.\n  opt = opt || EMPTY_OBJ;\n\n  if (opt.isRectText) {\n    var textPosition = textStyleModel.getShallow('position') || (isEmphasis ? null : 'inside'); // 'outside' is not a valid zr textPostion value, but used\n    // in bar series, and magric type should be considered.\n\n    textPosition === 'outside' && (textPosition = 'top');\n    textStyle.textPosition = textPosition;\n    textStyle.textOffset = textStyleModel.getShallow('offset');\n    var labelRotate = textStyleModel.getShallow('rotate');\n    labelRotate != null && (labelRotate *= Math.PI / 180);\n    textStyle.textRotation = labelRotate;\n    textStyle.textDistance = zrUtil.retrieve2(textStyleModel.getShallow('distance'), isEmphasis ? null : 5);\n  }\n\n  var ecModel = textStyleModel.ecModel;\n  var globalTextStyle = ecModel && ecModel.option.textStyle; // Consider case:\n  // {\n  //     data: [{\n  //         value: 12,\n  //         label: {\n  //             rich: {\n  //                 // no 'a' here but using parent 'a'.\n  //             }\n  //         }\n  //     }],\n  //     rich: {\n  //         a: { ... }\n  //     }\n  // }\n\n  var richItemNames = getRichItemNames(textStyleModel);\n  var richResult;\n\n  if (richItemNames) {\n    richResult = {};\n\n    for (var name in richItemNames) {\n      if (richItemNames.hasOwnProperty(name)) {\n        // Cascade is supported in rich.\n        var richTextStyle = textStyleModel.getModel(['rich', name]); // In rich, never `disableBox`.\n\n        setTokenTextStyle(richResult[name] = {}, richTextStyle, globalTextStyle, opt, isEmphasis);\n      }\n    }\n  }\n\n  textStyle.rich = richResult;\n  setTokenTextStyle(textStyle, textStyleModel, globalTextStyle, opt, isEmphasis, true);\n\n  if (opt.forceRich && !opt.textStyle) {\n    opt.textStyle = {};\n  }\n\n  return textStyle;\n} // Consider case:\n// {\n//     data: [{\n//         value: 12,\n//         label: {\n//             rich: {\n//                 // no 'a' here but using parent 'a'.\n//             }\n//         }\n//     }],\n//     rich: {\n//         a: { ... }\n//     }\n// }\n\n\nfunction getRichItemNames(textStyleModel) {\n  // Use object to remove duplicated names.\n  var richItemNameMap;\n\n  while (textStyleModel && textStyleModel !== textStyleModel.ecModel) {\n    var rich = (textStyleModel.option || EMPTY_OBJ).rich;\n\n    if (rich) {\n      richItemNameMap = richItemNameMap || {};\n\n      for (var name in rich) {\n        if (rich.hasOwnProperty(name)) {\n          richItemNameMap[name] = 1;\n        }\n      }\n    }\n\n    textStyleModel = textStyleModel.parentModel;\n  }\n\n  return richItemNameMap;\n}\n\nfunction setTokenTextStyle(textStyle, textStyleModel, globalTextStyle, opt, isEmphasis, isBlock) {\n  // In merge mode, default value should not be given.\n  globalTextStyle = !isEmphasis && globalTextStyle || EMPTY_OBJ;\n  textStyle.textFill = getAutoColor(textStyleModel.getShallow('color'), opt) || globalTextStyle.color;\n  textStyle.textStroke = getAutoColor(textStyleModel.getShallow('textBorderColor'), opt) || globalTextStyle.textBorderColor;\n  textStyle.textStrokeWidth = zrUtil.retrieve2(textStyleModel.getShallow('textBorderWidth'), globalTextStyle.textBorderWidth);\n\n  if (!isEmphasis) {\n    if (isBlock) {\n      // Always set `insideRollback`, for clearing previous.\n      var originalTextPosition = textStyle.textPosition;\n      textStyle.insideRollback = applyInsideStyle(textStyle, originalTextPosition, opt); // Save original textPosition, because style.textPosition will be repalced by\n      // real location (like [10, 30]) in zrender.\n\n      textStyle.insideOriginalTextPosition = originalTextPosition;\n      textStyle.insideRollbackOpt = opt;\n    } // Set default finally.\n\n\n    if (textStyle.textFill == null) {\n      textStyle.textFill = opt.autoColor;\n    }\n  } // Do not use `getFont` here, because merge should be supported, where\n  // part of these properties may be changed in emphasis style, and the\n  // others should remain their original value got from normal style.\n\n\n  textStyle.fontStyle = textStyleModel.getShallow('fontStyle') || globalTextStyle.fontStyle;\n  textStyle.fontWeight = textStyleModel.getShallow('fontWeight') || globalTextStyle.fontWeight;\n  textStyle.fontSize = textStyleModel.getShallow('fontSize') || globalTextStyle.fontSize;\n  textStyle.fontFamily = textStyleModel.getShallow('fontFamily') || globalTextStyle.fontFamily;\n  textStyle.textAlign = textStyleModel.getShallow('align');\n  textStyle.textVerticalAlign = textStyleModel.getShallow('verticalAlign') || textStyleModel.getShallow('baseline');\n  textStyle.textLineHeight = textStyleModel.getShallow('lineHeight');\n  textStyle.textWidth = textStyleModel.getShallow('width');\n  textStyle.textHeight = textStyleModel.getShallow('height');\n  textStyle.textTag = textStyleModel.getShallow('tag');\n\n  if (!isBlock || !opt.disableBox) {\n    textStyle.textBackgroundColor = getAutoColor(textStyleModel.getShallow('backgroundColor'), opt);\n    textStyle.textPadding = textStyleModel.getShallow('padding');\n    textStyle.textBorderColor = getAutoColor(textStyleModel.getShallow('borderColor'), opt);\n    textStyle.textBorderWidth = textStyleModel.getShallow('borderWidth');\n    textStyle.textBorderRadius = textStyleModel.getShallow('borderRadius');\n    textStyle.textBoxShadowColor = textStyleModel.getShallow('shadowColor');\n    textStyle.textBoxShadowBlur = textStyleModel.getShallow('shadowBlur');\n    textStyle.textBoxShadowOffsetX = textStyleModel.getShallow('shadowOffsetX');\n    textStyle.textBoxShadowOffsetY = textStyleModel.getShallow('shadowOffsetY');\n  }\n\n  textStyle.textShadowColor = textStyleModel.getShallow('textShadowColor') || globalTextStyle.textShadowColor;\n  textStyle.textShadowBlur = textStyleModel.getShallow('textShadowBlur') || globalTextStyle.textShadowBlur;\n  textStyle.textShadowOffsetX = textStyleModel.getShallow('textShadowOffsetX') || globalTextStyle.textShadowOffsetX;\n  textStyle.textShadowOffsetY = textStyleModel.getShallow('textShadowOffsetY') || globalTextStyle.textShadowOffsetY;\n}\n\nfunction getAutoColor(color, opt) {\n  return color !== 'auto' ? color : opt && opt.autoColor ? opt.autoColor : null;\n}\n\nfunction applyInsideStyle(textStyle, textPosition, opt) {\n  var useInsideStyle = opt.useInsideStyle;\n  var insideRollback;\n\n  if (textStyle.textFill == null && useInsideStyle !== false && (useInsideStyle === true || opt.isRectText && textPosition // textPosition can be [10, 30]\n  && typeof textPosition === 'string' && textPosition.indexOf('inside') >= 0)) {\n    insideRollback = {\n      textFill: null,\n      textStroke: textStyle.textStroke,\n      textStrokeWidth: textStyle.textStrokeWidth\n    };\n    textStyle.textFill = '#fff'; // Consider text with #fff overflow its container.\n\n    if (textStyle.textStroke == null) {\n      textStyle.textStroke = opt.autoColor;\n      textStyle.textStrokeWidth == null && (textStyle.textStrokeWidth = 2);\n    }\n  }\n\n  return insideRollback;\n}\n\nfunction rollbackInsideStyle(style) {\n  var insideRollback = style.insideRollback;\n\n  if (insideRollback) {\n    style.textFill = insideRollback.textFill;\n    style.textStroke = insideRollback.textStroke;\n    style.textStrokeWidth = insideRollback.textStrokeWidth;\n  }\n}\n\nfunction getFont(opt, ecModel) {\n  // ecModel or default text style model.\n  var gTextStyleModel = ecModel || ecModel.getModel('textStyle');\n  return zrUtil.trim([// FIXME in node-canvas fontWeight is before fontStyle\n  opt.fontStyle || gTextStyleModel && gTextStyleModel.getShallow('fontStyle') || '', opt.fontWeight || gTextStyleModel && gTextStyleModel.getShallow('fontWeight') || '', (opt.fontSize || gTextStyleModel && gTextStyleModel.getShallow('fontSize') || 12) + 'px', opt.fontFamily || gTextStyleModel && gTextStyleModel.getShallow('fontFamily') || 'sans-serif'].join(' '));\n}\n\nfunction animateOrSetProps(isUpdate, el, props, animatableModel, dataIndex, cb) {\n  if (typeof dataIndex === 'function') {\n    cb = dataIndex;\n    dataIndex = null;\n  } // Do not check 'animation' property directly here. Consider this case:\n  // animation model is an `itemModel`, whose does not have `isAnimationEnabled`\n  // but its parent model (`seriesModel`) does.\n\n\n  var animationEnabled = animatableModel && animatableModel.isAnimationEnabled();\n\n  if (animationEnabled) {\n    var postfix = isUpdate ? 'Update' : '';\n    var duration = animatableModel.getShallow('animationDuration' + postfix);\n    var animationEasing = animatableModel.getShallow('animationEasing' + postfix);\n    var animationDelay = animatableModel.getShallow('animationDelay' + postfix);\n\n    if (typeof animationDelay === 'function') {\n      animationDelay = animationDelay(dataIndex, animatableModel.getAnimationDelayParams ? animatableModel.getAnimationDelayParams(el, dataIndex) : null);\n    }\n\n    if (typeof duration === 'function') {\n      duration = duration(dataIndex);\n    }\n\n    duration > 0 ? el.animateTo(props, duration, animationDelay || 0, animationEasing, cb, !!cb) : (el.stopAnimation(), el.attr(props), cb && cb());\n  } else {\n    el.stopAnimation();\n    el.attr(props);\n    cb && cb();\n  }\n}\n/**\n * Update graphic element properties with or without animation according to the\n * configuration in series.\n *\n * Caution: this method will stop previous animation.\n * So if do not use this method to one element twice before\n * animation starts, unless you know what you are doing.\n *\n * @param {module:zrender/Element} el\n * @param {Object} props\n * @param {module:echarts/model/Model} [animatableModel]\n * @param {number} [dataIndex]\n * @param {Function} [cb]\n * @example\n *     graphic.updateProps(el, {\n *         position: [100, 100]\n *     }, seriesModel, dataIndex, function () { console.log('Animation done!'); });\n *     // Or\n *     graphic.updateProps(el, {\n *         position: [100, 100]\n *     }, seriesModel, function () { console.log('Animation done!'); });\n */\n\n\nfunction updateProps(el, props, animatableModel, dataIndex, cb) {\n  animateOrSetProps(true, el, props, animatableModel, dataIndex, cb);\n}\n/**\n * Init graphic element properties with or without animation according to the\n * configuration in series.\n *\n * Caution: this method will stop previous animation.\n * So if do not use this method to one element twice before\n * animation starts, unless you know what you are doing.\n *\n * @param {module:zrender/Element} el\n * @param {Object} props\n * @param {module:echarts/model/Model} [animatableModel]\n * @param {number} [dataIndex]\n * @param {Function} cb\n */\n\n\nfunction initProps(el, props, animatableModel, dataIndex, cb) {\n  animateOrSetProps(false, el, props, animatableModel, dataIndex, cb);\n}\n/**\n * Get transform matrix of target (param target),\n * in coordinate of its ancestor (param ancestor)\n *\n * @param {module:zrender/mixin/Transformable} target\n * @param {module:zrender/mixin/Transformable} [ancestor]\n */\n\n\nfunction getTransform(target, ancestor) {\n  var mat = matrix.identity([]);\n\n  while (target && target !== ancestor) {\n    matrix.mul(mat, target.getLocalTransform(), mat);\n    target = target.parent;\n  }\n\n  return mat;\n}\n/**\n * Apply transform to an vertex.\n * @param {Array.<number>} target [x, y]\n * @param {Array.<number>|TypedArray.<number>|Object} transform Can be:\n *      + Transform matrix: like [1, 0, 0, 1, 0, 0]\n *      + {position, rotation, scale}, the same as `zrender/Transformable`.\n * @param {boolean=} invert Whether use invert matrix.\n * @return {Array.<number>} [x, y]\n */\n\n\nfunction applyTransform(target, transform, invert) {\n  if (transform && !zrUtil.isArrayLike(transform)) {\n    transform = Transformable.getLocalTransform(transform);\n  }\n\n  if (invert) {\n    transform = matrix.invert([], transform);\n  }\n\n  return vector.applyTransform([], target, transform);\n}\n/**\n * @param {string} direction 'left' 'right' 'top' 'bottom'\n * @param {Array.<number>} transform Transform matrix: like [1, 0, 0, 1, 0, 0]\n * @param {boolean=} invert Whether use invert matrix.\n * @return {string} Transformed direction. 'left' 'right' 'top' 'bottom'\n */\n\n\nfunction transformDirection(direction, transform, invert) {\n  // Pick a base, ensure that transform result will not be (0, 0).\n  var hBase = transform[4] === 0 || transform[5] === 0 || transform[0] === 0 ? 1 : Math.abs(2 * transform[4] / transform[0]);\n  var vBase = transform[4] === 0 || transform[5] === 0 || transform[2] === 0 ? 1 : Math.abs(2 * transform[4] / transform[2]);\n  var vertex = [direction === 'left' ? -hBase : direction === 'right' ? hBase : 0, direction === 'top' ? -vBase : direction === 'bottom' ? vBase : 0];\n  vertex = applyTransform(vertex, transform, invert);\n  return Math.abs(vertex[0]) > Math.abs(vertex[1]) ? vertex[0] > 0 ? 'right' : 'left' : vertex[1] > 0 ? 'bottom' : 'top';\n}\n/**\n * Apply group transition animation from g1 to g2.\n * If no animatableModel, no animation.\n */\n\n\nfunction groupTransition(g1, g2, animatableModel, cb) {\n  if (!g1 || !g2) {\n    return;\n  }\n\n  function getElMap(g) {\n    var elMap = {};\n    g.traverse(function (el) {\n      if (!el.isGroup && el.anid) {\n        elMap[el.anid] = el;\n      }\n    });\n    return elMap;\n  }\n\n  function getAnimatableProps(el) {\n    var obj = {\n      position: vector.clone(el.position),\n      rotation: el.rotation\n    };\n\n    if (el.shape) {\n      obj.shape = zrUtil.extend({}, el.shape);\n    }\n\n    return obj;\n  }\n\n  var elMap1 = getElMap(g1);\n  g2.traverse(function (el) {\n    if (!el.isGroup && el.anid) {\n      var oldEl = elMap1[el.anid];\n\n      if (oldEl) {\n        var newProp = getAnimatableProps(el);\n        el.attr(getAnimatableProps(oldEl));\n        updateProps(el, newProp, animatableModel, el.dataIndex);\n      } // else {\n      //     if (el.previousProps) {\n      //         graphic.updateProps\n      //     }\n      // }\n\n    }\n  });\n}\n/**\n * @param {Array.<Array.<number>>} points Like: [[23, 44], [53, 66], ...]\n * @param {Object} rect {x, y, width, height}\n * @return {Array.<Array.<number>>} A new clipped points.\n */\n\n\nfunction clipPointsByRect(points, rect) {\n  return zrUtil.map(points, function (point) {\n    var x = point[0];\n    x = mathMax(x, rect.x);\n    x = mathMin(x, rect.x + rect.width);\n    var y = point[1];\n    y = mathMax(y, rect.y);\n    y = mathMin(y, rect.y + rect.height);\n    return [x, y];\n  });\n}\n/**\n * @param {Object} targetRect {x, y, width, height}\n * @param {Object} rect {x, y, width, height}\n * @return {Object} A new clipped rect. If rect size are negative, return undefined.\n */\n\n\nfunction clipRectByRect(targetRect, rect) {\n  var x = mathMax(targetRect.x, rect.x);\n  var x2 = mathMin(targetRect.x + targetRect.width, rect.x + rect.width);\n  var y = mathMax(targetRect.y, rect.y);\n  var y2 = mathMin(targetRect.y + targetRect.height, rect.y + rect.height);\n\n  if (x2 >= x && y2 >= y) {\n    return {\n      x: x,\n      y: y,\n      width: x2 - x,\n      height: y2 - y\n    };\n  }\n}\n/**\n * @param {string} iconStr Support 'image://' or 'path://' or direct svg path.\n * @param {Object} [opt] Properties of `module:zrender/Element`, except `style`.\n * @param {Object} [rect] {x, y, width, height}\n * @return {module:zrender/Element} Icon path or image element.\n */\n\n\nfunction createIcon(iconStr, opt, rect) {\n  opt = zrUtil.extend({\n    rectHover: true\n  }, opt);\n  var style = opt.style = {\n    strokeNoScale: true\n  };\n  rect = rect || {\n    x: -1,\n    y: -1,\n    width: 2,\n    height: 2\n  };\n\n  if (iconStr) {\n    return iconStr.indexOf('image://') === 0 ? (style.image = iconStr.slice(8), zrUtil.defaults(style, rect), new ZImage(opt)) : makePath(iconStr.replace('path://', ''), opt, rect, 'center');\n  }\n}\n\nexports.extendShape = extendShape;\nexports.extendPath = extendPath;\nexports.makePath = makePath;\nexports.makeImage = makeImage;\nexports.mergePath = mergePath;\nexports.resizePath = resizePath;\nexports.subPixelOptimizeLine = subPixelOptimizeLine;\nexports.subPixelOptimizeRect = subPixelOptimizeRect;\nexports.subPixelOptimize = subPixelOptimize;\nexports.setHoverStyle = setHoverStyle;\nexports.setLabelStyle = setLabelStyle;\nexports.setTextStyle = setTextStyle;\nexports.setText = setText;\nexports.getFont = getFont;\nexports.updateProps = updateProps;\nexports.initProps = initProps;\nexports.getTransform = getTransform;\nexports.applyTransform = applyTransform;\nexports.transformDirection = transformDirection;\nexports.groupTransition = groupTransition;\nexports.clipPointsByRect = clipPointsByRect;\nexports.clipRectByRect = clipRectByRect;\nexports.createIcon = createIcon;","var _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\nvar createHashMap = _util.createHashMap;\nvar assert = _util.assert;\n\nvar _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar OTHER_DIMENSIONS = createHashMap(['tooltip', 'label', 'itemName', 'itemId', 'seriesName']);\n\nfunction summarizeDimensions(data) {\n  var summary = {};\n  var encode = summary.encode = {};\n  var notExtraCoordDimMap = createHashMap();\n  var defaultedLabel = [];\n  var defaultedTooltip = [];\n  each(data.dimensions, function (dimName) {\n    var dimItem = data.getDimensionInfo(dimName);\n    var coordDim = dimItem.coordDim;\n\n    if (coordDim) {\n      var coordDimArr = encode[coordDim];\n\n      if (!encode.hasOwnProperty(coordDim)) {\n        coordDimArr = encode[coordDim] = [];\n      }\n\n      coordDimArr[dimItem.coordDimIndex] = dimName;\n\n      if (!dimItem.isExtraCoord) {\n        notExtraCoordDimMap.set(coordDim, 1); // Use the last coord dim (and label friendly) as default label,\n        // because when dataset is used, it is hard to guess which dimension\n        // can be value dimension. If both show x, y on label is not look good,\n        // and conventionally y axis is focused more.\n\n        if (mayLabelDimType(dimItem.type)) {\n          defaultedLabel[0] = dimName;\n        }\n      }\n\n      if (dimItem.defaultTooltip) {\n        defaultedTooltip.push(dimName);\n      }\n    }\n\n    OTHER_DIMENSIONS.each(function (v, otherDim) {\n      var otherDimArr = encode[otherDim];\n\n      if (!encode.hasOwnProperty(otherDim)) {\n        otherDimArr = encode[otherDim] = [];\n      }\n\n      var dimIndex = dimItem.otherDims[otherDim];\n\n      if (dimIndex != null && dimIndex !== false) {\n        otherDimArr[dimIndex] = dimItem.name;\n      }\n    });\n  });\n  var dataDimsOnCoord = [];\n  var encodeFirstDimNotExtra = {};\n  notExtraCoordDimMap.each(function (v, coordDim) {\n    var dimArr = encode[coordDim]; // ??? FIXME extra coord should not be set in dataDimsOnCoord.\n    // But should fix the case that radar axes: simplify the logic\n    // of `completeDimension`, remove `extraPrefix`.\n\n    encodeFirstDimNotExtra[coordDim] = dimArr[0]; // Not necessary to remove duplicate, because a data\n    // dim canot on more than one coordDim.\n\n    dataDimsOnCoord = dataDimsOnCoord.concat(dimArr);\n  });\n  summary.dataDimsOnCoord = dataDimsOnCoord;\n  summary.encodeFirstDimNotExtra = encodeFirstDimNotExtra;\n  var encodeLabel = encode.label; // FIXME `encode.label` is not recommanded, because formatter can not be set\n  // in this way. Use label.formatter instead. May be remove this approach someday.\n\n  if (encodeLabel && encodeLabel.length) {\n    defaultedLabel = encodeLabel.slice();\n  }\n\n  var encodeTooltip = encode.tooltip;\n\n  if (encodeTooltip && encodeTooltip.length) {\n    defaultedTooltip = encodeTooltip.slice();\n  } else if (!defaultedTooltip.length) {\n    defaultedTooltip = defaultedLabel.slice();\n  }\n\n  encode.defaultedLabel = defaultedLabel;\n  encode.defaultedTooltip = defaultedTooltip;\n  return summary;\n}\n\nfunction getDimensionTypeByAxis(axisType) {\n  return axisType === 'category' ? 'ordinal' : axisType === 'time' ? 'time' : 'float';\n}\n\nfunction mayLabelDimType(dimType) {\n  // In most cases, ordinal and time do not suitable for label.\n  // Ordinal info can be displayed on axis. Time is too long.\n  return !(dimType === 'ordinal' || dimType === 'time');\n} // function findTheLastDimMayLabel(data) {\n//     // Get last value dim\n//     var dimensions = data.dimensions.slice();\n//     var valueType;\n//     var valueDim;\n//     while (dimensions.length && (\n//         valueDim = dimensions.pop(),\n//         valueType = data.getDimensionInfo(valueDim).type,\n//         valueType === 'ordinal' || valueType === 'time'\n//     )) {} // jshint ignore:line\n//     return valueDim;\n// }\n\n\nexports.OTHER_DIMENSIONS = OTHER_DIMENSIONS;\nexports.summarizeDimensions = summarizeDimensions;\nexports.getDimensionTypeByAxis = getDimensionTypeByAxis;","var vec2 = require(\"./vector\");\n\nvar matrix = require(\"./matrix\");\n\n/**\n * @module echarts/core/BoundingRect\n */\nvar v2ApplyTransform = vec2.applyTransform;\nvar mathMin = Math.min;\nvar mathMax = Math.max;\n/**\n * @alias module:echarts/core/BoundingRect\n */\n\nfunction BoundingRect(x, y, width, height) {\n  if (width < 0) {\n    x = x + width;\n    width = -width;\n  }\n\n  if (height < 0) {\n    y = y + height;\n    height = -height;\n  }\n  /**\n   * @type {number}\n   */\n\n\n  this.x = x;\n  /**\n   * @type {number}\n   */\n\n  this.y = y;\n  /**\n   * @type {number}\n   */\n\n  this.width = width;\n  /**\n   * @type {number}\n   */\n\n  this.height = height;\n}\n\nBoundingRect.prototype = {\n  constructor: BoundingRect,\n\n  /**\n   * @param {module:echarts/core/BoundingRect} other\n   */\n  union: function (other) {\n    var x = mathMin(other.x, this.x);\n    var y = mathMin(other.y, this.y);\n    this.width = mathMax(other.x + other.width, this.x + this.width) - x;\n    this.height = mathMax(other.y + other.height, this.y + this.height) - y;\n    this.x = x;\n    this.y = y;\n  },\n\n  /**\n   * @param {Array.<number>} m\n   * @methods\n   */\n  applyTransform: function () {\n    var lt = [];\n    var rb = [];\n    var lb = [];\n    var rt = [];\n    return function (m) {\n      // In case usage like this\n      // el.getBoundingRect().applyTransform(el.transform)\n      // And element has no transform\n      if (!m) {\n        return;\n      }\n\n      lt[0] = lb[0] = this.x;\n      lt[1] = rt[1] = this.y;\n      rb[0] = rt[0] = this.x + this.width;\n      rb[1] = lb[1] = this.y + this.height;\n      v2ApplyTransform(lt, lt, m);\n      v2ApplyTransform(rb, rb, m);\n      v2ApplyTransform(lb, lb, m);\n      v2ApplyTransform(rt, rt, m);\n      this.x = mathMin(lt[0], rb[0], lb[0], rt[0]);\n      this.y = mathMin(lt[1], rb[1], lb[1], rt[1]);\n      var maxX = mathMax(lt[0], rb[0], lb[0], rt[0]);\n      var maxY = mathMax(lt[1], rb[1], lb[1], rt[1]);\n      this.width = maxX - this.x;\n      this.height = maxY - this.y;\n    };\n  }(),\n\n  /**\n   * Calculate matrix of transforming from self to target rect\n   * @param  {module:zrender/core/BoundingRect} b\n   * @return {Array.<number>}\n   */\n  calculateTransform: function (b) {\n    var a = this;\n    var sx = b.width / a.width;\n    var sy = b.height / a.height;\n    var m = matrix.create(); // 矩阵右乘\n\n    matrix.translate(m, m, [-a.x, -a.y]);\n    matrix.scale(m, m, [sx, sy]);\n    matrix.translate(m, m, [b.x, b.y]);\n    return m;\n  },\n\n  /**\n   * @param {(module:echarts/core/BoundingRect|Object)} b\n   * @return {boolean}\n   */\n  intersect: function (b) {\n    if (!b) {\n      return false;\n    }\n\n    if (!(b instanceof BoundingRect)) {\n      // Normalize negative width/height.\n      b = BoundingRect.create(b);\n    }\n\n    var a = this;\n    var ax0 = a.x;\n    var ax1 = a.x + a.width;\n    var ay0 = a.y;\n    var ay1 = a.y + a.height;\n    var bx0 = b.x;\n    var bx1 = b.x + b.width;\n    var by0 = b.y;\n    var by1 = b.y + b.height;\n    return !(ax1 < bx0 || bx1 < ax0 || ay1 < by0 || by1 < ay0);\n  },\n  contain: function (x, y) {\n    var rect = this;\n    return x >= rect.x && x <= rect.x + rect.width && y >= rect.y && y <= rect.y + rect.height;\n  },\n\n  /**\n   * @return {module:echarts/core/BoundingRect}\n   */\n  clone: function () {\n    return new BoundingRect(this.x, this.y, this.width, this.height);\n  },\n\n  /**\n   * Copy from another rect\n   */\n  copy: function (other) {\n    this.x = other.x;\n    this.y = other.y;\n    this.width = other.width;\n    this.height = other.height;\n  },\n  plain: function () {\n    return {\n      x: this.x,\n      y: this.y,\n      width: this.width,\n      height: this.height\n    };\n  }\n};\n/**\n * @param {Object|module:zrender/core/BoundingRect} rect\n * @param {number} rect.x\n * @param {number} rect.y\n * @param {number} rect.width\n * @param {number} rect.height\n * @return {module:zrender/core/BoundingRect}\n */\n\nBoundingRect.create = function (rect) {\n  return new BoundingRect(rect.x, rect.y, rect.width, rect.height);\n};\n\nvar _default = BoundingRect;\nmodule.exports = _default;","/**\n * echarts设备环境识别\n *\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\n * @author firede[firede@firede.us]\n * @desc thanks zepto.\n */\nvar env = {};\n\nif (typeof wx === 'object' && typeof wx.getSystemInfoSync === 'function') {\n  // In Weixin Application\n  env = {\n    browser: {},\n    os: {},\n    node: false,\n    wxa: true,\n    // Weixin Application\n    canvasSupported: true,\n    svgSupported: false,\n    touchEventsSupported: true\n  };\n} else if (typeof document === 'undefined' && typeof self !== 'undefined') {\n  // In worker\n  env = {\n    browser: {},\n    os: {},\n    node: false,\n    worker: true,\n    canvasSupported: true\n  };\n} else if (typeof navigator === 'undefined') {\n  // In node\n  env = {\n    browser: {},\n    os: {},\n    node: true,\n    worker: false,\n    // Assume canvas is supported\n    canvasSupported: true,\n    svgSupported: true\n  };\n} else {\n  env = detect(navigator.userAgent);\n}\n\nvar _default = env; // Zepto.js\n// (c) 2010-2013 Thomas Fuchs\n// Zepto.js may be freely distributed under the MIT license.\n\nfunction detect(ua) {\n  var os = {};\n  var browser = {}; // var webkit = ua.match(/Web[kK]it[\\/]{0,1}([\\d.]+)/);\n  // var android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/);\n  // var ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n  // var ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n  // var iphone = !ipad && ua.match(/(iPhone\\sOS)\\s([\\d_]+)/);\n  // var webos = ua.match(/(webOS|hpwOS)[\\s\\/]([\\d.]+)/);\n  // var touchpad = webos && ua.match(/TouchPad/);\n  // var kindle = ua.match(/Kindle\\/([\\d.]+)/);\n  // var silk = ua.match(/Silk\\/([\\d._]+)/);\n  // var blackberry = ua.match(/(BlackBerry).*Version\\/([\\d.]+)/);\n  // var bb10 = ua.match(/(BB10).*Version\\/([\\d.]+)/);\n  // var rimtabletos = ua.match(/(RIM\\sTablet\\sOS)\\s([\\d.]+)/);\n  // var playbook = ua.match(/PlayBook/);\n  // var chrome = ua.match(/Chrome\\/([\\d.]+)/) || ua.match(/CriOS\\/([\\d.]+)/);\n\n  var firefox = ua.match(/Firefox\\/([\\d.]+)/); // var safari = webkit && ua.match(/Mobile\\//) && !chrome;\n  // var webview = ua.match(/(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/) && !chrome;\n\n  var ie = ua.match(/MSIE\\s([\\d.]+)/) // IE 11 Trident/7.0; rv:11.0\n  || ua.match(/Trident\\/.+?rv:(([\\d.]+))/);\n  var edge = ua.match(/Edge\\/([\\d.]+)/); // IE 12 and 12+\n\n  var weChat = /micromessenger/i.test(ua); // Todo: clean this up with a better OS/browser seperation:\n  // - discern (more) between multiple browsers on android\n  // - decide if kindle fire in silk mode is android or not\n  // - Firefox on Android doesn't specify the Android version\n  // - possibly devide in os, device and browser hashes\n  // if (browser.webkit = !!webkit) browser.version = webkit[1];\n  // if (android) os.android = true, os.version = android[2];\n  // if (iphone && !ipod) os.ios = os.iphone = true, os.version = iphone[2].replace(/_/g, '.');\n  // if (ipad) os.ios = os.ipad = true, os.version = ipad[2].replace(/_/g, '.');\n  // if (ipod) os.ios = os.ipod = true, os.version = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n  // if (webos) os.webos = true, os.version = webos[2];\n  // if (touchpad) os.touchpad = true;\n  // if (blackberry) os.blackberry = true, os.version = blackberry[2];\n  // if (bb10) os.bb10 = true, os.version = bb10[2];\n  // if (rimtabletos) os.rimtabletos = true, os.version = rimtabletos[2];\n  // if (playbook) browser.playbook = true;\n  // if (kindle) os.kindle = true, os.version = kindle[1];\n  // if (silk) browser.silk = true, browser.version = silk[1];\n  // if (!silk && os.android && ua.match(/Kindle Fire/)) browser.silk = true;\n  // if (chrome) browser.chrome = true, browser.version = chrome[1];\n\n  if (firefox) {\n    browser.firefox = true;\n    browser.version = firefox[1];\n  } // if (safari && (ua.match(/Safari/) || !!os.ios)) browser.safari = true;\n  // if (webview) browser.webview = true;\n\n\n  if (ie) {\n    browser.ie = true;\n    browser.version = ie[1];\n  }\n\n  if (edge) {\n    browser.edge = true;\n    browser.version = edge[1];\n  } // It is difficult to detect WeChat in Win Phone precisely, because ua can\n  // not be set on win phone. So we do not consider Win Phone.\n\n\n  if (weChat) {\n    browser.weChat = true;\n  } // os.tablet = !!(ipad || playbook || (android && !ua.match(/Mobile/)) ||\n  //     (firefox && ua.match(/Tablet/)) || (ie && !ua.match(/Phone/) && ua.match(/Touch/)));\n  // os.phone  = !!(!os.tablet && !os.ipod && (android || iphone || webos ||\n  //     (chrome && ua.match(/Android/)) || (chrome && ua.match(/CriOS\\/([\\d.]+)/)) ||\n  //     (firefox && ua.match(/Mobile/)) || (ie && ua.match(/Touch/))));\n\n\n  return {\n    browser: browser,\n    os: os,\n    node: false,\n    // 原生canvas支持，改极端点了\n    // canvasSupported : !(browser.ie && parseFloat(browser.version) < 9)\n    canvasSupported: !!document.createElement('canvas').getContext,\n    svgSupported: typeof SVGRect !== 'undefined',\n    // works on most browsers\n    // IE10/11 does not support touch event, and MS Edge supports them but not by\n    // default, so we dont check navigator.maxTouchPoints for them here.\n    touchEventsSupported: 'ontouchstart' in window && !browser.ie && !browser.edge,\n    // <http://caniuse.com/#search=pointer%20event>.\n    pointerEventsSupported: 'onpointerdown' in window // Firefox supports pointer but not by default, only MS browsers are reliable on pointer\n    // events currently. So we dont use that on other browsers unless tested sufficiently.\n    // Although IE 10 supports pointer event, it use old style and is different from the\n    // standard. So we exclude that. (IE 10 is hardly used on touch device)\n    && (browser.edge || browser.ie && browser.version >= 11) // passiveSupported: detectPassiveSupport()\n\n  };\n} // See https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md#feature-detection\n// function detectPassiveSupport() {\n//     // Test via a getter in the options object to see if the passive property is accessed\n//     var supportsPassive = false;\n//     try {\n//         var opts = Object.defineProperty({}, 'passive', {\n//             get: function() {\n//                 supportsPassive = true;\n//             }\n//         });\n//         window.addEventListener('testPassive', function() {}, opts);\n//     } catch (e) {\n//     }\n//     return supportsPassive;\n// }\n\n\nmodule.exports = _default;","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar TYPE_DELIMITER = '.';\nvar IS_CONTAINER = '___EC__COMPONENT__CONTAINER___';\n/**\n * Notice, parseClassType('') should returns {main: '', sub: ''}\n * @public\n */\n\nfunction parseClassType(componentType) {\n  var ret = {\n    main: '',\n    sub: ''\n  };\n\n  if (componentType) {\n    componentType = componentType.split(TYPE_DELIMITER);\n    ret.main = componentType[0] || '';\n    ret.sub = componentType[1] || '';\n  }\n\n  return ret;\n}\n/**\n * @public\n */\n\n\nfunction checkClassType(componentType) {\n  zrUtil.assert(/^[a-zA-Z0-9_]+([.][a-zA-Z0-9_]+)?$/.test(componentType), 'componentType \"' + componentType + '\" illegal');\n}\n/**\n * @public\n */\n\n\nfunction enableClassExtend(RootClass, mandatoryMethods) {\n  RootClass.$constructor = RootClass;\n\n  RootClass.extend = function (proto) {\n    var superClass = this;\n\n    var ExtendedClass = function () {\n      if (!proto.$constructor) {\n        superClass.apply(this, arguments);\n      } else {\n        proto.$constructor.apply(this, arguments);\n      }\n    };\n\n    zrUtil.extend(ExtendedClass.prototype, proto);\n    ExtendedClass.extend = this.extend;\n    ExtendedClass.superCall = superCall;\n    ExtendedClass.superApply = superApply;\n    zrUtil.inherits(ExtendedClass, this);\n    ExtendedClass.superClass = superClass;\n    return ExtendedClass;\n  };\n}\n\nvar classBase = 0;\n/**\n * Can not use instanceof, consider different scope by\n * cross domain or es module import in ec extensions.\n * Mount a method \"isInstance()\" to Clz.\n */\n\nfunction enableClassCheck(Clz) {\n  var classAttr = ['__\\0is_clz', classBase++, Math.random().toFixed(3)].join('_');\n  Clz.prototype[classAttr] = true;\n\n  Clz.isInstance = function (obj) {\n    return !!(obj && obj[classAttr]);\n  };\n} // superCall should have class info, which can not be fetch from 'this'.\n// Consider this case:\n// class A has method f,\n// class B inherits class A, overrides method f, f call superApply('f'),\n// class C inherits class B, do not overrides method f,\n// then when method of class C is called, dead loop occured.\n\n\nfunction superCall(context, methodName) {\n  var args = zrUtil.slice(arguments, 2);\n  return this.superClass.prototype[methodName].apply(context, args);\n}\n\nfunction superApply(context, methodName, args) {\n  return this.superClass.prototype[methodName].apply(context, args);\n}\n/**\n * @param {Object} entity\n * @param {Object} options\n * @param {boolean} [options.registerWhenExtend]\n * @public\n */\n\n\nfunction enableClassManagement(entity, options) {\n  options = options || {};\n  /**\n   * Component model classes\n   * key: componentType,\n   * value:\n   *     componentClass, when componentType is 'xxx'\n   *     or Object.<subKey, componentClass>, when componentType is 'xxx.yy'\n   * @type {Object}\n   */\n\n  var storage = {};\n\n  entity.registerClass = function (Clazz, componentType) {\n    if (componentType) {\n      checkClassType(componentType);\n      componentType = parseClassType(componentType);\n\n      if (!componentType.sub) {\n        storage[componentType.main] = Clazz;\n      } else if (componentType.sub !== IS_CONTAINER) {\n        var container = makeContainer(componentType);\n        container[componentType.sub] = Clazz;\n      }\n    }\n\n    return Clazz;\n  };\n\n  entity.getClass = function (componentMainType, subType, throwWhenNotFound) {\n    var Clazz = storage[componentMainType];\n\n    if (Clazz && Clazz[IS_CONTAINER]) {\n      Clazz = subType ? Clazz[subType] : null;\n    }\n\n    if (throwWhenNotFound && !Clazz) {\n      throw new Error(!subType ? componentMainType + '.' + 'type should be specified.' : 'Component ' + componentMainType + '.' + (subType || '') + ' not exists. Load it first.');\n    }\n\n    return Clazz;\n  };\n\n  entity.getClassesByMainType = function (componentType) {\n    componentType = parseClassType(componentType);\n    var result = [];\n    var obj = storage[componentType.main];\n\n    if (obj && obj[IS_CONTAINER]) {\n      zrUtil.each(obj, function (o, type) {\n        type !== IS_CONTAINER && result.push(o);\n      });\n    } else {\n      result.push(obj);\n    }\n\n    return result;\n  };\n\n  entity.hasClass = function (componentType) {\n    // Just consider componentType.main.\n    componentType = parseClassType(componentType);\n    return !!storage[componentType.main];\n  };\n  /**\n   * @return {Array.<string>} Like ['aa', 'bb'], but can not be ['aa.xx']\n   */\n\n\n  entity.getAllClassMainTypes = function () {\n    var types = [];\n    zrUtil.each(storage, function (obj, type) {\n      types.push(type);\n    });\n    return types;\n  };\n  /**\n   * If a main type is container and has sub types\n   * @param  {string}  mainType\n   * @return {boolean}\n   */\n\n\n  entity.hasSubTypes = function (componentType) {\n    componentType = parseClassType(componentType);\n    var obj = storage[componentType.main];\n    return obj && obj[IS_CONTAINER];\n  };\n\n  entity.parseClassType = parseClassType;\n\n  function makeContainer(componentType) {\n    var container = storage[componentType.main];\n\n    if (!container || !container[IS_CONTAINER]) {\n      container = storage[componentType.main] = {};\n      container[IS_CONTAINER] = true;\n    }\n\n    return container;\n  }\n\n  if (options.registerWhenExtend) {\n    var originalExtend = entity.extend;\n\n    if (originalExtend) {\n      entity.extend = function (proto) {\n        var ExtendedClass = originalExtend.call(this, proto);\n        return entity.registerClass(ExtendedClass, proto.type);\n      };\n    }\n  }\n\n  return entity;\n}\n/**\n * @param {string|Array.<string>} properties\n */\n\n\nfunction setReadOnly(obj, properties) {// FIXME It seems broken in IE8 simulation of IE11\n  // if (!zrUtil.isArray(properties)) {\n  //     properties = properties != null ? [properties] : [];\n  // }\n  // zrUtil.each(properties, function (prop) {\n  //     var value = obj[prop];\n  //     Object.defineProperty\n  //         && Object.defineProperty(obj, prop, {\n  //             value: value, writable: false\n  //         });\n  //     zrUtil.isArray(obj[prop])\n  //         && Object.freeze\n  //         && Object.freeze(obj[prop]);\n  // });\n}\n\nexports.parseClassType = parseClassType;\nexports.enableClassExtend = enableClassExtend;\nexports.enableClassCheck = enableClassCheck;\nexports.enableClassManagement = enableClassManagement;\nexports.setReadOnly = setReadOnly;","var PathProxy = require(\"../core/PathProxy\");\n\nvar line = require(\"./line\");\n\nvar cubic = require(\"./cubic\");\n\nvar quadratic = require(\"./quadratic\");\n\nvar arc = require(\"./arc\");\n\nvar _util = require(\"./util\");\n\nvar normalizeRadian = _util.normalizeRadian;\n\nvar curve = require(\"../core/curve\");\n\nvar windingLine = require(\"./windingLine\");\n\nvar CMD = PathProxy.CMD;\nvar PI2 = Math.PI * 2;\nvar EPSILON = 1e-4;\n\nfunction isAroundEqual(a, b) {\n  return Math.abs(a - b) < EPSILON;\n} // 临时数组\n\n\nvar roots = [-1, -1, -1];\nvar extrema = [-1, -1];\n\nfunction swapExtrema() {\n  var tmp = extrema[0];\n  extrema[0] = extrema[1];\n  extrema[1] = tmp;\n}\n\nfunction windingCubic(x0, y0, x1, y1, x2, y2, x3, y3, x, y) {\n  // Quick reject\n  if (y > y0 && y > y1 && y > y2 && y > y3 || y < y0 && y < y1 && y < y2 && y < y3) {\n    return 0;\n  }\n\n  var nRoots = curve.cubicRootAt(y0, y1, y2, y3, y, roots);\n\n  if (nRoots === 0) {\n    return 0;\n  } else {\n    var w = 0;\n    var nExtrema = -1;\n    var y0_, y1_;\n\n    for (var i = 0; i < nRoots; i++) {\n      var t = roots[i]; // Avoid winding error when intersection point is the connect point of two line of polygon\n\n      var unit = t === 0 || t === 1 ? 0.5 : 1;\n      var x_ = curve.cubicAt(x0, x1, x2, x3, t);\n\n      if (x_ < x) {\n        // Quick reject\n        continue;\n      }\n\n      if (nExtrema < 0) {\n        nExtrema = curve.cubicExtrema(y0, y1, y2, y3, extrema);\n\n        if (extrema[1] < extrema[0] && nExtrema > 1) {\n          swapExtrema();\n        }\n\n        y0_ = curve.cubicAt(y0, y1, y2, y3, extrema[0]);\n\n        if (nExtrema > 1) {\n          y1_ = curve.cubicAt(y0, y1, y2, y3, extrema[1]);\n        }\n      }\n\n      if (nExtrema == 2) {\n        // 分成三段单调函数\n        if (t < extrema[0]) {\n          w += y0_ < y0 ? unit : -unit;\n        } else if (t < extrema[1]) {\n          w += y1_ < y0_ ? unit : -unit;\n        } else {\n          w += y3 < y1_ ? unit : -unit;\n        }\n      } else {\n        // 分成两段单调函数\n        if (t < extrema[0]) {\n          w += y0_ < y0 ? unit : -unit;\n        } else {\n          w += y3 < y0_ ? unit : -unit;\n        }\n      }\n    }\n\n    return w;\n  }\n}\n\nfunction windingQuadratic(x0, y0, x1, y1, x2, y2, x, y) {\n  // Quick reject\n  if (y > y0 && y > y1 && y > y2 || y < y0 && y < y1 && y < y2) {\n    return 0;\n  }\n\n  var nRoots = curve.quadraticRootAt(y0, y1, y2, y, roots);\n\n  if (nRoots === 0) {\n    return 0;\n  } else {\n    var t = curve.quadraticExtremum(y0, y1, y2);\n\n    if (t >= 0 && t <= 1) {\n      var w = 0;\n      var y_ = curve.quadraticAt(y0, y1, y2, t);\n\n      for (var i = 0; i < nRoots; i++) {\n        // Remove one endpoint.\n        var unit = roots[i] === 0 || roots[i] === 1 ? 0.5 : 1;\n        var x_ = curve.quadraticAt(x0, x1, x2, roots[i]);\n\n        if (x_ < x) {\n          // Quick reject\n          continue;\n        }\n\n        if (roots[i] < t) {\n          w += y_ < y0 ? unit : -unit;\n        } else {\n          w += y2 < y_ ? unit : -unit;\n        }\n      }\n\n      return w;\n    } else {\n      // Remove one endpoint.\n      var unit = roots[0] === 0 || roots[0] === 1 ? 0.5 : 1;\n      var x_ = curve.quadraticAt(x0, x1, x2, roots[0]);\n\n      if (x_ < x) {\n        // Quick reject\n        return 0;\n      }\n\n      return y2 < y0 ? unit : -unit;\n    }\n  }\n} // TODO\n// Arc 旋转\n\n\nfunction windingArc(cx, cy, r, startAngle, endAngle, anticlockwise, x, y) {\n  y -= cy;\n\n  if (y > r || y < -r) {\n    return 0;\n  }\n\n  var tmp = Math.sqrt(r * r - y * y);\n  roots[0] = -tmp;\n  roots[1] = tmp;\n  var diff = Math.abs(startAngle - endAngle);\n\n  if (diff < 1e-4) {\n    return 0;\n  }\n\n  if (diff % PI2 < 1e-4) {\n    // Is a circle\n    startAngle = 0;\n    endAngle = PI2;\n    var dir = anticlockwise ? 1 : -1;\n\n    if (x >= roots[0] + cx && x <= roots[1] + cx) {\n      return dir;\n    } else {\n      return 0;\n    }\n  }\n\n  if (anticlockwise) {\n    var tmp = startAngle;\n    startAngle = normalizeRadian(endAngle);\n    endAngle = normalizeRadian(tmp);\n  } else {\n    startAngle = normalizeRadian(startAngle);\n    endAngle = normalizeRadian(endAngle);\n  }\n\n  if (startAngle > endAngle) {\n    endAngle += PI2;\n  }\n\n  var w = 0;\n\n  for (var i = 0; i < 2; i++) {\n    var x_ = roots[i];\n\n    if (x_ + cx > x) {\n      var angle = Math.atan2(y, x_);\n      var dir = anticlockwise ? 1 : -1;\n\n      if (angle < 0) {\n        angle = PI2 + angle;\n      }\n\n      if (angle >= startAngle && angle <= endAngle || angle + PI2 >= startAngle && angle + PI2 <= endAngle) {\n        if (angle > Math.PI / 2 && angle < Math.PI * 1.5) {\n          dir = -dir;\n        }\n\n        w += dir;\n      }\n    }\n  }\n\n  return w;\n}\n\nfunction containPath(data, lineWidth, isStroke, x, y) {\n  var w = 0;\n  var xi = 0;\n  var yi = 0;\n  var x0 = 0;\n  var y0 = 0;\n\n  for (var i = 0; i < data.length;) {\n    var cmd = data[i++]; // Begin a new subpath\n\n    if (cmd === CMD.M && i > 1) {\n      // Close previous subpath\n      if (!isStroke) {\n        w += windingLine(xi, yi, x0, y0, x, y);\n      } // 如果被任何一个 subpath 包含\n      // if (w !== 0) {\n      //     return true;\n      // }\n\n    }\n\n    if (i == 1) {\n      // 如果第一个命令是 L, C, Q\n      // 则 previous point 同绘制命令的第一个 point\n      //\n      // 第一个命令为 Arc 的情况下会在后面特殊处理\n      xi = data[i];\n      yi = data[i + 1];\n      x0 = xi;\n      y0 = yi;\n    }\n\n    switch (cmd) {\n      case CMD.M:\n        // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n        // 在 closePath 的时候使用\n        x0 = data[i++];\n        y0 = data[i++];\n        xi = x0;\n        yi = y0;\n        break;\n\n      case CMD.L:\n        if (isStroke) {\n          if (line.containStroke(xi, yi, data[i], data[i + 1], lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          // NOTE 在第一个命令为 L, C, Q 的时候会计算出 NaN\n          w += windingLine(xi, yi, data[i], data[i + 1], x, y) || 0;\n        }\n\n        xi = data[i++];\n        yi = data[i++];\n        break;\n\n      case CMD.C:\n        if (isStroke) {\n          if (cubic.containStroke(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          w += windingCubic(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], x, y) || 0;\n        }\n\n        xi = data[i++];\n        yi = data[i++];\n        break;\n\n      case CMD.Q:\n        if (isStroke) {\n          if (quadratic.containStroke(xi, yi, data[i++], data[i++], data[i], data[i + 1], lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          w += windingQuadratic(xi, yi, data[i++], data[i++], data[i], data[i + 1], x, y) || 0;\n        }\n\n        xi = data[i++];\n        yi = data[i++];\n        break;\n\n      case CMD.A:\n        // TODO Arc 判断的开销比较大\n        var cx = data[i++];\n        var cy = data[i++];\n        var rx = data[i++];\n        var ry = data[i++];\n        var theta = data[i++];\n        var dTheta = data[i++]; // TODO Arc 旋转\n\n        var psi = data[i++];\n        var anticlockwise = 1 - data[i++];\n        var x1 = Math.cos(theta) * rx + cx;\n        var y1 = Math.sin(theta) * ry + cy; // 不是直接使用 arc 命令\n\n        if (i > 1) {\n          w += windingLine(xi, yi, x1, y1, x, y);\n        } else {\n          // 第一个命令起点还未定义\n          x0 = x1;\n          y0 = y1;\n        } // zr 使用scale来模拟椭圆, 这里也对x做一定的缩放\n\n\n        var _x = (x - cx) * ry / rx + cx;\n\n        if (isStroke) {\n          if (arc.containStroke(cx, cy, ry, theta, theta + dTheta, anticlockwise, lineWidth, _x, y)) {\n            return true;\n          }\n        } else {\n          w += windingArc(cx, cy, ry, theta, theta + dTheta, anticlockwise, _x, y);\n        }\n\n        xi = Math.cos(theta + dTheta) * rx + cx;\n        yi = Math.sin(theta + dTheta) * ry + cy;\n        break;\n\n      case CMD.R:\n        x0 = xi = data[i++];\n        y0 = yi = data[i++];\n        var width = data[i++];\n        var height = data[i++];\n        var x1 = x0 + width;\n        var y1 = y0 + height;\n\n        if (isStroke) {\n          if (line.containStroke(x0, y0, x1, y0, lineWidth, x, y) || line.containStroke(x1, y0, x1, y1, lineWidth, x, y) || line.containStroke(x1, y1, x0, y1, lineWidth, x, y) || line.containStroke(x0, y1, x0, y0, lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          // FIXME Clockwise ?\n          w += windingLine(x1, y0, x1, y1, x, y);\n          w += windingLine(x0, y1, x0, y0, x, y);\n        }\n\n        break;\n\n      case CMD.Z:\n        if (isStroke) {\n          if (line.containStroke(xi, yi, x0, y0, lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          // Close a subpath\n          w += windingLine(xi, yi, x0, y0, x, y); // 如果被任何一个 subpath 包含\n          // FIXME subpaths may overlap\n          // if (w !== 0) {\n          //     return true;\n          // }\n        }\n\n        xi = x0;\n        yi = y0;\n        break;\n    }\n  }\n\n  if (!isStroke && !isAroundEqual(yi, y0)) {\n    w += windingLine(xi, yi, x0, y0, x, y) || 0;\n  }\n\n  return w !== 0;\n}\n\nfunction contain(pathData, x, y) {\n  return containPath(pathData, 0, false, x, y);\n}\n\nfunction containStroke(pathData, lineWidth, x, y) {\n  return containPath(pathData, lineWidth, true, x, y);\n}\n\nexports.contain = contain;\nexports.containStroke = containStroke;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar _model = require(\"../util/model\");\n\nvar makeInner = _model.makeInner;\n\nvar _clazz = require(\"../util/clazz\");\n\nvar enableClassExtend = _clazz.enableClassExtend;\nvar enableClassCheck = _clazz.enableClassCheck;\n\nvar lineStyleMixin = require(\"./mixin/lineStyle\");\n\nvar areaStyleMixin = require(\"./mixin/areaStyle\");\n\nvar textStyleMixin = require(\"./mixin/textStyle\");\n\nvar itemStyleMixin = require(\"./mixin/itemStyle\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @module echarts/model/Model\n */\nvar mixin = zrUtil.mixin;\nvar inner = makeInner();\n/**\n * @alias module:echarts/model/Model\n * @constructor\n * @param {Object} option\n * @param {module:echarts/model/Model} [parentModel]\n * @param {module:echarts/model/Global} [ecModel]\n */\n\nfunction Model(option, parentModel, ecModel) {\n  /**\n   * @type {module:echarts/model/Model}\n   * @readOnly\n   */\n  this.parentModel = parentModel;\n  /**\n   * @type {module:echarts/model/Global}\n   * @readOnly\n   */\n\n  this.ecModel = ecModel;\n  /**\n   * @type {Object}\n   * @protected\n   */\n\n  this.option = option; // Simple optimization\n  // if (this.init) {\n  //     if (arguments.length <= 4) {\n  //         this.init(option, parentModel, ecModel, extraOpt);\n  //     }\n  //     else {\n  //         this.init.apply(this, arguments);\n  //     }\n  // }\n}\n\nModel.prototype = {\n  constructor: Model,\n\n  /**\n   * Model 的初始化函数\n   * @param {Object} option\n   */\n  init: null,\n\n  /**\n   * 从新的 Option merge\n   */\n  mergeOption: function (option) {\n    zrUtil.merge(this.option, option, true);\n  },\n\n  /**\n   * @param {string|Array.<string>} path\n   * @param {boolean} [ignoreParent=false]\n   * @return {*}\n   */\n  get: function (path, ignoreParent) {\n    if (path == null) {\n      return this.option;\n    }\n\n    return doGet(this.option, this.parsePath(path), !ignoreParent && getParent(this, path));\n  },\n\n  /**\n   * @param {string} key\n   * @param {boolean} [ignoreParent=false]\n   * @return {*}\n   */\n  getShallow: function (key, ignoreParent) {\n    var option = this.option;\n    var val = option == null ? option : option[key];\n    var parentModel = !ignoreParent && getParent(this, key);\n\n    if (val == null && parentModel) {\n      val = parentModel.getShallow(key);\n    }\n\n    return val;\n  },\n\n  /**\n   * @param {string|Array.<string>} [path]\n   * @param {module:echarts/model/Model} [parentModel]\n   * @return {module:echarts/model/Model}\n   */\n  getModel: function (path, parentModel) {\n    var obj = path == null ? this.option : doGet(this.option, path = this.parsePath(path));\n    var thisParentModel;\n    parentModel = parentModel || (thisParentModel = getParent(this, path)) && thisParentModel.getModel(path);\n    return new Model(obj, parentModel, this.ecModel);\n  },\n\n  /**\n   * If model has option\n   */\n  isEmpty: function () {\n    return this.option == null;\n  },\n  restoreData: function () {},\n  // Pending\n  clone: function () {\n    var Ctor = this.constructor;\n    return new Ctor(zrUtil.clone(this.option));\n  },\n  setReadOnly: function (properties) {// clazzUtil.setReadOnly(this, properties);\n  },\n  // If path is null/undefined, return null/undefined.\n  parsePath: function (path) {\n    if (typeof path === 'string') {\n      path = path.split('.');\n    }\n\n    return path;\n  },\n\n  /**\n   * @param {Function} getParentMethod\n   *        param {Array.<string>|string} path\n   *        return {module:echarts/model/Model}\n   */\n  customizeGetParent: function (getParentMethod) {\n    inner(this).getParent = getParentMethod;\n  },\n  isAnimationEnabled: function () {\n    if (!env.node) {\n      if (this.option.animation != null) {\n        return !!this.option.animation;\n      } else if (this.parentModel) {\n        return this.parentModel.isAnimationEnabled();\n      }\n    }\n  }\n};\n\nfunction doGet(obj, pathArr, parentModel) {\n  for (var i = 0; i < pathArr.length; i++) {\n    // Ignore empty\n    if (!pathArr[i]) {\n      continue;\n    } // obj could be number/string/... (like 0)\n\n\n    obj = obj && typeof obj === 'object' ? obj[pathArr[i]] : null;\n\n    if (obj == null) {\n      break;\n    }\n  }\n\n  if (obj == null && parentModel) {\n    obj = parentModel.get(pathArr);\n  }\n\n  return obj;\n} // `path` can be null/undefined\n\n\nfunction getParent(model, path) {\n  var getParentMethod = inner(model).getParent;\n  return getParentMethod ? getParentMethod.call(model, path) : model.parentModel;\n} // Enable Model.extend.\n\n\nenableClassExtend(Model);\nenableClassCheck(Model);\nmixin(Model, lineStyleMixin);\nmixin(Model, areaStyleMixin);\nmixin(Model, textStyleMixin);\nmixin(Model, itemStyleMixin);\nvar _default = Model;\nmodule.exports = _default;","var Path = require(\"../Path\");\n\nvar polyHelper = require(\"../helper/poly\");\n\n/**\n * 多边形\n * @module zrender/shape/Polygon\n */\nvar _default = Path.extend({\n  type: 'polygon',\n  shape: {\n    points: null,\n    smooth: false,\n    smoothConstraint: null\n  },\n  buildPath: function (ctx, shape) {\n    polyHelper.buildPath(ctx, shape, true);\n  }\n});\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar echartsAPIList = ['getDom', 'getZr', 'getWidth', 'getHeight', 'getDevicePixelRatio', 'dispatchAction', 'isDisposed', 'on', 'off', 'getDataURL', 'getConnectedDataURL', 'getModel', 'getOption', 'getViewOfComponentModel', 'getViewOfSeriesModel']; // And `getCoordinateSystems` and `getComponentByElement` will be injected in echarts.js\n\nfunction ExtensionAPI(chartInstance) {\n  zrUtil.each(echartsAPIList, function (name) {\n    this[name] = zrUtil.bind(chartInstance[name], chartInstance);\n  }, this);\n}\n\nvar _default = ExtensionAPI;\nmodule.exports = _default;","var windingLine = require(\"./windingLine\");\n\nvar EPSILON = 1e-8;\n\nfunction isAroundEqual(a, b) {\n  return Math.abs(a - b) < EPSILON;\n}\n\nfunction contain(points, x, y) {\n  var w = 0;\n  var p = points[0];\n\n  if (!p) {\n    return false;\n  }\n\n  for (var i = 1; i < points.length; i++) {\n    var p2 = points[i];\n    w += windingLine(p[0], p[1], p2[0], p2[1], x, y);\n    p = p2;\n  } // Close polygon\n\n\n  var p0 = points[0];\n\n  if (!isAroundEqual(p[0], p0[0]) || !isAroundEqual(p[1], p0[1])) {\n    w += windingLine(p[0], p[1], p0[0], p0[1], x, y);\n  }\n\n  return w !== 0;\n}\n\nexports.contain = contain;","var matrix = require(\"../core/matrix\");\n\nvar vector = require(\"../core/vector\");\n\n/**\n * 提供变换扩展\n * @module zrender/mixin/Transformable\n * @author pissang (https://www.github.com/pissang)\n */\nvar mIdentity = matrix.identity;\nvar EPSILON = 5e-5;\n\nfunction isNotAroundZero(val) {\n  return val > EPSILON || val < -EPSILON;\n}\n/**\n * @alias module:zrender/mixin/Transformable\n * @constructor\n */\n\n\nvar Transformable = function (opts) {\n  opts = opts || {}; // If there are no given position, rotation, scale\n\n  if (!opts.position) {\n    /**\n     * 平移\n     * @type {Array.<number>}\n     * @default [0, 0]\n     */\n    this.position = [0, 0];\n  }\n\n  if (opts.rotation == null) {\n    /**\n     * 旋转\n     * @type {Array.<number>}\n     * @default 0\n     */\n    this.rotation = 0;\n  }\n\n  if (!opts.scale) {\n    /**\n     * 缩放\n     * @type {Array.<number>}\n     * @default [1, 1]\n     */\n    this.scale = [1, 1];\n  }\n  /**\n   * 旋转和缩放的原点\n   * @type {Array.<number>}\n   * @default null\n   */\n\n\n  this.origin = this.origin || null;\n};\n\nvar transformableProto = Transformable.prototype;\ntransformableProto.transform = null;\n/**\n * 判断是否需要有坐标变换\n * 如果有坐标变换, 则从position, rotation, scale以及父节点的transform计算出自身的transform矩阵\n */\n\ntransformableProto.needLocalTransform = function () {\n  return isNotAroundZero(this.rotation) || isNotAroundZero(this.position[0]) || isNotAroundZero(this.position[1]) || isNotAroundZero(this.scale[0] - 1) || isNotAroundZero(this.scale[1] - 1);\n};\n\ntransformableProto.updateTransform = function () {\n  var parent = this.parent;\n  var parentHasTransform = parent && parent.transform;\n  var needLocalTransform = this.needLocalTransform();\n  var m = this.transform;\n\n  if (!(needLocalTransform || parentHasTransform)) {\n    m && mIdentity(m);\n    return;\n  }\n\n  m = m || matrix.create();\n\n  if (needLocalTransform) {\n    this.getLocalTransform(m);\n  } else {\n    mIdentity(m);\n  } // 应用父节点变换\n\n\n  if (parentHasTransform) {\n    if (needLocalTransform) {\n      matrix.mul(m, parent.transform, m);\n    } else {\n      matrix.copy(m, parent.transform);\n    }\n  } // 保存这个变换矩阵\n\n\n  this.transform = m;\n  this.invTransform = this.invTransform || matrix.create();\n  matrix.invert(this.invTransform, m);\n};\n\ntransformableProto.getLocalTransform = function (m) {\n  return Transformable.getLocalTransform(this, m);\n};\n/**\n * 将自己的transform应用到context上\n * @param {CanvasRenderingContext2D} ctx\n */\n\n\ntransformableProto.setTransform = function (ctx) {\n  var m = this.transform;\n  var dpr = ctx.dpr || 1;\n\n  if (m) {\n    ctx.setTransform(dpr * m[0], dpr * m[1], dpr * m[2], dpr * m[3], dpr * m[4], dpr * m[5]);\n  } else {\n    ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n  }\n};\n\ntransformableProto.restoreTransform = function (ctx) {\n  var dpr = ctx.dpr || 1;\n  ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n};\n\nvar tmpTransform = [];\n/**\n * 分解`transform`矩阵到`position`, `rotation`, `scale`\n */\n\ntransformableProto.decomposeTransform = function () {\n  if (!this.transform) {\n    return;\n  }\n\n  var parent = this.parent;\n  var m = this.transform;\n\n  if (parent && parent.transform) {\n    // Get local transform and decompose them to position, scale, rotation\n    matrix.mul(tmpTransform, parent.invTransform, m);\n    m = tmpTransform;\n  }\n\n  var sx = m[0] * m[0] + m[1] * m[1];\n  var sy = m[2] * m[2] + m[3] * m[3];\n  var position = this.position;\n  var scale = this.scale;\n\n  if (isNotAroundZero(sx - 1)) {\n    sx = Math.sqrt(sx);\n  }\n\n  if (isNotAroundZero(sy - 1)) {\n    sy = Math.sqrt(sy);\n  }\n\n  if (m[0] < 0) {\n    sx = -sx;\n  }\n\n  if (m[3] < 0) {\n    sy = -sy;\n  }\n\n  position[0] = m[4];\n  position[1] = m[5];\n  scale[0] = sx;\n  scale[1] = sy;\n  this.rotation = Math.atan2(-m[1] / sy, m[0] / sx);\n};\n/**\n * Get global scale\n * @return {Array.<number>}\n */\n\n\ntransformableProto.getGlobalScale = function () {\n  var m = this.transform;\n\n  if (!m) {\n    return [1, 1];\n  }\n\n  var sx = Math.sqrt(m[0] * m[0] + m[1] * m[1]);\n  var sy = Math.sqrt(m[2] * m[2] + m[3] * m[3]);\n\n  if (m[0] < 0) {\n    sx = -sx;\n  }\n\n  if (m[3] < 0) {\n    sy = -sy;\n  }\n\n  return [sx, sy];\n};\n/**\n * 变换坐标位置到 shape 的局部坐标空间\n * @method\n * @param {number} x\n * @param {number} y\n * @return {Array.<number>}\n */\n\n\ntransformableProto.transformCoordToLocal = function (x, y) {\n  var v2 = [x, y];\n  var invTransform = this.invTransform;\n\n  if (invTransform) {\n    vector.applyTransform(v2, v2, invTransform);\n  }\n\n  return v2;\n};\n/**\n * 变换局部坐标位置到全局坐标空间\n * @method\n * @param {number} x\n * @param {number} y\n * @return {Array.<number>}\n */\n\n\ntransformableProto.transformCoordToGlobal = function (x, y) {\n  var v2 = [x, y];\n  var transform = this.transform;\n\n  if (transform) {\n    vector.applyTransform(v2, v2, transform);\n  }\n\n  return v2;\n};\n/**\n * @static\n * @param {Object} target\n * @param {Array.<number>} target.origin\n * @param {number} target.rotation\n * @param {Array.<number>} target.position\n * @param {Array.<number>} [m]\n */\n\n\nTransformable.getLocalTransform = function (target, m) {\n  m = m || [];\n  mIdentity(m);\n  var origin = target.origin;\n  var scale = target.scale || [1, 1];\n  var rotation = target.rotation || 0;\n  var position = target.position || [0, 0];\n\n  if (origin) {\n    // Translate to origin\n    m[4] -= origin[0];\n    m[5] -= origin[1];\n  }\n\n  matrix.scale(m, m, scale);\n\n  if (rotation) {\n    matrix.rotate(m, m, rotation);\n  }\n\n  if (origin) {\n    // Translate back from origin\n    m[4] += origin[0];\n    m[5] += origin[1];\n  }\n\n  m[4] += position[0];\n  m[5] += position[1];\n  return m;\n};\n\nvar _default = Transformable;\nmodule.exports = _default;","var Path = require(\"../Path\");\n\nvar vec2 = require(\"../../core/vector\");\n\nvar _curve = require(\"../../core/curve\");\n\nvar quadraticSubdivide = _curve.quadraticSubdivide;\nvar cubicSubdivide = _curve.cubicSubdivide;\nvar quadraticAt = _curve.quadraticAt;\nvar cubicAt = _curve.cubicAt;\nvar quadraticDerivativeAt = _curve.quadraticDerivativeAt;\nvar cubicDerivativeAt = _curve.cubicDerivativeAt;\n\n/**\n * 贝塞尔曲线\n * @module zrender/shape/BezierCurve\n */\nvar out = [];\n\nfunction someVectorAt(shape, t, isTangent) {\n  var cpx2 = shape.cpx2;\n  var cpy2 = shape.cpy2;\n\n  if (cpx2 === null || cpy2 === null) {\n    return [(isTangent ? cubicDerivativeAt : cubicAt)(shape.x1, shape.cpx1, shape.cpx2, shape.x2, t), (isTangent ? cubicDerivativeAt : cubicAt)(shape.y1, shape.cpy1, shape.cpy2, shape.y2, t)];\n  } else {\n    return [(isTangent ? quadraticDerivativeAt : quadraticAt)(shape.x1, shape.cpx1, shape.x2, t), (isTangent ? quadraticDerivativeAt : quadraticAt)(shape.y1, shape.cpy1, shape.y2, t)];\n  }\n}\n\nvar _default = Path.extend({\n  type: 'bezier-curve',\n  shape: {\n    x1: 0,\n    y1: 0,\n    x2: 0,\n    y2: 0,\n    cpx1: 0,\n    cpy1: 0,\n    // cpx2: 0,\n    // cpy2: 0\n    // Curve show percent, for animating\n    percent: 1\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    var x1 = shape.x1;\n    var y1 = shape.y1;\n    var x2 = shape.x2;\n    var y2 = shape.y2;\n    var cpx1 = shape.cpx1;\n    var cpy1 = shape.cpy1;\n    var cpx2 = shape.cpx2;\n    var cpy2 = shape.cpy2;\n    var percent = shape.percent;\n\n    if (percent === 0) {\n      return;\n    }\n\n    ctx.moveTo(x1, y1);\n\n    if (cpx2 == null || cpy2 == null) {\n      if (percent < 1) {\n        quadraticSubdivide(x1, cpx1, x2, percent, out);\n        cpx1 = out[1];\n        x2 = out[2];\n        quadraticSubdivide(y1, cpy1, y2, percent, out);\n        cpy1 = out[1];\n        y2 = out[2];\n      }\n\n      ctx.quadraticCurveTo(cpx1, cpy1, x2, y2);\n    } else {\n      if (percent < 1) {\n        cubicSubdivide(x1, cpx1, cpx2, x2, percent, out);\n        cpx1 = out[1];\n        cpx2 = out[2];\n        x2 = out[3];\n        cubicSubdivide(y1, cpy1, cpy2, y2, percent, out);\n        cpy1 = out[1];\n        cpy2 = out[2];\n        y2 = out[3];\n      }\n\n      ctx.bezierCurveTo(cpx1, cpy1, cpx2, cpy2, x2, y2);\n    }\n  },\n\n  /**\n   * Get point at percent\n   * @param  {number} t\n   * @return {Array.<number>}\n   */\n  pointAt: function (t) {\n    return someVectorAt(this.shape, t, false);\n  },\n\n  /**\n   * Get tangent at percent\n   * @param  {number} t\n   * @return {Array.<number>}\n   */\n  tangentAt: function (t) {\n    var p = someVectorAt(this.shape, t, true);\n    return vec2.normalize(p, p);\n  }\n});\n\nmodule.exports = _default;","var BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar bbox = require(\"zrender/lib/core/bbox\");\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\nvar polygonContain = require(\"zrender/lib/contain/polygon\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @module echarts/coord/geo/Region\n */\n\n/**\n * @param {string} name\n * @param {Array} geometries\n * @param {Array.<number>} cp\n */\nfunction Region(name, geometries, cp) {\n  /**\n   * @type {string}\n   * @readOnly\n   */\n  this.name = name;\n  /**\n   * @type {Array.<Array>}\n   * @readOnly\n   */\n\n  this.geometries = geometries;\n\n  if (!cp) {\n    var rect = this.getBoundingRect();\n    cp = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  } else {\n    cp = [cp[0], cp[1]];\n  }\n  /**\n   * @type {Array.<number>}\n   */\n\n\n  this.center = cp;\n}\n\nRegion.prototype = {\n  constructor: Region,\n  properties: null,\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getBoundingRect: function () {\n    var rect = this._rect;\n\n    if (rect) {\n      return rect;\n    }\n\n    var MAX_NUMBER = Number.MAX_VALUE;\n    var min = [MAX_NUMBER, MAX_NUMBER];\n    var max = [-MAX_NUMBER, -MAX_NUMBER];\n    var min2 = [];\n    var max2 = [];\n    var geometries = this.geometries;\n\n    for (var i = 0; i < geometries.length; i++) {\n      // Only support polygon\n      if (geometries[i].type !== 'polygon') {\n        continue;\n      } // Doesn't consider hole\n\n\n      var exterior = geometries[i].exterior;\n      bbox.fromPoints(exterior, min2, max2);\n      vec2.min(min, min, min2);\n      vec2.max(max, max, max2);\n    } // No data\n\n\n    if (i === 0) {\n      min[0] = min[1] = max[0] = max[1] = 0;\n    }\n\n    return this._rect = new BoundingRect(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n  },\n\n  /**\n   * @param {<Array.<number>} coord\n   * @return {boolean}\n   */\n  contain: function (coord) {\n    var rect = this.getBoundingRect();\n    var geometries = this.geometries;\n\n    if (!rect.contain(coord[0], coord[1])) {\n      return false;\n    }\n\n    loopGeo: for (var i = 0, len = geometries.length; i < len; i++) {\n      // Only support polygon.\n      if (geometries[i].type !== 'polygon') {\n        continue;\n      }\n\n      var exterior = geometries[i].exterior;\n      var interiors = geometries[i].interiors;\n\n      if (polygonContain.contain(exterior, coord[0], coord[1])) {\n        // Not in the region if point is in the hole.\n        for (var k = 0; k < (interiors ? interiors.length : 0); k++) {\n          if (polygonContain.contain(interiors[k])) {\n            continue loopGeo;\n          }\n        }\n\n        return true;\n      }\n    }\n\n    return false;\n  },\n  transformTo: function (x, y, width, height) {\n    var rect = this.getBoundingRect();\n    var aspect = rect.width / rect.height;\n\n    if (!width) {\n      width = aspect * height;\n    } else if (!height) {\n      height = width / aspect;\n    }\n\n    var target = new BoundingRect(x, y, width, height);\n    var transform = rect.calculateTransform(target);\n    var geometries = this.geometries;\n\n    for (var i = 0; i < geometries.length; i++) {\n      // Only support polygon.\n      if (geometries[i].type !== 'polygon') {\n        continue;\n      }\n\n      var exterior = geometries[i].exterior;\n      var interiors = geometries[i].interiors;\n\n      for (var p = 0; p < exterior.length; p++) {\n        vec2.applyTransform(exterior[p], exterior[p], transform);\n      }\n\n      for (var h = 0; h < (interiors ? interiors.length : 0); h++) {\n        for (var p = 0; p < interiors[h].length; p++) {\n          vec2.applyTransform(interiors[h][p], interiors[h][p], transform);\n        }\n      }\n    }\n\n    rect = this._rect;\n    rect.copy(target); // Update center\n\n    this.center = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  }\n};\nvar _default = Region;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"../../model/Model\");\n\nvar _model = require(\"../../util/model\");\n\nvar isNameSpecified = _model.isNameSpecified;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar LegendModel = echarts.extendComponentModel({\n  type: 'legend.plain',\n  dependencies: ['series'],\n  layoutMode: {\n    type: 'box',\n    // legend.width/height are maxWidth/maxHeight actually,\n    // whereas realy width/height is calculated by its content.\n    // (Setting {left: 10, right: 10} does not make sense).\n    // So consider the case:\n    // `setOption({legend: {left: 10});`\n    // then `setOption({legend: {right: 10});`\n    // The previous `left` should be cleared by setting `ignoreSize`.\n    ignoreSize: true\n  },\n  init: function (option, parentModel, ecModel) {\n    this.mergeDefaultAndTheme(option, ecModel);\n    option.selected = option.selected || {};\n  },\n  mergeOption: function (option) {\n    LegendModel.superCall(this, 'mergeOption', option);\n  },\n  optionUpdated: function () {\n    this._updateData(this.ecModel);\n\n    var legendData = this._data; // If selectedMode is single, try to select one\n\n    if (legendData[0] && this.get('selectedMode') === 'single') {\n      var hasSelected = false; // If has any selected in option.selected\n\n      for (var i = 0; i < legendData.length; i++) {\n        var name = legendData[i].get('name');\n\n        if (this.isSelected(name)) {\n          // Force to unselect others\n          this.select(name);\n          hasSelected = true;\n          break;\n        }\n      } // Try select the first if selectedMode is single\n\n\n      !hasSelected && this.select(legendData[0].get('name'));\n    }\n  },\n  _updateData: function (ecModel) {\n    var potentialData = [];\n    var availableNames = [];\n    ecModel.eachRawSeries(function (seriesModel) {\n      var seriesName = seriesModel.name;\n      availableNames.push(seriesName);\n      var isPotential;\n\n      if (seriesModel.legendDataProvider) {\n        var data = seriesModel.legendDataProvider();\n        var names = data.mapArray(data.getName);\n\n        if (!ecModel.isSeriesFiltered(seriesModel)) {\n          availableNames = availableNames.concat(names);\n        }\n\n        if (names.length) {\n          potentialData = potentialData.concat(names);\n        } else {\n          isPotential = true;\n        }\n      } else {\n        isPotential = true;\n      }\n\n      if (isPotential && isNameSpecified(seriesModel)) {\n        potentialData.push(seriesModel.name);\n      }\n    });\n    /**\n     * @type {Array.<string>}\n     * @private\n     */\n\n    this._availableNames = availableNames; // If legend.data not specified in option, use availableNames as data,\n    // which is convinient for user preparing option.\n\n    var rawData = this.get('data') || potentialData;\n    var legendData = zrUtil.map(rawData, function (dataItem) {\n      // Can be string or number\n      if (typeof dataItem === 'string' || typeof dataItem === 'number') {\n        dataItem = {\n          name: dataItem\n        };\n      }\n\n      return new Model(dataItem, this, this.ecModel);\n    }, this);\n    /**\n     * @type {Array.<module:echarts/model/Model>}\n     * @private\n     */\n\n    this._data = legendData;\n  },\n\n  /**\n   * @return {Array.<module:echarts/model/Model>}\n   */\n  getData: function () {\n    return this._data;\n  },\n\n  /**\n   * @param {string} name\n   */\n  select: function (name) {\n    var selected = this.option.selected;\n    var selectedMode = this.get('selectedMode');\n\n    if (selectedMode === 'single') {\n      var data = this._data;\n      zrUtil.each(data, function (dataItem) {\n        selected[dataItem.get('name')] = false;\n      });\n    }\n\n    selected[name] = true;\n  },\n\n  /**\n   * @param {string} name\n   */\n  unSelect: function (name) {\n    if (this.get('selectedMode') !== 'single') {\n      this.option.selected[name] = false;\n    }\n  },\n\n  /**\n   * @param {string} name\n   */\n  toggleSelected: function (name) {\n    var selected = this.option.selected; // Default is true\n\n    if (!selected.hasOwnProperty(name)) {\n      selected[name] = true;\n    }\n\n    this[selected[name] ? 'unSelect' : 'select'](name);\n  },\n\n  /**\n   * @param {string} name\n   */\n  isSelected: function (name) {\n    var selected = this.option.selected;\n    return !(selected.hasOwnProperty(name) && !selected[name]) && zrUtil.indexOf(this._availableNames, name) >= 0;\n  },\n  defaultOption: {\n    // 一级层叠\n    zlevel: 0,\n    // 二级层叠\n    z: 4,\n    show: true,\n    // 布局方式，默认为水平布局，可选为：\n    // 'horizontal' | 'vertical'\n    orient: 'horizontal',\n    left: 'center',\n    // right: 'center',\n    top: 0,\n    // bottom: null,\n    // 水平对齐\n    // 'auto' | 'left' | 'right'\n    // 默认为 'auto', 根据 x 的位置判断是左对齐还是右对齐\n    align: 'auto',\n    backgroundColor: 'rgba(0,0,0,0)',\n    // 图例边框颜色\n    borderColor: '#ccc',\n    borderRadius: 0,\n    // 图例边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 图例内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // 各个item之间的间隔，单位px，默认为10，\n    // 横向布局时为水平间隔，纵向布局时为纵向间隔\n    itemGap: 10,\n    // 图例图形宽度\n    itemWidth: 25,\n    // 图例图形高度\n    itemHeight: 14,\n    // 图例关闭时候的颜色\n    inactiveColor: '#ccc',\n    textStyle: {\n      // 图例文字颜色\n      color: '#333'\n    },\n    // formatter: '',\n    // 选择模式，默认开启图例开关\n    selectedMode: true,\n    // 配置默认选中状态，可配合LEGEND.SELECTED事件做动态数据载入\n    // selected: null,\n    // 图例内容（详见legend.data，数组中每一项代表一个item\n    // data: [],\n    // Tooltip 相关配置\n    tooltip: {\n      show: false\n    }\n  }\n});\nvar _default = LegendModel;\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nrequire(\"./axisPointer\");\n\nrequire(\"./tooltip/TooltipModel\");\n\nrequire(\"./tooltip/TooltipView\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// FIXME Better way to pack data in graphic element\n\n/**\n * @action\n * @property {string} type\n * @property {number} seriesIndex\n * @property {number} dataIndex\n * @property {number} [x]\n * @property {number} [y]\n */\necharts.registerAction({\n  type: 'showTip',\n  event: 'showTip',\n  update: 'tooltip:manuallyShowTip'\n}, // noop\nfunction () {});\necharts.registerAction({\n  type: 'hideTip',\n  event: 'hideTip',\n  update: 'tooltip:manuallyHideTip'\n}, // noop\nfunction () {});","var LRU = require(\"../core/LRU\");\n\nvar kCSSColorTable = {\n  'transparent': [0, 0, 0, 0],\n  'aliceblue': [240, 248, 255, 1],\n  'antiquewhite': [250, 235, 215, 1],\n  'aqua': [0, 255, 255, 1],\n  'aquamarine': [127, 255, 212, 1],\n  'azure': [240, 255, 255, 1],\n  'beige': [245, 245, 220, 1],\n  'bisque': [255, 228, 196, 1],\n  'black': [0, 0, 0, 1],\n  'blanchedalmond': [255, 235, 205, 1],\n  'blue': [0, 0, 255, 1],\n  'blueviolet': [138, 43, 226, 1],\n  'brown': [165, 42, 42, 1],\n  'burlywood': [222, 184, 135, 1],\n  'cadetblue': [95, 158, 160, 1],\n  'chartreuse': [127, 255, 0, 1],\n  'chocolate': [210, 105, 30, 1],\n  'coral': [255, 127, 80, 1],\n  'cornflowerblue': [100, 149, 237, 1],\n  'cornsilk': [255, 248, 220, 1],\n  'crimson': [220, 20, 60, 1],\n  'cyan': [0, 255, 255, 1],\n  'darkblue': [0, 0, 139, 1],\n  'darkcyan': [0, 139, 139, 1],\n  'darkgoldenrod': [184, 134, 11, 1],\n  'darkgray': [169, 169, 169, 1],\n  'darkgreen': [0, 100, 0, 1],\n  'darkgrey': [169, 169, 169, 1],\n  'darkkhaki': [189, 183, 107, 1],\n  'darkmagenta': [139, 0, 139, 1],\n  'darkolivegreen': [85, 107, 47, 1],\n  'darkorange': [255, 140, 0, 1],\n  'darkorchid': [153, 50, 204, 1],\n  'darkred': [139, 0, 0, 1],\n  'darksalmon': [233, 150, 122, 1],\n  'darkseagreen': [143, 188, 143, 1],\n  'darkslateblue': [72, 61, 139, 1],\n  'darkslategray': [47, 79, 79, 1],\n  'darkslategrey': [47, 79, 79, 1],\n  'darkturquoise': [0, 206, 209, 1],\n  'darkviolet': [148, 0, 211, 1],\n  'deeppink': [255, 20, 147, 1],\n  'deepskyblue': [0, 191, 255, 1],\n  'dimgray': [105, 105, 105, 1],\n  'dimgrey': [105, 105, 105, 1],\n  'dodgerblue': [30, 144, 255, 1],\n  'firebrick': [178, 34, 34, 1],\n  'floralwhite': [255, 250, 240, 1],\n  'forestgreen': [34, 139, 34, 1],\n  'fuchsia': [255, 0, 255, 1],\n  'gainsboro': [220, 220, 220, 1],\n  'ghostwhite': [248, 248, 255, 1],\n  'gold': [255, 215, 0, 1],\n  'goldenrod': [218, 165, 32, 1],\n  'gray': [128, 128, 128, 1],\n  'green': [0, 128, 0, 1],\n  'greenyellow': [173, 255, 47, 1],\n  'grey': [128, 128, 128, 1],\n  'honeydew': [240, 255, 240, 1],\n  'hotpink': [255, 105, 180, 1],\n  'indianred': [205, 92, 92, 1],\n  'indigo': [75, 0, 130, 1],\n  'ivory': [255, 255, 240, 1],\n  'khaki': [240, 230, 140, 1],\n  'lavender': [230, 230, 250, 1],\n  'lavenderblush': [255, 240, 245, 1],\n  'lawngreen': [124, 252, 0, 1],\n  'lemonchiffon': [255, 250, 205, 1],\n  'lightblue': [173, 216, 230, 1],\n  'lightcoral': [240, 128, 128, 1],\n  'lightcyan': [224, 255, 255, 1],\n  'lightgoldenrodyellow': [250, 250, 210, 1],\n  'lightgray': [211, 211, 211, 1],\n  'lightgreen': [144, 238, 144, 1],\n  'lightgrey': [211, 211, 211, 1],\n  'lightpink': [255, 182, 193, 1],\n  'lightsalmon': [255, 160, 122, 1],\n  'lightseagreen': [32, 178, 170, 1],\n  'lightskyblue': [135, 206, 250, 1],\n  'lightslategray': [119, 136, 153, 1],\n  'lightslategrey': [119, 136, 153, 1],\n  'lightsteelblue': [176, 196, 222, 1],\n  'lightyellow': [255, 255, 224, 1],\n  'lime': [0, 255, 0, 1],\n  'limegreen': [50, 205, 50, 1],\n  'linen': [250, 240, 230, 1],\n  'magenta': [255, 0, 255, 1],\n  'maroon': [128, 0, 0, 1],\n  'mediumaquamarine': [102, 205, 170, 1],\n  'mediumblue': [0, 0, 205, 1],\n  'mediumorchid': [186, 85, 211, 1],\n  'mediumpurple': [147, 112, 219, 1],\n  'mediumseagreen': [60, 179, 113, 1],\n  'mediumslateblue': [123, 104, 238, 1],\n  'mediumspringgreen': [0, 250, 154, 1],\n  'mediumturquoise': [72, 209, 204, 1],\n  'mediumvioletred': [199, 21, 133, 1],\n  'midnightblue': [25, 25, 112, 1],\n  'mintcream': [245, 255, 250, 1],\n  'mistyrose': [255, 228, 225, 1],\n  'moccasin': [255, 228, 181, 1],\n  'navajowhite': [255, 222, 173, 1],\n  'navy': [0, 0, 128, 1],\n  'oldlace': [253, 245, 230, 1],\n  'olive': [128, 128, 0, 1],\n  'olivedrab': [107, 142, 35, 1],\n  'orange': [255, 165, 0, 1],\n  'orangered': [255, 69, 0, 1],\n  'orchid': [218, 112, 214, 1],\n  'palegoldenrod': [238, 232, 170, 1],\n  'palegreen': [152, 251, 152, 1],\n  'paleturquoise': [175, 238, 238, 1],\n  'palevioletred': [219, 112, 147, 1],\n  'papayawhip': [255, 239, 213, 1],\n  'peachpuff': [255, 218, 185, 1],\n  'peru': [205, 133, 63, 1],\n  'pink': [255, 192, 203, 1],\n  'plum': [221, 160, 221, 1],\n  'powderblue': [176, 224, 230, 1],\n  'purple': [128, 0, 128, 1],\n  'red': [255, 0, 0, 1],\n  'rosybrown': [188, 143, 143, 1],\n  'royalblue': [65, 105, 225, 1],\n  'saddlebrown': [139, 69, 19, 1],\n  'salmon': [250, 128, 114, 1],\n  'sandybrown': [244, 164, 96, 1],\n  'seagreen': [46, 139, 87, 1],\n  'seashell': [255, 245, 238, 1],\n  'sienna': [160, 82, 45, 1],\n  'silver': [192, 192, 192, 1],\n  'skyblue': [135, 206, 235, 1],\n  'slateblue': [106, 90, 205, 1],\n  'slategray': [112, 128, 144, 1],\n  'slategrey': [112, 128, 144, 1],\n  'snow': [255, 250, 250, 1],\n  'springgreen': [0, 255, 127, 1],\n  'steelblue': [70, 130, 180, 1],\n  'tan': [210, 180, 140, 1],\n  'teal': [0, 128, 128, 1],\n  'thistle': [216, 191, 216, 1],\n  'tomato': [255, 99, 71, 1],\n  'turquoise': [64, 224, 208, 1],\n  'violet': [238, 130, 238, 1],\n  'wheat': [245, 222, 179, 1],\n  'white': [255, 255, 255, 1],\n  'whitesmoke': [245, 245, 245, 1],\n  'yellow': [255, 255, 0, 1],\n  'yellowgreen': [154, 205, 50, 1]\n};\n\nfunction clampCssByte(i) {\n  // Clamp to integer 0 .. 255.\n  i = Math.round(i); // Seems to be what Chrome does (vs truncation).\n\n  return i < 0 ? 0 : i > 255 ? 255 : i;\n}\n\nfunction clampCssAngle(i) {\n  // Clamp to integer 0 .. 360.\n  i = Math.round(i); // Seems to be what Chrome does (vs truncation).\n\n  return i < 0 ? 0 : i > 360 ? 360 : i;\n}\n\nfunction clampCssFloat(f) {\n  // Clamp to float 0.0 .. 1.0.\n  return f < 0 ? 0 : f > 1 ? 1 : f;\n}\n\nfunction parseCssInt(str) {\n  // int or percentage.\n  if (str.length && str.charAt(str.length - 1) === '%') {\n    return clampCssByte(parseFloat(str) / 100 * 255);\n  }\n\n  return clampCssByte(parseInt(str, 10));\n}\n\nfunction parseCssFloat(str) {\n  // float or percentage.\n  if (str.length && str.charAt(str.length - 1) === '%') {\n    return clampCssFloat(parseFloat(str) / 100);\n  }\n\n  return clampCssFloat(parseFloat(str));\n}\n\nfunction cssHueToRgb(m1, m2, h) {\n  if (h < 0) {\n    h += 1;\n  } else if (h > 1) {\n    h -= 1;\n  }\n\n  if (h * 6 < 1) {\n    return m1 + (m2 - m1) * h * 6;\n  }\n\n  if (h * 2 < 1) {\n    return m2;\n  }\n\n  if (h * 3 < 2) {\n    return m1 + (m2 - m1) * (2 / 3 - h) * 6;\n  }\n\n  return m1;\n}\n\nfunction lerpNumber(a, b, p) {\n  return a + (b - a) * p;\n}\n\nfunction setRgba(out, r, g, b, a) {\n  out[0] = r;\n  out[1] = g;\n  out[2] = b;\n  out[3] = a;\n  return out;\n}\n\nfunction copyRgba(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n\nvar colorCache = new LRU(20);\nvar lastRemovedArr = null;\n\nfunction putToCache(colorStr, rgbaArr) {\n  // Reuse removed array\n  if (lastRemovedArr) {\n    copyRgba(lastRemovedArr, rgbaArr);\n  }\n\n  lastRemovedArr = colorCache.put(colorStr, lastRemovedArr || rgbaArr.slice());\n}\n/**\n * @param {string} colorStr\n * @param {Array.<number>} out\n * @return {Array.<number>}\n * @memberOf module:zrender/util/color\n */\n\n\nfunction parse(colorStr, rgbaArr) {\n  if (!colorStr) {\n    return;\n  }\n\n  rgbaArr = rgbaArr || [];\n  var cached = colorCache.get(colorStr);\n\n  if (cached) {\n    return copyRgba(rgbaArr, cached);\n  } // colorStr may be not string\n\n\n  colorStr = colorStr + ''; // Remove all whitespace, not compliant, but should just be more accepting.\n\n  var str = colorStr.replace(/ /g, '').toLowerCase(); // Color keywords (and transparent) lookup.\n\n  if (str in kCSSColorTable) {\n    copyRgba(rgbaArr, kCSSColorTable[str]);\n    putToCache(colorStr, rgbaArr);\n    return rgbaArr;\n  } // #abc and #abc123 syntax.\n\n\n  if (str.charAt(0) === '#') {\n    if (str.length === 4) {\n      var iv = parseInt(str.substr(1), 16); // TODO(deanm): Stricter parsing.\n\n      if (!(iv >= 0 && iv <= 0xfff)) {\n        setRgba(rgbaArr, 0, 0, 0, 1);\n        return; // Covers NaN.\n      }\n\n      setRgba(rgbaArr, (iv & 0xf00) >> 4 | (iv & 0xf00) >> 8, iv & 0xf0 | (iv & 0xf0) >> 4, iv & 0xf | (iv & 0xf) << 4, 1);\n      putToCache(colorStr, rgbaArr);\n      return rgbaArr;\n    } else if (str.length === 7) {\n      var iv = parseInt(str.substr(1), 16); // TODO(deanm): Stricter parsing.\n\n      if (!(iv >= 0 && iv <= 0xffffff)) {\n        setRgba(rgbaArr, 0, 0, 0, 1);\n        return; // Covers NaN.\n      }\n\n      setRgba(rgbaArr, (iv & 0xff0000) >> 16, (iv & 0xff00) >> 8, iv & 0xff, 1);\n      putToCache(colorStr, rgbaArr);\n      return rgbaArr;\n    }\n\n    return;\n  }\n\n  var op = str.indexOf('('),\n      ep = str.indexOf(')');\n\n  if (op !== -1 && ep + 1 === str.length) {\n    var fname = str.substr(0, op);\n    var params = str.substr(op + 1, ep - (op + 1)).split(',');\n    var alpha = 1; // To allow case fallthrough.\n\n    switch (fname) {\n      case 'rgba':\n        if (params.length !== 4) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        alpha = parseCssFloat(params.pop());\n      // jshint ignore:line\n      // Fall through.\n\n      case 'rgb':\n        if (params.length !== 3) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        setRgba(rgbaArr, parseCssInt(params[0]), parseCssInt(params[1]), parseCssInt(params[2]), alpha);\n        putToCache(colorStr, rgbaArr);\n        return rgbaArr;\n\n      case 'hsla':\n        if (params.length !== 4) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        params[3] = parseCssFloat(params[3]);\n        hsla2rgba(params, rgbaArr);\n        putToCache(colorStr, rgbaArr);\n        return rgbaArr;\n\n      case 'hsl':\n        if (params.length !== 3) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        hsla2rgba(params, rgbaArr);\n        putToCache(colorStr, rgbaArr);\n        return rgbaArr;\n\n      default:\n        return;\n    }\n  }\n\n  setRgba(rgbaArr, 0, 0, 0, 1);\n  return;\n}\n/**\n * @param {Array.<number>} hsla\n * @param {Array.<number>} rgba\n * @return {Array.<number>} rgba\n */\n\n\nfunction hsla2rgba(hsla, rgba) {\n  var h = (parseFloat(hsla[0]) % 360 + 360) % 360 / 360; // 0 .. 1\n  // NOTE(deanm): According to the CSS spec s/l should only be\n  // percentages, but we don't bother and let float or percentage.\n\n  var s = parseCssFloat(hsla[1]);\n  var l = parseCssFloat(hsla[2]);\n  var m2 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\n  var m1 = l * 2 - m2;\n  rgba = rgba || [];\n  setRgba(rgba, clampCssByte(cssHueToRgb(m1, m2, h + 1 / 3) * 255), clampCssByte(cssHueToRgb(m1, m2, h) * 255), clampCssByte(cssHueToRgb(m1, m2, h - 1 / 3) * 255), 1);\n\n  if (hsla.length === 4) {\n    rgba[3] = hsla[3];\n  }\n\n  return rgba;\n}\n/**\n * @param {Array.<number>} rgba\n * @return {Array.<number>} hsla\n */\n\n\nfunction rgba2hsla(rgba) {\n  if (!rgba) {\n    return;\n  } // RGB from 0 to 255\n\n\n  var R = rgba[0] / 255;\n  var G = rgba[1] / 255;\n  var B = rgba[2] / 255;\n  var vMin = Math.min(R, G, B); // Min. value of RGB\n\n  var vMax = Math.max(R, G, B); // Max. value of RGB\n\n  var delta = vMax - vMin; // Delta RGB value\n\n  var L = (vMax + vMin) / 2;\n  var H;\n  var S; // HSL results from 0 to 1\n\n  if (delta === 0) {\n    H = 0;\n    S = 0;\n  } else {\n    if (L < 0.5) {\n      S = delta / (vMax + vMin);\n    } else {\n      S = delta / (2 - vMax - vMin);\n    }\n\n    var deltaR = ((vMax - R) / 6 + delta / 2) / delta;\n    var deltaG = ((vMax - G) / 6 + delta / 2) / delta;\n    var deltaB = ((vMax - B) / 6 + delta / 2) / delta;\n\n    if (R === vMax) {\n      H = deltaB - deltaG;\n    } else if (G === vMax) {\n      H = 1 / 3 + deltaR - deltaB;\n    } else if (B === vMax) {\n      H = 2 / 3 + deltaG - deltaR;\n    }\n\n    if (H < 0) {\n      H += 1;\n    }\n\n    if (H > 1) {\n      H -= 1;\n    }\n  }\n\n  var hsla = [H * 360, S, L];\n\n  if (rgba[3] != null) {\n    hsla.push(rgba[3]);\n  }\n\n  return hsla;\n}\n/**\n * @param {string} color\n * @param {number} level\n * @return {string}\n * @memberOf module:zrender/util/color\n */\n\n\nfunction lift(color, level) {\n  var colorArr = parse(color);\n\n  if (colorArr) {\n    for (var i = 0; i < 3; i++) {\n      if (level < 0) {\n        colorArr[i] = colorArr[i] * (1 - level) | 0;\n      } else {\n        colorArr[i] = (255 - colorArr[i]) * level + colorArr[i] | 0;\n      }\n\n      if (colorArr[i] > 255) {\n        colorArr[i] = 255;\n      } else if (color[i] < 0) {\n        colorArr[i] = 0;\n      }\n    }\n\n    return stringify(colorArr, colorArr.length === 4 ? 'rgba' : 'rgb');\n  }\n}\n/**\n * @param {string} color\n * @return {string}\n * @memberOf module:zrender/util/color\n */\n\n\nfunction toHex(color) {\n  var colorArr = parse(color);\n\n  if (colorArr) {\n    return ((1 << 24) + (colorArr[0] << 16) + (colorArr[1] << 8) + +colorArr[2]).toString(16).slice(1);\n  }\n}\n/**\n * Map value to color. Faster than lerp methods because color is represented by rgba array.\n * @param {number} normalizedValue A float between 0 and 1.\n * @param {Array.<Array.<number>>} colors List of rgba color array\n * @param {Array.<number>} [out] Mapped gba color array\n * @return {Array.<number>} will be null/undefined if input illegal.\n */\n\n\nfunction fastLerp(normalizedValue, colors, out) {\n  if (!(colors && colors.length) || !(normalizedValue >= 0 && normalizedValue <= 1)) {\n    return;\n  }\n\n  out = out || [];\n  var value = normalizedValue * (colors.length - 1);\n  var leftIndex = Math.floor(value);\n  var rightIndex = Math.ceil(value);\n  var leftColor = colors[leftIndex];\n  var rightColor = colors[rightIndex];\n  var dv = value - leftIndex;\n  out[0] = clampCssByte(lerpNumber(leftColor[0], rightColor[0], dv));\n  out[1] = clampCssByte(lerpNumber(leftColor[1], rightColor[1], dv));\n  out[2] = clampCssByte(lerpNumber(leftColor[2], rightColor[2], dv));\n  out[3] = clampCssFloat(lerpNumber(leftColor[3], rightColor[3], dv));\n  return out;\n}\n/**\n * @deprecated\n */\n\n\nvar fastMapToColor = fastLerp;\n/**\n * @param {number} normalizedValue A float between 0 and 1.\n * @param {Array.<string>} colors Color list.\n * @param {boolean=} fullOutput Default false.\n * @return {(string|Object)} Result color. If fullOutput,\n *                           return {color: ..., leftIndex: ..., rightIndex: ..., value: ...},\n * @memberOf module:zrender/util/color\n */\n\nfunction lerp(normalizedValue, colors, fullOutput) {\n  if (!(colors && colors.length) || !(normalizedValue >= 0 && normalizedValue <= 1)) {\n    return;\n  }\n\n  var value = normalizedValue * (colors.length - 1);\n  var leftIndex = Math.floor(value);\n  var rightIndex = Math.ceil(value);\n  var leftColor = parse(colors[leftIndex]);\n  var rightColor = parse(colors[rightIndex]);\n  var dv = value - leftIndex;\n  var color = stringify([clampCssByte(lerpNumber(leftColor[0], rightColor[0], dv)), clampCssByte(lerpNumber(leftColor[1], rightColor[1], dv)), clampCssByte(lerpNumber(leftColor[2], rightColor[2], dv)), clampCssFloat(lerpNumber(leftColor[3], rightColor[3], dv))], 'rgba');\n  return fullOutput ? {\n    color: color,\n    leftIndex: leftIndex,\n    rightIndex: rightIndex,\n    value: value\n  } : color;\n}\n/**\n * @deprecated\n */\n\n\nvar mapToColor = lerp;\n/**\n * @param {string} color\n * @param {number=} h 0 ~ 360, ignore when null.\n * @param {number=} s 0 ~ 1, ignore when null.\n * @param {number=} l 0 ~ 1, ignore when null.\n * @return {string} Color string in rgba format.\n * @memberOf module:zrender/util/color\n */\n\nfunction modifyHSL(color, h, s, l) {\n  color = parse(color);\n\n  if (color) {\n    color = rgba2hsla(color);\n    h != null && (color[0] = clampCssAngle(h));\n    s != null && (color[1] = parseCssFloat(s));\n    l != null && (color[2] = parseCssFloat(l));\n    return stringify(hsla2rgba(color), 'rgba');\n  }\n}\n/**\n * @param {string} color\n * @param {number=} alpha 0 ~ 1\n * @return {string} Color string in rgba format.\n * @memberOf module:zrender/util/color\n */\n\n\nfunction modifyAlpha(color, alpha) {\n  color = parse(color);\n\n  if (color && alpha != null) {\n    color[3] = clampCssFloat(alpha);\n    return stringify(color, 'rgba');\n  }\n}\n/**\n * @param {Array.<number>} arrColor like [12,33,44,0.4]\n * @param {string} type 'rgba', 'hsva', ...\n * @return {string} Result color. (If input illegal, return undefined).\n */\n\n\nfunction stringify(arrColor, type) {\n  if (!arrColor || !arrColor.length) {\n    return;\n  }\n\n  var colorStr = arrColor[0] + ',' + arrColor[1] + ',' + arrColor[2];\n\n  if (type === 'rgba' || type === 'hsva' || type === 'hsla') {\n    colorStr += ',' + arrColor[3];\n  }\n\n  return type + '(' + colorStr + ')';\n}\n\nexports.parse = parse;\nexports.lift = lift;\nexports.toHex = toHex;\nexports.fastLerp = fastLerp;\nexports.fastMapToColor = fastMapToColor;\nexports.lerp = lerp;\nexports.mapToColor = mapToColor;\nexports.modifyHSL = modifyHSL;\nexports.modifyAlpha = modifyAlpha;\nexports.stringify = stringify;","var _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\n\nvar Group = require(\"zrender/lib/container/Group\");\n\nvar componentUtil = require(\"../util/component\");\n\nvar clazzUtil = require(\"../util/clazz\");\n\nvar modelUtil = require(\"../util/model\");\n\nvar _task = require(\"../stream/task\");\n\nvar createTask = _task.createTask;\n\nvar createRenderPlanner = require(\"../chart/helper/createRenderPlanner\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar inner = modelUtil.makeInner();\nvar renderPlanner = createRenderPlanner();\n\nfunction Chart() {\n  /**\n   * @type {module:zrender/container/Group}\n   * @readOnly\n   */\n  this.group = new Group();\n  /**\n   * @type {string}\n   * @readOnly\n   */\n\n  this.uid = componentUtil.getUID('viewChart');\n  this.renderTask = createTask({\n    plan: renderTaskPlan,\n    reset: renderTaskReset\n  });\n  this.renderTask.context = {\n    view: this\n  };\n}\n\nChart.prototype = {\n  type: 'chart',\n\n  /**\n   * Init the chart.\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  init: function (ecModel, api) {},\n\n  /**\n   * Render the chart.\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  render: function (seriesModel, ecModel, api, payload) {},\n\n  /**\n   * Highlight series or specified data item.\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  highlight: function (seriesModel, ecModel, api, payload) {\n    toggleHighlight(seriesModel.getData(), payload, 'emphasis');\n  },\n\n  /**\n   * Downplay series or specified data item.\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  downplay: function (seriesModel, ecModel, api, payload) {\n    toggleHighlight(seriesModel.getData(), payload, 'normal');\n  },\n\n  /**\n   * Remove self.\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  remove: function (ecModel, api) {\n    this.group.removeAll();\n  },\n\n  /**\n   * Dispose self.\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  dispose: function () {},\n\n  /**\n   * Rendering preparation in progressive mode.\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  incrementalPrepareRender: null,\n\n  /**\n   * Render in progressive mode.\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  incrementalRender: null,\n\n  /**\n   * Update transform directly.\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   * @return {Object} {update: true}\n   */\n  updateTransform: null\n  /**\n   * The view contains the given point.\n   * @interface\n   * @param {Array.<number>} point\n   * @return {boolean}\n   */\n  // containPoint: function () {}\n\n};\nvar chartProto = Chart.prototype;\n\nchartProto.updateView = chartProto.updateLayout = chartProto.updateVisual = function (seriesModel, ecModel, api, payload) {\n  this.render(seriesModel, ecModel, api, payload);\n};\n/**\n * Set state of single element\n * @param  {module:zrender/Element} el\n * @param  {string} state\n */\n\n\nfunction elSetState(el, state) {\n  if (el) {\n    el.trigger(state);\n\n    if (el.type === 'group') {\n      for (var i = 0; i < el.childCount(); i++) {\n        elSetState(el.childAt(i), state);\n      }\n    }\n  }\n}\n/**\n * @param  {module:echarts/data/List} data\n * @param  {Object} payload\n * @param  {string} state 'normal'|'emphasis'\n */\n\n\nfunction toggleHighlight(data, payload, state) {\n  var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n  if (dataIndex != null) {\n    each(modelUtil.normalizeToArray(dataIndex), function (dataIdx) {\n      elSetState(data.getItemGraphicEl(dataIdx), state);\n    });\n  } else {\n    data.eachItemGraphicEl(function (el) {\n      elSetState(el, state);\n    });\n  }\n} // Enable Chart.extend.\n\n\nclazzUtil.enableClassExtend(Chart, ['dispose']); // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n\nclazzUtil.enableClassManagement(Chart, {\n  registerWhenExtend: true\n});\n\nChart.markUpdateMethod = function (payload, methodName) {\n  inner(payload).updateMethod = methodName;\n};\n\nfunction renderTaskPlan(context) {\n  return renderPlanner(context.model);\n}\n\nfunction renderTaskReset(context) {\n  var seriesModel = context.model;\n  var ecModel = context.ecModel;\n  var api = context.api;\n  var payload = context.payload; // ???! remove updateView updateVisual\n\n  var progressiveRender = seriesModel.pipelineContext.progressiveRender;\n  var view = context.view;\n  var updateMethod = payload && inner(payload).updateMethod;\n  var methodName = progressiveRender ? 'incrementalPrepareRender' : updateMethod && view[updateMethod] ? updateMethod // `appendData` is also supported when data amount\n  // is less than progressive threshold.\n  : 'render';\n\n  if (methodName !== 'render') {\n    view[methodName](seriesModel, ecModel, api, payload);\n  }\n\n  return progressMethodMap[methodName];\n}\n\nvar progressMethodMap = {\n  incrementalPrepareRender: {\n    progress: function (params, context) {\n      context.view.incrementalRender(params, context.model, context.ecModel, context.api, context.payload);\n    }\n  },\n  render: {\n    // Put view.render in `progress` to support appendData. But in this case\n    // view.render should not be called in reset, otherwise it will be called\n    // twise. Use `forceFirstProgress` to make sure that view.render is called\n    // in any cases.\n    forceFirstProgress: true,\n    progress: function (params, context) {\n      context.view.render(context.model, context.ecModel, context.api, context.payload);\n    }\n  }\n};\nvar _default = Chart;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"./graphic\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Symbol factory\n\n/**\n * Triangle shape\n * @inner\n */\nvar Triangle = graphic.extendShape({\n  type: 'triangle',\n  shape: {\n    cx: 0,\n    cy: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (path, shape) {\n    var cx = shape.cx;\n    var cy = shape.cy;\n    var width = shape.width / 2;\n    var height = shape.height / 2;\n    path.moveTo(cx, cy - height);\n    path.lineTo(cx + width, cy + height);\n    path.lineTo(cx - width, cy + height);\n    path.closePath();\n  }\n});\n/**\n * Diamond shape\n * @inner\n */\n\nvar Diamond = graphic.extendShape({\n  type: 'diamond',\n  shape: {\n    cx: 0,\n    cy: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (path, shape) {\n    var cx = shape.cx;\n    var cy = shape.cy;\n    var width = shape.width / 2;\n    var height = shape.height / 2;\n    path.moveTo(cx, cy - height);\n    path.lineTo(cx + width, cy);\n    path.lineTo(cx, cy + height);\n    path.lineTo(cx - width, cy);\n    path.closePath();\n  }\n});\n/**\n * Pin shape\n * @inner\n */\n\nvar Pin = graphic.extendShape({\n  type: 'pin',\n  shape: {\n    // x, y on the cusp\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (path, shape) {\n    var x = shape.x;\n    var y = shape.y;\n    var w = shape.width / 5 * 3; // Height must be larger than width\n\n    var h = Math.max(w, shape.height);\n    var r = w / 2; // Dist on y with tangent point and circle center\n\n    var dy = r * r / (h - r);\n    var cy = y - h + r + dy;\n    var angle = Math.asin(dy / r); // Dist on x with tangent point and circle center\n\n    var dx = Math.cos(angle) * r;\n    var tanX = Math.sin(angle);\n    var tanY = Math.cos(angle);\n    var cpLen = r * 0.6;\n    var cpLen2 = r * 0.7;\n    path.moveTo(x - dx, cy + dy);\n    path.arc(x, cy, r, Math.PI - angle, Math.PI * 2 + angle);\n    path.bezierCurveTo(x + dx - tanX * cpLen, cy + dy + tanY * cpLen, x, y - cpLen2, x, y);\n    path.bezierCurveTo(x, y - cpLen2, x - dx + tanX * cpLen, cy + dy + tanY * cpLen, x - dx, cy + dy);\n    path.closePath();\n  }\n});\n/**\n * Arrow shape\n * @inner\n */\n\nvar Arrow = graphic.extendShape({\n  type: 'arrow',\n  shape: {\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (ctx, shape) {\n    var height = shape.height;\n    var width = shape.width;\n    var x = shape.x;\n    var y = shape.y;\n    var dx = width / 3 * 2;\n    ctx.moveTo(x, y);\n    ctx.lineTo(x + dx, y + height);\n    ctx.lineTo(x, y + height / 4 * 3);\n    ctx.lineTo(x - dx, y + height);\n    ctx.lineTo(x, y);\n    ctx.closePath();\n  }\n});\n/**\n * Map of path contructors\n * @type {Object.<string, module:zrender/graphic/Path>}\n */\n\nvar symbolCtors = {\n  line: graphic.Line,\n  rect: graphic.Rect,\n  roundRect: graphic.Rect,\n  square: graphic.Rect,\n  circle: graphic.Circle,\n  diamond: Diamond,\n  pin: Pin,\n  arrow: Arrow,\n  triangle: Triangle\n};\nvar symbolShapeMakers = {\n  line: function (x, y, w, h, shape) {\n    // FIXME\n    shape.x1 = x;\n    shape.y1 = y + h / 2;\n    shape.x2 = x + w;\n    shape.y2 = y + h / 2;\n  },\n  rect: function (x, y, w, h, shape) {\n    shape.x = x;\n    shape.y = y;\n    shape.width = w;\n    shape.height = h;\n  },\n  roundRect: function (x, y, w, h, shape) {\n    shape.x = x;\n    shape.y = y;\n    shape.width = w;\n    shape.height = h;\n    shape.r = Math.min(w, h) / 4;\n  },\n  square: function (x, y, w, h, shape) {\n    var size = Math.min(w, h);\n    shape.x = x;\n    shape.y = y;\n    shape.width = size;\n    shape.height = size;\n  },\n  circle: function (x, y, w, h, shape) {\n    // Put circle in the center of square\n    shape.cx = x + w / 2;\n    shape.cy = y + h / 2;\n    shape.r = Math.min(w, h) / 2;\n  },\n  diamond: function (x, y, w, h, shape) {\n    shape.cx = x + w / 2;\n    shape.cy = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  },\n  pin: function (x, y, w, h, shape) {\n    shape.x = x + w / 2;\n    shape.y = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  },\n  arrow: function (x, y, w, h, shape) {\n    shape.x = x + w / 2;\n    shape.y = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  },\n  triangle: function (x, y, w, h, shape) {\n    shape.cx = x + w / 2;\n    shape.cy = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  }\n};\nvar symbolBuildProxies = {};\nzrUtil.each(symbolCtors, function (Ctor, name) {\n  symbolBuildProxies[name] = new Ctor();\n});\nvar SymbolClz = graphic.extendShape({\n  type: 'symbol',\n  shape: {\n    symbolType: '',\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  beforeBrush: function () {\n    var style = this.style;\n    var shape = this.shape; // FIXME\n\n    if (shape.symbolType === 'pin' && style.textPosition === 'inside') {\n      style.textPosition = ['50%', '40%'];\n      style.textAlign = 'center';\n      style.textVerticalAlign = 'middle';\n    }\n  },\n  buildPath: function (ctx, shape, inBundle) {\n    var symbolType = shape.symbolType;\n    var proxySymbol = symbolBuildProxies[symbolType];\n\n    if (shape.symbolType !== 'none') {\n      if (!proxySymbol) {\n        // Default rect\n        symbolType = 'rect';\n        proxySymbol = symbolBuildProxies[symbolType];\n      }\n\n      symbolShapeMakers[symbolType](shape.x, shape.y, shape.width, shape.height, proxySymbol.shape);\n      proxySymbol.buildPath(ctx, proxySymbol.shape, inBundle);\n    }\n  }\n}); // Provide setColor helper method to avoid determine if set the fill or stroke outside\n\nfunction symbolPathSetColor(color, innerColor) {\n  if (this.type !== 'image') {\n    var symbolStyle = this.style;\n    var symbolShape = this.shape;\n\n    if (symbolShape && symbolShape.symbolType === 'line') {\n      symbolStyle.stroke = color;\n    } else if (this.__isEmptyBrush) {\n      symbolStyle.stroke = color;\n      symbolStyle.fill = innerColor || '#fff';\n    } else {\n      // FIXME 判断图形默认是填充还是描边，使用 onlyStroke ?\n      symbolStyle.fill && (symbolStyle.fill = color);\n      symbolStyle.stroke && (symbolStyle.stroke = color);\n    }\n\n    this.dirty(false);\n  }\n}\n/**\n * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n * @param {string} symbolType\n * @param {number} x\n * @param {number} y\n * @param {number} w\n * @param {number} h\n * @param {string} color\n * @param {boolean} [keepAspect=false] whether to keep the ratio of w/h,\n *                            for path and image only.\n */\n\n\nfunction createSymbol(symbolType, x, y, w, h, color, keepAspect) {\n  // TODO Support image object, DynamicImage.\n  var isEmpty = symbolType.indexOf('empty') === 0;\n\n  if (isEmpty) {\n    symbolType = symbolType.substr(5, 1).toLowerCase() + symbolType.substr(6);\n  }\n\n  var symbolPath;\n\n  if (symbolType.indexOf('image://') === 0) {\n    symbolPath = graphic.makeImage(symbolType.slice(8), new BoundingRect(x, y, w, h), keepAspect ? 'center' : 'cover');\n  } else if (symbolType.indexOf('path://') === 0) {\n    symbolPath = graphic.makePath(symbolType.slice(7), {}, new BoundingRect(x, y, w, h), keepAspect ? 'center' : 'cover');\n  } else {\n    symbolPath = new SymbolClz({\n      shape: {\n        symbolType: symbolType,\n        x: x,\n        y: y,\n        width: w,\n        height: h\n      }\n    });\n  }\n\n  symbolPath.__isEmptyBrush = isEmpty;\n  symbolPath.setColor = symbolPathSetColor;\n  symbolPath.setColor(color);\n  return symbolPath;\n}\n\nexports.createSymbol = createSymbol;","var makeStyleMapper = require(\"./makeStyleMapper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar getLineStyle = makeStyleMapper([['lineWidth', 'width'], ['stroke', 'color'], ['opacity'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor']]);\nvar _default = {\n  getLineStyle: function (excludes) {\n    var style = getLineStyle(this, excludes);\n    var lineDash = this.getLineDash(style.lineWidth);\n    lineDash && (style.lineDash = lineDash);\n    return style;\n  },\n  getLineDash: function (lineWidth) {\n    if (lineWidth == null) {\n      lineWidth = 1;\n    }\n\n    var lineType = this.get('type');\n    var dotSize = Math.max(lineWidth, 2);\n    var dashSize = lineWidth * 4;\n    return lineType === 'solid' || lineType == null ? null : lineType === 'dashed' ? [dashSize, dashSize] : [dotSize, dotSize];\n  }\n};\nmodule.exports = _default;","var _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\nvar each = _util.each;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// (1) [Caution]: the logic is correct based on the premises:\n//     data processing stage is blocked in stream.\n//     See <module:echarts/stream/Scheduler#performDataProcessorTasks>\n// (2) Only register once when import repeatly.\n//     Should be executed before after series filtered and before stack calculation.\nfunction _default(ecModel) {\n  var stackInfoMap = createHashMap();\n  ecModel.eachSeries(function (seriesModel) {\n    var stack = seriesModel.get('stack'); // Compatibal: when `stack` is set as '', do not stack.\n\n    if (stack) {\n      var stackInfoList = stackInfoMap.get(stack) || stackInfoMap.set(stack, []);\n      var data = seriesModel.getData();\n      var stackInfo = {\n        // Used for calculate axis extent automatically.\n        stackResultDimension: data.getCalculationInfo('stackResultDimension'),\n        stackedOverDimension: data.getCalculationInfo('stackedOverDimension'),\n        stackedDimension: data.getCalculationInfo('stackedDimension'),\n        stackedByDimension: data.getCalculationInfo('stackedByDimension'),\n        isStackedByIndex: data.getCalculationInfo('isStackedByIndex'),\n        data: data,\n        seriesModel: seriesModel\n      }; // If stacked on axis that do not support data stack.\n\n      if (!stackInfo.stackedDimension || !(stackInfo.isStackedByIndex || stackInfo.stackedByDimension)) {\n        return;\n      }\n\n      stackInfoList.length && data.setCalculationInfo('stackedOnSeries', stackInfoList[stackInfoList.length - 1].seriesModel);\n      stackInfoList.push(stackInfo);\n    }\n  });\n  stackInfoMap.each(calculateStack);\n}\n\nfunction calculateStack(stackInfoList) {\n  each(stackInfoList, function (targetStackInfo, idxInStack) {\n    var resultVal = [];\n    var resultNaN = [NaN, NaN];\n    var dims = [targetStackInfo.stackResultDimension, targetStackInfo.stackedOverDimension];\n    var targetData = targetStackInfo.data;\n    var isStackedByIndex = targetStackInfo.isStackedByIndex; // Should not write on raw data, because stack series model list changes\n    // depending on legend selection.\n\n    var newData = targetData.map(dims, function (v0, v1, dataIndex) {\n      var sum = targetData.get(targetStackInfo.stackedDimension, dataIndex); // Consider `connectNulls` of line area, if value is NaN, stackedOver\n      // should also be NaN, to draw a appropriate belt area.\n\n      if (isNaN(sum)) {\n        return resultNaN;\n      }\n\n      var byValue;\n      var stackedDataRawIndex;\n\n      if (isStackedByIndex) {\n        stackedDataRawIndex = targetData.getRawIndex(dataIndex);\n      } else {\n        byValue = targetData.get(targetStackInfo.stackedByDimension, dataIndex);\n      } // If stackOver is NaN, chart view will render point on value start.\n\n\n      var stackedOver = NaN;\n\n      for (var j = idxInStack - 1; j >= 0; j--) {\n        var stackInfo = stackInfoList[j]; // Has been optimized by inverted indices on `stackedByDimension`.\n\n        if (!isStackedByIndex) {\n          stackedDataRawIndex = stackInfo.data.rawIndexOf(stackInfo.stackedByDimension, byValue);\n        }\n\n        if (stackedDataRawIndex >= 0) {\n          var val = stackInfo.data.getByRawIndex(stackInfo.stackResultDimension, stackedDataRawIndex); // Considering positive stack, negative stack and empty data\n\n          if (sum >= 0 && val > 0 || // Positive stack\n          sum <= 0 && val < 0 // Negative stack\n          ) {\n              sum += val;\n              stackedOver = val;\n              break;\n            }\n        }\n      }\n\n      resultVal[0] = sum;\n      resultVal[1] = stackedOver;\n      return resultVal;\n    });\n    targetData.hostModel.setData(newData); // Update for consequent calculation\n\n    targetStackInfo.data = newData;\n  });\n}\n\nmodule.exports = _default;","var curve = require(\"../core/curve\");\n\n/**\n * 三次贝塞尔曲线描边包含判断\n * @param  {number}  x0\n * @param  {number}  y0\n * @param  {number}  x1\n * @param  {number}  y1\n * @param  {number}  x2\n * @param  {number}  y2\n * @param  {number}  x3\n * @param  {number}  y3\n * @param  {number}  lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {boolean}\n */\nfunction containStroke(x0, y0, x1, y1, x2, y2, x3, y3, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth; // Quick reject\n\n  if (y > y0 + _l && y > y1 + _l && y > y2 + _l && y > y3 + _l || y < y0 - _l && y < y1 - _l && y < y2 - _l && y < y3 - _l || x > x0 + _l && x > x1 + _l && x > x2 + _l && x > x3 + _l || x < x0 - _l && x < x1 - _l && x < x2 - _l && x < x3 - _l) {\n    return false;\n  }\n\n  var d = curve.cubicProjectPoint(x0, y0, x1, y1, x2, y2, x3, y3, x, y, null);\n  return d <= _l / 2;\n}\n\nexports.containStroke = containStroke;","var _layout = require(\"../../util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\nvar layoutBox = _layout.box;\nvar positionElement = _layout.positionElement;\n\nvar formatUtil = require(\"../../util/format\");\n\nvar graphic = require(\"../../util/graphic\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Layout list like component.\n * It will box layout each items in group of component and then position the whole group in the viewport\n * @param {module:zrender/group/Group} group\n * @param {module:echarts/model/Component} componentModel\n * @param {module:echarts/ExtensionAPI}\n */\nfunction layout(group, componentModel, api) {\n  var boxLayoutParams = componentModel.getBoxLayoutParams();\n  var padding = componentModel.get('padding');\n  var viewportSize = {\n    width: api.getWidth(),\n    height: api.getHeight()\n  };\n  var rect = getLayoutRect(boxLayoutParams, viewportSize, padding);\n  layoutBox(componentModel.get('orient'), group, componentModel.get('itemGap'), rect.width, rect.height);\n  positionElement(group, boxLayoutParams, viewportSize, padding);\n}\n\nfunction makeBackground(rect, componentModel) {\n  var padding = formatUtil.normalizeCssArray(componentModel.get('padding'));\n  var style = componentModel.getItemStyle(['color', 'opacity']);\n  style.fill = componentModel.get('backgroundColor');\n  var rect = new graphic.Rect({\n    shape: {\n      x: rect.x - padding[3],\n      y: rect.y - padding[0],\n      width: rect.width + padding[1] + padding[3],\n      height: rect.height + padding[0] + padding[2],\n      r: componentModel.get('borderRadius')\n    },\n    style: style,\n    silent: true,\n    z2: -1\n  }); // FIXME\n  // `subPixelOptimizeRect` may bring some gap between edge of viewpart\n  // and background rect when setting like `left: 0`, `top: 0`.\n  // graphic.subPixelOptimizeRect(rect);\n\n  return rect;\n}\n\nexports.layout = layout;\nexports.makeBackground = makeBackground;","var _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\nvar isArray = _util.isArray;\nvar isObject = _util.isObject;\n\nvar compatStyle = require(\"./helper/compatStyle\");\n\nvar _model = require(\"../util/model\");\n\nvar normalizeToArray = _model.normalizeToArray;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Compatitable with 2.0\nfunction get(opt, path) {\n  path = path.split(',');\n  var obj = opt;\n\n  for (var i = 0; i < path.length; i++) {\n    obj = obj && obj[path[i]];\n\n    if (obj == null) {\n      break;\n    }\n  }\n\n  return obj;\n}\n\nfunction set(opt, path, val, overwrite) {\n  path = path.split(',');\n  var obj = opt;\n  var key;\n\n  for (var i = 0; i < path.length - 1; i++) {\n    key = path[i];\n\n    if (obj[key] == null) {\n      obj[key] = {};\n    }\n\n    obj = obj[key];\n  }\n\n  if (overwrite || obj[path[i]] == null) {\n    obj[path[i]] = val;\n  }\n}\n\nfunction compatLayoutProperties(option) {\n  each(LAYOUT_PROPERTIES, function (prop) {\n    if (prop[0] in option && !(prop[1] in option)) {\n      option[prop[1]] = option[prop[0]];\n    }\n  });\n}\n\nvar LAYOUT_PROPERTIES = [['x', 'left'], ['y', 'top'], ['x2', 'right'], ['y2', 'bottom']];\nvar COMPATITABLE_COMPONENTS = ['grid', 'geo', 'parallel', 'legend', 'toolbox', 'title', 'visualMap', 'dataZoom', 'timeline'];\n\nfunction _default(option, isTheme) {\n  compatStyle(option, isTheme); // Make sure series array for model initialization.\n\n  option.series = normalizeToArray(option.series);\n  each(option.series, function (seriesOpt) {\n    if (!isObject(seriesOpt)) {\n      return;\n    }\n\n    var seriesType = seriesOpt.type;\n\n    if (seriesType === 'pie' || seriesType === 'gauge') {\n      if (seriesOpt.clockWise != null) {\n        seriesOpt.clockwise = seriesOpt.clockWise;\n      }\n    }\n\n    if (seriesType === 'gauge') {\n      var pointerColor = get(seriesOpt, 'pointer.color');\n      pointerColor != null && set(seriesOpt, 'itemStyle.normal.color', pointerColor);\n    }\n\n    compatLayoutProperties(seriesOpt);\n  }); // dataRange has changed to visualMap\n\n  if (option.dataRange) {\n    option.visualMap = option.dataRange;\n  }\n\n  each(COMPATITABLE_COMPONENTS, function (componentName) {\n    var options = option[componentName];\n\n    if (options) {\n      if (!isArray(options)) {\n        options = [options];\n      }\n\n      each(options, function (option) {\n        compatLayoutProperties(option);\n      });\n    }\n  });\n}\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar contrastColor = '#eee';\n\nvar axisCommon = function () {\n  return {\n    axisLine: {\n      lineStyle: {\n        color: contrastColor\n      }\n    },\n    axisTick: {\n      lineStyle: {\n        color: contrastColor\n      }\n    },\n    axisLabel: {\n      textStyle: {\n        color: contrastColor\n      }\n    },\n    splitLine: {\n      lineStyle: {\n        type: 'dashed',\n        color: '#aaa'\n      }\n    },\n    splitArea: {\n      areaStyle: {\n        color: contrastColor\n      }\n    }\n  };\n};\n\nvar colorPalette = ['#dd6b66', '#759aa0', '#e69d87', '#8dc1a9', '#ea7e53', '#eedd78', '#73a373', '#73b9bc', '#7289ab', '#91ca8c', '#f49f42'];\nvar theme = {\n  color: colorPalette,\n  backgroundColor: '#333',\n  tooltip: {\n    axisPointer: {\n      lineStyle: {\n        color: contrastColor\n      },\n      crossStyle: {\n        color: contrastColor\n      }\n    }\n  },\n  legend: {\n    textStyle: {\n      color: contrastColor\n    }\n  },\n  textStyle: {\n    color: contrastColor\n  },\n  title: {\n    textStyle: {\n      color: contrastColor\n    }\n  },\n  toolbox: {\n    iconStyle: {\n      normal: {\n        borderColor: contrastColor\n      }\n    }\n  },\n  dataZoom: {\n    textStyle: {\n      color: contrastColor\n    }\n  },\n  visualMap: {\n    textStyle: {\n      color: contrastColor\n    }\n  },\n  timeline: {\n    lineStyle: {\n      color: contrastColor\n    },\n    itemStyle: {\n      normal: {\n        color: colorPalette[1]\n      }\n    },\n    label: {\n      normal: {\n        textStyle: {\n          color: contrastColor\n        }\n      }\n    },\n    controlStyle: {\n      normal: {\n        color: contrastColor,\n        borderColor: contrastColor\n      }\n    }\n  },\n  timeAxis: axisCommon(),\n  logAxis: axisCommon(),\n  valueAxis: axisCommon(),\n  categoryAxis: axisCommon(),\n  line: {\n    symbol: 'circle'\n  },\n  graph: {\n    color: colorPalette\n  },\n  gauge: {\n    title: {\n      textStyle: {\n        color: contrastColor\n      }\n    }\n  },\n  candlestick: {\n    itemStyle: {\n      normal: {\n        color: '#FD1050',\n        color0: '#0CF49B',\n        borderColor: '#FD1050',\n        borderColor0: '#0CF49B'\n      }\n    }\n  }\n};\ntheme.categoryAxis.splitLine.show = false;\nvar _default = theme;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../util/model\");\n\nvar ComponentModel = require(\"./Component\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * ECharts option manager\n *\n * @module {echarts/model/OptionManager}\n */\nvar each = zrUtil.each;\nvar clone = zrUtil.clone;\nvar map = zrUtil.map;\nvar merge = zrUtil.merge;\nvar QUERY_REG = /^(min|max)?(.+)$/;\n/**\n * TERM EXPLANATIONS:\n *\n * [option]:\n *\n *     An object that contains definitions of components. For example:\n *     var option = {\n *         title: {...},\n *         legend: {...},\n *         visualMap: {...},\n *         series: [\n *             {data: [...]},\n *             {data: [...]},\n *             ...\n *         ]\n *     };\n *\n * [rawOption]:\n *\n *     An object input to echarts.setOption. 'rawOption' may be an\n *     'option', or may be an object contains multi-options. For example:\n *     var option = {\n *         baseOption: {\n *             title: {...},\n *             legend: {...},\n *             series: [\n *                 {data: [...]},\n *                 {data: [...]},\n *                 ...\n *             ]\n *         },\n *         timeline: {...},\n *         options: [\n *             {title: {...}, series: {data: [...]}},\n *             {title: {...}, series: {data: [...]}},\n *             ...\n *         ],\n *         media: [\n *             {\n *                 query: {maxWidth: 320},\n *                 option: {series: {x: 20}, visualMap: {show: false}}\n *             },\n *             {\n *                 query: {minWidth: 320, maxWidth: 720},\n *                 option: {series: {x: 500}, visualMap: {show: true}}\n *             },\n *             {\n *                 option: {series: {x: 1200}, visualMap: {show: true}}\n *             }\n *         ]\n *     };\n *\n * @alias module:echarts/model/OptionManager\n * @param {module:echarts/ExtensionAPI} api\n */\n\nfunction OptionManager(api) {\n  /**\n   * @private\n   * @type {module:echarts/ExtensionAPI}\n   */\n  this._api = api;\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._timelineOptions = [];\n  /**\n   * @private\n   * @type {Array.<Object>}\n   */\n\n  this._mediaList = [];\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._mediaDefault;\n  /**\n   * -1, means default.\n   * empty means no media.\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._currentMediaIndices = [];\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._optionBackup;\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._newBaseOption;\n} // timeline.notMerge is not supported in ec3. Firstly there is rearly\n// case that notMerge is needed. Secondly supporting 'notMerge' requires\n// rawOption cloned and backuped when timeline changed, which does no\n// good to performance. What's more, that both timeline and setOption\n// method supply 'notMerge' brings complex and some problems.\n// Consider this case:\n// (step1) chart.setOption({timeline: {notMerge: false}, ...}, false);\n// (step2) chart.setOption({timeline: {notMerge: true}, ...}, false);\n\n\nOptionManager.prototype = {\n  constructor: OptionManager,\n\n  /**\n   * @public\n   * @param {Object} rawOption Raw option.\n   * @param {module:echarts/model/Global} ecModel\n   * @param {Array.<Function>} optionPreprocessorFuncs\n   * @return {Object} Init option\n   */\n  setOption: function (rawOption, optionPreprocessorFuncs) {\n    if (rawOption) {\n      // That set dat primitive is dangerous if user reuse the data when setOption again.\n      zrUtil.each(modelUtil.normalizeToArray(rawOption.series), function (series) {\n        series && series.data && zrUtil.isTypedArray(series.data) && zrUtil.setAsPrimitive(series.data);\n      });\n    } // Caution: some series modify option data, if do not clone,\n    // it should ensure that the repeat modify correctly\n    // (create a new object when modify itself).\n\n\n    rawOption = clone(rawOption, true); // FIXME\n    // 如果 timeline options 或者 media 中设置了某个属性，而baseOption中没有设置，则进行警告。\n\n    var oldOptionBackup = this._optionBackup;\n    var newParsedOption = parseRawOption.call(this, rawOption, optionPreprocessorFuncs, !oldOptionBackup);\n    this._newBaseOption = newParsedOption.baseOption; // For setOption at second time (using merge mode);\n\n    if (oldOptionBackup) {\n      // Only baseOption can be merged.\n      mergeOption(oldOptionBackup.baseOption, newParsedOption.baseOption); // For simplicity, timeline options and media options do not support merge,\n      // that is, if you `setOption` twice and both has timeline options, the latter\n      // timeline opitons will not be merged to the formers, but just substitude them.\n\n      if (newParsedOption.timelineOptions.length) {\n        oldOptionBackup.timelineOptions = newParsedOption.timelineOptions;\n      }\n\n      if (newParsedOption.mediaList.length) {\n        oldOptionBackup.mediaList = newParsedOption.mediaList;\n      }\n\n      if (newParsedOption.mediaDefault) {\n        oldOptionBackup.mediaDefault = newParsedOption.mediaDefault;\n      }\n    } else {\n      this._optionBackup = newParsedOption;\n    }\n  },\n\n  /**\n   * @param {boolean} isRecreate\n   * @return {Object}\n   */\n  mountOption: function (isRecreate) {\n    var optionBackup = this._optionBackup; // TODO\n    // 如果没有reset功能则不clone。\n\n    this._timelineOptions = map(optionBackup.timelineOptions, clone);\n    this._mediaList = map(optionBackup.mediaList, clone);\n    this._mediaDefault = clone(optionBackup.mediaDefault);\n    this._currentMediaIndices = [];\n    return clone(isRecreate // this._optionBackup.baseOption, which is created at the first `setOption`\n    // called, and is merged into every new option by inner method `mergeOption`\n    // each time `setOption` called, can be only used in `isRecreate`, because\n    // its reliability is under suspicion. In other cases option merge is\n    // performed by `model.mergeOption`.\n    ? optionBackup.baseOption : this._newBaseOption);\n  },\n\n  /**\n   * @param {module:echarts/model/Global} ecModel\n   * @return {Object}\n   */\n  getTimelineOption: function (ecModel) {\n    var option;\n    var timelineOptions = this._timelineOptions;\n\n    if (timelineOptions.length) {\n      // getTimelineOption can only be called after ecModel inited,\n      // so we can get currentIndex from timelineModel.\n      var timelineModel = ecModel.getComponent('timeline');\n\n      if (timelineModel) {\n        option = clone(timelineOptions[timelineModel.getCurrentIndex()], true);\n      }\n    }\n\n    return option;\n  },\n\n  /**\n   * @param {module:echarts/model/Global} ecModel\n   * @return {Array.<Object>}\n   */\n  getMediaOption: function (ecModel) {\n    var ecWidth = this._api.getWidth();\n\n    var ecHeight = this._api.getHeight();\n\n    var mediaList = this._mediaList;\n    var mediaDefault = this._mediaDefault;\n    var indices = [];\n    var result = []; // No media defined.\n\n    if (!mediaList.length && !mediaDefault) {\n      return result;\n    } // Multi media may be applied, the latter defined media has higher priority.\n\n\n    for (var i = 0, len = mediaList.length; i < len; i++) {\n      if (applyMediaQuery(mediaList[i].query, ecWidth, ecHeight)) {\n        indices.push(i);\n      }\n    } // FIXME\n    // 是否mediaDefault应该强制用户设置，否则可能修改不能回归。\n\n\n    if (!indices.length && mediaDefault) {\n      indices = [-1];\n    }\n\n    if (indices.length && !indicesEquals(indices, this._currentMediaIndices)) {\n      result = map(indices, function (index) {\n        return clone(index === -1 ? mediaDefault.option : mediaList[index].option);\n      });\n    } // Otherwise return nothing.\n\n\n    this._currentMediaIndices = indices;\n    return result;\n  }\n};\n\nfunction parseRawOption(rawOption, optionPreprocessorFuncs, isNew) {\n  var timelineOptions = [];\n  var mediaList = [];\n  var mediaDefault;\n  var baseOption; // Compatible with ec2.\n\n  var timelineOpt = rawOption.timeline;\n\n  if (rawOption.baseOption) {\n    baseOption = rawOption.baseOption;\n  } // For timeline\n\n\n  if (timelineOpt || rawOption.options) {\n    baseOption = baseOption || {};\n    timelineOptions = (rawOption.options || []).slice();\n  } // For media query\n\n\n  if (rawOption.media) {\n    baseOption = baseOption || {};\n    var media = rawOption.media;\n    each(media, function (singleMedia) {\n      if (singleMedia && singleMedia.option) {\n        if (singleMedia.query) {\n          mediaList.push(singleMedia);\n        } else if (!mediaDefault) {\n          // Use the first media default.\n          mediaDefault = singleMedia;\n        }\n      }\n    });\n  } // For normal option\n\n\n  if (!baseOption) {\n    baseOption = rawOption;\n  } // Set timelineOpt to baseOption in ec3,\n  // which is convenient for merge option.\n\n\n  if (!baseOption.timeline) {\n    baseOption.timeline = timelineOpt;\n  } // Preprocess.\n\n\n  each([baseOption].concat(timelineOptions).concat(zrUtil.map(mediaList, function (media) {\n    return media.option;\n  })), function (option) {\n    each(optionPreprocessorFuncs, function (preProcess) {\n      preProcess(option, isNew);\n    });\n  });\n  return {\n    baseOption: baseOption,\n    timelineOptions: timelineOptions,\n    mediaDefault: mediaDefault,\n    mediaList: mediaList\n  };\n}\n/**\n * @see <http://www.w3.org/TR/css3-mediaqueries/#media1>\n * Support: width, height, aspectRatio\n * Can use max or min as prefix.\n */\n\n\nfunction applyMediaQuery(query, ecWidth, ecHeight) {\n  var realMap = {\n    width: ecWidth,\n    height: ecHeight,\n    aspectratio: ecWidth / ecHeight // lowser case for convenientce.\n\n  };\n  var applicatable = true;\n  zrUtil.each(query, function (value, attr) {\n    var matched = attr.match(QUERY_REG);\n\n    if (!matched || !matched[1] || !matched[2]) {\n      return;\n    }\n\n    var operator = matched[1];\n    var realAttr = matched[2].toLowerCase();\n\n    if (!compare(realMap[realAttr], value, operator)) {\n      applicatable = false;\n    }\n  });\n  return applicatable;\n}\n\nfunction compare(real, expect, operator) {\n  if (operator === 'min') {\n    return real >= expect;\n  } else if (operator === 'max') {\n    return real <= expect;\n  } else {\n    // Equals\n    return real === expect;\n  }\n}\n\nfunction indicesEquals(indices1, indices2) {\n  // indices is always order by asc and has only finite number.\n  return indices1.join(',') === indices2.join(',');\n}\n/**\n * Consider case:\n * `chart.setOption(opt1);`\n * Then user do some interaction like dataZoom, dataView changing.\n * `chart.setOption(opt2);`\n * Then user press 'reset button' in toolbox.\n *\n * After doing that all of the interaction effects should be reset, the\n * chart should be the same as the result of invoke\n * `chart.setOption(opt1); chart.setOption(opt2);`.\n *\n * Although it is not able ensure that\n * `chart.setOption(opt1); chart.setOption(opt2);` is equivalents to\n * `chart.setOption(merge(opt1, opt2));` exactly,\n * this might be the only simple way to implement that feature.\n *\n * MEMO: We've considered some other approaches:\n * 1. Each model handle its self restoration but not uniform treatment.\n *     (Too complex in logic and error-prone)\n * 2. Use a shadow ecModel. (Performace expensive)\n */\n\n\nfunction mergeOption(oldOption, newOption) {\n  newOption = newOption || {};\n  each(newOption, function (newCptOpt, mainType) {\n    if (newCptOpt == null) {\n      return;\n    }\n\n    var oldCptOpt = oldOption[mainType];\n\n    if (!ComponentModel.hasClass(mainType)) {\n      oldOption[mainType] = merge(oldCptOpt, newCptOpt, true);\n    } else {\n      newCptOpt = modelUtil.normalizeToArray(newCptOpt);\n      oldCptOpt = modelUtil.normalizeToArray(oldCptOpt);\n      var mapResult = modelUtil.mappingToExists(oldCptOpt, newCptOpt);\n      oldOption[mainType] = map(mapResult, function (item) {\n        return item.option && item.exist ? merge(item.exist, item.option, true) : item.exist || item.option;\n      });\n    }\n  });\n}\n\nvar _default = OptionManager;\nmodule.exports = _default;","// TODO Draggable for group\n// FIXME Draggable on element which has parent rotation or scale\nfunction Draggable() {\n  this.on('mousedown', this._dragStart, this);\n  this.on('mousemove', this._drag, this);\n  this.on('mouseup', this._dragEnd, this);\n  this.on('globalout', this._dragEnd, this); // this._dropTarget = null;\n  // this._draggingTarget = null;\n  // this._x = 0;\n  // this._y = 0;\n}\n\nDraggable.prototype = {\n  constructor: Draggable,\n  _dragStart: function (e) {\n    var draggingTarget = e.target;\n\n    if (draggingTarget && draggingTarget.draggable) {\n      this._draggingTarget = draggingTarget;\n      draggingTarget.dragging = true;\n      this._x = e.offsetX;\n      this._y = e.offsetY;\n      this.dispatchToElement(param(draggingTarget, e), 'dragstart', e.event);\n    }\n  },\n  _drag: function (e) {\n    var draggingTarget = this._draggingTarget;\n\n    if (draggingTarget) {\n      var x = e.offsetX;\n      var y = e.offsetY;\n      var dx = x - this._x;\n      var dy = y - this._y;\n      this._x = x;\n      this._y = y;\n      draggingTarget.drift(dx, dy, e);\n      this.dispatchToElement(param(draggingTarget, e), 'drag', e.event);\n      var dropTarget = this.findHover(x, y, draggingTarget).target;\n      var lastDropTarget = this._dropTarget;\n      this._dropTarget = dropTarget;\n\n      if (draggingTarget !== dropTarget) {\n        if (lastDropTarget && dropTarget !== lastDropTarget) {\n          this.dispatchToElement(param(lastDropTarget, e), 'dragleave', e.event);\n        }\n\n        if (dropTarget && dropTarget !== lastDropTarget) {\n          this.dispatchToElement(param(dropTarget, e), 'dragenter', e.event);\n        }\n      }\n    }\n  },\n  _dragEnd: function (e) {\n    var draggingTarget = this._draggingTarget;\n\n    if (draggingTarget) {\n      draggingTarget.dragging = false;\n    }\n\n    this.dispatchToElement(param(draggingTarget, e), 'dragend', e.event);\n\n    if (this._dropTarget) {\n      this.dispatchToElement(param(this._dropTarget, e), 'drop', e.event);\n    }\n\n    this._draggingTarget = null;\n    this._dropTarget = null;\n  }\n};\n\nfunction param(target, e) {\n  return {\n    target: target,\n    topTarget: e && e.topTarget\n  };\n}\n\nvar _default = Draggable;\nmodule.exports = _default;","var Eventful = require(\"../mixin/Eventful\");\n\nexports.Dispatcher = Eventful;\n\nvar env = require(\"./env\");\n\n/**\n * 事件辅助类\n * @module zrender/core/event\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n */\nvar isDomLevel2 = typeof window !== 'undefined' && !!window.addEventListener;\nvar MOUSE_EVENT_REG = /^(?:mouse|pointer|contextmenu|drag|drop)|click/;\n\nfunction getBoundingClientRect(el) {\n  // BlackBerry 5, iOS 3 (original iPhone) don't have getBoundingRect\n  return el.getBoundingClientRect ? el.getBoundingClientRect() : {\n    left: 0,\n    top: 0\n  };\n} // `calculate` is optional, default false\n\n\nfunction clientToLocal(el, e, out, calculate) {\n  out = out || {}; // According to the W3C Working Draft, offsetX and offsetY should be relative\n  // to the padding edge of the target element. The only browser using this convention\n  // is IE. Webkit uses the border edge, Opera uses the content edge, and FireFox does\n  // not support the properties.\n  // (see http://www.jacklmoore.com/notes/mouse-position/)\n  // In zr painter.dom, padding edge equals to border edge.\n  // FIXME\n  // When mousemove event triggered on ec tooltip, target is not zr painter.dom, and\n  // offsetX/Y is relative to e.target, where the calculation of zrX/Y via offsetX/Y\n  // is too complex. So css-transfrom dont support in this case temporarily.\n\n  if (calculate || !env.canvasSupported) {\n    defaultGetZrXY(el, e, out);\n  } // Caution: In FireFox, layerX/layerY Mouse position relative to the closest positioned\n  // ancestor element, so we should make sure el is positioned (e.g., not position:static).\n  // BTW1, Webkit don't return the same results as FF in non-simple cases (like add\n  // zoom-factor, overflow / opacity layers, transforms ...)\n  // BTW2, (ev.offsetY || ev.pageY - $(ev.target).offset().top) is not correct in preserve-3d.\n  // <https://bugs.jquery.com/ticket/8523#comment:14>\n  // BTW3, In ff, offsetX/offsetY is always 0.\n  else if (env.browser.firefox && e.layerX != null && e.layerX !== e.offsetX) {\n      out.zrX = e.layerX;\n      out.zrY = e.layerY;\n    } // For IE6+, chrome, safari, opera. (When will ff support offsetX?)\n    else if (e.offsetX != null) {\n        out.zrX = e.offsetX;\n        out.zrY = e.offsetY;\n      } // For some other device, e.g., IOS safari.\n      else {\n          defaultGetZrXY(el, e, out);\n        }\n\n  return out;\n}\n\nfunction defaultGetZrXY(el, e, out) {\n  // This well-known method below does not support css transform.\n  var box = getBoundingClientRect(el);\n  out.zrX = e.clientX - box.left;\n  out.zrY = e.clientY - box.top;\n}\n/**\n * 如果存在第三方嵌入的一些dom触发的事件，或touch事件，需要转换一下事件坐标.\n * `calculate` is optional, default false.\n */\n\n\nfunction normalizeEvent(el, e, calculate) {\n  e = e || window.event;\n\n  if (e.zrX != null) {\n    return e;\n  }\n\n  var eventType = e.type;\n  var isTouch = eventType && eventType.indexOf('touch') >= 0;\n\n  if (!isTouch) {\n    clientToLocal(el, e, e, calculate);\n    e.zrDelta = e.wheelDelta ? e.wheelDelta / 120 : -(e.detail || 0) / 3;\n  } else {\n    var touch = eventType != 'touchend' ? e.targetTouches[0] : e.changedTouches[0];\n    touch && clientToLocal(el, touch, e, calculate);\n  } // Add which for click: 1 === left; 2 === middle; 3 === right; otherwise: 0;\n  // See jQuery: https://github.com/jquery/jquery/blob/master/src/event.js\n  // If e.which has been defined, if may be readonly,\n  // see: https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/which\n\n\n  var button = e.button;\n\n  if (e.which == null && button !== undefined && MOUSE_EVENT_REG.test(e.type)) {\n    e.which = button & 1 ? 1 : button & 2 ? 3 : button & 4 ? 2 : 0;\n  }\n\n  return e;\n}\n/**\n * @param {HTMLElement} el\n * @param {string} name\n * @param {Function} handler\n */\n\n\nfunction addEventListener(el, name, handler) {\n  if (isDomLevel2) {\n    // Reproduct the console warning:\n    // [Violation] Added non-passive event listener to a scroll-blocking <some> event.\n    // Consider marking event handler as 'passive' to make the page more responsive.\n    // Just set console log level: verbose in chrome dev tool.\n    // then the warning log will be printed when addEventListener called.\n    // See https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md\n    // We have not yet found a neat way to using passive. Because in zrender the dom event\n    // listener delegate all of the upper events of element. Some of those events need\n    // to prevent default. For example, the feature `preventDefaultMouseMove` of echarts.\n    // Before passive can be adopted, these issues should be considered:\n    // (1) Whether and how a zrender user specifies an event listener passive. And by default,\n    // passive or not.\n    // (2) How to tread that some zrender event listener is passive, and some is not. If\n    // we use other way but not preventDefault of mousewheel and touchmove, browser\n    // compatibility should be handled.\n    // var opts = (env.passiveSupported && name === 'mousewheel')\n    //     ? {passive: true}\n    //     // By default, the third param of el.addEventListener is `capture: false`.\n    //     : void 0;\n    // el.addEventListener(name, handler /* , opts */);\n    el.addEventListener(name, handler);\n  } else {\n    el.attachEvent('on' + name, handler);\n  }\n}\n\nfunction removeEventListener(el, name, handler) {\n  if (isDomLevel2) {\n    el.removeEventListener(name, handler);\n  } else {\n    el.detachEvent('on' + name, handler);\n  }\n}\n/**\n * preventDefault and stopPropagation.\n * Notice: do not do that in zrender. Upper application\n * do that if necessary.\n *\n * @memberOf module:zrender/core/event\n * @method\n * @param {Event} e : event对象\n */\n\n\nvar stop = isDomLevel2 ? function (e) {\n  e.preventDefault();\n  e.stopPropagation();\n  e.cancelBubble = true;\n} : function (e) {\n  e.returnValue = false;\n  e.cancelBubble = true;\n};\n\nfunction notLeftMouse(e) {\n  // If e.which is undefined, considered as left mouse event.\n  return e.which > 1;\n} // 做向上兼容\n\n\nexports.clientToLocal = clientToLocal;\nexports.normalizeEvent = normalizeEvent;\nexports.addEventListener = addEventListener;\nexports.removeEventListener = removeEventListener;\nexports.stop = stop;\nexports.notLeftMouse = notLeftMouse;","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\nvar retrieve = _util.retrieve;\nvar each = _util.each;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Helper for model references.\n * There are many manners to refer axis/coordSys.\n */\n// TODO\n// merge relevant logic to this file?\n// check: \"modelHelper\" of tooltip and \"BrushTargetManager\".\n\n/**\n * @return {Object} For example:\n * {\n *     coordSysName: 'cartesian2d',\n *     coordSysDims: ['x', 'y', ...],\n *     axisMap: HashMap({\n *         x: xAxisModel,\n *         y: yAxisModel\n *     }),\n *     categoryAxisMap: HashMap({\n *         x: xAxisModel,\n *         y: undefined\n *     }),\n *     // It also indicate that whether there is category axis.\n *     firstCategoryDimIndex: 1,\n *     // To replace user specified encode.\n * }\n */\nfunction getCoordSysDefineBySeries(seriesModel) {\n  var coordSysName = seriesModel.get('coordinateSystem');\n  var result = {\n    coordSysName: coordSysName,\n    coordSysDims: [],\n    axisMap: createHashMap(),\n    categoryAxisMap: createHashMap()\n  };\n  var fetch = fetchers[coordSysName];\n\n  if (fetch) {\n    fetch(seriesModel, result, result.axisMap, result.categoryAxisMap);\n    return result;\n  }\n}\n\nvar fetchers = {\n  cartesian2d: function (seriesModel, result, axisMap, categoryAxisMap) {\n    var xAxisModel = seriesModel.getReferringComponents('xAxis')[0];\n    var yAxisModel = seriesModel.getReferringComponents('yAxis')[0];\n    result.coordSysDims = ['x', 'y'];\n    axisMap.set('x', xAxisModel);\n    axisMap.set('y', yAxisModel);\n\n    if (isCategory(xAxisModel)) {\n      categoryAxisMap.set('x', xAxisModel);\n      result.firstCategoryDimIndex = 0;\n    }\n\n    if (isCategory(yAxisModel)) {\n      categoryAxisMap.set('y', yAxisModel);\n      result.firstCategoryDimIndex = 1;\n    }\n  },\n  singleAxis: function (seriesModel, result, axisMap, categoryAxisMap) {\n    var singleAxisModel = seriesModel.getReferringComponents('singleAxis')[0];\n    result.coordSysDims = ['single'];\n    axisMap.set('single', singleAxisModel);\n\n    if (isCategory(singleAxisModel)) {\n      categoryAxisMap.set('single', singleAxisModel);\n      result.firstCategoryDimIndex = 0;\n    }\n  },\n  polar: function (seriesModel, result, axisMap, categoryAxisMap) {\n    var polarModel = seriesModel.getReferringComponents('polar')[0];\n    var radiusAxisModel = polarModel.findAxisModel('radiusAxis');\n    var angleAxisModel = polarModel.findAxisModel('angleAxis');\n    result.coordSysDims = ['radius', 'angle'];\n    axisMap.set('radius', radiusAxisModel);\n    axisMap.set('angle', angleAxisModel);\n\n    if (isCategory(radiusAxisModel)) {\n      categoryAxisMap.set('radius', radiusAxisModel);\n      result.firstCategoryDimIndex = 0;\n    }\n\n    if (isCategory(angleAxisModel)) {\n      categoryAxisMap.set('angle', angleAxisModel);\n      result.firstCategoryDimIndex = 1;\n    }\n  },\n  geo: function (seriesModel, result, axisMap, categoryAxisMap) {\n    result.coordSysDims = ['lng', 'lat'];\n  },\n  parallel: function (seriesModel, result, axisMap, categoryAxisMap) {\n    var ecModel = seriesModel.ecModel;\n    var parallelModel = ecModel.getComponent('parallel', seriesModel.get('parallelIndex'));\n    var coordSysDims = result.coordSysDims = parallelModel.dimensions.slice();\n    each(parallelModel.parallelAxisIndex, function (axisIndex, index) {\n      var axisModel = ecModel.getComponent('parallelAxis', axisIndex);\n      var axisDim = coordSysDims[index];\n      axisMap.set(axisDim, axisModel);\n\n      if (isCategory(axisModel) && result.firstCategoryDimIndex == null) {\n        categoryAxisMap.set(axisDim, axisModel);\n        result.firstCategoryDimIndex = index;\n      }\n    });\n  }\n};\n\nfunction isCategory(axisModel) {\n  return axisModel.get('type') === 'category';\n}\n\nexports.getCoordSysDefineBySeries = getCoordSysDefineBySeries;","var Path = require(\"./Path\");\n\n// CompoundPath to improve performance\nvar _default = Path.extend({\n  type: 'compound',\n  shape: {\n    paths: null\n  },\n  _updatePathDirty: function () {\n    var dirtyPath = this.__dirtyPath;\n    var paths = this.shape.paths;\n\n    for (var i = 0; i < paths.length; i++) {\n      // Mark as dirty if any subpath is dirty\n      dirtyPath = dirtyPath || paths[i].__dirtyPath;\n    }\n\n    this.__dirtyPath = dirtyPath;\n    this.__dirty = this.__dirty || dirtyPath;\n  },\n  beforeBrush: function () {\n    this._updatePathDirty();\n\n    var paths = this.shape.paths || [];\n    var scale = this.getGlobalScale(); // Update path scale\n\n    for (var i = 0; i < paths.length; i++) {\n      if (!paths[i].path) {\n        paths[i].createPathProxy();\n      }\n\n      paths[i].path.setScale(scale[0], scale[1]);\n    }\n  },\n  buildPath: function (ctx, shape) {\n    var paths = shape.paths || [];\n\n    for (var i = 0; i < paths.length; i++) {\n      paths[i].buildPath(ctx, paths[i].shape, true);\n    }\n  },\n  afterBrush: function () {\n    var paths = this.shape.paths || [];\n\n    for (var i = 0; i < paths.length; i++) {\n      paths[i].__dirtyPath = false;\n    }\n  },\n  getBoundingRect: function () {\n    this._updatePathDirty();\n\n    return Path.prototype.getBoundingRect.call(this);\n  }\n});\n\nmodule.exports = _default;","var _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\nvar isTypedArray = _util.isTypedArray;\n\nvar _clazz = require(\"../util/clazz\");\n\nvar enableClassCheck = _clazz.enableClassCheck;\n\nvar _sourceType = require(\"./helper/sourceType\");\n\nvar SOURCE_FORMAT_ORIGINAL = _sourceType.SOURCE_FORMAT_ORIGINAL;\nvar SERIES_LAYOUT_BY_COLUMN = _sourceType.SERIES_LAYOUT_BY_COLUMN;\nvar SOURCE_FORMAT_UNKNOWN = _sourceType.SOURCE_FORMAT_UNKNOWN;\nvar SOURCE_FORMAT_TYPED_ARRAY = _sourceType.SOURCE_FORMAT_TYPED_ARRAY;\nvar SOURCE_FORMAT_KEYED_COLUMNS = _sourceType.SOURCE_FORMAT_KEYED_COLUMNS;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * [sourceFormat]\n *\n * + \"original\":\n * This format is only used in series.data, where\n * itemStyle can be specified in data item.\n *\n * + \"arrayRows\":\n * [\n *     ['product', 'score', 'amount'],\n *     ['Matcha Latte', 89.3, 95.8],\n *     ['Milk Tea', 92.1, 89.4],\n *     ['Cheese Cocoa', 94.4, 91.2],\n *     ['Walnut Brownie', 85.4, 76.9]\n * ]\n *\n * + \"objectRows\":\n * [\n *     {product: 'Matcha Latte', score: 89.3, amount: 95.8},\n *     {product: 'Milk Tea', score: 92.1, amount: 89.4},\n *     {product: 'Cheese Cocoa', score: 94.4, amount: 91.2},\n *     {product: 'Walnut Brownie', score: 85.4, amount: 76.9}\n * ]\n *\n * + \"keyedColumns\":\n * {\n *     'product': ['Matcha Latte', 'Milk Tea', 'Cheese Cocoa', 'Walnut Brownie'],\n *     'count': [823, 235, 1042, 988],\n *     'score': [95.8, 81.4, 91.2, 76.9]\n * }\n *\n * + \"typedArray\"\n *\n * + \"unknown\"\n */\n\n/**\n * @constructor\n * @param {Object} fields\n * @param {string} fields.sourceFormat\n * @param {Array|Object} fields.fromDataset\n * @param {Array|Object} [fields.data]\n * @param {string} [seriesLayoutBy='column']\n * @param {Array.<Object|string>} [dimensionsDefine]\n * @param {Objet|HashMap} [encodeDefine]\n * @param {number} [startIndex=0]\n * @param {number} [dimensionsDetectCount]\n */\nfunction Source(fields) {\n  /**\n   * @type {boolean}\n   */\n  this.fromDataset = fields.fromDataset;\n  /**\n   * Not null/undefined.\n   * @type {Array|Object}\n   */\n\n  this.data = fields.data || (fields.sourceFormat === SOURCE_FORMAT_KEYED_COLUMNS ? {} : []);\n  /**\n   * See also \"detectSourceFormat\".\n   * Not null/undefined.\n   * @type {string}\n   */\n\n  this.sourceFormat = fields.sourceFormat || SOURCE_FORMAT_UNKNOWN;\n  /**\n   * 'row' or 'column'\n   * Not null/undefined.\n   * @type {string} seriesLayoutBy\n   */\n\n  this.seriesLayoutBy = fields.seriesLayoutBy || SERIES_LAYOUT_BY_COLUMN;\n  /**\n   * dimensions definition in option.\n   * can be null/undefined.\n   * @type {Array.<Object|string>}\n   */\n\n  this.dimensionsDefine = fields.dimensionsDefine;\n  /**\n   * encode definition in option.\n   * can be null/undefined.\n   * @type {Objet|HashMap}\n   */\n\n  this.encodeDefine = fields.encodeDefine && createHashMap(fields.encodeDefine);\n  /**\n   * Not null/undefined, uint.\n   * @type {number}\n   */\n\n  this.startIndex = fields.startIndex || 0;\n  /**\n   * Can be null/undefined (when unknown), uint.\n   * @type {number}\n   */\n\n  this.dimensionsDetectCount = fields.dimensionsDetectCount;\n}\n/**\n * Wrap original series data for some compatibility cases.\n */\n\n\nSource.seriesDataToSource = function (data) {\n  return new Source({\n    data: data,\n    sourceFormat: isTypedArray(data) ? SOURCE_FORMAT_TYPED_ARRAY : SOURCE_FORMAT_ORIGINAL,\n    fromDataset: false\n  });\n};\n\nenableClassCheck(Source);\nvar _default = Source;\nmodule.exports = _default;","var zrUtil = require(\"../core/util\");\n\nvar Gradient = require(\"./Gradient\");\n\n/**\n * x, y, x2, y2 are all percent from 0 to 1\n * @param {number} [x=0]\n * @param {number} [y=0]\n * @param {number} [x2=1]\n * @param {number} [y2=0]\n * @param {Array.<Object>} colorStops\n * @param {boolean} [globalCoord=false]\n */\nvar LinearGradient = function (x, y, x2, y2, colorStops, globalCoord) {\n  // Should do nothing more in this constructor. Because gradient can be\n  // declard by `color: {type: 'linear', colorStops: ...}`, where\n  // this constructor will not be called.\n  this.x = x == null ? 0 : x;\n  this.y = y == null ? 0 : y;\n  this.x2 = x2 == null ? 1 : x2;\n  this.y2 = y2 == null ? 0 : y2; // Can be cloned\n\n  this.type = 'linear'; // If use global coord\n\n  this.global = globalCoord || false;\n  Gradient.call(this, colorStops);\n};\n\nLinearGradient.prototype = {\n  constructor: LinearGradient\n};\nzrUtil.inherits(LinearGradient, Gradient);\nvar _default = LinearGradient;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar numberUtil = require(\"../util/number\");\n\nvar formatUtil = require(\"../util/format\");\n\nvar scaleHelper = require(\"./helper\");\n\nvar IntervalScale = require(\"./Interval\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// [About UTC and local time zone]:\n// In most cases, `number.parseDate` will treat input data string as local time\n// (except time zone is specified in time string). And `format.formateTime` returns\n// local time by default. option.useUTC is false by default. This design have\n// concidered these common case:\n// (1) Time that is persistent in server is in UTC, but it is needed to be diplayed\n// in local time by default.\n// (2) By default, the input data string (e.g., '2011-01-02') should be displayed\n// as its original time, without any time difference.\nvar intervalScaleProto = IntervalScale.prototype;\nvar mathCeil = Math.ceil;\nvar mathFloor = Math.floor;\nvar ONE_SECOND = 1000;\nvar ONE_MINUTE = ONE_SECOND * 60;\nvar ONE_HOUR = ONE_MINUTE * 60;\nvar ONE_DAY = ONE_HOUR * 24; // FIXME 公用？\n\nvar bisect = function (a, x, lo, hi) {\n  while (lo < hi) {\n    var mid = lo + hi >>> 1;\n\n    if (a[mid][1] < x) {\n      lo = mid + 1;\n    } else {\n      hi = mid;\n    }\n  }\n\n  return lo;\n};\n/**\n * @alias module:echarts/coord/scale/Time\n * @constructor\n */\n\n\nvar TimeScale = IntervalScale.extend({\n  type: 'time',\n\n  /**\n   * @override\n   */\n  getLabel: function (val) {\n    var stepLvl = this._stepLvl;\n    var date = new Date(val);\n    return formatUtil.formatTime(stepLvl[0], date, this.getSetting('useUTC'));\n  },\n\n  /**\n   * @override\n   */\n  niceExtent: function (opt) {\n    var extent = this._extent; // If extent start and end are same, expand them\n\n    if (extent[0] === extent[1]) {\n      // Expand extent\n      extent[0] -= ONE_DAY;\n      extent[1] += ONE_DAY;\n    } // If there are no data and extent are [Infinity, -Infinity]\n\n\n    if (extent[1] === -Infinity && extent[0] === Infinity) {\n      var d = new Date();\n      extent[1] = +new Date(d.getFullYear(), d.getMonth(), d.getDate());\n      extent[0] = extent[1] - ONE_DAY;\n    }\n\n    this.niceTicks(opt.splitNumber, opt.minInterval, opt.maxInterval); // var extent = this._extent;\n\n    var interval = this._interval;\n\n    if (!opt.fixMin) {\n      extent[0] = numberUtil.round(mathFloor(extent[0] / interval) * interval);\n    }\n\n    if (!opt.fixMax) {\n      extent[1] = numberUtil.round(mathCeil(extent[1] / interval) * interval);\n    }\n  },\n\n  /**\n   * @override\n   */\n  niceTicks: function (approxTickNum, minInterval, maxInterval) {\n    approxTickNum = approxTickNum || 10;\n    var extent = this._extent;\n    var span = extent[1] - extent[0];\n    var approxInterval = span / approxTickNum;\n\n    if (minInterval != null && approxInterval < minInterval) {\n      approxInterval = minInterval;\n    }\n\n    if (maxInterval != null && approxInterval > maxInterval) {\n      approxInterval = maxInterval;\n    }\n\n    var scaleLevelsLen = scaleLevels.length;\n    var idx = bisect(scaleLevels, approxInterval, 0, scaleLevelsLen);\n    var level = scaleLevels[Math.min(idx, scaleLevelsLen - 1)];\n    var interval = level[1]; // Same with interval scale if span is much larger than 1 year\n\n    if (level[0] === 'year') {\n      var yearSpan = span / interval; // From \"Nice Numbers for Graph Labels\" of Graphic Gems\n      // var niceYearSpan = numberUtil.nice(yearSpan, false);\n\n      var yearStep = numberUtil.nice(yearSpan / approxTickNum, true);\n      interval *= yearStep;\n    }\n\n    var timezoneOffset = this.getSetting('useUTC') ? 0 : new Date(+extent[0] || +extent[1]).getTimezoneOffset() * 60 * 1000;\n    var niceExtent = [Math.round(mathCeil((extent[0] - timezoneOffset) / interval) * interval + timezoneOffset), Math.round(mathFloor((extent[1] - timezoneOffset) / interval) * interval + timezoneOffset)];\n    scaleHelper.fixExtent(niceExtent, extent);\n    this._stepLvl = level; // Interval will be used in getTicks\n\n    this._interval = interval;\n    this._niceExtent = niceExtent;\n  },\n  parse: function (val) {\n    // val might be float.\n    return +numberUtil.parseDate(val);\n  }\n});\nzrUtil.each(['contain', 'normalize'], function (methodName) {\n  TimeScale.prototype[methodName] = function (val) {\n    return intervalScaleProto[methodName].call(this, this.parse(val));\n  };\n}); // Steps from d3\n\nvar scaleLevels = [// Format              interval\n['hh:mm:ss', ONE_SECOND], // 1s\n['hh:mm:ss', ONE_SECOND * 5], // 5s\n['hh:mm:ss', ONE_SECOND * 10], // 10s\n['hh:mm:ss', ONE_SECOND * 15], // 15s\n['hh:mm:ss', ONE_SECOND * 30], // 30s\n['hh:mm\\nMM-dd', ONE_MINUTE], // 1m\n['hh:mm\\nMM-dd', ONE_MINUTE * 5], // 5m\n['hh:mm\\nMM-dd', ONE_MINUTE * 10], // 10m\n['hh:mm\\nMM-dd', ONE_MINUTE * 15], // 15m\n['hh:mm\\nMM-dd', ONE_MINUTE * 30], // 30m\n['hh:mm\\nMM-dd', ONE_HOUR], // 1h\n['hh:mm\\nMM-dd', ONE_HOUR * 2], // 2h\n['hh:mm\\nMM-dd', ONE_HOUR * 6], // 6h\n['hh:mm\\nMM-dd', ONE_HOUR * 12], // 12h\n['MM-dd\\nyyyy', ONE_DAY], // 1d\n['MM-dd\\nyyyy', ONE_DAY * 2], // 2d\n['MM-dd\\nyyyy', ONE_DAY * 3], // 3d\n['MM-dd\\nyyyy', ONE_DAY * 4], // 4d\n['MM-dd\\nyyyy', ONE_DAY * 5], // 5d\n['MM-dd\\nyyyy', ONE_DAY * 6], // 6d\n['week', ONE_DAY * 7], // 7d\n['MM-dd\\nyyyy', ONE_DAY * 10], // 10d\n['week', ONE_DAY * 14], // 2w\n['week', ONE_DAY * 21], // 3w\n['month', ONE_DAY * 31], // 1M\n['week', ONE_DAY * 42], // 6w\n['month', ONE_DAY * 62], // 2M\n['week', ONE_DAY * 42], // 10w\n['quarter', ONE_DAY * 380 / 4], // 3M\n['month', ONE_DAY * 31 * 4], // 4M\n['month', ONE_DAY * 31 * 5], // 5M\n['half-year', ONE_DAY * 380 / 2], // 6M\n['month', ONE_DAY * 31 * 8], // 8M\n['month', ONE_DAY * 31 * 10], // 10M\n['year', ONE_DAY * 380] // 1Y\n];\n/**\n * @param {module:echarts/model/Model}\n * @return {module:echarts/scale/Time}\n */\n\nTimeScale.create = function (model) {\n  return new TimeScale({\n    useUTC: model.ecModel.get('useUTC')\n  });\n};\n\nvar _default = TimeScale;\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar axisPointerModelHelper = require(\"../axisPointer/modelHelper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Base class of AxisView.\n */\nvar AxisView = echarts.extendComponentView({\n  type: 'axis',\n\n  /**\n   * @private\n   */\n  _axisPointer: null,\n\n  /**\n   * @protected\n   * @type {string}\n   */\n  axisPointerClass: null,\n\n  /**\n   * @override\n   */\n  render: function (axisModel, ecModel, api, payload) {\n    // FIXME\n    // This process should proformed after coordinate systems updated\n    // (axis scale updated), and should be performed each time update.\n    // So put it here temporarily, although it is not appropriate to\n    // put a model-writing procedure in `view`.\n    this.axisPointerClass && axisPointerModelHelper.fixValue(axisModel);\n    AxisView.superApply(this, 'render', arguments);\n    updateAxisPointer(this, axisModel, ecModel, api, payload, true);\n  },\n\n  /**\n   * Action handler.\n   * @public\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/model/Global} ecModel\n   * @param {module:echarts/ExtensionAPI} api\n   * @param {Object} payload\n   */\n  updateAxisPointer: function (axisModel, ecModel, api, payload, force) {\n    updateAxisPointer(this, axisModel, ecModel, api, payload, false);\n  },\n\n  /**\n   * @override\n   */\n  remove: function (ecModel, api) {\n    var axisPointer = this._axisPointer;\n    axisPointer && axisPointer.remove(api);\n    AxisView.superApply(this, 'remove', arguments);\n  },\n\n  /**\n   * @override\n   */\n  dispose: function (ecModel, api) {\n    disposeAxisPointer(this, api);\n    AxisView.superApply(this, 'dispose', arguments);\n  }\n});\n\nfunction updateAxisPointer(axisView, axisModel, ecModel, api, payload, forceRender) {\n  var Clazz = AxisView.getAxisPointerClass(axisView.axisPointerClass);\n\n  if (!Clazz) {\n    return;\n  }\n\n  var axisPointerModel = axisPointerModelHelper.getAxisPointerModel(axisModel);\n  axisPointerModel ? (axisView._axisPointer || (axisView._axisPointer = new Clazz())).render(axisModel, axisPointerModel, api, forceRender) : disposeAxisPointer(axisView, api);\n}\n\nfunction disposeAxisPointer(axisView, ecModel, api) {\n  var axisPointer = axisView._axisPointer;\n  axisPointer && axisPointer.dispose(ecModel, api);\n  axisView._axisPointer = null;\n}\n\nvar axisPointerClazz = [];\n\nAxisView.registerAxisPointerClass = function (type, clazz) {\n  axisPointerClazz[type] = clazz;\n};\n\nAxisView.getAxisPointerClass = function (type) {\n  return type && axisPointerClazz[type];\n};\n\nvar _default = AxisView;\nmodule.exports = _default;","/**\n * 事件扩展\n * @module zrender/mixin/Eventful\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\nvar arrySlice = Array.prototype.slice;\n/**\n * 事件分发器\n * @alias module:zrender/mixin/Eventful\n * @constructor\n */\n\nvar Eventful = function () {\n  this._$handlers = {};\n};\n\nEventful.prototype = {\n  constructor: Eventful,\n\n  /**\n   * 单次触发绑定，trigger后销毁\n   *\n   * @param {string} event 事件名\n   * @param {Function} handler 响应函数\n   * @param {Object} context\n   */\n  one: function (event, handler, context) {\n    var _h = this._$handlers;\n\n    if (!handler || !event) {\n      return this;\n    }\n\n    if (!_h[event]) {\n      _h[event] = [];\n    }\n\n    for (var i = 0; i < _h[event].length; i++) {\n      if (_h[event][i].h === handler) {\n        return this;\n      }\n    }\n\n    _h[event].push({\n      h: handler,\n      one: true,\n      ctx: context || this\n    });\n\n    return this;\n  },\n\n  /**\n   * 绑定事件\n   * @param {string} event 事件名\n   * @param {Function} handler 事件处理函数\n   * @param {Object} [context]\n   */\n  on: function (event, handler, context) {\n    var _h = this._$handlers;\n\n    if (!handler || !event) {\n      return this;\n    }\n\n    if (!_h[event]) {\n      _h[event] = [];\n    }\n\n    for (var i = 0; i < _h[event].length; i++) {\n      if (_h[event][i].h === handler) {\n        return this;\n      }\n    }\n\n    _h[event].push({\n      h: handler,\n      one: false,\n      ctx: context || this\n    });\n\n    return this;\n  },\n\n  /**\n   * 是否绑定了事件\n   * @param  {string}  event\n   * @return {boolean}\n   */\n  isSilent: function (event) {\n    var _h = this._$handlers;\n    return _h[event] && _h[event].length;\n  },\n\n  /**\n   * 解绑事件\n   * @param {string} event 事件名\n   * @param {Function} [handler] 事件处理函数\n   */\n  off: function (event, handler) {\n    var _h = this._$handlers;\n\n    if (!event) {\n      this._$handlers = {};\n      return this;\n    }\n\n    if (handler) {\n      if (_h[event]) {\n        var newList = [];\n\n        for (var i = 0, l = _h[event].length; i < l; i++) {\n          if (_h[event][i]['h'] != handler) {\n            newList.push(_h[event][i]);\n          }\n        }\n\n        _h[event] = newList;\n      }\n\n      if (_h[event] && _h[event].length === 0) {\n        delete _h[event];\n      }\n    } else {\n      delete _h[event];\n    }\n\n    return this;\n  },\n\n  /**\n   * 事件分发\n   *\n   * @param {string} type 事件类型\n   */\n  trigger: function (type) {\n    if (this._$handlers[type]) {\n      var args = arguments;\n      var argLen = args.length;\n\n      if (argLen > 3) {\n        args = arrySlice.call(args, 1);\n      }\n\n      var _h = this._$handlers[type];\n      var len = _h.length;\n\n      for (var i = 0; i < len;) {\n        // Optimize advise from backbone\n        switch (argLen) {\n          case 1:\n            _h[i]['h'].call(_h[i]['ctx']);\n\n            break;\n\n          case 2:\n            _h[i]['h'].call(_h[i]['ctx'], args[1]);\n\n            break;\n\n          case 3:\n            _h[i]['h'].call(_h[i]['ctx'], args[1], args[2]);\n\n            break;\n\n          default:\n            // have more than 2 given arguments\n            _h[i]['h'].apply(_h[i]['ctx'], args);\n\n            break;\n        }\n\n        if (_h[i]['one']) {\n          _h.splice(i, 1);\n\n          len--;\n        } else {\n          i++;\n        }\n      }\n    }\n\n    return this;\n  },\n\n  /**\n   * 带有context的事件分发, 最后一个参数是事件回调的context\n   * @param {string} type 事件类型\n   */\n  triggerWithContext: function (type) {\n    if (this._$handlers[type]) {\n      var args = arguments;\n      var argLen = args.length;\n\n      if (argLen > 4) {\n        args = arrySlice.call(args, 1, args.length - 1);\n      }\n\n      var ctx = args[args.length - 1];\n      var _h = this._$handlers[type];\n      var len = _h.length;\n\n      for (var i = 0; i < len;) {\n        // Optimize advise from backbone\n        switch (argLen) {\n          case 1:\n            _h[i]['h'].call(ctx);\n\n            break;\n\n          case 2:\n            _h[i]['h'].call(ctx, args[1]);\n\n            break;\n\n          case 3:\n            _h[i]['h'].call(ctx, args[1], args[2]);\n\n            break;\n\n          default:\n            // have more than 2 given arguments\n            _h[i]['h'].apply(ctx, args);\n\n            break;\n        }\n\n        if (_h[i]['one']) {\n          _h.splice(i, 1);\n\n          len--;\n        } else {\n          i++;\n        }\n      }\n    }\n\n    return this;\n  }\n}; // 对象可以通过 onxxxx 绑定事件\n\n/**\n * @event module:zrender/mixin/Eventful#onclick\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmouseover\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmouseout\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmousemove\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmousewheel\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmousedown\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmouseup\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondrag\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragstart\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragend\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragenter\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragleave\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragover\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondrop\n * @type {Function}\n * @default null\n */\n\nvar _default = Eventful;\nmodule.exports = _default;","var Path = require(\"../Path\");\n\nvar polyHelper = require(\"../helper/poly\");\n\n/**\n * @module zrender/graphic/shape/Polyline\n */\nvar _default = Path.extend({\n  type: 'polyline',\n  shape: {\n    points: null,\n    smooth: false,\n    smoothConstraint: null\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    polyHelper.buildPath(ctx, shape, false);\n  }\n});\n\nmodule.exports = _default;","var _config = require(\"../config\");\n\nvar debugMode = _config.debugMode;\n\nvar log = function () {};\n\nif (debugMode === 1) {\n  log = function () {\n    for (var k in arguments) {\n      throw new Error(arguments[k]);\n    }\n  };\n} else if (debugMode > 1) {\n  log = function () {\n    for (var k in arguments) {\n      console.log(arguments[k]);\n    }\n  };\n}\n\nvar _default = log;\nmodule.exports = _default;","/**\n * @module zrender/core/util\n */\n// 用于处理merge时无法遍历Date等对象的问题\nvar BUILTIN_OBJECT = {\n  '[object Function]': 1,\n  '[object RegExp]': 1,\n  '[object Date]': 1,\n  '[object Error]': 1,\n  '[object CanvasGradient]': 1,\n  '[object CanvasPattern]': 1,\n  // For node-canvas\n  '[object Image]': 1,\n  '[object Canvas]': 1\n};\nvar TYPED_ARRAY = {\n  '[object Int8Array]': 1,\n  '[object Uint8Array]': 1,\n  '[object Uint8ClampedArray]': 1,\n  '[object Int16Array]': 1,\n  '[object Uint16Array]': 1,\n  '[object Int32Array]': 1,\n  '[object Uint32Array]': 1,\n  '[object Float32Array]': 1,\n  '[object Float64Array]': 1\n};\nvar objToString = Object.prototype.toString;\nvar arrayProto = Array.prototype;\nvar nativeForEach = arrayProto.forEach;\nvar nativeFilter = arrayProto.filter;\nvar nativeSlice = arrayProto.slice;\nvar nativeMap = arrayProto.map;\nvar nativeReduce = arrayProto.reduce; // Avoid assign to an exported variable, for transforming to cjs.\n\nvar methods = {};\n\nfunction $override(name, fn) {\n  // Clear ctx instance for different environment\n  if (name === 'createCanvas') {\n    _ctx = null;\n  }\n\n  methods[name] = fn;\n}\n/**\n * Those data types can be cloned:\n *     Plain object, Array, TypedArray, number, string, null, undefined.\n * Those data types will be assgined using the orginal data:\n *     BUILTIN_OBJECT\n * Instance of user defined class will be cloned to a plain object, without\n * properties in prototype.\n * Other data types is not supported (not sure what will happen).\n *\n * Caution: do not support clone Date, for performance consideration.\n * (There might be a large number of date in `series.data`).\n * So date should not be modified in and out of echarts.\n *\n * @param {*} source\n * @return {*} new\n */\n\n\nfunction clone(source) {\n  if (source == null || typeof source != 'object') {\n    return source;\n  }\n\n  var result = source;\n  var typeStr = objToString.call(source);\n\n  if (typeStr === '[object Array]') {\n    if (!isPrimitive(source)) {\n      result = [];\n\n      for (var i = 0, len = source.length; i < len; i++) {\n        result[i] = clone(source[i]);\n      }\n    }\n  } else if (TYPED_ARRAY[typeStr]) {\n    if (!isPrimitive(source)) {\n      var Ctor = source.constructor;\n\n      if (source.constructor.from) {\n        result = Ctor.from(source);\n      } else {\n        result = new Ctor(source.length);\n\n        for (var i = 0, len = source.length; i < len; i++) {\n          result[i] = clone(source[i]);\n        }\n      }\n    }\n  } else if (!BUILTIN_OBJECT[typeStr] && !isPrimitive(source) && !isDom(source)) {\n    result = {};\n\n    for (var key in source) {\n      if (source.hasOwnProperty(key)) {\n        result[key] = clone(source[key]);\n      }\n    }\n  }\n\n  return result;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} target\n * @param {*} source\n * @param {boolean} [overwrite=false]\n */\n\n\nfunction merge(target, source, overwrite) {\n  // We should escapse that source is string\n  // and enter for ... in ...\n  if (!isObject(source) || !isObject(target)) {\n    return overwrite ? clone(source) : target;\n  }\n\n  for (var key in source) {\n    if (source.hasOwnProperty(key)) {\n      var targetProp = target[key];\n      var sourceProp = source[key];\n\n      if (isObject(sourceProp) && isObject(targetProp) && !isArray(sourceProp) && !isArray(targetProp) && !isDom(sourceProp) && !isDom(targetProp) && !isBuiltInObject(sourceProp) && !isBuiltInObject(targetProp) && !isPrimitive(sourceProp) && !isPrimitive(targetProp)) {\n        // 如果需要递归覆盖，就递归调用merge\n        merge(targetProp, sourceProp, overwrite);\n      } else if (overwrite || !(key in target)) {\n        // 否则只处理overwrite为true，或者在目标对象中没有此属性的情况\n        // NOTE，在 target[key] 不存在的时候也是直接覆盖\n        target[key] = clone(source[key], true);\n      }\n    }\n  }\n\n  return target;\n}\n/**\n * @param {Array} targetAndSources The first item is target, and the rests are source.\n * @param {boolean} [overwrite=false]\n * @return {*} target\n */\n\n\nfunction mergeAll(targetAndSources, overwrite) {\n  var result = targetAndSources[0];\n\n  for (var i = 1, len = targetAndSources.length; i < len; i++) {\n    result = merge(result, targetAndSources[i], overwrite);\n  }\n\n  return result;\n}\n/**\n * @param {*} target\n * @param {*} source\n * @memberOf module:zrender/core/util\n */\n\n\nfunction extend(target, source) {\n  for (var key in source) {\n    if (source.hasOwnProperty(key)) {\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n/**\n * @param {*} target\n * @param {*} source\n * @param {boolean} [overlay=false]\n * @memberOf module:zrender/core/util\n */\n\n\nfunction defaults(target, source, overlay) {\n  for (var key in source) {\n    if (source.hasOwnProperty(key) && (overlay ? source[key] != null : target[key] == null)) {\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nvar createCanvas = function () {\n  return methods.createCanvas();\n};\n\nmethods.createCanvas = function () {\n  return document.createElement('canvas');\n}; // FIXME\n\n\nvar _ctx;\n\nfunction getContext() {\n  if (!_ctx) {\n    // Use util.createCanvas instead of createCanvas\n    // because createCanvas may be overwritten in different environment\n    _ctx = createCanvas().getContext('2d');\n  }\n\n  return _ctx;\n}\n/**\n * 查询数组中元素的index\n * @memberOf module:zrender/core/util\n */\n\n\nfunction indexOf(array, value) {\n  if (array) {\n    if (array.indexOf) {\n      return array.indexOf(value);\n    }\n\n    for (var i = 0, len = array.length; i < len; i++) {\n      if (array[i] === value) {\n        return i;\n      }\n    }\n  }\n\n  return -1;\n}\n/**\n * 构造类继承关系\n *\n * @memberOf module:zrender/core/util\n * @param {Function} clazz 源类\n * @param {Function} baseClazz 基类\n */\n\n\nfunction inherits(clazz, baseClazz) {\n  var clazzPrototype = clazz.prototype;\n\n  function F() {}\n\n  F.prototype = baseClazz.prototype;\n  clazz.prototype = new F();\n\n  for (var prop in clazzPrototype) {\n    clazz.prototype[prop] = clazzPrototype[prop];\n  }\n\n  clazz.prototype.constructor = clazz;\n  clazz.superClass = baseClazz;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Object|Function} target\n * @param {Object|Function} sorce\n * @param {boolean} overlay\n */\n\n\nfunction mixin(target, source, overlay) {\n  target = 'prototype' in target ? target.prototype : target;\n  source = 'prototype' in source ? source.prototype : source;\n  defaults(target, source, overlay);\n}\n/**\n * Consider typed array.\n * @param {Array|TypedArray} data\n */\n\n\nfunction isArrayLike(data) {\n  if (!data) {\n    return;\n  }\n\n  if (typeof data == 'string') {\n    return false;\n  }\n\n  return typeof data.length == 'number';\n}\n/**\n * 数组或对象遍历\n * @memberOf module:zrender/core/util\n * @param {Object|Array} obj\n * @param {Function} cb\n * @param {*} [context]\n */\n\n\nfunction each(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.forEach && obj.forEach === nativeForEach) {\n    obj.forEach(cb, context);\n  } else if (obj.length === +obj.length) {\n    for (var i = 0, len = obj.length; i < len; i++) {\n      cb.call(context, obj[i], i, obj);\n    }\n  } else {\n    for (var key in obj) {\n      if (obj.hasOwnProperty(key)) {\n        cb.call(context, obj[key], key, obj);\n      }\n    }\n  }\n}\n/**\n * 数组映射\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {*} [context]\n * @return {Array}\n */\n\n\nfunction map(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.map && obj.map === nativeMap) {\n    return obj.map(cb, context);\n  } else {\n    var result = [];\n\n    for (var i = 0, len = obj.length; i < len; i++) {\n      result.push(cb.call(context, obj[i], i, obj));\n    }\n\n    return result;\n  }\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {Object} [memo]\n * @param {*} [context]\n * @return {Array}\n */\n\n\nfunction reduce(obj, cb, memo, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.reduce && obj.reduce === nativeReduce) {\n    return obj.reduce(cb, memo, context);\n  } else {\n    for (var i = 0, len = obj.length; i < len; i++) {\n      memo = cb.call(context, memo, obj[i], i, obj);\n    }\n\n    return memo;\n  }\n}\n/**\n * 数组过滤\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {*} [context]\n * @return {Array}\n */\n\n\nfunction filter(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.filter && obj.filter === nativeFilter) {\n    return obj.filter(cb, context);\n  } else {\n    var result = [];\n\n    for (var i = 0, len = obj.length; i < len; i++) {\n      if (cb.call(context, obj[i], i, obj)) {\n        result.push(obj[i]);\n      }\n    }\n\n    return result;\n  }\n}\n/**\n * 数组项查找\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {*} [context]\n * @return {*}\n */\n\n\nfunction find(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  for (var i = 0, len = obj.length; i < len; i++) {\n    if (cb.call(context, obj[i], i, obj)) {\n      return obj[i];\n    }\n  }\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Function} func\n * @param {*} context\n * @return {Function}\n */\n\n\nfunction bind(func, context) {\n  var args = nativeSlice.call(arguments, 2);\n  return function () {\n    return func.apply(context, args.concat(nativeSlice.call(arguments)));\n  };\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Function} func\n * @return {Function}\n */\n\n\nfunction curry(func) {\n  var args = nativeSlice.call(arguments, 1);\n  return function () {\n    return func.apply(this, args.concat(nativeSlice.call(arguments)));\n  };\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isArray(value) {\n  return objToString.call(value) === '[object Array]';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isFunction(value) {\n  return typeof value === 'function';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isString(value) {\n  return objToString.call(value) === '[object String]';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isObject(value) {\n  // Avoid a V8 JIT bug in Chrome 19-20.\n  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n  var type = typeof value;\n  return type === 'function' || !!value && type == 'object';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isBuiltInObject(value) {\n  return !!BUILTIN_OBJECT[objToString.call(value)];\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isTypedArray(value) {\n  return !!TYPED_ARRAY[objToString.call(value)];\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isDom(value) {\n  return typeof value === 'object' && typeof value.nodeType === 'number' && typeof value.ownerDocument === 'object';\n}\n/**\n * Whether is exactly NaN. Notice isNaN('a') returns true.\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction eqNaN(value) {\n  return value !== value;\n}\n/**\n * If value1 is not null, then return value1, otherwise judget rest of values.\n * Low performance.\n * @memberOf module:zrender/core/util\n * @return {*} Final value\n */\n\n\nfunction retrieve(values) {\n  for (var i = 0, len = arguments.length; i < len; i++) {\n    if (arguments[i] != null) {\n      return arguments[i];\n    }\n  }\n}\n\nfunction retrieve2(value0, value1) {\n  return value0 != null ? value0 : value1;\n}\n\nfunction retrieve3(value0, value1, value2) {\n  return value0 != null ? value0 : value1 != null ? value1 : value2;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Array} arr\n * @param {number} startIndex\n * @param {number} endIndex\n * @return {Array}\n */\n\n\nfunction slice() {\n  return Function.call.apply(nativeSlice, arguments);\n}\n/**\n * Normalize css liked array configuration\n * e.g.\n *  3 => [3, 3, 3, 3]\n *  [4, 2] => [4, 2, 4, 2]\n *  [4, 3, 2] => [4, 3, 2, 3]\n * @param {number|Array.<number>} val\n * @return {Array.<number>}\n */\n\n\nfunction normalizeCssArray(val) {\n  if (typeof val === 'number') {\n    return [val, val, val, val];\n  }\n\n  var len = val.length;\n\n  if (len === 2) {\n    // vertical | horizontal\n    return [val[0], val[1], val[0], val[1]];\n  } else if (len === 3) {\n    // top | horizontal | bottom\n    return [val[0], val[1], val[2], val[1]];\n  }\n\n  return val;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {boolean} condition\n * @param {string} message\n */\n\n\nfunction assert(condition, message) {\n  if (!condition) {\n    throw new Error(message);\n  }\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {string} str string to be trimed\n * @return {string} trimed string\n */\n\n\nfunction trim(str) {\n  if (str == null) {\n    return null;\n  } else if (typeof str.trim === 'function') {\n    return str.trim();\n  } else {\n    return str.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\n  }\n}\n\nvar primitiveKey = '__ec_primitive__';\n/**\n * Set an object as primitive to be ignored traversing children in clone or merge\n */\n\nfunction setAsPrimitive(obj) {\n  obj[primitiveKey] = true;\n}\n\nfunction isPrimitive(obj) {\n  return obj[primitiveKey];\n}\n/**\n * @constructor\n * @param {Object} obj Only apply `ownProperty`.\n */\n\n\nfunction HashMap(obj) {\n  var isArr = isArray(obj);\n  var thisMap = this;\n  obj instanceof HashMap ? obj.each(visit) : obj && each(obj, visit);\n\n  function visit(value, key) {\n    isArr ? thisMap.set(value, key) : thisMap.set(key, value);\n  }\n} // Add prefix to avoid conflict with Object.prototype.\n\n\nHashMap.prototype = {\n  constructor: HashMap,\n  // Do not provide `has` method to avoid defining what is `has`.\n  // (We usually treat `null` and `undefined` as the same, different\n  // from ES6 Map).\n  get: function (key) {\n    return this.hasOwnProperty(key) ? this[key] : null;\n  },\n  set: function (key, value) {\n    // Comparing with invocation chaining, `return value` is more commonly\n    // used in this case: `var someVal = map.set('a', genVal());`\n    return this[key] = value;\n  },\n  // Although util.each can be performed on this hashMap directly, user\n  // should not use the exposed keys, who are prefixed.\n  each: function (cb, context) {\n    context !== void 0 && (cb = bind(cb, context));\n\n    for (var key in this) {\n      this.hasOwnProperty(key) && cb(this[key], key);\n    }\n  },\n  // Do not use this method if performance sensitive.\n  removeKey: function (key) {\n    delete this[key];\n  }\n};\n\nfunction createHashMap(obj) {\n  return new HashMap(obj);\n}\n\nfunction concatArray(a, b) {\n  var newArray = new a.constructor(a.length + b.length);\n\n  for (var i = 0; i < a.length; i++) {\n    newArray[i] = a[i];\n  }\n\n  var offset = a.length;\n\n  for (i = 0; i < b.length; i++) {\n    newArray[i + offset] = b[i];\n  }\n\n  return newArray;\n}\n\nfunction noop() {}\n\nexports.$override = $override;\nexports.clone = clone;\nexports.merge = merge;\nexports.mergeAll = mergeAll;\nexports.extend = extend;\nexports.defaults = defaults;\nexports.createCanvas = createCanvas;\nexports.getContext = getContext;\nexports.indexOf = indexOf;\nexports.inherits = inherits;\nexports.mixin = mixin;\nexports.isArrayLike = isArrayLike;\nexports.each = each;\nexports.map = map;\nexports.reduce = reduce;\nexports.filter = filter;\nexports.find = find;\nexports.bind = bind;\nexports.curry = curry;\nexports.isArray = isArray;\nexports.isFunction = isFunction;\nexports.isString = isString;\nexports.isObject = isObject;\nexports.isBuiltInObject = isBuiltInObject;\nexports.isTypedArray = isTypedArray;\nexports.isDom = isDom;\nexports.eqNaN = eqNaN;\nexports.retrieve = retrieve;\nexports.retrieve2 = retrieve2;\nexports.retrieve3 = retrieve3;\nexports.slice = slice;\nexports.normalizeCssArray = normalizeCssArray;\nexports.assert = assert;\nexports.trim = trim;\nexports.setAsPrimitive = setAsPrimitive;\nexports.isPrimitive = isPrimitive;\nexports.createHashMap = createHashMap;\nexports.concatArray = concatArray;\nexports.noop = noop;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar ORIGIN_METHOD = '\\0__throttleOriginMethod';\nvar RATE = '\\0__throttleRate';\nvar THROTTLE_TYPE = '\\0__throttleType';\n/**\n * @public\n * @param {(Function)} fn\n * @param {number} [delay=0] Unit: ms.\n * @param {boolean} [debounce=false]\n *        true: If call interval less than `delay`, only the last call works.\n *        false: If call interval less than `delay, call works on fixed rate.\n * @return {(Function)} throttled fn.\n */\n\nfunction throttle(fn, delay, debounce) {\n  var currCall;\n  var lastCall = 0;\n  var lastExec = 0;\n  var timer = null;\n  var diff;\n  var scope;\n  var args;\n  var debounceNextCall;\n  delay = delay || 0;\n\n  function exec() {\n    lastExec = new Date().getTime();\n    timer = null;\n    fn.apply(scope, args || []);\n  }\n\n  var cb = function () {\n    currCall = new Date().getTime();\n    scope = this;\n    args = arguments;\n    var thisDelay = debounceNextCall || delay;\n    var thisDebounce = debounceNextCall || debounce;\n    debounceNextCall = null;\n    diff = currCall - (thisDebounce ? lastCall : lastExec) - thisDelay;\n    clearTimeout(timer); // Here we should make sure that: the `exec` SHOULD NOT be called later\n    // than a new call of `cb`, that is, preserving the command order. Consider\n    // calculating \"scale rate\" when roaming as an example. When a call of `cb`\n    // happens, either the `exec` is called dierectly, or the call is delayed.\n    // But the delayed call should never be later than next call of `cb`. Under\n    // this assurance, we can simply update view state each time `dispatchAction`\n    // triggered by user roaming, but not need to add extra code to avoid the\n    // state being \"rolled-back\".\n\n    if (thisDebounce) {\n      timer = setTimeout(exec, thisDelay);\n    } else {\n      if (diff >= 0) {\n        exec();\n      } else {\n        timer = setTimeout(exec, -diff);\n      }\n    }\n\n    lastCall = currCall;\n  };\n  /**\n   * Clear throttle.\n   * @public\n   */\n\n\n  cb.clear = function () {\n    if (timer) {\n      clearTimeout(timer);\n      timer = null;\n    }\n  };\n  /**\n   * Enable debounce once.\n   */\n\n\n  cb.debounceNextCall = function (debounceDelay) {\n    debounceNextCall = debounceDelay;\n  };\n\n  return cb;\n}\n/**\n * Create throttle method or update throttle rate.\n *\n * @example\n * ComponentView.prototype.render = function () {\n *     ...\n *     throttle.createOrUpdate(\n *         this,\n *         '_dispatchAction',\n *         this.model.get('throttle'),\n *         'fixRate'\n *     );\n * };\n * ComponentView.prototype.remove = function () {\n *     throttle.clear(this, '_dispatchAction');\n * };\n * ComponentView.prototype.dispose = function () {\n *     throttle.clear(this, '_dispatchAction');\n * };\n *\n * @public\n * @param {Object} obj\n * @param {string} fnAttr\n * @param {number} [rate]\n * @param {string} [throttleType='fixRate'] 'fixRate' or 'debounce'\n * @return {Function} throttled function.\n */\n\n\nfunction createOrUpdate(obj, fnAttr, rate, throttleType) {\n  var fn = obj[fnAttr];\n\n  if (!fn) {\n    return;\n  }\n\n  var originFn = fn[ORIGIN_METHOD] || fn;\n  var lastThrottleType = fn[THROTTLE_TYPE];\n  var lastRate = fn[RATE];\n\n  if (lastRate !== rate || lastThrottleType !== throttleType) {\n    if (rate == null || !throttleType) {\n      return obj[fnAttr] = originFn;\n    }\n\n    fn = obj[fnAttr] = throttle(originFn, rate, throttleType === 'debounce');\n    fn[ORIGIN_METHOD] = originFn;\n    fn[THROTTLE_TYPE] = throttleType;\n    fn[RATE] = rate;\n  }\n\n  return fn;\n}\n/**\n * Clear throttle. Example see throttle.createOrUpdate.\n *\n * @public\n * @param {Object} obj\n * @param {string} fnAttr\n */\n\n\nfunction clear(obj, fnAttr) {\n  var fn = obj[fnAttr];\n\n  if (fn && fn[ORIGIN_METHOD]) {\n    obj[fnAttr] = fn[ORIGIN_METHOD];\n  }\n}\n\nexports.throttle = throttle;\nexports.createOrUpdate = createOrUpdate;\nexports.clear = clear;","var makeStyleMapper = require(\"./makeStyleMapper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar getItemStyle = makeStyleMapper([['fill', 'color'], ['stroke', 'borderColor'], ['lineWidth', 'borderWidth'], ['opacity'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor'], ['textPosition'], ['textAlign']]);\nvar _default = {\n  getItemStyle: function (excludes, includes) {\n    var style = getItemStyle(this, excludes, includes);\n    var lineDash = this.getBorderLineDash();\n    lineDash && (style.lineDash = lineDash);\n    return style;\n  },\n  getBorderLineDash: function () {\n    var lineType = this.get('borderType');\n    return lineType === 'solid' || lineType == null ? null : lineType === 'dashed' ? [5, 5] : [1, 1];\n  }\n};\nmodule.exports = _default;","var guid = require(\"./core/guid\");\n\nvar env = require(\"./core/env\");\n\nvar zrUtil = require(\"./core/util\");\n\nvar Handler = require(\"./Handler\");\n\nvar Storage = require(\"./Storage\");\n\nvar Painter = require(\"./Painter\");\n\nvar Animation = require(\"./animation/Animation\");\n\nvar HandlerProxy = require(\"./dom/HandlerProxy\");\n\n/*!\n* ZRender, a high performance 2d drawing library.\n*\n* Copyright (c) 2013, Baidu Inc.\n* All rights reserved.\n*\n* LICENSE\n* https://github.com/ecomfe/zrender/blob/master/LICENSE.txt\n*/\nvar useVML = !env.canvasSupported;\nvar painterCtors = {\n  canvas: Painter\n};\nvar instances = {}; // ZRender实例map索引\n\n/**\n * @type {string}\n */\n\nvar version = '4.0.4';\n/**\n * Initializing a zrender instance\n * @param {HTMLElement} dom\n * @param {Object} opts\n * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n * @param {number} [opts.devicePixelRatio]\n * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n * @return {module:zrender/ZRender}\n */\n\nfunction init(dom, opts) {\n  var zr = new ZRender(guid(), dom, opts);\n  instances[zr.id] = zr;\n  return zr;\n}\n/**\n * Dispose zrender instance\n * @param {module:zrender/ZRender} zr\n */\n\n\nfunction dispose(zr) {\n  if (zr) {\n    zr.dispose();\n  } else {\n    for (var key in instances) {\n      if (instances.hasOwnProperty(key)) {\n        instances[key].dispose();\n      }\n    }\n\n    instances = {};\n  }\n\n  return this;\n}\n/**\n * Get zrender instance by id\n * @param {string} id zrender instance id\n * @return {module:zrender/ZRender}\n */\n\n\nfunction getInstance(id) {\n  return instances[id];\n}\n\nfunction registerPainter(name, Ctor) {\n  painterCtors[name] = Ctor;\n}\n\nfunction delInstance(id) {\n  delete instances[id];\n}\n/**\n * @module zrender/ZRender\n */\n\n/**\n * @constructor\n * @alias module:zrender/ZRender\n * @param {string} id\n * @param {HTMLElement} dom\n * @param {Object} opts\n * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n * @param {number} [opts.devicePixelRatio]\n * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n */\n\n\nvar ZRender = function (id, dom, opts) {\n  opts = opts || {};\n  /**\n   * @type {HTMLDomElement}\n   */\n\n  this.dom = dom;\n  /**\n   * @type {string}\n   */\n\n  this.id = id;\n  var self = this;\n  var storage = new Storage();\n  var rendererType = opts.renderer; // TODO WebGL\n\n  if (useVML) {\n    if (!painterCtors.vml) {\n      throw new Error('You need to require \\'zrender/vml/vml\\' to support IE8');\n    }\n\n    rendererType = 'vml';\n  } else if (!rendererType || !painterCtors[rendererType]) {\n    rendererType = 'canvas';\n  }\n\n  var painter = new painterCtors[rendererType](dom, storage, opts, id);\n  this.storage = storage;\n  this.painter = painter;\n  var handerProxy = !env.node && !env.worker ? new HandlerProxy(painter.getViewportRoot()) : null;\n  this.handler = new Handler(storage, painter, handerProxy, painter.root);\n  /**\n   * @type {module:zrender/animation/Animation}\n   */\n\n  this.animation = new Animation({\n    stage: {\n      update: zrUtil.bind(this.flush, this)\n    }\n  });\n  this.animation.start();\n  /**\n   * @type {boolean}\n   * @private\n   */\n\n  this._needsRefresh; // 修改 storage.delFromStorage, 每次删除元素之前删除动画\n  // FIXME 有点ugly\n\n  var oldDelFromStorage = storage.delFromStorage;\n  var oldAddToStorage = storage.addToStorage;\n\n  storage.delFromStorage = function (el) {\n    oldDelFromStorage.call(storage, el);\n    el && el.removeSelfFromZr(self);\n  };\n\n  storage.addToStorage = function (el) {\n    oldAddToStorage.call(storage, el);\n    el.addSelfToZr(self);\n  };\n};\n\nZRender.prototype = {\n  constructor: ZRender,\n\n  /**\n   * 获取实例唯一标识\n   * @return {string}\n   */\n  getId: function () {\n    return this.id;\n  },\n\n  /**\n   * 添加元素\n   * @param  {module:zrender/Element} el\n   */\n  add: function (el) {\n    this.storage.addRoot(el);\n    this._needsRefresh = true;\n  },\n\n  /**\n   * 删除元素\n   * @param  {module:zrender/Element} el\n   */\n  remove: function (el) {\n    this.storage.delRoot(el);\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Change configuration of layer\n   * @param {string} zLevel\n   * @param {Object} config\n   * @param {string} [config.clearColor=0] Clear color\n   * @param {string} [config.motionBlur=false] If enable motion blur\n   * @param {number} [config.lastFrameAlpha=0.7] Motion blur factor. Larger value cause longer trailer\n  */\n  configLayer: function (zLevel, config) {\n    if (this.painter.configLayer) {\n      this.painter.configLayer(zLevel, config);\n    }\n\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Set background color\n   * @param {string} backgroundColor\n   */\n  setBackgroundColor: function (backgroundColor) {\n    if (this.painter.setBackgroundColor) {\n      this.painter.setBackgroundColor(backgroundColor);\n    }\n\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Repaint the canvas immediately\n   */\n  refreshImmediately: function () {\n    // var start = new Date();\n    // Clear needsRefresh ahead to avoid something wrong happens in refresh\n    // Or it will cause zrender refreshes again and again.\n    this._needsRefresh = false;\n    this.painter.refresh();\n    /**\n     * Avoid trigger zr.refresh in Element#beforeUpdate hook\n     */\n\n    this._needsRefresh = false; // var end = new Date();\n    // var log = document.getElementById('log');\n    // if (log) {\n    //     log.innerHTML = log.innerHTML + '<br>' + (end - start);\n    // }\n  },\n\n  /**\n   * Mark and repaint the canvas in the next frame of browser\n   */\n  refresh: function () {\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Perform all refresh\n   */\n  flush: function () {\n    var triggerRendered;\n\n    if (this._needsRefresh) {\n      triggerRendered = true;\n      this.refreshImmediately();\n    }\n\n    if (this._needsRefreshHover) {\n      triggerRendered = true;\n      this.refreshHoverImmediately();\n    }\n\n    triggerRendered && this.trigger('rendered');\n  },\n\n  /**\n   * Add element to hover layer\n   * @param  {module:zrender/Element} el\n   * @param {Object} style\n   */\n  addHover: function (el, style) {\n    if (this.painter.addHover) {\n      this.painter.addHover(el, style);\n      this.refreshHover();\n    }\n  },\n\n  /**\n   * Add element from hover layer\n   * @param  {module:zrender/Element} el\n   */\n  removeHover: function (el) {\n    if (this.painter.removeHover) {\n      this.painter.removeHover(el);\n      this.refreshHover();\n    }\n  },\n\n  /**\n   * Clear all hover elements in hover layer\n   * @param  {module:zrender/Element} el\n   */\n  clearHover: function () {\n    if (this.painter.clearHover) {\n      this.painter.clearHover();\n      this.refreshHover();\n    }\n  },\n\n  /**\n   * Refresh hover in next frame\n   */\n  refreshHover: function () {\n    this._needsRefreshHover = true;\n  },\n\n  /**\n   * Refresh hover immediately\n   */\n  refreshHoverImmediately: function () {\n    this._needsRefreshHover = false;\n    this.painter.refreshHover && this.painter.refreshHover();\n  },\n\n  /**\n   * Resize the canvas.\n   * Should be invoked when container size is changed\n   * @param {Object} [opts]\n   * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n   * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n   */\n  resize: function (opts) {\n    opts = opts || {};\n    this.painter.resize(opts.width, opts.height);\n    this.handler.resize();\n  },\n\n  /**\n   * Stop and clear all animation immediately\n   */\n  clearAnimation: function () {\n    this.animation.clear();\n  },\n\n  /**\n   * Get container width\n   */\n  getWidth: function () {\n    return this.painter.getWidth();\n  },\n\n  /**\n   * Get container height\n   */\n  getHeight: function () {\n    return this.painter.getHeight();\n  },\n\n  /**\n   * Export the canvas as Base64 URL\n   * @param {string} type\n   * @param {string} [backgroundColor='#fff']\n   * @return {string} Base64 URL\n   */\n  // toDataURL: function(type, backgroundColor) {\n  //     return this.painter.getRenderedCanvas({\n  //         backgroundColor: backgroundColor\n  //     }).toDataURL(type);\n  // },\n\n  /**\n   * Converting a path to image.\n   * It has much better performance of drawing image rather than drawing a vector path.\n   * @param {module:zrender/graphic/Path} e\n   * @param {number} width\n   * @param {number} height\n   */\n  pathToImage: function (e, dpr) {\n    return this.painter.pathToImage(e, dpr);\n  },\n\n  /**\n   * Set default cursor\n   * @param {string} [cursorStyle='default'] 例如 crosshair\n   */\n  setCursorStyle: function (cursorStyle) {\n    this.handler.setCursorStyle(cursorStyle);\n  },\n\n  /**\n   * Find hovered element\n   * @param {number} x\n   * @param {number} y\n   * @return {Object} {target, topTarget}\n   */\n  findHover: function (x, y) {\n    return this.handler.findHover(x, y);\n  },\n\n  /**\n   * Bind event\n   *\n   * @param {string} eventName Event name\n   * @param {Function} eventHandler Handler function\n   * @param {Object} [context] Context object\n   */\n  on: function (eventName, eventHandler, context) {\n    this.handler.on(eventName, eventHandler, context);\n  },\n\n  /**\n   * Unbind event\n   * @param {string} eventName Event name\n   * @param {Function} [eventHandler] Handler function\n   */\n  off: function (eventName, eventHandler) {\n    this.handler.off(eventName, eventHandler);\n  },\n\n  /**\n   * Trigger event manually\n   *\n   * @param {string} eventName Event name\n   * @param {event=} event Event object\n   */\n  trigger: function (eventName, event) {\n    this.handler.trigger(eventName, event);\n  },\n\n  /**\n   * Clear all objects and the canvas.\n   */\n  clear: function () {\n    this.storage.delRoot();\n    this.painter.clear();\n  },\n\n  /**\n   * Dispose self.\n   */\n  dispose: function () {\n    this.animation.stop();\n    this.clear();\n    this.storage.dispose();\n    this.painter.dispose();\n    this.handler.dispose();\n    this.animation = this.storage = this.painter = this.handler = null;\n    delInstance(this.id);\n  }\n};\nexports.version = version;\nexports.init = init;\nexports.dispose = dispose;\nexports.getInstance = getInstance;\nexports.registerPainter = registerPainter;","var PI2 = Math.PI * 2;\n\nfunction normalizeRadian(angle) {\n  angle %= PI2;\n\n  if (angle < 0) {\n    angle += PI2;\n  }\n\n  return angle;\n}\n\nexports.normalizeRadian = normalizeRadian;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar coordinateSystemCreators = {};\n\nfunction CoordinateSystemManager() {\n  this._coordinateSystems = [];\n}\n\nCoordinateSystemManager.prototype = {\n  constructor: CoordinateSystemManager,\n  create: function (ecModel, api) {\n    var coordinateSystems = [];\n    zrUtil.each(coordinateSystemCreators, function (creater, type) {\n      var list = creater.create(ecModel, api);\n      coordinateSystems = coordinateSystems.concat(list || []);\n    });\n    this._coordinateSystems = coordinateSystems;\n  },\n  update: function (ecModel, api) {\n    zrUtil.each(this._coordinateSystems, function (coordSys) {\n      coordSys.update && coordSys.update(ecModel, api);\n    });\n  },\n  getCoordinateSystems: function () {\n    return this._coordinateSystems.slice();\n  }\n};\n\nCoordinateSystemManager.register = function (type, coordinateSystemCreator) {\n  coordinateSystemCreators[type] = coordinateSystemCreator;\n};\n\nCoordinateSystemManager.get = function (type) {\n  return coordinateSystemCreators[type];\n};\n\nvar _default = CoordinateSystemManager;\nmodule.exports = _default;","/**\n * 3x2矩阵操作类\n * @exports zrender/tool/matrix\n */\nvar ArrayCtor = typeof Float32Array === 'undefined' ? Array : Float32Array;\n/**\n * Create a identity matrix.\n * @return {Float32Array|Array.<number>}\n */\n\nfunction create() {\n  var out = new ArrayCtor(6);\n  identity(out);\n  return out;\n}\n/**\n * 设置矩阵为单位矩阵\n * @param {Float32Array|Array.<number>} out\n */\n\n\nfunction identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n/**\n * 复制矩阵\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} m\n */\n\n\nfunction copy(out, m) {\n  out[0] = m[0];\n  out[1] = m[1];\n  out[2] = m[2];\n  out[3] = m[3];\n  out[4] = m[4];\n  out[5] = m[5];\n  return out;\n}\n/**\n * 矩阵相乘\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} m1\n * @param {Float32Array|Array.<number>} m2\n */\n\n\nfunction mul(out, m1, m2) {\n  // Consider matrix.mul(m, m2, m);\n  // where out is the same as m2.\n  // So use temp variable to escape error.\n  var out0 = m1[0] * m2[0] + m1[2] * m2[1];\n  var out1 = m1[1] * m2[0] + m1[3] * m2[1];\n  var out2 = m1[0] * m2[2] + m1[2] * m2[3];\n  var out3 = m1[1] * m2[2] + m1[3] * m2[3];\n  var out4 = m1[0] * m2[4] + m1[2] * m2[5] + m1[4];\n  var out5 = m1[1] * m2[4] + m1[3] * m2[5] + m1[5];\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = out3;\n  out[4] = out4;\n  out[5] = out5;\n  return out;\n}\n/**\n * 平移变换\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n * @param {Float32Array|Array.<number>} v\n */\n\n\nfunction translate(out, a, v) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4] + v[0];\n  out[5] = a[5] + v[1];\n  return out;\n}\n/**\n * 旋转变换\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n * @param {number} rad\n */\n\n\nfunction rotate(out, a, rad) {\n  var aa = a[0];\n  var ac = a[2];\n  var atx = a[4];\n  var ab = a[1];\n  var ad = a[3];\n  var aty = a[5];\n  var st = Math.sin(rad);\n  var ct = Math.cos(rad);\n  out[0] = aa * ct + ab * st;\n  out[1] = -aa * st + ab * ct;\n  out[2] = ac * ct + ad * st;\n  out[3] = -ac * st + ct * ad;\n  out[4] = ct * atx + st * aty;\n  out[5] = ct * aty - st * atx;\n  return out;\n}\n/**\n * 缩放变换\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n * @param {Float32Array|Array.<number>} v\n */\n\n\nfunction scale(out, a, v) {\n  var vx = v[0];\n  var vy = v[1];\n  out[0] = a[0] * vx;\n  out[1] = a[1] * vy;\n  out[2] = a[2] * vx;\n  out[3] = a[3] * vy;\n  out[4] = a[4] * vx;\n  out[5] = a[5] * vy;\n  return out;\n}\n/**\n * 求逆矩阵\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n */\n\n\nfunction invert(out, a) {\n  var aa = a[0];\n  var ac = a[2];\n  var atx = a[4];\n  var ab = a[1];\n  var ad = a[3];\n  var aty = a[5];\n  var det = aa * ad - ab * ac;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = ad * det;\n  out[1] = -ab * det;\n  out[2] = -ac * det;\n  out[3] = aa * det;\n  out[4] = (ac * aty - ad * atx) * det;\n  out[5] = (ab * atx - aa * aty) * det;\n  return out;\n}\n/**\n * Clone a new matrix.\n * @param {Float32Array|Array.<number>} a\n */\n\n\nfunction clone(a) {\n  var b = create();\n  copy(b, a);\n  return b;\n}\n\nexports.create = create;\nexports.identity = identity;\nexports.copy = copy;\nexports.mul = mul;\nexports.translate = translate;\nexports.rotate = rotate;\nexports.scale = scale;\nexports.invert = invert;\nexports.clone = clone;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar lang = require(\"../lang\");\n\nvar _dataProvider = require(\"../data/helper/dataProvider\");\n\nvar retrieveRawValue = _dataProvider.retrieveRawValue;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(dom, ecModel) {\n  var ariaModel = ecModel.getModel('aria');\n\n  if (!ariaModel.get('show')) {\n    return;\n  } else if (ariaModel.get('description')) {\n    dom.setAttribute('aria-label', ariaModel.get('description'));\n    return;\n  }\n\n  var seriesCnt = 0;\n  ecModel.eachSeries(function (seriesModel, idx) {\n    ++seriesCnt;\n  }, this);\n  var maxDataCnt = ariaModel.get('data.maxCount') || 10;\n  var maxSeriesCnt = ariaModel.get('series.maxCount') || 10;\n  var displaySeriesCnt = Math.min(seriesCnt, maxSeriesCnt);\n  var ariaLabel;\n\n  if (seriesCnt < 1) {\n    // No series, no aria label\n    return;\n  } else {\n    var title = getTitle();\n\n    if (title) {\n      ariaLabel = replace(getConfig('general.withTitle'), {\n        title: title\n      });\n    } else {\n      ariaLabel = getConfig('general.withoutTitle');\n    }\n\n    var seriesLabels = [];\n    var prefix = seriesCnt > 1 ? 'series.multiple.prefix' : 'series.single.prefix';\n    ariaLabel += replace(getConfig(prefix), {\n      seriesCount: seriesCnt\n    });\n    ecModel.eachSeries(function (seriesModel, idx) {\n      if (idx < displaySeriesCnt) {\n        var seriesLabel;\n        var seriesName = seriesModel.get('name');\n        var seriesTpl = 'series.' + (seriesCnt > 1 ? 'multiple' : 'single') + '.';\n        seriesLabel = getConfig(seriesName ? seriesTpl + 'withName' : seriesTpl + 'withoutName');\n        seriesLabel = replace(seriesLabel, {\n          seriesId: seriesModel.seriesIndex,\n          seriesName: seriesModel.get('name'),\n          seriesType: getSeriesTypeName(seriesModel.subType)\n        });\n        var data = seriesModel.getData();\n        window.data = data;\n\n        if (data.count() > maxDataCnt) {\n          // Show part of data\n          seriesLabel += replace(getConfig('data.partialData'), {\n            displayCnt: maxDataCnt\n          });\n        } else {\n          seriesLabel += getConfig('data.allData');\n        }\n\n        var dataLabels = [];\n\n        for (var i = 0; i < data.count(); i++) {\n          if (i < maxDataCnt) {\n            var name = data.getName(i);\n            var value = retrieveRawValue(data, i);\n            dataLabels.push(replace(name ? getConfig('data.withName') : getConfig('data.withoutName'), {\n              name: name,\n              value: value\n            }));\n          }\n        }\n\n        seriesLabel += dataLabels.join(getConfig('data.separator.middle')) + getConfig('data.separator.end');\n        seriesLabels.push(seriesLabel);\n      }\n    });\n    ariaLabel += seriesLabels.join(getConfig('series.multiple.separator.middle')) + getConfig('series.multiple.separator.end');\n    dom.setAttribute('aria-label', ariaLabel);\n  }\n\n  function replace(str, keyValues) {\n    if (typeof str !== 'string') {\n      return str;\n    }\n\n    var result = str;\n    zrUtil.each(keyValues, function (value, key) {\n      result = result.replace(new RegExp('\\\\{\\\\s*' + key + '\\\\s*\\\\}', 'g'), value);\n    });\n    return result;\n  }\n\n  function getConfig(path) {\n    var userConfig = ariaModel.get(path);\n\n    if (userConfig == null) {\n      var pathArr = path.split('.');\n      var result = lang.aria;\n\n      for (var i = 0; i < pathArr.length; ++i) {\n        result = result[pathArr[i]];\n      }\n\n      return result;\n    } else {\n      return userConfig;\n    }\n  }\n\n  function getTitle() {\n    var title = ecModel.getModel('title').option;\n\n    if (title && title.length) {\n      title = title[0];\n    }\n\n    return title && title.text;\n  }\n\n  function getSeriesTypeName(type) {\n    return lang.series.typeNames[type] || '自定义图';\n  }\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar textContain = require(\"zrender/lib/contain/text\");\n\nvar numberUtil = require(\"./number\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * 每三位默认加,格式化\n * @param {string|number} x\n * @return {string}\n */\nfunction addCommas(x) {\n  if (isNaN(x)) {\n    return '-';\n  }\n\n  x = (x + '').split('.');\n  return x[0].replace(/(\\d{1,3})(?=(?:\\d{3})+(?!\\d))/g, '$1,') + (x.length > 1 ? '.' + x[1] : '');\n}\n/**\n * @param {string} str\n * @param {boolean} [upperCaseFirst=false]\n * @return {string} str\n */\n\n\nfunction toCamelCase(str, upperCaseFirst) {\n  str = (str || '').toLowerCase().replace(/-(.)/g, function (match, group1) {\n    return group1.toUpperCase();\n  });\n\n  if (upperCaseFirst && str) {\n    str = str.charAt(0).toUpperCase() + str.slice(1);\n  }\n\n  return str;\n}\n\nvar normalizeCssArray = zrUtil.normalizeCssArray;\nvar replaceReg = /([&<>\"'])/g;\nvar replaceMap = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  '\\'': '&#39;'\n};\n\nfunction encodeHTML(source) {\n  return source == null ? '' : (source + '').replace(replaceReg, function (str, c) {\n    return replaceMap[c];\n  });\n}\n\nvar TPL_VAR_ALIAS = ['a', 'b', 'c', 'd', 'e', 'f', 'g'];\n\nvar wrapVar = function (varName, seriesIdx) {\n  return '{' + varName + (seriesIdx == null ? '' : seriesIdx) + '}';\n};\n/**\n * Template formatter\n * @param {string} tpl\n * @param {Array.<Object>|Object} paramsList\n * @param {boolean} [encode=false]\n * @return {string}\n */\n\n\nfunction formatTpl(tpl, paramsList, encode) {\n  if (!zrUtil.isArray(paramsList)) {\n    paramsList = [paramsList];\n  }\n\n  var seriesLen = paramsList.length;\n\n  if (!seriesLen) {\n    return '';\n  }\n\n  var $vars = paramsList[0].$vars || [];\n\n  for (var i = 0; i < $vars.length; i++) {\n    var alias = TPL_VAR_ALIAS[i];\n    tpl = tpl.replace(wrapVar(alias), wrapVar(alias, 0));\n  }\n\n  for (var seriesIdx = 0; seriesIdx < seriesLen; seriesIdx++) {\n    for (var k = 0; k < $vars.length; k++) {\n      var val = paramsList[seriesIdx][$vars[k]];\n      tpl = tpl.replace(wrapVar(TPL_VAR_ALIAS[k], seriesIdx), encode ? encodeHTML(val) : val);\n    }\n  }\n\n  return tpl;\n}\n/**\n * simple Template formatter\n *\n * @param {string} tpl\n * @param {Object} param\n * @param {boolean} [encode=false]\n * @return {string}\n */\n\n\nfunction formatTplSimple(tpl, param, encode) {\n  zrUtil.each(param, function (value, key) {\n    tpl = tpl.replace('{' + key + '}', encode ? encodeHTML(value) : value);\n  });\n  return tpl;\n}\n/**\n * @param {Object|string} [opt] If string, means color.\n * @param {string} [opt.color]\n * @param {string} [opt.extraCssText]\n * @param {string} [opt.type='item'] 'item' or 'subItem'\n * @return {string}\n */\n\n\nfunction getTooltipMarker(opt, extraCssText) {\n  opt = zrUtil.isString(opt) ? {\n    color: opt,\n    extraCssText: extraCssText\n  } : opt || {};\n  var color = opt.color;\n  var type = opt.type;\n  var extraCssText = opt.extraCssText;\n\n  if (!color) {\n    return '';\n  }\n\n  return type === 'subItem' ? '<span style=\"display:inline-block;vertical-align:middle;margin-right:8px;margin-left:3px;' + 'border-radius:4px;width:4px;height:4px;background-color:' + encodeHTML(color) + ';' + (extraCssText || '') + '\"></span>' : '<span style=\"display:inline-block;margin-right:5px;' + 'border-radius:10px;width:10px;height:10px;background-color:' + encodeHTML(color) + ';' + (extraCssText || '') + '\"></span>';\n}\n\nfunction pad(str, len) {\n  str += '';\n  return '0000'.substr(0, len - str.length) + str;\n}\n/**\n * ISO Date format\n * @param {string} tpl\n * @param {number} value\n * @param {boolean} [isUTC=false] Default in local time.\n *           see `module:echarts/scale/Time`\n *           and `module:echarts/util/number#parseDate`.\n * @inner\n */\n\n\nfunction formatTime(tpl, value, isUTC) {\n  if (tpl === 'week' || tpl === 'month' || tpl === 'quarter' || tpl === 'half-year' || tpl === 'year') {\n    tpl = 'MM-dd\\nyyyy';\n  }\n\n  var date = numberUtil.parseDate(value);\n  var utc = isUTC ? 'UTC' : '';\n  var y = date['get' + utc + 'FullYear']();\n  var M = date['get' + utc + 'Month']() + 1;\n  var d = date['get' + utc + 'Date']();\n  var h = date['get' + utc + 'Hours']();\n  var m = date['get' + utc + 'Minutes']();\n  var s = date['get' + utc + 'Seconds']();\n  var S = date['get' + utc + 'Milliseconds']();\n  tpl = tpl.replace('MM', pad(M, 2)).replace('M', M).replace('yyyy', y).replace('yy', y % 100).replace('dd', pad(d, 2)).replace('d', d).replace('hh', pad(h, 2)).replace('h', h).replace('mm', pad(m, 2)).replace('m', m).replace('ss', pad(s, 2)).replace('s', s).replace('SSS', pad(S, 3));\n  return tpl;\n}\n/**\n * Capital first\n * @param {string} str\n * @return {string}\n */\n\n\nfunction capitalFirst(str) {\n  return str ? str.charAt(0).toUpperCase() + str.substr(1) : str;\n}\n\nvar truncateText = textContain.truncateText;\nvar getTextRect = textContain.getBoundingRect;\nexports.addCommas = addCommas;\nexports.toCamelCase = toCamelCase;\nexports.normalizeCssArray = normalizeCssArray;\nexports.encodeHTML = encodeHTML;\nexports.formatTpl = formatTpl;\nexports.formatTplSimple = formatTplSimple;\nexports.getTooltipMarker = getTooltipMarker;\nexports.formatTime = formatTime;\nexports.capitalFirst = capitalFirst;\nexports.truncateText = truncateText;\nexports.getTextRect = getTextRect;","var Group = require(\"zrender/lib/container/Group\");\n\nvar componentUtil = require(\"../util/component\");\n\nvar clazzUtil = require(\"../util/clazz\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar Component = function () {\n  /**\n   * @type {module:zrender/container/Group}\n   * @readOnly\n   */\n  this.group = new Group();\n  /**\n   * @type {string}\n   * @readOnly\n   */\n\n  this.uid = componentUtil.getUID('viewComponent');\n};\n\nComponent.prototype = {\n  constructor: Component,\n  init: function (ecModel, api) {},\n  render: function (componentModel, ecModel, api, payload) {},\n  dispose: function () {}\n};\nvar componentProto = Component.prototype;\n\ncomponentProto.updateView = componentProto.updateLayout = componentProto.updateVisual = function (seriesModel, ecModel, api, payload) {// Do nothing;\n}; // Enable Component.extend.\n\n\nclazzUtil.enableClassExtend(Component); // Enable capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n\nclazzUtil.enableClassManagement(Component, {\n  registerWhenExtend: true\n});\nvar _default = Component;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar textContain = require(\"zrender/lib/contain/text\");\n\nvar _model = require(\"../util/model\");\n\nvar makeInner = _model.makeInner;\n\nvar _axisHelper = require(\"./axisHelper\");\n\nvar makeLabelFormatter = _axisHelper.makeLabelFormatter;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar inner = makeInner();\n/**\n * @param {module:echats/coord/Axis} axis\n * @return {Object} {\n *     labels: [{\n *         formattedLabel: string,\n *         rawLabel: string,\n *         tickValue: number\n *     }, ...],\n *     labelCategoryInterval: number\n * }\n */\n\nfunction createAxisLabels(axis) {\n  // Only ordinal scale support tick interval\n  return axis.type === 'category' ? makeCategoryLabels(axis) : makeRealNumberLabels(axis);\n}\n/**\n * @param {module:echats/coord/Axis} axis\n * @param {module:echarts/model/Model} tickModel For example, can be axisTick, splitLine, splitArea.\n * @return {Object} {\n *     ticks: Array.<number>\n *     tickCategoryInterval: number\n * }\n */\n\n\nfunction createAxisTicks(axis, tickModel) {\n  // Only ordinal scale support tick interval\n  return axis.type === 'category' ? makeCategoryTicks(axis, tickModel) : {\n    ticks: axis.scale.getTicks()\n  };\n}\n\nfunction makeCategoryLabels(axis) {\n  var labelModel = axis.getLabelModel();\n  var result = makeCategoryLabelsActually(axis, labelModel);\n  return !labelModel.get('show') || axis.scale.isBlank() ? {\n    labels: [],\n    labelCategoryInterval: result.labelCategoryInterval\n  } : result;\n}\n\nfunction makeCategoryLabelsActually(axis, labelModel) {\n  var labelsCache = getListCache(axis, 'labels');\n  var optionLabelInterval = getOptionCategoryInterval(labelModel);\n  var result = listCacheGet(labelsCache, optionLabelInterval);\n\n  if (result) {\n    return result;\n  }\n\n  var labels;\n  var numericLabelInterval;\n\n  if (zrUtil.isFunction(optionLabelInterval)) {\n    labels = makeLabelsByCustomizedCategoryInterval(axis, optionLabelInterval);\n  } else {\n    numericLabelInterval = optionLabelInterval === 'auto' ? makeAutoCategoryInterval(axis) : optionLabelInterval;\n    labels = makeLabelsByNumericCategoryInterval(axis, numericLabelInterval);\n  } // Cache to avoid calling interval function repeatly.\n\n\n  return listCacheSet(labelsCache, optionLabelInterval, {\n    labels: labels,\n    labelCategoryInterval: numericLabelInterval\n  });\n}\n\nfunction makeCategoryTicks(axis, tickModel) {\n  var ticksCache = getListCache(axis, 'ticks');\n  var optionTickInterval = getOptionCategoryInterval(tickModel);\n  var result = listCacheGet(ticksCache, optionTickInterval);\n\n  if (result) {\n    return result;\n  }\n\n  var ticks;\n  var tickCategoryInterval; // Optimize for the case that large category data and no label displayed,\n  // we should not return all ticks.\n\n  if (!tickModel.get('show') || axis.scale.isBlank()) {\n    ticks = [];\n  }\n\n  if (zrUtil.isFunction(optionTickInterval)) {\n    ticks = makeLabelsByCustomizedCategoryInterval(axis, optionTickInterval, true);\n  } // Always use label interval by default despite label show. Consider this\n  // scenario, Use multiple grid with the xAxis sync, and only one xAxis shows\n  // labels. `splitLine` and `axisTick` should be consistent in this case.\n  else if (optionTickInterval === 'auto') {\n      var labelsResult = makeCategoryLabelsActually(axis, axis.getLabelModel());\n      tickCategoryInterval = labelsResult.labelCategoryInterval;\n      ticks = zrUtil.map(labelsResult.labels, function (labelItem) {\n        return labelItem.tickValue;\n      });\n    } else {\n      tickCategoryInterval = optionTickInterval;\n      ticks = makeLabelsByNumericCategoryInterval(axis, tickCategoryInterval, true);\n    } // Cache to avoid calling interval function repeatly.\n\n\n  return listCacheSet(ticksCache, optionTickInterval, {\n    ticks: ticks,\n    tickCategoryInterval: tickCategoryInterval\n  });\n}\n\nfunction makeRealNumberLabels(axis) {\n  var ticks = axis.scale.getTicks();\n  var labelFormatter = makeLabelFormatter(axis);\n  return {\n    labels: zrUtil.map(ticks, function (tickValue, idx) {\n      return {\n        formattedLabel: labelFormatter(tickValue, idx),\n        rawLabel: axis.scale.getLabel(tickValue),\n        tickValue: tickValue\n      };\n    })\n  };\n} // Large category data calculation is performence sensitive, and ticks and label\n// probably be fetched by multiple times. So we cache the result.\n// axis is created each time during a ec process, so we do not need to clear cache.\n\n\nfunction getListCache(axis, prop) {\n  // Because key can be funciton, and cache size always be small, we use array cache.\n  return inner(axis)[prop] || (inner(axis)[prop] = []);\n}\n\nfunction listCacheGet(cache, key) {\n  for (var i = 0; i < cache.length; i++) {\n    if (cache[i].key === key) {\n      return cache[i].value;\n    }\n  }\n}\n\nfunction listCacheSet(cache, key, value) {\n  cache.push({\n    key: key,\n    value: value\n  });\n  return value;\n}\n\nfunction makeAutoCategoryInterval(axis) {\n  var result = inner(axis).autoInterval;\n  return result != null ? result : inner(axis).autoInterval = axis.calculateCategoryInterval();\n}\n/**\n * Calculate interval for category axis ticks and labels.\n * To get precise result, at least one of `getRotate` and `isHorizontal`\n * should be implemented in axis.\n */\n\n\nfunction calculateCategoryInterval(axis) {\n  var params = fetchAutoCategoryIntervalCalculationParams(axis);\n  var labelFormatter = makeLabelFormatter(axis);\n  var rotation = (params.axisRotate - params.labelRotate) / 180 * Math.PI;\n  var ordinalScale = axis.scale;\n  var ordinalExtent = ordinalScale.getExtent(); // Providing this method is for optimization:\n  // avoid generating a long array by `getTicks`\n  // in large category data case.\n\n  var tickCount = ordinalScale.count();\n\n  if (ordinalExtent[1] - ordinalExtent[0] < 1) {\n    return 0;\n  }\n\n  var step = 1; // Simple optimization. Empirical value: tick count should less than 40.\n\n  if (tickCount > 40) {\n    step = Math.max(1, Math.floor(tickCount / 40));\n  }\n\n  var tickValue = ordinalExtent[0];\n  var unitSpan = axis.dataToCoord(tickValue + 1) - axis.dataToCoord(tickValue);\n  var unitW = Math.abs(unitSpan * Math.cos(rotation));\n  var unitH = Math.abs(unitSpan * Math.sin(rotation));\n  var maxW = 0;\n  var maxH = 0; // Caution: Performance sensitive for large category data.\n  // Consider dataZoom, we should make appropriate step to avoid O(n) loop.\n\n  for (; tickValue <= ordinalExtent[1]; tickValue += step) {\n    var width = 0;\n    var height = 0; // Polar is also calculated in assumptive linear layout here.\n    // Not precise, do not consider align and vertical align\n    // and each distance from axis line yet.\n\n    var rect = textContain.getBoundingRect(labelFormatter(tickValue), params.font, 'center', 'top'); // Magic number\n\n    width = rect.width * 1.3;\n    height = rect.height * 1.3; // Min size, void long loop.\n\n    maxW = Math.max(maxW, width, 7);\n    maxH = Math.max(maxH, height, 7);\n  }\n\n  var dw = maxW / unitW;\n  var dh = maxH / unitH; // 0/0 is NaN, 1/0 is Infinity.\n\n  isNaN(dw) && (dw = Infinity);\n  isNaN(dh) && (dh = Infinity);\n  var interval = Math.max(0, Math.floor(Math.min(dw, dh)));\n  var cache = inner(axis.model);\n  var lastAutoInterval = cache.lastAutoInterval;\n  var lastTickCount = cache.lastTickCount; // Use cache to keep interval stable while moving zoom window,\n  // otherwise the calculated interval might jitter when the zoom\n  // window size is close to the interval-changing size.\n\n  if (lastAutoInterval != null && lastTickCount != null && Math.abs(lastAutoInterval - interval) <= 1 && Math.abs(lastTickCount - tickCount) <= 1 // Always choose the bigger one, otherwise the critical\n  // point is not the same when zooming in or zooming out.\n  && lastAutoInterval > interval) {\n    interval = lastAutoInterval;\n  } // Only update cache if cache not used, otherwise the\n  // changing of interval is too insensitive.\n  else {\n      cache.lastTickCount = tickCount;\n      cache.lastAutoInterval = interval;\n    }\n\n  return interval;\n}\n\nfunction fetchAutoCategoryIntervalCalculationParams(axis) {\n  var labelModel = axis.getLabelModel();\n  return {\n    axisRotate: axis.getRotate ? axis.getRotate() : axis.isHorizontal && !axis.isHorizontal() ? 90 : 0,\n    labelRotate: labelModel.get('rotate') || 0,\n    font: labelModel.getFont()\n  };\n}\n\nfunction makeLabelsByNumericCategoryInterval(axis, categoryInterval, onlyTick) {\n  var labelFormatter = makeLabelFormatter(axis);\n  var ordinalScale = axis.scale;\n  var ordinalExtent = ordinalScale.getExtent();\n  var labelModel = axis.getLabelModel();\n  var result = []; // TODO: axisType: ordinalTime, pick the tick from each month/day/year/...\n\n  var step = Math.max((categoryInterval || 0) + 1, 1);\n  var startTick = ordinalExtent[0];\n  var tickCount = ordinalScale.count(); // Calculate start tick based on zero if possible to keep label consistent\n  // while zooming and moving while interval > 0. Otherwise the selection\n  // of displayable ticks and symbols probably keep changing.\n  // 3 is empirical value.\n\n  if (startTick !== 0 && step > 1 && tickCount / step > 2) {\n    startTick = Math.round(Math.ceil(startTick / step) * step);\n  } // (1) Only add min max label here but leave overlap checking\n  // to render stage, which also ensure the returned list\n  // suitable for splitLine and splitArea rendering.\n  // (2) Scales except category always contain min max label so\n  // do not need to perform this process.\n\n\n  var showMinMax = {\n    min: labelModel.get('showMinLabel'),\n    max: labelModel.get('showMaxLabel')\n  };\n\n  if (showMinMax.min && startTick !== ordinalExtent[0]) {\n    addItem(ordinalExtent[0]);\n  } // Optimize: avoid generating large array by `ordinalScale.getTicks()`.\n\n\n  var tickValue = startTick;\n\n  for (; tickValue <= ordinalExtent[1]; tickValue += step) {\n    addItem(tickValue);\n  }\n\n  if (showMinMax.max && tickValue !== ordinalExtent[1]) {\n    addItem(ordinalExtent[1]);\n  }\n\n  function addItem(tVal) {\n    result.push(onlyTick ? tVal : {\n      formattedLabel: labelFormatter(tVal),\n      rawLabel: ordinalScale.getLabel(tVal),\n      tickValue: tVal\n    });\n  }\n\n  return result;\n} // When interval is function, the result `false` means ignore the tick.\n// It is time consuming for large category data.\n\n\nfunction makeLabelsByCustomizedCategoryInterval(axis, categoryInterval, onlyTick) {\n  var ordinalScale = axis.scale;\n  var labelFormatter = makeLabelFormatter(axis);\n  var result = [];\n  zrUtil.each(ordinalScale.getTicks(), function (tickValue) {\n    var rawLabel = ordinalScale.getLabel(tickValue);\n\n    if (categoryInterval(tickValue, rawLabel)) {\n      result.push(onlyTick ? tickValue : {\n        formattedLabel: labelFormatter(tickValue),\n        rawLabel: rawLabel,\n        tickValue: tickValue\n      });\n    }\n  });\n  return result;\n} // Can be null|'auto'|number|function\n\n\nfunction getOptionCategoryInterval(model) {\n  var interval = model.get('interval');\n  return interval == null ? 'auto' : interval;\n}\n\nexports.createAxisLabels = createAxisLabels;\nexports.createAxisTicks = createAxisTicks;\nexports.calculateCategoryInterval = calculateCategoryInterval;","var Clip = require(\"./Clip\");\n\nvar color = require(\"../tool/color\");\n\nvar _util = require(\"../core/util\");\n\nvar isArrayLike = _util.isArrayLike;\n\n/**\n * @module echarts/animation/Animator\n */\nvar arraySlice = Array.prototype.slice;\n\nfunction defaultGetter(target, key) {\n  return target[key];\n}\n\nfunction defaultSetter(target, key, value) {\n  target[key] = value;\n}\n/**\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} percent\n * @return {number}\n */\n\n\nfunction interpolateNumber(p0, p1, percent) {\n  return (p1 - p0) * percent + p0;\n}\n/**\n * @param  {string} p0\n * @param  {string} p1\n * @param  {number} percent\n * @return {string}\n */\n\n\nfunction interpolateString(p0, p1, percent) {\n  return percent > 0.5 ? p1 : p0;\n}\n/**\n * @param  {Array} p0\n * @param  {Array} p1\n * @param  {number} percent\n * @param  {Array} out\n * @param  {number} arrDim\n */\n\n\nfunction interpolateArray(p0, p1, percent, out, arrDim) {\n  var len = p0.length;\n\n  if (arrDim == 1) {\n    for (var i = 0; i < len; i++) {\n      out[i] = interpolateNumber(p0[i], p1[i], percent);\n    }\n  } else {\n    var len2 = len && p0[0].length;\n\n    for (var i = 0; i < len; i++) {\n      for (var j = 0; j < len2; j++) {\n        out[i][j] = interpolateNumber(p0[i][j], p1[i][j], percent);\n      }\n    }\n  }\n} // arr0 is source array, arr1 is target array.\n// Do some preprocess to avoid error happened when interpolating from arr0 to arr1\n\n\nfunction fillArr(arr0, arr1, arrDim) {\n  var arr0Len = arr0.length;\n  var arr1Len = arr1.length;\n\n  if (arr0Len !== arr1Len) {\n    // FIXME Not work for TypedArray\n    var isPreviousLarger = arr0Len > arr1Len;\n\n    if (isPreviousLarger) {\n      // Cut the previous\n      arr0.length = arr1Len;\n    } else {\n      // Fill the previous\n      for (var i = arr0Len; i < arr1Len; i++) {\n        arr0.push(arrDim === 1 ? arr1[i] : arraySlice.call(arr1[i]));\n      }\n    }\n  } // Handling NaN value\n\n\n  var len2 = arr0[0] && arr0[0].length;\n\n  for (var i = 0; i < arr0.length; i++) {\n    if (arrDim === 1) {\n      if (isNaN(arr0[i])) {\n        arr0[i] = arr1[i];\n      }\n    } else {\n      for (var j = 0; j < len2; j++) {\n        if (isNaN(arr0[i][j])) {\n          arr0[i][j] = arr1[i][j];\n        }\n      }\n    }\n  }\n}\n/**\n * @param  {Array} arr0\n * @param  {Array} arr1\n * @param  {number} arrDim\n * @return {boolean}\n */\n\n\nfunction isArraySame(arr0, arr1, arrDim) {\n  if (arr0 === arr1) {\n    return true;\n  }\n\n  var len = arr0.length;\n\n  if (len !== arr1.length) {\n    return false;\n  }\n\n  if (arrDim === 1) {\n    for (var i = 0; i < len; i++) {\n      if (arr0[i] !== arr1[i]) {\n        return false;\n      }\n    }\n  } else {\n    var len2 = arr0[0].length;\n\n    for (var i = 0; i < len; i++) {\n      for (var j = 0; j < len2; j++) {\n        if (arr0[i][j] !== arr1[i][j]) {\n          return false;\n        }\n      }\n    }\n  }\n\n  return true;\n}\n/**\n * Catmull Rom interpolate array\n * @param  {Array} p0\n * @param  {Array} p1\n * @param  {Array} p2\n * @param  {Array} p3\n * @param  {number} t\n * @param  {number} t2\n * @param  {number} t3\n * @param  {Array} out\n * @param  {number} arrDim\n */\n\n\nfunction catmullRomInterpolateArray(p0, p1, p2, p3, t, t2, t3, out, arrDim) {\n  var len = p0.length;\n\n  if (arrDim == 1) {\n    for (var i = 0; i < len; i++) {\n      out[i] = catmullRomInterpolate(p0[i], p1[i], p2[i], p3[i], t, t2, t3);\n    }\n  } else {\n    var len2 = p0[0].length;\n\n    for (var i = 0; i < len; i++) {\n      for (var j = 0; j < len2; j++) {\n        out[i][j] = catmullRomInterpolate(p0[i][j], p1[i][j], p2[i][j], p3[i][j], t, t2, t3);\n      }\n    }\n  }\n}\n/**\n * Catmull Rom interpolate number\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @param  {number} t2\n * @param  {number} t3\n * @return {number}\n */\n\n\nfunction catmullRomInterpolate(p0, p1, p2, p3, t, t2, t3) {\n  var v0 = (p2 - p0) * 0.5;\n  var v1 = (p3 - p1) * 0.5;\n  return (2 * (p1 - p2) + v0 + v1) * t3 + (-3 * (p1 - p2) - 2 * v0 - v1) * t2 + v0 * t + p1;\n}\n\nfunction cloneValue(value) {\n  if (isArrayLike(value)) {\n    var len = value.length;\n\n    if (isArrayLike(value[0])) {\n      var ret = [];\n\n      for (var i = 0; i < len; i++) {\n        ret.push(arraySlice.call(value[i]));\n      }\n\n      return ret;\n    }\n\n    return arraySlice.call(value);\n  }\n\n  return value;\n}\n\nfunction rgba2String(rgba) {\n  rgba[0] = Math.floor(rgba[0]);\n  rgba[1] = Math.floor(rgba[1]);\n  rgba[2] = Math.floor(rgba[2]);\n  return 'rgba(' + rgba.join(',') + ')';\n}\n\nfunction getArrayDim(keyframes) {\n  var lastValue = keyframes[keyframes.length - 1].value;\n  return isArrayLike(lastValue && lastValue[0]) ? 2 : 1;\n}\n\nfunction createTrackClip(animator, easing, oneTrackDone, keyframes, propName, forceAnimate) {\n  var getter = animator._getter;\n  var setter = animator._setter;\n  var useSpline = easing === 'spline';\n  var trackLen = keyframes.length;\n\n  if (!trackLen) {\n    return;\n  } // Guess data type\n\n\n  var firstVal = keyframes[0].value;\n  var isValueArray = isArrayLike(firstVal);\n  var isValueColor = false;\n  var isValueString = false; // For vertices morphing\n\n  var arrDim = isValueArray ? getArrayDim(keyframes) : 0;\n  var trackMaxTime; // Sort keyframe as ascending\n\n  keyframes.sort(function (a, b) {\n    return a.time - b.time;\n  });\n  trackMaxTime = keyframes[trackLen - 1].time; // Percents of each keyframe\n\n  var kfPercents = []; // Value of each keyframe\n\n  var kfValues = [];\n  var prevValue = keyframes[0].value;\n  var isAllValueEqual = true;\n\n  for (var i = 0; i < trackLen; i++) {\n    kfPercents.push(keyframes[i].time / trackMaxTime); // Assume value is a color when it is a string\n\n    var value = keyframes[i].value; // Check if value is equal, deep check if value is array\n\n    if (!(isValueArray && isArraySame(value, prevValue, arrDim) || !isValueArray && value === prevValue)) {\n      isAllValueEqual = false;\n    }\n\n    prevValue = value; // Try converting a string to a color array\n\n    if (typeof value == 'string') {\n      var colorArray = color.parse(value);\n\n      if (colorArray) {\n        value = colorArray;\n        isValueColor = true;\n      } else {\n        isValueString = true;\n      }\n    }\n\n    kfValues.push(value);\n  }\n\n  if (!forceAnimate && isAllValueEqual) {\n    return;\n  }\n\n  var lastValue = kfValues[trackLen - 1]; // Polyfill array and NaN value\n\n  for (var i = 0; i < trackLen - 1; i++) {\n    if (isValueArray) {\n      fillArr(kfValues[i], lastValue, arrDim);\n    } else {\n      if (isNaN(kfValues[i]) && !isNaN(lastValue) && !isValueString && !isValueColor) {\n        kfValues[i] = lastValue;\n      }\n    }\n  }\n\n  isValueArray && fillArr(getter(animator._target, propName), lastValue, arrDim); // Cache the key of last frame to speed up when\n  // animation playback is sequency\n\n  var lastFrame = 0;\n  var lastFramePercent = 0;\n  var start;\n  var w;\n  var p0;\n  var p1;\n  var p2;\n  var p3;\n\n  if (isValueColor) {\n    var rgba = [0, 0, 0, 0];\n  }\n\n  var onframe = function (target, percent) {\n    // Find the range keyframes\n    // kf1-----kf2---------current--------kf3\n    // find kf2 and kf3 and do interpolation\n    var frame; // In the easing function like elasticOut, percent may less than 0\n\n    if (percent < 0) {\n      frame = 0;\n    } else if (percent < lastFramePercent) {\n      // Start from next key\n      // PENDING start from lastFrame ?\n      start = Math.min(lastFrame + 1, trackLen - 1);\n\n      for (frame = start; frame >= 0; frame--) {\n        if (kfPercents[frame] <= percent) {\n          break;\n        }\n      } // PENDING really need to do this ?\n\n\n      frame = Math.min(frame, trackLen - 2);\n    } else {\n      for (frame = lastFrame; frame < trackLen; frame++) {\n        if (kfPercents[frame] > percent) {\n          break;\n        }\n      }\n\n      frame = Math.min(frame - 1, trackLen - 2);\n    }\n\n    lastFrame = frame;\n    lastFramePercent = percent;\n    var range = kfPercents[frame + 1] - kfPercents[frame];\n\n    if (range === 0) {\n      return;\n    } else {\n      w = (percent - kfPercents[frame]) / range;\n    }\n\n    if (useSpline) {\n      p1 = kfValues[frame];\n      p0 = kfValues[frame === 0 ? frame : frame - 1];\n      p2 = kfValues[frame > trackLen - 2 ? trackLen - 1 : frame + 1];\n      p3 = kfValues[frame > trackLen - 3 ? trackLen - 1 : frame + 2];\n\n      if (isValueArray) {\n        catmullRomInterpolateArray(p0, p1, p2, p3, w, w * w, w * w * w, getter(target, propName), arrDim);\n      } else {\n        var value;\n\n        if (isValueColor) {\n          value = catmullRomInterpolateArray(p0, p1, p2, p3, w, w * w, w * w * w, rgba, 1);\n          value = rgba2String(rgba);\n        } else if (isValueString) {\n          // String is step(0.5)\n          return interpolateString(p1, p2, w);\n        } else {\n          value = catmullRomInterpolate(p0, p1, p2, p3, w, w * w, w * w * w);\n        }\n\n        setter(target, propName, value);\n      }\n    } else {\n      if (isValueArray) {\n        interpolateArray(kfValues[frame], kfValues[frame + 1], w, getter(target, propName), arrDim);\n      } else {\n        var value;\n\n        if (isValueColor) {\n          interpolateArray(kfValues[frame], kfValues[frame + 1], w, rgba, 1);\n          value = rgba2String(rgba);\n        } else if (isValueString) {\n          // String is step(0.5)\n          return interpolateString(kfValues[frame], kfValues[frame + 1], w);\n        } else {\n          value = interpolateNumber(kfValues[frame], kfValues[frame + 1], w);\n        }\n\n        setter(target, propName, value);\n      }\n    }\n  };\n\n  var clip = new Clip({\n    target: animator._target,\n    life: trackMaxTime,\n    loop: animator._loop,\n    delay: animator._delay,\n    onframe: onframe,\n    ondestroy: oneTrackDone\n  });\n\n  if (easing && easing !== 'spline') {\n    clip.easing = easing;\n  }\n\n  return clip;\n}\n/**\n * @alias module:zrender/animation/Animator\n * @constructor\n * @param {Object} target\n * @param {boolean} loop\n * @param {Function} getter\n * @param {Function} setter\n */\n\n\nvar Animator = function (target, loop, getter, setter) {\n  this._tracks = {};\n  this._target = target;\n  this._loop = loop || false;\n  this._getter = getter || defaultGetter;\n  this._setter = setter || defaultSetter;\n  this._clipCount = 0;\n  this._delay = 0;\n  this._doneList = [];\n  this._onframeList = [];\n  this._clipList = [];\n};\n\nAnimator.prototype = {\n  /**\n   * 设置动画关键帧\n   * @param  {number} time 关键帧时间，单位是ms\n   * @param  {Object} props 关键帧的属性值，key-value表示\n   * @return {module:zrender/animation/Animator}\n   */\n  when: function (time\n  /* ms */\n  , props) {\n    var tracks = this._tracks;\n\n    for (var propName in props) {\n      if (!props.hasOwnProperty(propName)) {\n        continue;\n      }\n\n      if (!tracks[propName]) {\n        tracks[propName] = []; // Invalid value\n\n        var value = this._getter(this._target, propName);\n\n        if (value == null) {\n          // zrLog('Invalid property ' + propName);\n          continue;\n        } // If time is 0\n        //  Then props is given initialize value\n        // Else\n        //  Initialize value from current prop value\n\n\n        if (time !== 0) {\n          tracks[propName].push({\n            time: 0,\n            value: cloneValue(value)\n          });\n        }\n      }\n\n      tracks[propName].push({\n        time: time,\n        value: props[propName]\n      });\n    }\n\n    return this;\n  },\n\n  /**\n   * 添加动画每一帧的回调函数\n   * @param  {Function} callback\n   * @return {module:zrender/animation/Animator}\n   */\n  during: function (callback) {\n    this._onframeList.push(callback);\n\n    return this;\n  },\n  pause: function () {\n    for (var i = 0; i < this._clipList.length; i++) {\n      this._clipList[i].pause();\n    }\n\n    this._paused = true;\n  },\n  resume: function () {\n    for (var i = 0; i < this._clipList.length; i++) {\n      this._clipList[i].resume();\n    }\n\n    this._paused = false;\n  },\n  isPaused: function () {\n    return !!this._paused;\n  },\n  _doneCallback: function () {\n    // Clear all tracks\n    this._tracks = {}; // Clear all clips\n\n    this._clipList.length = 0;\n    var doneList = this._doneList;\n    var len = doneList.length;\n\n    for (var i = 0; i < len; i++) {\n      doneList[i].call(this);\n    }\n  },\n\n  /**\n   * 开始执行动画\n   * @param  {string|Function} [easing]\n   *         动画缓动函数，详见{@link module:zrender/animation/easing}\n   * @param  {boolean} forceAnimate\n   * @return {module:zrender/animation/Animator}\n   */\n  start: function (easing, forceAnimate) {\n    var self = this;\n    var clipCount = 0;\n\n    var oneTrackDone = function () {\n      clipCount--;\n\n      if (!clipCount) {\n        self._doneCallback();\n      }\n    };\n\n    var lastClip;\n\n    for (var propName in this._tracks) {\n      if (!this._tracks.hasOwnProperty(propName)) {\n        continue;\n      }\n\n      var clip = createTrackClip(this, easing, oneTrackDone, this._tracks[propName], propName, forceAnimate);\n\n      if (clip) {\n        this._clipList.push(clip);\n\n        clipCount++; // If start after added to animation\n\n        if (this.animation) {\n          this.animation.addClip(clip);\n        }\n\n        lastClip = clip;\n      }\n    } // Add during callback on the last clip\n\n\n    if (lastClip) {\n      var oldOnFrame = lastClip.onframe;\n\n      lastClip.onframe = function (target, percent) {\n        oldOnFrame(target, percent);\n\n        for (var i = 0; i < self._onframeList.length; i++) {\n          self._onframeList[i](target, percent);\n        }\n      };\n    } // This optimization will help the case that in the upper application\n    // the view may be refreshed frequently, where animation will be\n    // called repeatly but nothing changed.\n\n\n    if (!clipCount) {\n      this._doneCallback();\n    }\n\n    return this;\n  },\n\n  /**\n   * 停止动画\n   * @param {boolean} forwardToLast If move to last frame before stop\n   */\n  stop: function (forwardToLast) {\n    var clipList = this._clipList;\n    var animation = this.animation;\n\n    for (var i = 0; i < clipList.length; i++) {\n      var clip = clipList[i];\n\n      if (forwardToLast) {\n        // Move to last frame before stop\n        clip.onframe(this._target, 1);\n      }\n\n      animation && animation.removeClip(clip);\n    }\n\n    clipList.length = 0;\n  },\n\n  /**\n   * 设置动画延迟开始的时间\n   * @param  {number} time 单位ms\n   * @return {module:zrender/animation/Animator}\n   */\n  delay: function (time) {\n    this._delay = time;\n    return this;\n  },\n\n  /**\n   * 添加动画结束的回调\n   * @param  {Function} cb\n   * @return {module:zrender/animation/Animator}\n   */\n  done: function (cb) {\n    if (cb) {\n      this._doneList.push(cb);\n    }\n\n    return this;\n  },\n\n  /**\n   * @return {Array.<module:zrender/animation/Clip>}\n   */\n  getClips: function () {\n    return this._clipList;\n  }\n};\nvar _default = Animator;\nmodule.exports = _default;","var makeStyleMapper = require(\"./makeStyleMapper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar getAreaStyle = makeStyleMapper([['fill', 'color'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['opacity'], ['shadowColor']]);\nvar _default = {\n  getAreaStyle: function (excludes, includes) {\n    return getAreaStyle(this, excludes, includes);\n  }\n};\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar _number = require(\"./number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar formatUtil = require(\"./format\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Layout helpers for each component positioning\nvar each = zrUtil.each;\n/**\n * @public\n */\n\nvar LOCATION_PARAMS = ['left', 'right', 'top', 'bottom', 'width', 'height'];\n/**\n * @public\n */\n\nvar HV_NAMES = [['width', 'left', 'right'], ['height', 'top', 'bottom']];\n\nfunction boxLayout(orient, group, gap, maxWidth, maxHeight) {\n  var x = 0;\n  var y = 0;\n\n  if (maxWidth == null) {\n    maxWidth = Infinity;\n  }\n\n  if (maxHeight == null) {\n    maxHeight = Infinity;\n  }\n\n  var currentLineMaxSize = 0;\n  group.eachChild(function (child, idx) {\n    var position = child.position;\n    var rect = child.getBoundingRect();\n    var nextChild = group.childAt(idx + 1);\n    var nextChildRect = nextChild && nextChild.getBoundingRect();\n    var nextX;\n    var nextY;\n\n    if (orient === 'horizontal') {\n      var moveX = rect.width + (nextChildRect ? -nextChildRect.x + rect.x : 0);\n      nextX = x + moveX; // Wrap when width exceeds maxWidth or meet a `newline` group\n      // FIXME compare before adding gap?\n\n      if (nextX > maxWidth || child.newline) {\n        x = 0;\n        nextX = moveX;\n        y += currentLineMaxSize + gap;\n        currentLineMaxSize = rect.height;\n      } else {\n        // FIXME: consider rect.y is not `0`?\n        currentLineMaxSize = Math.max(currentLineMaxSize, rect.height);\n      }\n    } else {\n      var moveY = rect.height + (nextChildRect ? -nextChildRect.y + rect.y : 0);\n      nextY = y + moveY; // Wrap when width exceeds maxHeight or meet a `newline` group\n\n      if (nextY > maxHeight || child.newline) {\n        x += currentLineMaxSize + gap;\n        y = 0;\n        nextY = moveY;\n        currentLineMaxSize = rect.width;\n      } else {\n        currentLineMaxSize = Math.max(currentLineMaxSize, rect.width);\n      }\n    }\n\n    if (child.newline) {\n      return;\n    }\n\n    position[0] = x;\n    position[1] = y;\n    orient === 'horizontal' ? x = nextX + gap : y = nextY + gap;\n  });\n}\n/**\n * VBox or HBox layouting\n * @param {string} orient\n * @param {module:zrender/container/Group} group\n * @param {number} gap\n * @param {number} [width=Infinity]\n * @param {number} [height=Infinity]\n */\n\n\nvar box = boxLayout;\n/**\n * VBox layouting\n * @param {module:zrender/container/Group} group\n * @param {number} gap\n * @param {number} [width=Infinity]\n * @param {number} [height=Infinity]\n */\n\nvar vbox = zrUtil.curry(boxLayout, 'vertical');\n/**\n * HBox layouting\n * @param {module:zrender/container/Group} group\n * @param {number} gap\n * @param {number} [width=Infinity]\n * @param {number} [height=Infinity]\n */\n\nvar hbox = zrUtil.curry(boxLayout, 'horizontal');\n/**\n * If x or x2 is not specified or 'center' 'left' 'right',\n * the width would be as long as possible.\n * If y or y2 is not specified or 'middle' 'top' 'bottom',\n * the height would be as long as possible.\n *\n * @param {Object} positionInfo\n * @param {number|string} [positionInfo.x]\n * @param {number|string} [positionInfo.y]\n * @param {number|string} [positionInfo.x2]\n * @param {number|string} [positionInfo.y2]\n * @param {Object} containerRect {width, height}\n * @param {string|number} margin\n * @return {Object} {width, height}\n */\n\nfunction getAvailableSize(positionInfo, containerRect, margin) {\n  var containerWidth = containerRect.width;\n  var containerHeight = containerRect.height;\n  var x = parsePercent(positionInfo.x, containerWidth);\n  var y = parsePercent(positionInfo.y, containerHeight);\n  var x2 = parsePercent(positionInfo.x2, containerWidth);\n  var y2 = parsePercent(positionInfo.y2, containerHeight);\n  (isNaN(x) || isNaN(parseFloat(positionInfo.x))) && (x = 0);\n  (isNaN(x2) || isNaN(parseFloat(positionInfo.x2))) && (x2 = containerWidth);\n  (isNaN(y) || isNaN(parseFloat(positionInfo.y))) && (y = 0);\n  (isNaN(y2) || isNaN(parseFloat(positionInfo.y2))) && (y2 = containerHeight);\n  margin = formatUtil.normalizeCssArray(margin || 0);\n  return {\n    width: Math.max(x2 - x - margin[1] - margin[3], 0),\n    height: Math.max(y2 - y - margin[0] - margin[2], 0)\n  };\n}\n/**\n * Parse position info.\n *\n * @param {Object} positionInfo\n * @param {number|string} [positionInfo.left]\n * @param {number|string} [positionInfo.top]\n * @param {number|string} [positionInfo.right]\n * @param {number|string} [positionInfo.bottom]\n * @param {number|string} [positionInfo.width]\n * @param {number|string} [positionInfo.height]\n * @param {number|string} [positionInfo.aspect] Aspect is width / height\n * @param {Object} containerRect\n * @param {string|number} [margin]\n *\n * @return {module:zrender/core/BoundingRect}\n */\n\n\nfunction getLayoutRect(positionInfo, containerRect, margin) {\n  margin = formatUtil.normalizeCssArray(margin || 0);\n  var containerWidth = containerRect.width;\n  var containerHeight = containerRect.height;\n  var left = parsePercent(positionInfo.left, containerWidth);\n  var top = parsePercent(positionInfo.top, containerHeight);\n  var right = parsePercent(positionInfo.right, containerWidth);\n  var bottom = parsePercent(positionInfo.bottom, containerHeight);\n  var width = parsePercent(positionInfo.width, containerWidth);\n  var height = parsePercent(positionInfo.height, containerHeight);\n  var verticalMargin = margin[2] + margin[0];\n  var horizontalMargin = margin[1] + margin[3];\n  var aspect = positionInfo.aspect; // If width is not specified, calculate width from left and right\n\n  if (isNaN(width)) {\n    width = containerWidth - right - horizontalMargin - left;\n  }\n\n  if (isNaN(height)) {\n    height = containerHeight - bottom - verticalMargin - top;\n  }\n\n  if (aspect != null) {\n    // If width and height are not given\n    // 1. Graph should not exceeds the container\n    // 2. Aspect must be keeped\n    // 3. Graph should take the space as more as possible\n    // FIXME\n    // Margin is not considered, because there is no case that both\n    // using margin and aspect so far.\n    if (isNaN(width) && isNaN(height)) {\n      if (aspect > containerWidth / containerHeight) {\n        width = containerWidth * 0.8;\n      } else {\n        height = containerHeight * 0.8;\n      }\n    } // Calculate width or height with given aspect\n\n\n    if (isNaN(width)) {\n      width = aspect * height;\n    }\n\n    if (isNaN(height)) {\n      height = width / aspect;\n    }\n  } // If left is not specified, calculate left from right and width\n\n\n  if (isNaN(left)) {\n    left = containerWidth - right - width - horizontalMargin;\n  }\n\n  if (isNaN(top)) {\n    top = containerHeight - bottom - height - verticalMargin;\n  } // Align left and top\n\n\n  switch (positionInfo.left || positionInfo.right) {\n    case 'center':\n      left = containerWidth / 2 - width / 2 - margin[3];\n      break;\n\n    case 'right':\n      left = containerWidth - width - horizontalMargin;\n      break;\n  }\n\n  switch (positionInfo.top || positionInfo.bottom) {\n    case 'middle':\n    case 'center':\n      top = containerHeight / 2 - height / 2 - margin[0];\n      break;\n\n    case 'bottom':\n      top = containerHeight - height - verticalMargin;\n      break;\n  } // If something is wrong and left, top, width, height are calculated as NaN\n\n\n  left = left || 0;\n  top = top || 0;\n\n  if (isNaN(width)) {\n    // Width may be NaN if only one value is given except width\n    width = containerWidth - horizontalMargin - left - (right || 0);\n  }\n\n  if (isNaN(height)) {\n    // Height may be NaN if only one value is given except height\n    height = containerHeight - verticalMargin - top - (bottom || 0);\n  }\n\n  var rect = new BoundingRect(left + margin[3], top + margin[0], width, height);\n  rect.margin = margin;\n  return rect;\n}\n/**\n * Position a zr element in viewport\n *  Group position is specified by either\n *  {left, top}, {right, bottom}\n *  If all properties exists, right and bottom will be igonred.\n *\n * Logic:\n *     1. Scale (against origin point in parent coord)\n *     2. Rotate (against origin point in parent coord)\n *     3. Traslate (with el.position by this method)\n * So this method only fixes the last step 'Traslate', which does not affect\n * scaling and rotating.\n *\n * If be called repeatly with the same input el, the same result will be gotten.\n *\n * @param {module:zrender/Element} el Should have `getBoundingRect` method.\n * @param {Object} positionInfo\n * @param {number|string} [positionInfo.left]\n * @param {number|string} [positionInfo.top]\n * @param {number|string} [positionInfo.right]\n * @param {number|string} [positionInfo.bottom]\n * @param {number|string} [positionInfo.width] Only for opt.boundingModel: 'raw'\n * @param {number|string} [positionInfo.height] Only for opt.boundingModel: 'raw'\n * @param {Object} containerRect\n * @param {string|number} margin\n * @param {Object} [opt]\n * @param {Array.<number>} [opt.hv=[1,1]] Only horizontal or only vertical.\n * @param {Array.<number>} [opt.boundingMode='all']\n *        Specify how to calculate boundingRect when locating.\n *        'all': Position the boundingRect that is transformed and uioned\n *               both itself and its descendants.\n *               This mode simplies confine the elements in the bounding\n *               of their container (e.g., using 'right: 0').\n *        'raw': Position the boundingRect that is not transformed and only itself.\n *               This mode is useful when you want a element can overflow its\n *               container. (Consider a rotated circle needs to be located in a corner.)\n *               In this mode positionInfo.width/height can only be number.\n */\n\n\nfunction positionElement(el, positionInfo, containerRect, margin, opt) {\n  var h = !opt || !opt.hv || opt.hv[0];\n  var v = !opt || !opt.hv || opt.hv[1];\n  var boundingMode = opt && opt.boundingMode || 'all';\n\n  if (!h && !v) {\n    return;\n  }\n\n  var rect;\n\n  if (boundingMode === 'raw') {\n    rect = el.type === 'group' ? new BoundingRect(0, 0, +positionInfo.width || 0, +positionInfo.height || 0) : el.getBoundingRect();\n  } else {\n    rect = el.getBoundingRect();\n\n    if (el.needLocalTransform()) {\n      var transform = el.getLocalTransform(); // Notice: raw rect may be inner object of el,\n      // which should not be modified.\n\n      rect = rect.clone();\n      rect.applyTransform(transform);\n    }\n  } // The real width and height can not be specified but calculated by the given el.\n\n\n  positionInfo = getLayoutRect(zrUtil.defaults({\n    width: rect.width,\n    height: rect.height\n  }, positionInfo), containerRect, margin); // Because 'tranlate' is the last step in transform\n  // (see zrender/core/Transformable#getLocalTransform),\n  // we can just only modify el.position to get final result.\n\n  var elPos = el.position;\n  var dx = h ? positionInfo.x - rect.x : 0;\n  var dy = v ? positionInfo.y - rect.y : 0;\n  el.attr('position', boundingMode === 'raw' ? [dx, dy] : [elPos[0] + dx, elPos[1] + dy]);\n}\n/**\n * @param {Object} option Contains some of the properties in HV_NAMES.\n * @param {number} hvIdx 0: horizontal; 1: vertical.\n */\n\n\nfunction sizeCalculable(option, hvIdx) {\n  return option[HV_NAMES[hvIdx][0]] != null || option[HV_NAMES[hvIdx][1]] != null && option[HV_NAMES[hvIdx][2]] != null;\n}\n/**\n * Consider Case:\n * When defulat option has {left: 0, width: 100}, and we set {right: 0}\n * through setOption or media query, using normal zrUtil.merge will cause\n * {right: 0} does not take effect.\n *\n * @example\n * ComponentModel.extend({\n *     init: function () {\n *         ...\n *         var inputPositionParams = layout.getLayoutParams(option);\n *         this.mergeOption(inputPositionParams);\n *     },\n *     mergeOption: function (newOption) {\n *         newOption && zrUtil.merge(thisOption, newOption, true);\n *         layout.mergeLayoutParam(thisOption, newOption);\n *     }\n * });\n *\n * @param {Object} targetOption\n * @param {Object} newOption\n * @param {Object|string} [opt]\n * @param {boolean|Array.<boolean>} [opt.ignoreSize=false] Used for the components\n *  that width (or height) should not be calculated by left and right (or top and bottom).\n */\n\n\nfunction mergeLayoutParam(targetOption, newOption, opt) {\n  !zrUtil.isObject(opt) && (opt = {});\n  var ignoreSize = opt.ignoreSize;\n  !zrUtil.isArray(ignoreSize) && (ignoreSize = [ignoreSize, ignoreSize]);\n  var hResult = merge(HV_NAMES[0], 0);\n  var vResult = merge(HV_NAMES[1], 1);\n  copy(HV_NAMES[0], targetOption, hResult);\n  copy(HV_NAMES[1], targetOption, vResult);\n\n  function merge(names, hvIdx) {\n    var newParams = {};\n    var newValueCount = 0;\n    var merged = {};\n    var mergedValueCount = 0;\n    var enoughParamNumber = 2;\n    each(names, function (name) {\n      merged[name] = targetOption[name];\n    });\n    each(names, function (name) {\n      // Consider case: newOption.width is null, which is\n      // set by user for removing width setting.\n      hasProp(newOption, name) && (newParams[name] = merged[name] = newOption[name]);\n      hasValue(newParams, name) && newValueCount++;\n      hasValue(merged, name) && mergedValueCount++;\n    });\n\n    if (ignoreSize[hvIdx]) {\n      // Only one of left/right is premitted to exist.\n      if (hasValue(newOption, names[1])) {\n        merged[names[2]] = null;\n      } else if (hasValue(newOption, names[2])) {\n        merged[names[1]] = null;\n      }\n\n      return merged;\n    } // Case: newOption: {width: ..., right: ...},\n    // or targetOption: {right: ...} and newOption: {width: ...},\n    // There is no conflict when merged only has params count\n    // little than enoughParamNumber.\n\n\n    if (mergedValueCount === enoughParamNumber || !newValueCount) {\n      return merged;\n    } // Case: newOption: {width: ..., right: ...},\n    // Than we can make sure user only want those two, and ignore\n    // all origin params in targetOption.\n    else if (newValueCount >= enoughParamNumber) {\n        return newParams;\n      } else {\n        // Chose another param from targetOption by priority.\n        for (var i = 0; i < names.length; i++) {\n          var name = names[i];\n\n          if (!hasProp(newParams, name) && hasProp(targetOption, name)) {\n            newParams[name] = targetOption[name];\n            break;\n          }\n        }\n\n        return newParams;\n      }\n  }\n\n  function hasProp(obj, name) {\n    return obj.hasOwnProperty(name);\n  }\n\n  function hasValue(obj, name) {\n    return obj[name] != null && obj[name] !== 'auto';\n  }\n\n  function copy(names, target, source) {\n    each(names, function (name) {\n      target[name] = source[name];\n    });\n  }\n}\n/**\n * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n * @param {Object} source\n * @return {Object} Result contains those props.\n */\n\n\nfunction getLayoutParams(source) {\n  return copyLayoutParams({}, source);\n}\n/**\n * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n * @param {Object} source\n * @return {Object} Result contains those props.\n */\n\n\nfunction copyLayoutParams(target, source) {\n  source && target && each(LOCATION_PARAMS, function (name) {\n    source.hasOwnProperty(name) && (target[name] = source[name]);\n  });\n  return target;\n}\n\nexports.LOCATION_PARAMS = LOCATION_PARAMS;\nexports.HV_NAMES = HV_NAMES;\nexports.box = box;\nexports.vbox = vbox;\nexports.hbox = hbox;\nexports.getAvailableSize = getAvailableSize;\nexports.getLayoutRect = getLayoutRect;\nexports.positionElement = positionElement;\nexports.sizeCalculable = sizeCalculable;\nexports.mergeLayoutParam = mergeLayoutParam;\nexports.getLayoutParams = getLayoutParams;\nexports.copyLayoutParams = copyLayoutParams;","var Displayable = require(\"./Displayable\");\n\nvar BoundingRect = require(\"../core/BoundingRect\");\n\nvar zrUtil = require(\"../core/util\");\n\nvar imageHelper = require(\"./helper/image\");\n\n/**\n * @alias zrender/graphic/Image\n * @extends module:zrender/graphic/Displayable\n * @constructor\n * @param {Object} opts\n */\nfunction ZImage(opts) {\n  Displayable.call(this, opts);\n}\n\nZImage.prototype = {\n  constructor: ZImage,\n  type: 'image',\n  brush: function (ctx, prevEl) {\n    var style = this.style;\n    var src = style.image; // Must bind each time\n\n    style.bind(ctx, this, prevEl);\n    var image = this._image = imageHelper.createOrUpdateImage(src, this._image, this, this.onload);\n\n    if (!image || !imageHelper.isImageReady(image)) {\n      return;\n    } // 图片已经加载完成\n    // if (image.nodeName.toUpperCase() == 'IMG') {\n    //     if (!image.complete) {\n    //         return;\n    //     }\n    // }\n    // Else is canvas\n\n\n    var x = style.x || 0;\n    var y = style.y || 0;\n    var width = style.width;\n    var height = style.height;\n    var aspect = image.width / image.height;\n\n    if (width == null && height != null) {\n      // Keep image/height ratio\n      width = height * aspect;\n    } else if (height == null && width != null) {\n      height = width / aspect;\n    } else if (width == null && height == null) {\n      width = image.width;\n      height = image.height;\n    } // 设置transform\n\n\n    this.setTransform(ctx);\n\n    if (style.sWidth && style.sHeight) {\n      var sx = style.sx || 0;\n      var sy = style.sy || 0;\n      ctx.drawImage(image, sx, sy, style.sWidth, style.sHeight, x, y, width, height);\n    } else if (style.sx && style.sy) {\n      var sx = style.sx;\n      var sy = style.sy;\n      var sWidth = width - sx;\n      var sHeight = height - sy;\n      ctx.drawImage(image, sx, sy, sWidth, sHeight, x, y, width, height);\n    } else {\n      ctx.drawImage(image, x, y, width, height);\n    } // Draw rect text\n\n\n    if (style.text != null) {\n      // Only restore transform when needs draw text.\n      this.restoreTransform(ctx);\n      this.drawRectText(ctx, this.getBoundingRect());\n    }\n  },\n  getBoundingRect: function () {\n    var style = this.style;\n\n    if (!this._rect) {\n      this._rect = new BoundingRect(style.x || 0, style.y || 0, style.width || 0, style.height || 0);\n    }\n\n    return this._rect;\n  }\n};\nzrUtil.inherits(ZImage, Displayable);\nvar _default = ZImage;\nmodule.exports = _default;","var Path = require(\"../Path\");\n\nvar roundRectHelper = require(\"../helper/roundRect\");\n\n/**\n * 矩形\n * @module zrender/graphic/shape/Rect\n */\nvar _default = Path.extend({\n  type: 'rect',\n  shape: {\n    // 左上、右上、右下、左下角的半径依次为r1、r2、r3、r4\n    // r缩写为1         相当于 [1, 1, 1, 1]\n    // r缩写为[1]       相当于 [1, 1, 1, 1]\n    // r缩写为[1, 2]    相当于 [1, 2, 1, 2]\n    // r缩写为[1, 2, 3] 相当于 [1, 2, 3, 2]\n    r: 0,\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (ctx, shape) {\n    var x = shape.x;\n    var y = shape.y;\n    var width = shape.width;\n    var height = shape.height;\n\n    if (!shape.r) {\n      ctx.rect(x, y, width, height);\n    } else {\n      roundRectHelper.buildPath(ctx, shape);\n    }\n\n    ctx.closePath();\n    return;\n  }\n});\n\nmodule.exports = _default;","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\nvar filter = _util.filter;\nvar map = _util.map;\nvar isArray = _util.isArray;\nvar indexOf = _util.indexOf;\nvar isObject = _util.isObject;\nvar isString = _util.isString;\nvar createHashMap = _util.createHashMap;\nvar assert = _util.assert;\nvar clone = _util.clone;\nvar merge = _util.merge;\nvar extend = _util.extend;\nvar mixin = _util.mixin;\n\nvar modelUtil = require(\"../util/model\");\n\nvar Model = require(\"./Model\");\n\nvar ComponentModel = require(\"./Component\");\n\nvar globalDefault = require(\"./globalDefault\");\n\nvar colorPaletteMixin = require(\"./mixin/colorPalette\");\n\nvar _sourceHelper = require(\"../data/helper/sourceHelper\");\n\nvar resetSourceDefaulter = _sourceHelper.resetSourceDefaulter;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * ECharts global model\n *\n * @module {echarts/model/Global}\n */\n\n/**\n * Caution: If the mechanism should be changed some day, these cases\n * should be considered:\n *\n * (1) In `merge option` mode, if using the same option to call `setOption`\n * many times, the result should be the same (try our best to ensure that).\n * (2) In `merge option` mode, if a component has no id/name specified, it\n * will be merged by index, and the result sequence of the components is\n * consistent to the original sequence.\n * (3) `reset` feature (in toolbox). Find detailed info in comments about\n * `mergeOption` in module:echarts/model/OptionManager.\n */\nvar OPTION_INNER_KEY = '\\0_ec_inner';\n/**\n * @alias module:echarts/model/Global\n *\n * @param {Object} option\n * @param {module:echarts/model/Model} parentModel\n * @param {Object} theme\n */\n\nvar GlobalModel = Model.extend({\n  init: function (option, parentModel, theme, optionManager) {\n    theme = theme || {};\n    this.option = null; // Mark as not initialized.\n\n    /**\n     * @type {module:echarts/model/Model}\n     * @private\n     */\n\n    this._theme = new Model(theme);\n    /**\n     * @type {module:echarts/model/OptionManager}\n     */\n\n    this._optionManager = optionManager;\n  },\n  setOption: function (option, optionPreprocessorFuncs) {\n    assert(!(OPTION_INNER_KEY in option), 'please use chart.getOption()');\n\n    this._optionManager.setOption(option, optionPreprocessorFuncs);\n\n    this.resetOption(null);\n  },\n\n  /**\n   * @param {string} type null/undefined: reset all.\n   *                      'recreate': force recreate all.\n   *                      'timeline': only reset timeline option\n   *                      'media': only reset media query option\n   * @return {boolean} Whether option changed.\n   */\n  resetOption: function (type) {\n    var optionChanged = false;\n    var optionManager = this._optionManager;\n\n    if (!type || type === 'recreate') {\n      var baseOption = optionManager.mountOption(type === 'recreate');\n\n      if (!this.option || type === 'recreate') {\n        initBase.call(this, baseOption);\n      } else {\n        this.restoreData();\n        this.mergeOption(baseOption);\n      }\n\n      optionChanged = true;\n    }\n\n    if (type === 'timeline' || type === 'media') {\n      this.restoreData();\n    }\n\n    if (!type || type === 'recreate' || type === 'timeline') {\n      var timelineOption = optionManager.getTimelineOption(this);\n      timelineOption && (this.mergeOption(timelineOption), optionChanged = true);\n    }\n\n    if (!type || type === 'recreate' || type === 'media') {\n      var mediaOptions = optionManager.getMediaOption(this, this._api);\n\n      if (mediaOptions.length) {\n        each(mediaOptions, function (mediaOption) {\n          this.mergeOption(mediaOption, optionChanged = true);\n        }, this);\n      }\n    }\n\n    return optionChanged;\n  },\n\n  /**\n   * @protected\n   */\n  mergeOption: function (newOption) {\n    var option = this.option;\n    var componentsMap = this._componentsMap;\n    var newCptTypes = [];\n    resetSourceDefaulter(this); // If no component class, merge directly.\n    // For example: color, animaiton options, etc.\n\n    each(newOption, function (componentOption, mainType) {\n      if (componentOption == null) {\n        return;\n      }\n\n      if (!ComponentModel.hasClass(mainType)) {\n        // globalSettingTask.dirty();\n        option[mainType] = option[mainType] == null ? clone(componentOption) : merge(option[mainType], componentOption, true);\n      } else if (mainType) {\n        newCptTypes.push(mainType);\n      }\n    });\n    ComponentModel.topologicalTravel(newCptTypes, ComponentModel.getAllClassMainTypes(), visitComponent, this);\n\n    function visitComponent(mainType, dependencies) {\n      var newCptOptionList = modelUtil.normalizeToArray(newOption[mainType]);\n      var mapResult = modelUtil.mappingToExists(componentsMap.get(mainType), newCptOptionList);\n      modelUtil.makeIdAndName(mapResult); // Set mainType and complete subType.\n\n      each(mapResult, function (item, index) {\n        var opt = item.option;\n\n        if (isObject(opt)) {\n          item.keyInfo.mainType = mainType;\n          item.keyInfo.subType = determineSubType(mainType, opt, item.exist);\n        }\n      });\n      var dependentModels = getComponentsByTypes(componentsMap, dependencies);\n      option[mainType] = [];\n      componentsMap.set(mainType, []);\n      each(mapResult, function (resultItem, index) {\n        var componentModel = resultItem.exist;\n        var newCptOption = resultItem.option;\n        assert(isObject(newCptOption) || componentModel, 'Empty component definition'); // Consider where is no new option and should be merged using {},\n        // see removeEdgeAndAdd in topologicalTravel and\n        // ComponentModel.getAllClassMainTypes.\n\n        if (!newCptOption) {\n          componentModel.mergeOption({}, this);\n          componentModel.optionUpdated({}, false);\n        } else {\n          var ComponentModelClass = ComponentModel.getClass(mainType, resultItem.keyInfo.subType, true);\n\n          if (componentModel && componentModel instanceof ComponentModelClass) {\n            componentModel.name = resultItem.keyInfo.name; // componentModel.settingTask && componentModel.settingTask.dirty();\n\n            componentModel.mergeOption(newCptOption, this);\n            componentModel.optionUpdated(newCptOption, false);\n          } else {\n            // PENDING Global as parent ?\n            var extraOpt = extend({\n              dependentModels: dependentModels,\n              componentIndex: index\n            }, resultItem.keyInfo);\n            componentModel = new ComponentModelClass(newCptOption, this, this, extraOpt);\n            extend(componentModel, extraOpt);\n            componentModel.init(newCptOption, this, this, extraOpt); // Call optionUpdated after init.\n            // newCptOption has been used as componentModel.option\n            // and may be merged with theme and default, so pass null\n            // to avoid confusion.\n\n            componentModel.optionUpdated(null, true);\n          }\n        }\n\n        componentsMap.get(mainType)[index] = componentModel;\n        option[mainType][index] = componentModel.option;\n      }, this); // Backup series for filtering.\n\n      if (mainType === 'series') {\n        createSeriesIndices(this, componentsMap.get('series'));\n      }\n    }\n\n    this._seriesIndicesMap = createHashMap(this._seriesIndices = this._seriesIndices || []);\n  },\n\n  /**\n   * Get option for output (cloned option and inner info removed)\n   * @public\n   * @return {Object}\n   */\n  getOption: function () {\n    var option = clone(this.option);\n    each(option, function (opts, mainType) {\n      if (ComponentModel.hasClass(mainType)) {\n        var opts = modelUtil.normalizeToArray(opts);\n\n        for (var i = opts.length - 1; i >= 0; i--) {\n          // Remove options with inner id.\n          if (modelUtil.isIdInner(opts[i])) {\n            opts.splice(i, 1);\n          }\n        }\n\n        option[mainType] = opts;\n      }\n    });\n    delete option[OPTION_INNER_KEY];\n    return option;\n  },\n\n  /**\n   * @return {module:echarts/model/Model}\n   */\n  getTheme: function () {\n    return this._theme;\n  },\n\n  /**\n   * @param {string} mainType\n   * @param {number} [idx=0]\n   * @return {module:echarts/model/Component}\n   */\n  getComponent: function (mainType, idx) {\n    var list = this._componentsMap.get(mainType);\n\n    if (list) {\n      return list[idx || 0];\n    }\n  },\n\n  /**\n   * If none of index and id and name used, return all components with mainType.\n   * @param {Object} condition\n   * @param {string} condition.mainType\n   * @param {string} [condition.subType] If ignore, only query by mainType\n   * @param {number|Array.<number>} [condition.index] Either input index or id or name.\n   * @param {string|Array.<string>} [condition.id] Either input index or id or name.\n   * @param {string|Array.<string>} [condition.name] Either input index or id or name.\n   * @return {Array.<module:echarts/model/Component>}\n   */\n  queryComponents: function (condition) {\n    var mainType = condition.mainType;\n\n    if (!mainType) {\n      return [];\n    }\n\n    var index = condition.index;\n    var id = condition.id;\n    var name = condition.name;\n\n    var cpts = this._componentsMap.get(mainType);\n\n    if (!cpts || !cpts.length) {\n      return [];\n    }\n\n    var result;\n\n    if (index != null) {\n      if (!isArray(index)) {\n        index = [index];\n      }\n\n      result = filter(map(index, function (idx) {\n        return cpts[idx];\n      }), function (val) {\n        return !!val;\n      });\n    } else if (id != null) {\n      var isIdArray = isArray(id);\n      result = filter(cpts, function (cpt) {\n        return isIdArray && indexOf(id, cpt.id) >= 0 || !isIdArray && cpt.id === id;\n      });\n    } else if (name != null) {\n      var isNameArray = isArray(name);\n      result = filter(cpts, function (cpt) {\n        return isNameArray && indexOf(name, cpt.name) >= 0 || !isNameArray && cpt.name === name;\n      });\n    } else {\n      // Return all components with mainType\n      result = cpts.slice();\n    }\n\n    return filterBySubType(result, condition);\n  },\n\n  /**\n   * The interface is different from queryComponents,\n   * which is convenient for inner usage.\n   *\n   * @usage\n   * var result = findComponents(\n   *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}}\n   * );\n   * var result = findComponents(\n   *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}}\n   * );\n   * var result = findComponents(\n   *     {mainType: 'series'},\n   *     function (model, index) {...}\n   * );\n   * // result like [component0, componnet1, ...]\n   *\n   * @param {Object} condition\n   * @param {string} condition.mainType Mandatory.\n   * @param {string} [condition.subType] Optional.\n   * @param {Object} [condition.query] like {xxxIndex, xxxId, xxxName},\n   *        where xxx is mainType.\n   *        If query attribute is null/undefined or has no index/id/name,\n   *        do not filtering by query conditions, which is convenient for\n   *        no-payload situations or when target of action is global.\n   * @param {Function} [condition.filter] parameter: component, return boolean.\n   * @return {Array.<module:echarts/model/Component>}\n   */\n  findComponents: function (condition) {\n    var query = condition.query;\n    var mainType = condition.mainType;\n    var queryCond = getQueryCond(query);\n    var result = queryCond ? this.queryComponents(queryCond) : this._componentsMap.get(mainType);\n    return doFilter(filterBySubType(result, condition));\n\n    function getQueryCond(q) {\n      var indexAttr = mainType + 'Index';\n      var idAttr = mainType + 'Id';\n      var nameAttr = mainType + 'Name';\n      return q && (q[indexAttr] != null || q[idAttr] != null || q[nameAttr] != null) ? {\n        mainType: mainType,\n        // subType will be filtered finally.\n        index: q[indexAttr],\n        id: q[idAttr],\n        name: q[nameAttr]\n      } : null;\n    }\n\n    function doFilter(res) {\n      return condition.filter ? filter(res, condition.filter) : res;\n    }\n  },\n\n  /**\n   * @usage\n   * eachComponent('legend', function (legendModel, index) {\n   *     ...\n   * });\n   * eachComponent(function (componentType, model, index) {\n   *     // componentType does not include subType\n   *     // (componentType is 'xxx' but not 'xxx.aa')\n   * });\n   * eachComponent(\n   *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}},\n   *     function (model, index) {...}\n   * );\n   * eachComponent(\n   *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}},\n   *     function (model, index) {...}\n   * );\n   *\n   * @param {string|Object=} mainType When mainType is object, the definition\n   *                                  is the same as the method 'findComponents'.\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachComponent: function (mainType, cb, context) {\n    var componentsMap = this._componentsMap;\n\n    if (typeof mainType === 'function') {\n      context = cb;\n      cb = mainType;\n      componentsMap.each(function (components, componentType) {\n        each(components, function (component, index) {\n          cb.call(context, componentType, component, index);\n        });\n      });\n    } else if (isString(mainType)) {\n      each(componentsMap.get(mainType), cb, context);\n    } else if (isObject(mainType)) {\n      var queryResult = this.findComponents(mainType);\n      each(queryResult, cb, context);\n    }\n  },\n\n  /**\n   * @param {string} name\n   * @return {Array.<module:echarts/model/Series>}\n   */\n  getSeriesByName: function (name) {\n    var series = this._componentsMap.get('series');\n\n    return filter(series, function (oneSeries) {\n      return oneSeries.name === name;\n    });\n  },\n\n  /**\n   * @param {number} seriesIndex\n   * @return {module:echarts/model/Series}\n   */\n  getSeriesByIndex: function (seriesIndex) {\n    return this._componentsMap.get('series')[seriesIndex];\n  },\n\n  /**\n   * Get series list before filtered by type.\n   * FIXME: rename to getRawSeriesByType?\n   *\n   * @param {string} subType\n   * @return {Array.<module:echarts/model/Series>}\n   */\n  getSeriesByType: function (subType) {\n    var series = this._componentsMap.get('series');\n\n    return filter(series, function (oneSeries) {\n      return oneSeries.subType === subType;\n    });\n  },\n\n  /**\n   * @return {Array.<module:echarts/model/Series>}\n   */\n  getSeries: function () {\n    return this._componentsMap.get('series').slice();\n  },\n\n  /**\n   * @return {number}\n   */\n  getSeriesCount: function () {\n    return this._componentsMap.get('series').length;\n  },\n\n  /**\n   * After filtering, series may be different\n   * frome raw series.\n   *\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachSeries: function (cb, context) {\n    assertSeriesInitialized(this);\n    each(this._seriesIndices, function (rawSeriesIndex) {\n      var series = this._componentsMap.get('series')[rawSeriesIndex];\n\n      cb.call(context, series, rawSeriesIndex);\n    }, this);\n  },\n\n  /**\n   * Iterate raw series before filtered.\n   *\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachRawSeries: function (cb, context) {\n    each(this._componentsMap.get('series'), cb, context);\n  },\n\n  /**\n   * After filtering, series may be different.\n   * frome raw series.\n   *\n   * @parma {string} subType\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachSeriesByType: function (subType, cb, context) {\n    assertSeriesInitialized(this);\n    each(this._seriesIndices, function (rawSeriesIndex) {\n      var series = this._componentsMap.get('series')[rawSeriesIndex];\n\n      if (series.subType === subType) {\n        cb.call(context, series, rawSeriesIndex);\n      }\n    }, this);\n  },\n\n  /**\n   * Iterate raw series before filtered of given type.\n   *\n   * @parma {string} subType\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachRawSeriesByType: function (subType, cb, context) {\n    return each(this.getSeriesByType(subType), cb, context);\n  },\n\n  /**\n   * @param {module:echarts/model/Series} seriesModel\n   */\n  isSeriesFiltered: function (seriesModel) {\n    assertSeriesInitialized(this);\n    return this._seriesIndicesMap.get(seriesModel.componentIndex) == null;\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getCurrentSeriesIndices: function () {\n    return (this._seriesIndices || []).slice();\n  },\n\n  /**\n   * @param {Function} cb\n   * @param {*} context\n   */\n  filterSeries: function (cb, context) {\n    assertSeriesInitialized(this);\n    var filteredSeries = filter(this._componentsMap.get('series'), cb, context);\n    createSeriesIndices(this, filteredSeries);\n  },\n  restoreData: function (payload) {\n    var componentsMap = this._componentsMap;\n    createSeriesIndices(this, componentsMap.get('series'));\n    var componentTypes = [];\n    componentsMap.each(function (components, componentType) {\n      componentTypes.push(componentType);\n    });\n    ComponentModel.topologicalTravel(componentTypes, ComponentModel.getAllClassMainTypes(), function (componentType, dependencies) {\n      each(componentsMap.get(componentType), function (component) {\n        (componentType !== 'series' || !isNotTargetSeries(component, payload)) && component.restoreData();\n      });\n    });\n  }\n});\n\nfunction isNotTargetSeries(seriesModel, payload) {\n  if (payload) {\n    var index = payload.seiresIndex;\n    var id = payload.seriesId;\n    var name = payload.seriesName;\n    return index != null && seriesModel.componentIndex !== index || id != null && seriesModel.id !== id || name != null && seriesModel.name !== name;\n  }\n}\n/**\n * @inner\n */\n\n\nfunction mergeTheme(option, theme) {\n  // PENDING\n  // NOT use `colorLayer` in theme if option has `color`\n  var notMergeColorLayer = option.color && !option.colorLayer;\n  each(theme, function (themeItem, name) {\n    if (name === 'colorLayer' && notMergeColorLayer) {\n      return;\n    } // 如果有 component model 则把具体的 merge 逻辑交给该 model 处理\n\n\n    if (!ComponentModel.hasClass(name)) {\n      if (typeof themeItem === 'object') {\n        option[name] = !option[name] ? clone(themeItem) : merge(option[name], themeItem, false);\n      } else {\n        if (option[name] == null) {\n          option[name] = themeItem;\n        }\n      }\n    }\n  });\n}\n\nfunction initBase(baseOption) {\n  baseOption = baseOption; // Using OPTION_INNER_KEY to mark that this option can not be used outside,\n  // i.e. `chart.setOption(chart.getModel().option);` is forbiden.\n\n  this.option = {};\n  this.option[OPTION_INNER_KEY] = 1;\n  /**\n   * Init with series: [], in case of calling findSeries method\n   * before series initialized.\n   * @type {Object.<string, Array.<module:echarts/model/Model>>}\n   * @private\n   */\n\n  this._componentsMap = createHashMap({\n    series: []\n  });\n  /**\n   * Mapping between filtered series list and raw series list.\n   * key: filtered series indices, value: raw series indices.\n   * @type {Array.<nubmer>}\n   * @private\n   */\n\n  this._seriesIndices;\n  this._seriesIndicesMap;\n  mergeTheme(baseOption, this._theme.option); // TODO Needs clone when merging to the unexisted property\n\n  merge(baseOption, globalDefault, false);\n  this.mergeOption(baseOption);\n}\n/**\n * @inner\n * @param {Array.<string>|string} types model types\n * @return {Object} key: {string} type, value: {Array.<Object>} models\n */\n\n\nfunction getComponentsByTypes(componentsMap, types) {\n  if (!isArray(types)) {\n    types = types ? [types] : [];\n  }\n\n  var ret = {};\n  each(types, function (type) {\n    ret[type] = (componentsMap.get(type) || []).slice();\n  });\n  return ret;\n}\n/**\n * @inner\n */\n\n\nfunction determineSubType(mainType, newCptOption, existComponent) {\n  var subType = newCptOption.type ? newCptOption.type : existComponent ? existComponent.subType // Use determineSubType only when there is no existComponent.\n  : ComponentModel.determineSubType(mainType, newCptOption); // tooltip, markline, markpoint may always has no subType\n\n  return subType;\n}\n/**\n * @inner\n */\n\n\nfunction createSeriesIndices(ecModel, seriesModels) {\n  ecModel._seriesIndicesMap = createHashMap(ecModel._seriesIndices = map(seriesModels, function (series) {\n    return series.componentIndex;\n  }) || []);\n}\n/**\n * @inner\n */\n\n\nfunction filterBySubType(components, condition) {\n  // Using hasOwnProperty for restrict. Consider\n  // subType is undefined in user payload.\n  return condition.hasOwnProperty('subType') ? filter(components, function (cpt) {\n    return cpt.subType === condition.subType;\n  }) : components;\n}\n/**\n * @inner\n */\n\n\nfunction assertSeriesInitialized(ecModel) {}\n\nmixin(GlobalModel, colorPaletteMixin);\nvar _default = GlobalModel;\nmodule.exports = _default;","var _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\nvar map = _util.map;\n\nvar _number = require(\"../util/number\");\n\nvar linearMap = _number.linearMap;\nvar getPixelPrecision = _number.getPixelPrecision;\n\nvar _axisTickLabelBuilder = require(\"./axisTickLabelBuilder\");\n\nvar createAxisTicks = _axisTickLabelBuilder.createAxisTicks;\nvar createAxisLabels = _axisTickLabelBuilder.createAxisLabels;\nvar calculateCategoryInterval = _axisTickLabelBuilder.calculateCategoryInterval;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar NORMALIZED_EXTENT = [0, 1];\n/**\n * Base class of Axis.\n * @constructor\n */\n\nvar Axis = function (dim, scale, extent) {\n  /**\n   * Axis dimension. Such as 'x', 'y', 'z', 'angle', 'radius'.\n   * @type {string}\n   */\n  this.dim = dim;\n  /**\n   * Axis scale\n   * @type {module:echarts/coord/scale/*}\n   */\n\n  this.scale = scale;\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n\n  this._extent = extent || [0, 0];\n  /**\n   * @type {boolean}\n   */\n\n  this.inverse = false;\n  /**\n   * Usually true when axis has a ordinal scale\n   * @type {boolean}\n   */\n\n  this.onBand = false;\n};\n\nAxis.prototype = {\n  constructor: Axis,\n\n  /**\n   * If axis extent contain given coord\n   * @param {number} coord\n   * @return {boolean}\n   */\n  contain: function (coord) {\n    var extent = this._extent;\n    var min = Math.min(extent[0], extent[1]);\n    var max = Math.max(extent[0], extent[1]);\n    return coord >= min && coord <= max;\n  },\n\n  /**\n   * If axis extent contain given data\n   * @param {number} data\n   * @return {boolean}\n   */\n  containData: function (data) {\n    return this.contain(this.dataToCoord(data));\n  },\n\n  /**\n   * Get coord extent.\n   * @return {Array.<number>}\n   */\n  getExtent: function () {\n    return this._extent.slice();\n  },\n\n  /**\n   * Get precision used for formatting\n   * @param {Array.<number>} [dataExtent]\n   * @return {number}\n   */\n  getPixelPrecision: function (dataExtent) {\n    return getPixelPrecision(dataExtent || this.scale.getExtent(), this._extent);\n  },\n\n  /**\n   * Set coord extent\n   * @param {number} start\n   * @param {number} end\n   */\n  setExtent: function (start, end) {\n    var extent = this._extent;\n    extent[0] = start;\n    extent[1] = end;\n  },\n\n  /**\n   * Convert data to coord. Data is the rank if it has an ordinal scale\n   * @param {number} data\n   * @param  {boolean} clamp\n   * @return {number}\n   */\n  dataToCoord: function (data, clamp) {\n    var extent = this._extent;\n    var scale = this.scale;\n    data = scale.normalize(data);\n\n    if (this.onBand && scale.type === 'ordinal') {\n      extent = extent.slice();\n      fixExtentWithBands(extent, scale.count());\n    }\n\n    return linearMap(data, NORMALIZED_EXTENT, extent, clamp);\n  },\n\n  /**\n   * Convert coord to data. Data is the rank if it has an ordinal scale\n   * @param {number} coord\n   * @param  {boolean} clamp\n   * @return {number}\n   */\n  coordToData: function (coord, clamp) {\n    var extent = this._extent;\n    var scale = this.scale;\n\n    if (this.onBand && scale.type === 'ordinal') {\n      extent = extent.slice();\n      fixExtentWithBands(extent, scale.count());\n    }\n\n    var t = linearMap(coord, extent, NORMALIZED_EXTENT, clamp);\n    return this.scale.scale(t);\n  },\n\n  /**\n   * Convert pixel point to data in axis\n   * @param {Array.<number>} point\n   * @param  {boolean} clamp\n   * @return {number} data\n   */\n  pointToData: function (point, clamp) {// Should be implemented in derived class if necessary.\n  },\n\n  /**\n   * Different from `zrUtil.map(axis.getTicks(), axis.dataToCoord, axis)`,\n   * `axis.getTicksCoords` considers `onBand`, which is used by\n   * `boundaryGap:true` of category axis and splitLine and splitArea.\n   * @param {Object} [opt]\n   * @param {number} [opt.tickModel=axis.model.getModel('axisTick')]\n   * @param {boolean} [opt.clamp] If `true`, the first and the last\n   *        tick must be at the axis end points. Otherwise, clip ticks\n   *        that outside the axis extent.\n   * @return {Array.<Object>} [{\n   *     coord: ...,\n   *     tickValue: ...\n   * }, ...]\n   */\n  getTicksCoords: function (opt) {\n    opt = opt || {};\n    var tickModel = opt.tickModel || this.getTickModel();\n    var result = createAxisTicks(this, tickModel);\n    var ticks = result.ticks;\n    var ticksCoords = map(ticks, function (tickValue) {\n      return {\n        coord: this.dataToCoord(tickValue),\n        tickValue: tickValue\n      };\n    }, this);\n    var alignWithLabel = tickModel.get('alignWithLabel');\n    fixOnBandTicksCoords(this, ticksCoords, result.tickCategoryInterval, alignWithLabel, opt.clamp);\n    return ticksCoords;\n  },\n\n  /**\n   * @return {Array.<Object>} [{\n   *     formattedLabel: string,\n   *     rawLabel: axis.scale.getLabel(tickValue)\n   *     tickValue: number\n   * }, ...]\n   */\n  getViewLabels: function () {\n    return createAxisLabels(this).labels;\n  },\n\n  /**\n   * @return {module:echarts/coord/model/Model}\n   */\n  getLabelModel: function () {\n    return this.model.getModel('axisLabel');\n  },\n\n  /**\n   * Notice here we only get the default tick model. For splitLine\n   * or splitArea, we should pass the splitLineModel or splitAreaModel\n   * manually when calling `getTicksCoords`.\n   * In GL, this method may be overrided to:\n   * `axisModel.getModel('axisTick', grid3DModel.getModel('axisTick'));`\n   * @return {module:echarts/coord/model/Model}\n   */\n  getTickModel: function () {\n    return this.model.getModel('axisTick');\n  },\n\n  /**\n   * Get width of band\n   * @return {number}\n   */\n  getBandWidth: function () {\n    var axisExtent = this._extent;\n    var dataExtent = this.scale.getExtent();\n    var len = dataExtent[1] - dataExtent[0] + (this.onBand ? 1 : 0); // Fix #2728, avoid NaN when only one data.\n\n    len === 0 && (len = 1);\n    var size = Math.abs(axisExtent[1] - axisExtent[0]);\n    return Math.abs(size) / len;\n  },\n\n  /**\n   * @abstract\n   * @return {boolean} Is horizontal\n   */\n  isHorizontal: null,\n\n  /**\n   * @abstract\n   * @return {number} Get axis rotate, by degree.\n   */\n  getRotate: null,\n\n  /**\n   * Only be called in category axis.\n   * Can be overrided, consider other axes like in 3D.\n   * @return {number} Auto interval for cateogry axis tick and label\n   */\n  calculateCategoryInterval: function () {\n    return calculateCategoryInterval(this);\n  }\n};\n\nfunction fixExtentWithBands(extent, nTick) {\n  var size = extent[1] - extent[0];\n  var len = nTick;\n  var margin = size / len / 2;\n  extent[0] += margin;\n  extent[1] -= margin;\n} // If axis has labels [1, 2, 3, 4]. Bands on the axis are\n// |---1---|---2---|---3---|---4---|.\n// So the displayed ticks and splitLine/splitArea should between\n// each data item, otherwise cause misleading (e.g., split tow bars\n// of a single data item when there are two bar series).\n// Also consider if tickCategoryInterval > 0 and onBand, ticks and\n// splitLine/spliteArea should layout appropriately corresponding\n// to displayed labels. (So we should not use `getBandWidth` in this\n// case).\n\n\nfunction fixOnBandTicksCoords(axis, ticksCoords, tickCategoryInterval, alignWithLabel, clamp) {\n  var ticksLen = ticksCoords.length;\n\n  if (!axis.onBand || alignWithLabel || !ticksLen) {\n    return;\n  }\n\n  var axisExtent = axis.getExtent();\n  var last;\n\n  if (ticksLen === 1) {\n    ticksCoords[0].coord = axisExtent[0];\n    last = ticksCoords[1] = {\n      coord: axisExtent[0]\n    };\n  } else {\n    var shift = ticksCoords[1].coord - ticksCoords[0].coord;\n    each(ticksCoords, function (ticksItem) {\n      ticksItem.coord -= shift / 2;\n      var tickCategoryInterval = tickCategoryInterval || 0; // Avoid split a single data item when odd interval.\n\n      if (tickCategoryInterval % 2 > 0) {\n        ticksItem.coord -= shift / ((tickCategoryInterval + 1) * 2);\n      }\n    });\n    last = {\n      coord: ticksCoords[ticksLen - 1].coord + shift\n    };\n    ticksCoords.push(last);\n  }\n\n  var inverse = axisExtent[0] > axisExtent[1];\n\n  if (littleThan(ticksCoords[0].coord, axisExtent[0])) {\n    clamp ? ticksCoords[0].coord = axisExtent[0] : ticksCoords.shift();\n  }\n\n  if (clamp && littleThan(axisExtent[0], ticksCoords[0].coord)) {\n    ticksCoords.unshift({\n      coord: axisExtent[0]\n    });\n  }\n\n  if (littleThan(axisExtent[1], last.coord)) {\n    clamp ? last.coord = axisExtent[1] : ticksCoords.pop();\n  }\n\n  if (clamp && littleThan(last.coord, axisExtent[1])) {\n    ticksCoords.push({\n      coord: axisExtent[1]\n    });\n  }\n\n  function littleThan(a, b) {\n    return inverse ? a > b : a < b;\n  }\n}\n\nvar _default = Axis;\nmodule.exports = _default;","var dpr = 1; // If in browser environment\n\nif (typeof window !== 'undefined') {\n  dpr = Math.max(window.devicePixelRatio || 1, 1);\n}\n/**\n * config默认配置项\n * @exports zrender/config\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n */\n\n/**\n * debug日志选项：catchBrushException为true下有效\n * 0 : 不生成debug数据，发布用\n * 1 : 异常抛出，调试用\n * 2 : 控制台输出，调试用\n */\n\n\nvar debugMode = 0; // retina 屏幕优化\n\nvar devicePixelRatio = dpr;\nexports.debugMode = debugMode;\nexports.devicePixelRatio = devicePixelRatio;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar platform = ''; // Navigator not exists in node\n\nif (typeof navigator !== 'undefined') {\n  platform = navigator.platform || '';\n}\n\nvar _default = {\n  // backgroundColor: 'rgba(0,0,0,0)',\n  // https://dribbble.com/shots/1065960-Infographic-Pie-chart-visualization\n  // color: ['#5793f3', '#d14a61', '#fd9c35', '#675bba', '#fec42c', '#dd4444', '#d4df5a', '#cd4870'],\n  // Light colors:\n  // color: ['#bcd3bb', '#e88f70', '#edc1a5', '#9dc5c8', '#e1e8c8', '#7b7c68', '#e5b5b5', '#f0b489', '#928ea8', '#bda29a'],\n  // color: ['#cc5664', '#9bd6ec', '#ea946e', '#8acaaa', '#f1ec64', '#ee8686', '#a48dc1', '#5da6bc', '#b9dcae'],\n  // Dark colors:\n  color: ['#c23531', '#2f4554', '#61a0a8', '#d48265', '#91c7ae', '#749f83', '#ca8622', '#bda29a', '#6e7074', '#546570', '#c4ccd3'],\n  gradientColor: ['#f6efa6', '#d88273', '#bf444c'],\n  // If xAxis and yAxis declared, grid is created by default.\n  // grid: {},\n  textStyle: {\n    // color: '#000',\n    // decoration: 'none',\n    // PENDING\n    fontFamily: platform.match(/^Win/) ? 'Microsoft YaHei' : 'sans-serif',\n    // fontFamily: 'Arial, Verdana, sans-serif',\n    fontSize: 12,\n    fontStyle: 'normal',\n    fontWeight: 'normal'\n  },\n  // http://blogs.adobe.com/webplatform/2014/02/24/using-blend-modes-in-html-canvas/\n  // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n  // Default is source-over\n  blendMode: null,\n  animation: 'auto',\n  animationDuration: 1000,\n  animationDurationUpdate: 300,\n  animationEasing: 'exponentialOut',\n  animationEasingUpdate: 'cubicOut',\n  animationThreshold: 2000,\n  // Configuration for progressive/incremental rendering\n  progressiveThreshold: 3000,\n  progressive: 400,\n  // Threshold of if use single hover layer to optimize.\n  // It is recommended that `hoverLayerThreshold` is equivalent to or less than\n  // `progressiveThreshold`, otherwise hover will cause restart of progressive,\n  // which is unexpected.\n  // see example <echarts/test/heatmap-large.html>.\n  hoverLayerThreshold: 3000,\n  // See: module:echarts/scale/Time\n  useUTC: false\n};\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar zrColor = require(\"zrender/lib/tool/color\");\n\nvar eventUtil = require(\"zrender/lib/core/event\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar formatUtil = require(\"../../util/format\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar each = zrUtil.each;\nvar toCamelCase = formatUtil.toCamelCase;\nvar vendors = ['', '-webkit-', '-moz-', '-o-'];\nvar gCssText = 'position:absolute;display:block;border-style:solid;white-space:nowrap;z-index:9999999;';\n/**\n * @param {number} duration\n * @return {string}\n * @inner\n */\n\nfunction assembleTransition(duration) {\n  var transitionCurve = 'cubic-bezier(0.23, 1, 0.32, 1)';\n  var transitionText = 'left ' + duration + 's ' + transitionCurve + ',' + 'top ' + duration + 's ' + transitionCurve;\n  return zrUtil.map(vendors, function (vendorPrefix) {\n    return vendorPrefix + 'transition:' + transitionText;\n  }).join(';');\n}\n/**\n * @param {Object} textStyle\n * @return {string}\n * @inner\n */\n\n\nfunction assembleFont(textStyleModel) {\n  var cssText = [];\n  var fontSize = textStyleModel.get('fontSize');\n  var color = textStyleModel.getTextColor();\n  color && cssText.push('color:' + color);\n  cssText.push('font:' + textStyleModel.getFont());\n  fontSize && cssText.push('line-height:' + Math.round(fontSize * 3 / 2) + 'px');\n  each(['decoration', 'align'], function (name) {\n    var val = textStyleModel.get(name);\n    val && cssText.push('text-' + name + ':' + val);\n  });\n  return cssText.join(';');\n}\n/**\n * @param {Object} tooltipModel\n * @return {string}\n * @inner\n */\n\n\nfunction assembleCssText(tooltipModel) {\n  var cssText = [];\n  var transitionDuration = tooltipModel.get('transitionDuration');\n  var backgroundColor = tooltipModel.get('backgroundColor');\n  var textStyleModel = tooltipModel.getModel('textStyle');\n  var padding = tooltipModel.get('padding'); // Animation transition. Do not animate when transitionDuration is 0.\n\n  transitionDuration && cssText.push(assembleTransition(transitionDuration));\n\n  if (backgroundColor) {\n    if (env.canvasSupported) {\n      cssText.push('background-Color:' + backgroundColor);\n    } else {\n      // for ie\n      cssText.push('background-Color:#' + zrColor.toHex(backgroundColor));\n      cssText.push('filter:alpha(opacity=70)');\n    }\n  } // Border style\n\n\n  each(['width', 'color', 'radius'], function (name) {\n    var borderName = 'border-' + name;\n    var camelCase = toCamelCase(borderName);\n    var val = tooltipModel.get(camelCase);\n    val != null && cssText.push(borderName + ':' + val + (name === 'color' ? '' : 'px'));\n  }); // Text style\n\n  cssText.push(assembleFont(textStyleModel)); // Padding\n\n  if (padding != null) {\n    cssText.push('padding:' + formatUtil.normalizeCssArray(padding).join('px ') + 'px');\n  }\n\n  return cssText.join(';') + ';';\n}\n/**\n * @alias module:echarts/component/tooltip/TooltipContent\n * @constructor\n */\n\n\nfunction TooltipContent(container, api) {\n  if (env.wxa) {\n    return null;\n  }\n\n  var el = document.createElement('div');\n  var zr = this._zr = api.getZr();\n  this.el = el;\n  this._x = api.getWidth() / 2;\n  this._y = api.getHeight() / 2;\n  container.appendChild(el);\n  this._container = container;\n  this._show = false;\n  /**\n   * @private\n   */\n\n  this._hideTimeout;\n  var self = this;\n\n  el.onmouseenter = function () {\n    // clear the timeout in hideLater and keep showing tooltip\n    if (self._enterable) {\n      clearTimeout(self._hideTimeout);\n      self._show = true;\n    }\n\n    self._inContent = true;\n  };\n\n  el.onmousemove = function (e) {\n    e = e || window.event;\n\n    if (!self._enterable) {\n      // Try trigger zrender event to avoid mouse\n      // in and out shape too frequently\n      var handler = zr.handler;\n      eventUtil.normalizeEvent(container, e, true);\n      handler.dispatch('mousemove', e);\n    }\n  };\n\n  el.onmouseleave = function () {\n    if (self._enterable) {\n      if (self._show) {\n        self.hideLater(self._hideDelay);\n      }\n    }\n\n    self._inContent = false;\n  };\n}\n\nTooltipContent.prototype = {\n  constructor: TooltipContent,\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  _enterable: true,\n\n  /**\n   * Update when tooltip is rendered\n   */\n  update: function () {\n    // FIXME\n    // Move this logic to ec main?\n    var container = this._container;\n    var stl = container.currentStyle || document.defaultView.getComputedStyle(container);\n    var domStyle = container.style;\n\n    if (domStyle.position !== 'absolute' && stl.position !== 'absolute') {\n      domStyle.position = 'relative';\n    } // Hide the tooltip\n    // PENDING\n    // this.hide();\n\n  },\n  show: function (tooltipModel) {\n    clearTimeout(this._hideTimeout);\n    var el = this.el;\n    el.style.cssText = gCssText + assembleCssText(tooltipModel) // http://stackoverflow.com/questions/21125587/css3-transition-not-working-in-chrome-anymore\n    + ';left:' + this._x + 'px;top:' + this._y + 'px;' + (tooltipModel.get('extraCssText') || '');\n    el.style.display = el.innerHTML ? 'block' : 'none';\n    this._show = true;\n  },\n  setContent: function (content) {\n    this.el.innerHTML = content == null ? '' : content;\n  },\n  setEnterable: function (enterable) {\n    this._enterable = enterable;\n  },\n  getSize: function () {\n    var el = this.el;\n    return [el.clientWidth, el.clientHeight];\n  },\n  moveTo: function (x, y) {\n    // xy should be based on canvas root. But tooltipContent is\n    // the sibling of canvas root. So padding of ec container\n    // should be considered here.\n    var zr = this._zr;\n    var viewportRootOffset;\n\n    if (zr && zr.painter && (viewportRootOffset = zr.painter.getViewportRootOffset())) {\n      x += viewportRootOffset.offsetLeft;\n      y += viewportRootOffset.offsetTop;\n    }\n\n    var style = this.el.style;\n    style.left = x + 'px';\n    style.top = y + 'px';\n    this._x = x;\n    this._y = y;\n  },\n  hide: function () {\n    this.el.style.display = 'none';\n    this._show = false;\n  },\n  hideLater: function (time) {\n    if (this._show && !(this._inContent && this._enterable)) {\n      if (time) {\n        this._hideDelay = time; // Set show false to avoid invoke hideLater mutiple times\n\n        this._show = false;\n        this._hideTimeout = setTimeout(zrUtil.bind(this.hide, this), time);\n      } else {\n        this.hide();\n      }\n    }\n  },\n  isShow: function () {\n    return this._show;\n  }\n};\nvar _default = TooltipContent;\nmodule.exports = _default;","function buildPath(ctx, shape) {\n  var x = shape.x;\n  var y = shape.y;\n  var width = shape.width;\n  var height = shape.height;\n  var r = shape.r;\n  var r1;\n  var r2;\n  var r3;\n  var r4; // Convert width and height to positive for better borderRadius\n\n  if (width < 0) {\n    x = x + width;\n    width = -width;\n  }\n\n  if (height < 0) {\n    y = y + height;\n    height = -height;\n  }\n\n  if (typeof r === 'number') {\n    r1 = r2 = r3 = r4 = r;\n  } else if (r instanceof Array) {\n    if (r.length === 1) {\n      r1 = r2 = r3 = r4 = r[0];\n    } else if (r.length === 2) {\n      r1 = r3 = r[0];\n      r2 = r4 = r[1];\n    } else if (r.length === 3) {\n      r1 = r[0];\n      r2 = r4 = r[1];\n      r3 = r[2];\n    } else {\n      r1 = r[0];\n      r2 = r[1];\n      r3 = r[2];\n      r4 = r[3];\n    }\n  } else {\n    r1 = r2 = r3 = r4 = 0;\n  }\n\n  var total;\n\n  if (r1 + r2 > width) {\n    total = r1 + r2;\n    r1 *= width / total;\n    r2 *= width / total;\n  }\n\n  if (r3 + r4 > width) {\n    total = r3 + r4;\n    r3 *= width / total;\n    r4 *= width / total;\n  }\n\n  if (r2 + r3 > height) {\n    total = r2 + r3;\n    r2 *= height / total;\n    r3 *= height / total;\n  }\n\n  if (r1 + r4 > height) {\n    total = r1 + r4;\n    r1 *= height / total;\n    r4 *= height / total;\n  }\n\n  ctx.moveTo(x + r1, y);\n  ctx.lineTo(x + width - r2, y);\n  r2 !== 0 && ctx.arc(x + width - r2, y + r2, r2, -Math.PI / 2, 0);\n  ctx.lineTo(x + width, y + height - r3);\n  r3 !== 0 && ctx.arc(x + width - r3, y + height - r3, r3, 0, Math.PI / 2);\n  ctx.lineTo(x + r4, y + height);\n  r4 !== 0 && ctx.arc(x + r4, y + height - r4, r4, Math.PI / 2, Math.PI);\n  ctx.lineTo(x, y + r1);\n  r1 !== 0 && ctx.arc(x + r1, y + r1, r1, Math.PI, Math.PI * 1.5);\n}\n\nexports.buildPath = buildPath;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar createListFromArray = require(\"./chart/helper/createListFromArray\");\n\nvar axisHelper = require(\"./coord/axisHelper\");\n\nvar axisModelCommonMixin = require(\"./coord/axisModelCommonMixin\");\n\nvar Model = require(\"./model/Model\");\n\nvar _layout = require(\"./util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\nexports.getLayoutRect = _layout.getLayoutRect;\n\nvar _dataStackHelper = require(\"./data/helper/dataStackHelper\");\n\nvar enableDataStack = _dataStackHelper.enableDataStack;\nvar isDimensionStacked = _dataStackHelper.isDimensionStacked;\nvar getStackedDimension = _dataStackHelper.getStackedDimension;\n\nvar _completeDimensions = require(\"./data/helper/completeDimensions\");\n\nexports.completeDimensions = _completeDimensions;\n\nvar _createDimensions = require(\"./data/helper/createDimensions\");\n\nexports.createDimensions = _createDimensions;\n\nvar _symbol = require(\"./util/symbol\");\n\nexports.createSymbol = _symbol.createSymbol;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// import createGraphFromNodeEdge from './chart/helper/createGraphFromNodeEdge';\n\n/**\n * Create a muti dimension List structure from seriesModel.\n * @param  {module:echarts/model/Model} seriesModel\n * @return {module:echarts/data/List} list\n */\nfunction createList(seriesModel) {\n  return createListFromArray(seriesModel.getSource(), seriesModel);\n} // export function createGraph(seriesModel) {\n//     var nodes = seriesModel.get('data');\n//     var links = seriesModel.get('links');\n//     return createGraphFromNodeEdge(nodes, links, seriesModel);\n// }\n\n\nvar dataStack = {\n  isDimensionStacked: isDimensionStacked,\n  enableDataStack: enableDataStack,\n  getStackedDimension: getStackedDimension\n};\n/**\n * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n * @see http://echarts.baidu.com/option.html#series-scatter.symbol\n * @param {string} symbolDesc\n * @param {number} x\n * @param {number} y\n * @param {number} w\n * @param {number} h\n * @param {string} color\n */\n\n/**\n * Create scale\n * @param {Array.<number>} dataExtent\n * @param {Object|module:echarts/Model} option\n */\nfunction createScale(dataExtent, option) {\n  var axisModel = option;\n\n  if (!Model.isInstance(option)) {\n    axisModel = new Model(option);\n    zrUtil.mixin(axisModel, axisModelCommonMixin);\n  }\n\n  var scale = axisHelper.createScaleByModel(axisModel);\n  scale.setExtent(dataExtent[0], dataExtent[1]);\n  axisHelper.niceScaleExtent(scale, axisModel);\n  return scale;\n}\n/**\n * Mixin common methods to axis model,\n *\n * Inlcude methods\n * `getFormattedLabels() => Array.<string>`\n * `getCategories() => Array.<string>`\n * `getMin(origin: boolean) => number`\n * `getMax(origin: boolean) => number`\n * `getNeedCrossZero() => boolean`\n * `setRange(start: number, end: number)`\n * `resetRange()`\n */\n\n\nfunction mixinAxisModelCommonMethods(Model) {\n  zrUtil.mixin(Model, axisModelCommonMixin);\n}\n\nexports.createList = createList;\nexports.dataStack = dataStack;\nexports.createScale = createScale;\nexports.mixinAxisModelCommonMethods = mixinAxisModelCommonMethods;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Avoid typo.\nvar SOURCE_FORMAT_ORIGINAL = 'original';\nvar SOURCE_FORMAT_ARRAY_ROWS = 'arrayRows';\nvar SOURCE_FORMAT_OBJECT_ROWS = 'objectRows';\nvar SOURCE_FORMAT_KEYED_COLUMNS = 'keyedColumns';\nvar SOURCE_FORMAT_UNKNOWN = 'unknown'; // ??? CHANGE A NAME\n\nvar SOURCE_FORMAT_TYPED_ARRAY = 'typedArray';\nvar SERIES_LAYOUT_BY_COLUMN = 'column';\nvar SERIES_LAYOUT_BY_ROW = 'row';\nexports.SOURCE_FORMAT_ORIGINAL = SOURCE_FORMAT_ORIGINAL;\nexports.SOURCE_FORMAT_ARRAY_ROWS = SOURCE_FORMAT_ARRAY_ROWS;\nexports.SOURCE_FORMAT_OBJECT_ROWS = SOURCE_FORMAT_OBJECT_ROWS;\nexports.SOURCE_FORMAT_KEYED_COLUMNS = SOURCE_FORMAT_KEYED_COLUMNS;\nexports.SOURCE_FORMAT_UNKNOWN = SOURCE_FORMAT_UNKNOWN;\nexports.SOURCE_FORMAT_TYPED_ARRAY = SOURCE_FORMAT_TYPED_ARRAY;\nexports.SERIES_LAYOUT_BY_COLUMN = SERIES_LAYOUT_BY_COLUMN;\nexports.SERIES_LAYOUT_BY_ROW = SERIES_LAYOUT_BY_ROW;","var _dataProvider = require(\"../../data/helper/dataProvider\");\n\nvar retrieveRawValue = _dataProvider.retrieveRawValue;\n\nvar _format = require(\"../../util/format\");\n\nvar getTooltipMarker = _format.getTooltipMarker;\nvar formatTpl = _format.formatTpl;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar DIMENSION_LABEL_REG = /\\{@(.+?)\\}/g; // PENDING A little ugly\n\nvar _default = {\n  /**\n   * Get params for formatter\n   * @param {number} dataIndex\n   * @param {string} [dataType]\n   * @return {Object}\n   */\n  getDataParams: function (dataIndex, dataType) {\n    var data = this.getData(dataType);\n    var rawValue = this.getRawValue(dataIndex, dataType);\n    var rawDataIndex = data.getRawIndex(dataIndex);\n    var name = data.getName(dataIndex);\n    var itemOpt = data.getRawDataItem(dataIndex);\n    var color = data.getItemVisual(dataIndex, 'color');\n    return {\n      componentType: this.mainType,\n      componentSubType: this.subType,\n      seriesType: this.mainType === 'series' ? this.subType : null,\n      seriesIndex: this.seriesIndex,\n      seriesId: this.id,\n      seriesName: this.name,\n      name: name,\n      dataIndex: rawDataIndex,\n      data: itemOpt,\n      dataType: dataType,\n      value: rawValue,\n      color: color,\n      marker: getTooltipMarker(color),\n      // Param name list for mapping `a`, `b`, `c`, `d`, `e`\n      $vars: ['seriesName', 'name', 'value']\n    };\n  },\n\n  /**\n   * Format label\n   * @param {number} dataIndex\n   * @param {string} [status='normal'] 'normal' or 'emphasis'\n   * @param {string} [dataType]\n   * @param {number} [dimIndex]\n   * @param {string} [labelProp='label']\n   * @return {string} If not formatter, return null/undefined\n   */\n  getFormattedLabel: function (dataIndex, status, dataType, dimIndex, labelProp) {\n    status = status || 'normal';\n    var data = this.getData(dataType);\n    var itemModel = data.getItemModel(dataIndex);\n    var params = this.getDataParams(dataIndex, dataType);\n\n    if (dimIndex != null && params.value instanceof Array) {\n      params.value = params.value[dimIndex];\n    }\n\n    var formatter = itemModel.get(status === 'normal' ? [labelProp || 'label', 'formatter'] : [status, labelProp || 'label', 'formatter']);\n\n    if (typeof formatter === 'function') {\n      params.status = status;\n      return formatter(params);\n    } else if (typeof formatter === 'string') {\n      var str = formatTpl(formatter, params); // Support 'aaa{@[3]}bbb{@product}ccc'.\n      // Do not support '}' in dim name util have to.\n\n      return str.replace(DIMENSION_LABEL_REG, function (origin, dim) {\n        var len = dim.length;\n\n        if (dim.charAt(0) === '[' && dim.charAt(len - 1) === ']') {\n          dim = +dim.slice(1, len - 1); // Also: '[]' => 0\n        }\n\n        return retrieveRawValue(data, dataIndex, dim);\n      });\n    }\n  },\n\n  /**\n   * Get raw value in option\n   * @param {number} idx\n   * @param {string} [dataType]\n   * @return {Array|number|string}\n   */\n  getRawValue: function (idx, dataType) {\n    return retrieveRawValue(this.getData(dataType), idx);\n  },\n\n  /**\n   * Should be implemented.\n   * @param {number} dataIndex\n   * @param {boolean} [multipleSeries=false]\n   * @param {number} [dataType]\n   * @return {string} tooltip string\n   */\n  formatTooltip: function () {// Empty function\n  }\n};\nmodule.exports = _default;","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar _format = require(\"../util/format\");\n\nvar formatTime = _format.formatTime;\nvar encodeHTML = _format.encodeHTML;\nvar addCommas = _format.addCommas;\nvar getTooltipMarker = _format.getTooltipMarker;\n\nvar modelUtil = require(\"../util/model\");\n\nvar ComponentModel = require(\"./Component\");\n\nvar colorPaletteMixin = require(\"./mixin/colorPalette\");\n\nvar dataFormatMixin = require(\"../model/mixin/dataFormat\");\n\nvar _layout = require(\"../util/layout\");\n\nvar getLayoutParams = _layout.getLayoutParams;\nvar mergeLayoutParam = _layout.mergeLayoutParam;\n\nvar _task = require(\"../stream/task\");\n\nvar createTask = _task.createTask;\n\nvar _sourceHelper = require(\"../data/helper/sourceHelper\");\n\nvar prepareSource = _sourceHelper.prepareSource;\nvar getSource = _sourceHelper.getSource;\n\nvar _dataProvider = require(\"../data/helper/dataProvider\");\n\nvar retrieveRawValue = _dataProvider.retrieveRawValue;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar inner = modelUtil.makeInner();\nvar SeriesModel = ComponentModel.extend({\n  type: 'series.__base__',\n\n  /**\n   * @readOnly\n   */\n  seriesIndex: 0,\n  // coodinateSystem will be injected in the echarts/CoordinateSystem\n  coordinateSystem: null,\n\n  /**\n   * @type {Object}\n   * @protected\n   */\n  defaultOption: null,\n\n  /**\n   * Data provided for legend\n   * @type {Function}\n   */\n  // PENDING\n  legendDataProvider: null,\n\n  /**\n   * Access path of color for visual\n   */\n  visualColorAccessPath: 'itemStyle.color',\n\n  /**\n   * Support merge layout params.\n   * Only support 'box' now (left/right/top/bottom/width/height).\n   * @type {string|Object} Object can be {ignoreSize: true}\n   * @readOnly\n   */\n  layoutMode: null,\n  init: function (option, parentModel, ecModel, extraOpt) {\n    /**\n     * @type {number}\n     * @readOnly\n     */\n    this.seriesIndex = this.componentIndex;\n    this.dataTask = createTask({\n      count: dataTaskCount,\n      reset: dataTaskReset\n    });\n    this.dataTask.context = {\n      model: this\n    };\n    this.mergeDefaultAndTheme(option, ecModel);\n    prepareSource(this);\n    var data = this.getInitialData(option, ecModel);\n    wrapData(data, this);\n    this.dataTask.context.data = data;\n\n    /**\n     * @type {module:echarts/data/List|module:echarts/data/Tree|module:echarts/data/Graph}\n     * @private\n     */\n    inner(this).dataBeforeProcessed = data; // If we reverse the order (make data firstly, and then make\n    // dataBeforeProcessed by cloneShallow), cloneShallow will\n    // cause data.graph.data !== data when using\n    // module:echarts/data/Graph or module:echarts/data/Tree.\n    // See module:echarts/data/helper/linkList\n    // Theoretically, it is unreasonable to call `seriesModel.getData()` in the model\n    // init or merge stage, because the data can be restored. So we do not `restoreData`\n    // and `setData` here, which forbids calling `seriesModel.getData()` in this stage.\n    // Call `seriesModel.getRawData()` instead.\n    // this.restoreData();\n\n    autoSeriesName(this);\n  },\n\n  /**\n   * Util for merge default and theme to option\n   * @param  {Object} option\n   * @param  {module:echarts/model/Global} ecModel\n   */\n  mergeDefaultAndTheme: function (option, ecModel) {\n    var layoutMode = this.layoutMode;\n    var inputPositionParams = layoutMode ? getLayoutParams(option) : {}; // Backward compat: using subType on theme.\n    // But if name duplicate between series subType\n    // (for example: parallel) add component mainType,\n    // add suffix 'Series'.\n\n    var themeSubType = this.subType;\n\n    if (ComponentModel.hasClass(themeSubType)) {\n      themeSubType += 'Series';\n    }\n\n    zrUtil.merge(option, ecModel.getTheme().get(this.subType));\n    zrUtil.merge(option, this.getDefaultOption()); // Default label emphasis `show`\n\n    modelUtil.defaultEmphasis(option, 'label', ['show']);\n    this.fillDataTextStyle(option.data);\n\n    if (layoutMode) {\n      mergeLayoutParam(option, inputPositionParams, layoutMode);\n    }\n  },\n  mergeOption: function (newSeriesOption, ecModel) {\n    // this.settingTask.dirty();\n    newSeriesOption = zrUtil.merge(this.option, newSeriesOption, true);\n    this.fillDataTextStyle(newSeriesOption.data);\n    var layoutMode = this.layoutMode;\n\n    if (layoutMode) {\n      mergeLayoutParam(this.option, newSeriesOption, layoutMode);\n    }\n\n    prepareSource(this);\n    var data = this.getInitialData(newSeriesOption, ecModel);\n    wrapData(data, this);\n    this.dataTask.dirty();\n    this.dataTask.context.data = data;\n    inner(this).dataBeforeProcessed = data;\n    autoSeriesName(this);\n  },\n  fillDataTextStyle: function (data) {\n    // Default data label emphasis `show`\n    // FIXME Tree structure data ?\n    // FIXME Performance ?\n    if (data && !zrUtil.isTypedArray(data)) {\n      var props = ['show'];\n\n      for (var i = 0; i < data.length; i++) {\n        if (data[i] && data[i].label) {\n          modelUtil.defaultEmphasis(data[i], 'label', props);\n        }\n      }\n    }\n  },\n\n  /**\n   * Init a data structure from data related option in series\n   * Must be overwritten\n   */\n  getInitialData: function () {},\n\n  /**\n   * Append data to list\n   * @param {Object} params\n   * @param {Array|TypedArray} params.data\n   */\n  appendData: function (params) {\n    // FIXME ???\n    // (1) If data from dataset, forbidden append.\n    // (2) support append data of dataset.\n    var data = this.getRawData();\n    data.appendData(params.data);\n  },\n\n  /**\n   * Consider some method like `filter`, `map` need make new data,\n   * We should make sure that `seriesModel.getData()` get correct\n   * data in the stream procedure. So we fetch data from upstream\n   * each time `task.perform` called.\n   * @param {string} [dataType]\n   * @return {module:echarts/data/List}\n   */\n  getData: function (dataType) {\n    var task = getCurrentTask(this);\n\n    if (task) {\n      var data = task.context.data;\n      return dataType == null ? data : data.getLinkedData(dataType);\n    } else {\n      // When series is not alive (that may happen when click toolbox\n      // restore or setOption with not merge mode), series data may\n      // be still need to judge animation or something when graphic\n      // elements want to know whether fade out.\n      return inner(this).data;\n    }\n  },\n\n  /**\n   * @param {module:echarts/data/List} data\n   */\n  setData: function (data) {\n    var task = getCurrentTask(this);\n\n    if (task) {\n      var context = task.context; // Consider case: filter, data sample.\n\n      if (context.data !== data && task.modifyOutputEnd) {\n        task.setOutputEnd(data.count());\n      }\n\n      context.outputData = data; // Caution: setData should update context.data,\n      // Because getData may be called multiply in a\n      // single stage and expect to get the data just\n      // set. (For example, AxisProxy, x y both call\n      // getData and setDate sequentially).\n      // So the context.data should be fetched from\n      // upstream each time when a stage starts to be\n      // performed.\n\n      if (task !== this.dataTask) {\n        context.data = data;\n      }\n    }\n\n    inner(this).data = data;\n  },\n\n  /**\n   * @see {module:echarts/data/helper/sourceHelper#getSource}\n   * @return {module:echarts/data/Source} source\n   */\n  getSource: function () {\n    return getSource(this);\n  },\n\n  /**\n   * Get data before processed\n   * @return {module:echarts/data/List}\n   */\n  getRawData: function () {\n    return inner(this).dataBeforeProcessed;\n  },\n\n  /**\n   * Get base axis if has coordinate system and has axis.\n   * By default use coordSys.getBaseAxis();\n   * Can be overrided for some chart.\n   * @return {type} description\n   */\n  getBaseAxis: function () {\n    var coordSys = this.coordinateSystem;\n    return coordSys && coordSys.getBaseAxis && coordSys.getBaseAxis();\n  },\n  // FIXME\n\n  /**\n   * Default tooltip formatter\n   *\n   * @param {number} dataIndex\n   * @param {boolean} [multipleSeries=false]\n   * @param {number} [dataType]\n   */\n  formatTooltip: function (dataIndex, multipleSeries, dataType) {\n    function formatArrayValue(value) {\n      // ??? TODO refactor these logic.\n      // check: category-no-encode-has-axis-data in dataset.html\n      var vertially = zrUtil.reduce(value, function (vertially, val, idx) {\n        var dimItem = data.getDimensionInfo(idx);\n        return vertially |= dimItem && dimItem.tooltip !== false && dimItem.displayName != null;\n      }, 0);\n      var result = [];\n      tooltipDims.length ? zrUtil.each(tooltipDims, function (dim) {\n        setEachItem(retrieveRawValue(data, dataIndex, dim), dim);\n      }) // By default, all dims is used on tooltip.\n      : zrUtil.each(value, setEachItem);\n\n      function setEachItem(val, dim) {\n        var dimInfo = data.getDimensionInfo(dim); // If `dimInfo.tooltip` is not set, show tooltip.\n\n        if (!dimInfo || dimInfo.otherDims.tooltip === false) {\n          return;\n        }\n\n        var dimType = dimInfo.type;\n        var dimHead = getTooltipMarker({\n          color: color,\n          type: 'subItem'\n        });\n        var valStr = (vertially ? dimHead + encodeHTML(dimInfo.displayName || '-') + ': ' : '') + // FIXME should not format time for raw data?\n        encodeHTML(dimType === 'ordinal' ? val + '' : dimType === 'time' ? multipleSeries ? '' : formatTime('yyyy/MM/dd hh:mm:ss', val) : addCommas(val));\n        valStr && result.push(valStr);\n      }\n\n      return (vertially ? '<br/>' : '') + result.join(vertially ? '<br/>' : ', ');\n    }\n\n    function formatSingleValue(val) {\n      return encodeHTML(addCommas(val));\n    }\n\n    var data = this.getData();\n    var tooltipDims = data.mapDimension('defaultedTooltip', true);\n    var tooltipDimLen = tooltipDims.length;\n    var value = this.getRawValue(dataIndex);\n    var isValueArr = zrUtil.isArray(value);\n    var color = data.getItemVisual(dataIndex, 'color');\n\n    if (zrUtil.isObject(color) && color.colorStops) {\n      color = (color.colorStops[0] || {}).color;\n    }\n\n    color = color || 'transparent'; // Complicated rule for pretty tooltip.\n\n    var formattedValue = tooltipDimLen > 1 || isValueArr && !tooltipDimLen ? formatArrayValue(value) : tooltipDimLen ? formatSingleValue(retrieveRawValue(data, dataIndex, tooltipDims[0])) : formatSingleValue(isValueArr ? value[0] : value);\n    var colorEl = getTooltipMarker(color);\n    var name = data.getName(dataIndex);\n    var seriesName = this.name;\n\n    if (!modelUtil.isNameSpecified(this)) {\n      seriesName = '';\n    }\n\n    seriesName = seriesName ? encodeHTML(seriesName) + (!multipleSeries ? '<br/>' : ': ') : '';\n    return !multipleSeries ? seriesName + colorEl + (name ? encodeHTML(name) + ': ' + formattedValue : formattedValue) : colorEl + seriesName + formattedValue;\n  },\n\n  /**\n   * @return {boolean}\n   */\n  isAnimationEnabled: function () {\n    if (env.node) {\n      return false;\n    }\n\n    var animationEnabled = this.getShallow('animation');\n\n    if (animationEnabled) {\n      if (this.getData().count() > this.getShallow('animationThreshold')) {\n        animationEnabled = false;\n      }\n    }\n\n    return animationEnabled;\n  },\n  restoreData: function () {\n    this.dataTask.dirty();\n  },\n  getColorFromPalette: function (name, scope, requestColorNum) {\n    var ecModel = this.ecModel; // PENDING\n\n    var color = colorPaletteMixin.getColorFromPalette.call(this, name, scope, requestColorNum);\n\n    if (!color) {\n      color = ecModel.getColorFromPalette(name, scope, requestColorNum);\n    }\n\n    return color;\n  },\n\n  /**\n   * Use `data.mapDimension(coordDim, true)` instead.\n   * @deprecated\n   */\n  coordDimToDataDim: function (coordDim) {\n    return this.getRawData().mapDimension(coordDim, true);\n  },\n\n  /**\n   * Get progressive rendering count each step\n   * @return {number}\n   */\n  getProgressive: function () {\n    return this.get('progressive');\n  },\n\n  /**\n   * Get progressive rendering count each step\n   * @return {number}\n   */\n  getProgressiveThreshold: function () {\n    return this.get('progressiveThreshold');\n  },\n\n  /**\n   * Get data indices for show tooltip content. See tooltip.\n   * @abstract\n   * @param {Array.<string>|string} dim\n   * @param {Array.<number>} value\n   * @param {module:echarts/coord/single/SingleAxis} baseAxis\n   * @return {Object} {dataIndices, nestestValue}.\n   */\n  getAxisTooltipData: null,\n\n  /**\n   * See tooltip.\n   * @abstract\n   * @param {number} dataIndex\n   * @return {Array.<number>} Point of tooltip. null/undefined can be returned.\n   */\n  getTooltipPosition: null,\n\n  /**\n   * @see {module:echarts/stream/Scheduler}\n   */\n  pipeTask: null,\n\n  /**\n   * Convinient for override in extended class.\n   * @protected\n   * @type {Function}\n   */\n  preventIncremental: null,\n\n  /**\n   * @public\n   * @readOnly\n   * @type {Object}\n   */\n  pipelineContext: null\n});\nzrUtil.mixin(SeriesModel, dataFormatMixin);\nzrUtil.mixin(SeriesModel, colorPaletteMixin);\n/**\n * MUST be called after `prepareSource` called\n * Here we need to make auto series, especially for auto legend. But we\n * do not modify series.name in option to avoid side effects.\n */\n\nfunction autoSeriesName(seriesModel) {\n  // User specified name has higher priority, otherwise it may cause\n  // series can not be queried unexpectedly.\n  var name = seriesModel.name;\n\n  if (!modelUtil.isNameSpecified(seriesModel)) {\n    seriesModel.name = getSeriesAutoName(seriesModel) || name;\n  }\n}\n\nfunction getSeriesAutoName(seriesModel) {\n  var data = seriesModel.getRawData();\n  var dataDims = data.mapDimension('seriesName', true);\n  var nameArr = [];\n  zrUtil.each(dataDims, function (dataDim) {\n    var dimInfo = data.getDimensionInfo(dataDim);\n    dimInfo.displayName && nameArr.push(dimInfo.displayName);\n  });\n  return nameArr.join(' ');\n}\n\nfunction dataTaskCount(context) {\n  return context.model.getRawData().count();\n}\n\nfunction dataTaskReset(context) {\n  var seriesModel = context.model;\n  seriesModel.setData(seriesModel.getRawData().cloneShallow());\n  return dataTaskProgress;\n}\n\nfunction dataTaskProgress(param, context) {\n  // Avoid repead cloneShallow when data just created in reset.\n  if (param.end > context.outputData.count()) {\n    context.model.getRawData().cloneShallow(context.outputData);\n  }\n} // TODO refactor\n\n\nfunction wrapData(data, seriesModel) {\n  zrUtil.each(data.CHANGABLE_METHODS, function (methodName) {\n    data.wrapMethod(methodName, zrUtil.curry(onDataSelfChange, seriesModel));\n  });\n}\n\nfunction onDataSelfChange(seriesModel) {\n  var task = getCurrentTask(seriesModel);\n\n  if (task) {\n    // Consider case: filter, selectRange\n    task.setOutputEnd(this.count());\n  }\n}\n\nfunction getCurrentTask(seriesModel) {\n  var scheduler = (seriesModel.ecModel || {}).scheduler;\n  var pipeline = scheduler && scheduler.getPipeline(seriesModel.uid);\n\n  if (pipeline) {\n    // When pipline finished, the currrentTask keep the last\n    // task (renderTask).\n    var task = pipeline.currentTask;\n\n    if (task) {\n      var agentStubMap = task.agentStubMap;\n\n      if (agentStubMap) {\n        task = agentStubMap.get(seriesModel.uid);\n      }\n    }\n\n    return task;\n  }\n}\n\nvar _default = SeriesModel;\nmodule.exports = _default;","/**\n * 线段包含判断\n * @param  {number}  x0\n * @param  {number}  y0\n * @param  {number}  x1\n * @param  {number}  y1\n * @param  {number}  lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {boolean}\n */\nfunction containStroke(x0, y0, x1, y1, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth;\n  var _a = 0;\n  var _b = x0; // Quick reject\n\n  if (y > y0 + _l && y > y1 + _l || y < y0 - _l && y < y1 - _l || x > x0 + _l && x > x1 + _l || x < x0 - _l && x < x1 - _l) {\n    return false;\n  }\n\n  if (x0 !== x1) {\n    _a = (y0 - y1) / (x0 - x1);\n    _b = (x0 * y1 - x1 * y0) / (x0 - x1);\n  } else {\n    return Math.abs(x - x0) <= _l / 2;\n  }\n\n  var tmp = _a * x - y + _b;\n\n  var _s = tmp * tmp / (_a * _a + 1);\n\n  return _s <= _l / 2 * _l / 2;\n}\n\nexports.containStroke = containStroke;","var Path = require(\"../Path\");\n\nvar fixClipWithShadow = require(\"../helper/fixClipWithShadow\");\n\n/**\n * 扇形\n * @module zrender/graphic/shape/Sector\n */\nvar _default = Path.extend({\n  type: 'sector',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r0: 0,\n    r: 0,\n    startAngle: 0,\n    endAngle: Math.PI * 2,\n    clockwise: true\n  },\n  brush: fixClipWithShadow(Path.prototype.brush),\n  buildPath: function (ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var r0 = Math.max(shape.r0 || 0, 0);\n    var r = Math.max(shape.r, 0);\n    var startAngle = shape.startAngle;\n    var endAngle = shape.endAngle;\n    var clockwise = shape.clockwise;\n    var unitX = Math.cos(startAngle);\n    var unitY = Math.sin(startAngle);\n    ctx.moveTo(unitX * r0 + x, unitY * r0 + y);\n    ctx.lineTo(unitX * r + x, unitY * r + y);\n    ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n    ctx.lineTo(Math.cos(endAngle) * r0 + x, Math.sin(endAngle) * r0 + y);\n\n    if (r0 !== 0) {\n      ctx.arc(x, y, r0, endAngle, startAngle, clockwise);\n    }\n\n    ctx.closePath();\n  }\n});\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar List = require(\"../../data/List\");\n\nvar createDimensions = require(\"../../data/helper/createDimensions\");\n\nvar _sourceType = require(\"../../data/helper/sourceType\");\n\nvar SOURCE_FORMAT_ORIGINAL = _sourceType.SOURCE_FORMAT_ORIGINAL;\n\nvar _dimensionHelper = require(\"../../data/helper/dimensionHelper\");\n\nvar getDimensionTypeByAxis = _dimensionHelper.getDimensionTypeByAxis;\n\nvar _model = require(\"../../util/model\");\n\nvar getDataItemValue = _model.getDataItemValue;\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\nvar _referHelper = require(\"../../model/referHelper\");\n\nvar getCoordSysDefineBySeries = _referHelper.getCoordSysDefineBySeries;\n\nvar Source = require(\"../../data/Source\");\n\nvar _dataStackHelper = require(\"../../data/helper/dataStackHelper\");\n\nvar enableDataStack = _dataStackHelper.enableDataStack;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {module:echarts/data/Source|Array} source Or raw data.\n * @param {module:echarts/model/Series} seriesModel\n * @param {Object} [opt]\n * @param {string} [opt.generateCoord]\n */\nfunction createListFromArray(source, seriesModel, opt) {\n  opt = opt || {};\n\n  if (!Source.isInstance(source)) {\n    source = Source.seriesDataToSource(source);\n  }\n\n  var coordSysName = seriesModel.get('coordinateSystem');\n  var registeredCoordSys = CoordinateSystem.get(coordSysName);\n  var coordSysDefine = getCoordSysDefineBySeries(seriesModel);\n  var coordSysDimDefs;\n\n  if (coordSysDefine) {\n    coordSysDimDefs = zrUtil.map(coordSysDefine.coordSysDims, function (dim) {\n      var dimInfo = {\n        name: dim\n      };\n      var axisModel = coordSysDefine.axisMap.get(dim);\n\n      if (axisModel) {\n        var axisType = axisModel.get('type');\n        dimInfo.type = getDimensionTypeByAxis(axisType); // dimInfo.stackable = isStackable(axisType);\n      }\n\n      return dimInfo;\n    });\n  }\n\n  if (!coordSysDimDefs) {\n    // Get dimensions from registered coordinate system\n    coordSysDimDefs = registeredCoordSys && (registeredCoordSys.getDimensionsInfo ? registeredCoordSys.getDimensionsInfo() : registeredCoordSys.dimensions.slice()) || ['x', 'y'];\n  }\n\n  var dimInfoList = createDimensions(source, {\n    coordDimensions: coordSysDimDefs,\n    generateCoord: opt.generateCoord\n  });\n  var firstCategoryDimIndex;\n  var hasNameEncode;\n  coordSysDefine && zrUtil.each(dimInfoList, function (dimInfo, dimIndex) {\n    var coordDim = dimInfo.coordDim;\n    var categoryAxisModel = coordSysDefine.categoryAxisMap.get(coordDim);\n\n    if (categoryAxisModel) {\n      if (firstCategoryDimIndex == null) {\n        firstCategoryDimIndex = dimIndex;\n      }\n\n      dimInfo.ordinalMeta = categoryAxisModel.getOrdinalMeta();\n    }\n\n    if (dimInfo.otherDims.itemName != null) {\n      hasNameEncode = true;\n    }\n  });\n\n  if (!hasNameEncode && firstCategoryDimIndex != null) {\n    dimInfoList[firstCategoryDimIndex].otherDims.itemName = 0;\n  }\n\n  var stackCalculationInfo = enableDataStack(seriesModel, dimInfoList);\n  var list = new List(dimInfoList, seriesModel);\n  list.setCalculationInfo(stackCalculationInfo);\n  var dimValueGetter = firstCategoryDimIndex != null && isNeedCompleteOrdinalData(source) ? function (itemOpt, dimName, dataIndex, dimIndex) {\n    // Use dataIndex as ordinal value in categoryAxis\n    return dimIndex === firstCategoryDimIndex ? dataIndex : this.defaultDimValueGetter(itemOpt, dimName, dataIndex, dimIndex);\n  } : null;\n  list.hasItemOption = false;\n  list.initData(source, null, dimValueGetter);\n  return list;\n}\n\nfunction isNeedCompleteOrdinalData(source) {\n  if (source.sourceFormat === SOURCE_FORMAT_ORIGINAL) {\n    var sampleItem = firstDataNotNull(source.data || []);\n    return sampleItem != null && !zrUtil.isArray(getDataItemValue(sampleItem));\n  }\n}\n\nfunction firstDataNotNull(data) {\n  var i = 0;\n\n  while (i < data.length && data[i] == null) {\n    i++;\n  }\n\n  return data[i];\n}\n\nvar _default = createListFromArray;\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar _model = require(\"../../util/model\");\n\nvar makeInner = _model.makeInner;\nvar getDataItemValue = _model.getDataItemValue;\n\nvar _referHelper = require(\"../../model/referHelper\");\n\nvar getCoordSysDefineBySeries = _referHelper.getCoordSysDefineBySeries;\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\nvar each = _util.each;\nvar map = _util.map;\nvar isArray = _util.isArray;\nvar isString = _util.isString;\nvar isObject = _util.isObject;\nvar isTypedArray = _util.isTypedArray;\nvar isArrayLike = _util.isArrayLike;\nvar extend = _util.extend;\nvar assert = _util.assert;\n\nvar Source = require(\"../Source\");\n\nvar _sourceType = require(\"./sourceType\");\n\nvar SOURCE_FORMAT_ORIGINAL = _sourceType.SOURCE_FORMAT_ORIGINAL;\nvar SOURCE_FORMAT_ARRAY_ROWS = _sourceType.SOURCE_FORMAT_ARRAY_ROWS;\nvar SOURCE_FORMAT_OBJECT_ROWS = _sourceType.SOURCE_FORMAT_OBJECT_ROWS;\nvar SOURCE_FORMAT_KEYED_COLUMNS = _sourceType.SOURCE_FORMAT_KEYED_COLUMNS;\nvar SOURCE_FORMAT_UNKNOWN = _sourceType.SOURCE_FORMAT_UNKNOWN;\nvar SOURCE_FORMAT_TYPED_ARRAY = _sourceType.SOURCE_FORMAT_TYPED_ARRAY;\nvar SERIES_LAYOUT_BY_ROW = _sourceType.SERIES_LAYOUT_BY_ROW;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar inner = makeInner();\n/**\n * @see {module:echarts/data/Source}\n * @param {module:echarts/component/dataset/DatasetModel} datasetModel\n * @return {string} sourceFormat\n */\n\nfunction detectSourceFormat(datasetModel) {\n  var data = datasetModel.option.source;\n  var sourceFormat = SOURCE_FORMAT_UNKNOWN;\n\n  if (isTypedArray(data)) {\n    sourceFormat = SOURCE_FORMAT_TYPED_ARRAY;\n  } else if (isArray(data)) {\n    // FIXME Whether tolerate null in top level array?\n    for (var i = 0, len = data.length; i < len; i++) {\n      var item = data[i];\n\n      if (item == null) {\n        continue;\n      } else if (isArray(item)) {\n        sourceFormat = SOURCE_FORMAT_ARRAY_ROWS;\n        break;\n      } else if (isObject(item)) {\n        sourceFormat = SOURCE_FORMAT_OBJECT_ROWS;\n        break;\n      }\n    }\n  } else if (isObject(data)) {\n    for (var key in data) {\n      if (data.hasOwnProperty(key) && isArrayLike(data[key])) {\n        sourceFormat = SOURCE_FORMAT_KEYED_COLUMNS;\n        break;\n      }\n    }\n  } else if (data != null) {\n    throw new Error('Invalid data');\n  }\n\n  inner(datasetModel).sourceFormat = sourceFormat;\n}\n/**\n * [Scenarios]:\n * (1) Provide source data directly:\n *     series: {\n *         encode: {...},\n *         dimensions: [...]\n *         seriesLayoutBy: 'row',\n *         data: [[...]]\n *     }\n * (2) Refer to datasetModel.\n *     series: [{\n *         encode: {...}\n *         // Ignore datasetIndex means `datasetIndex: 0`\n *         // and the dimensions defination in dataset is used\n *     }, {\n *         encode: {...},\n *         seriesLayoutBy: 'column',\n *         datasetIndex: 1\n *     }]\n *\n * Get data from series itself or datset.\n * @return {module:echarts/data/Source} source\n */\n\n\nfunction getSource(seriesModel) {\n  return inner(seriesModel).source;\n}\n/**\n * MUST be called before mergeOption of all series.\n * @param {module:echarts/model/Global} ecModel\n */\n\n\nfunction resetSourceDefaulter(ecModel) {\n  // `datasetMap` is used to make default encode.\n  inner(ecModel).datasetMap = createHashMap();\n}\n/**\n * [Caution]:\n * MUST be called after series option merged and\n * before \"series.getInitailData()\" called.\n *\n * [The rule of making default encode]:\n * Category axis (if exists) alway map to the first dimension.\n * Each other axis occupies a subsequent dimension.\n *\n * [Why make default encode]:\n * Simplify the typing of encode in option, avoiding the case like that:\n * series: [{encode: {x: 0, y: 1}}, {encode: {x: 0, y: 2}}, {encode: {x: 0, y: 3}}],\n * where the \"y\" have to be manually typed as \"1, 2, 3, ...\".\n *\n * @param {module:echarts/model/Series} seriesModel\n */\n\n\nfunction prepareSource(seriesModel) {\n  var seriesOption = seriesModel.option;\n  var data = seriesOption.data;\n  var sourceFormat = isTypedArray(data) ? SOURCE_FORMAT_TYPED_ARRAY : SOURCE_FORMAT_ORIGINAL;\n  var fromDataset = false;\n  var seriesLayoutBy = seriesOption.seriesLayoutBy;\n  var sourceHeader = seriesOption.sourceHeader;\n  var dimensionsDefine = seriesOption.dimensions;\n  var datasetModel = getDatasetModel(seriesModel);\n\n  if (datasetModel) {\n    var datasetOption = datasetModel.option;\n    data = datasetOption.source;\n    sourceFormat = inner(datasetModel).sourceFormat;\n    fromDataset = true; // These settings from series has higher priority.\n\n    seriesLayoutBy = seriesLayoutBy || datasetOption.seriesLayoutBy;\n    sourceHeader == null && (sourceHeader = datasetOption.sourceHeader);\n    dimensionsDefine = dimensionsDefine || datasetOption.dimensions;\n  }\n\n  var completeResult = completeBySourceData(data, sourceFormat, seriesLayoutBy, sourceHeader, dimensionsDefine); // Note: dataset option does not have `encode`.\n\n  var encodeDefine = seriesOption.encode;\n\n  if (!encodeDefine && datasetModel) {\n    encodeDefine = makeDefaultEncode(seriesModel, datasetModel, data, sourceFormat, seriesLayoutBy, completeResult);\n  }\n\n  inner(seriesModel).source = new Source({\n    data: data,\n    fromDataset: fromDataset,\n    seriesLayoutBy: seriesLayoutBy,\n    sourceFormat: sourceFormat,\n    dimensionsDefine: completeResult.dimensionsDefine,\n    startIndex: completeResult.startIndex,\n    dimensionsDetectCount: completeResult.dimensionsDetectCount,\n    encodeDefine: encodeDefine\n  });\n} // return {startIndex, dimensionsDefine, dimensionsCount}\n\n\nfunction completeBySourceData(data, sourceFormat, seriesLayoutBy, sourceHeader, dimensionsDefine) {\n  if (!data) {\n    return {\n      dimensionsDefine: normalizeDimensionsDefine(dimensionsDefine)\n    };\n  }\n\n  var dimensionsDetectCount;\n  var startIndex;\n  var findPotentialName;\n\n  if (sourceFormat === SOURCE_FORMAT_ARRAY_ROWS) {\n    // Rule: Most of the first line are string: it is header.\n    // Caution: consider a line with 5 string and 1 number,\n    // it still can not be sure it is a head, because the\n    // 5 string may be 5 values of category columns.\n    if (sourceHeader === 'auto' || sourceHeader == null) {\n      arrayRowsTravelFirst(function (val) {\n        // '-' is regarded as null/undefined.\n        if (val != null && val !== '-') {\n          if (isString(val)) {\n            startIndex == null && (startIndex = 1);\n          } else {\n            startIndex = 0;\n          }\n        } // 10 is an experience number, avoid long loop.\n\n      }, seriesLayoutBy, data, 10);\n    } else {\n      startIndex = sourceHeader ? 1 : 0;\n    }\n\n    if (!dimensionsDefine && startIndex === 1) {\n      dimensionsDefine = [];\n      arrayRowsTravelFirst(function (val, index) {\n        dimensionsDefine[index] = val != null ? val : '';\n      }, seriesLayoutBy, data);\n    }\n\n    dimensionsDetectCount = dimensionsDefine ? dimensionsDefine.length : seriesLayoutBy === SERIES_LAYOUT_BY_ROW ? data.length : data[0] ? data[0].length : null;\n  } else if (sourceFormat === SOURCE_FORMAT_OBJECT_ROWS) {\n    if (!dimensionsDefine) {\n      dimensionsDefine = objectRowsCollectDimensions(data);\n      findPotentialName = true;\n    }\n  } else if (sourceFormat === SOURCE_FORMAT_KEYED_COLUMNS) {\n    if (!dimensionsDefine) {\n      dimensionsDefine = [];\n      findPotentialName = true;\n      each(data, function (colArr, key) {\n        dimensionsDefine.push(key);\n      });\n    }\n  } else if (sourceFormat === SOURCE_FORMAT_ORIGINAL) {\n    var value0 = getDataItemValue(data[0]);\n    dimensionsDetectCount = isArray(value0) && value0.length || 1;\n  } else if (sourceFormat === SOURCE_FORMAT_TYPED_ARRAY) {}\n\n  var potentialNameDimIndex;\n\n  if (findPotentialName) {\n    each(dimensionsDefine, function (dim, idx) {\n      if ((isObject(dim) ? dim.name : dim) === 'name') {\n        potentialNameDimIndex = idx;\n      }\n    });\n  }\n\n  return {\n    startIndex: startIndex,\n    dimensionsDefine: normalizeDimensionsDefine(dimensionsDefine),\n    dimensionsDetectCount: dimensionsDetectCount,\n    potentialNameDimIndex: potentialNameDimIndex // TODO: potentialIdDimIdx\n\n  };\n} // Consider dimensions defined like ['A', 'price', 'B', 'price', 'C', 'price'],\n// which is reasonable. But dimension name is duplicated.\n// Returns undefined or an array contains only object without null/undefiend or string.\n\n\nfunction normalizeDimensionsDefine(dimensionsDefine) {\n  if (!dimensionsDefine) {\n    // The meaning of null/undefined is different from empty array.\n    return;\n  }\n\n  var nameMap = createHashMap();\n  return map(dimensionsDefine, function (item, index) {\n    item = extend({}, isObject(item) ? item : {\n      name: item\n    }); // User can set null in dimensions.\n    // We dont auto specify name, othewise a given name may\n    // cause it be refered unexpectedly.\n\n    if (item.name == null) {\n      return item;\n    } // Also consider number form like 2012.\n\n\n    item.name += ''; // User may also specify displayName.\n    // displayName will always exists except user not\n    // specified or dim name is not specified or detected.\n    // (A auto generated dim name will not be used as\n    // displayName).\n\n    if (item.displayName == null) {\n      item.displayName = item.name;\n    }\n\n    var exist = nameMap.get(item.name);\n\n    if (!exist) {\n      nameMap.set(item.name, {\n        count: 1\n      });\n    } else {\n      item.name += '-' + exist.count++;\n    }\n\n    return item;\n  });\n}\n\nfunction arrayRowsTravelFirst(cb, seriesLayoutBy, data, maxLoop) {\n  maxLoop == null && (maxLoop = Infinity);\n\n  if (seriesLayoutBy === SERIES_LAYOUT_BY_ROW) {\n    for (var i = 0; i < data.length && i < maxLoop; i++) {\n      cb(data[i] ? data[i][0] : null, i);\n    }\n  } else {\n    var value0 = data[0] || [];\n\n    for (var i = 0; i < value0.length && i < maxLoop; i++) {\n      cb(value0[i], i);\n    }\n  }\n}\n\nfunction objectRowsCollectDimensions(data) {\n  var firstIndex = 0;\n  var obj;\n\n  while (firstIndex < data.length && !(obj = data[firstIndex++])) {} // jshint ignore: line\n\n\n  if (obj) {\n    var dimensions = [];\n    each(obj, function (value, key) {\n      dimensions.push(key);\n    });\n    return dimensions;\n  }\n} // ??? TODO merge to completedimensions, where also has\n// default encode making logic. And the default rule\n// should depends on series? consider 'map'.\n\n\nfunction makeDefaultEncode(seriesModel, datasetModel, data, sourceFormat, seriesLayoutBy, completeResult) {\n  var coordSysDefine = getCoordSysDefineBySeries(seriesModel);\n  var encode = {}; // var encodeTooltip = [];\n  // var encodeLabel = [];\n\n  var encodeItemName = [];\n  var encodeSeriesName = [];\n  var seriesType = seriesModel.subType; // ??? TODO refactor: provide by series itself.\n  // Consider the case: 'map' series is based on geo coordSys,\n  // 'graph', 'heatmap' can be based on cartesian. But can not\n  // give default rule simply here.\n\n  var nSeriesMap = createHashMap(['pie', 'map', 'funnel']);\n  var cSeriesMap = createHashMap(['line', 'bar', 'pictorialBar', 'scatter', 'effectScatter', 'candlestick', 'boxplot']); // Usually in this case series will use the first data\n  // dimension as the \"value\" dimension, or other default\n  // processes respectively.\n\n  if (coordSysDefine && cSeriesMap.get(seriesType) != null) {\n    var ecModel = seriesModel.ecModel;\n    var datasetMap = inner(ecModel).datasetMap;\n    var key = datasetModel.uid + '_' + seriesLayoutBy;\n    var datasetRecord = datasetMap.get(key) || datasetMap.set(key, {\n      categoryWayDim: 1,\n      valueWayDim: 0\n    }); // TODO\n    // Auto detect first time axis and do arrangement.\n\n    each(coordSysDefine.coordSysDims, function (coordDim) {\n      // In value way.\n      if (coordSysDefine.firstCategoryDimIndex == null) {\n        var dataDim = datasetRecord.valueWayDim++;\n        encode[coordDim] = dataDim; // ??? TODO give a better default series name rule?\n        // especially when encode x y specified.\n        // consider: when mutiple series share one dimension\n        // category axis, series name should better use\n        // the other dimsion name. On the other hand, use\n        // both dimensions name.\n\n        encodeSeriesName.push(dataDim); // encodeTooltip.push(dataDim);\n        // encodeLabel.push(dataDim);\n      } // In category way, category axis.\n      else if (coordSysDefine.categoryAxisMap.get(coordDim)) {\n          encode[coordDim] = 0;\n          encodeItemName.push(0);\n        } // In category way, non-category axis.\n        else {\n            var dataDim = datasetRecord.categoryWayDim++;\n            encode[coordDim] = dataDim; // encodeTooltip.push(dataDim);\n            // encodeLabel.push(dataDim);\n\n            encodeSeriesName.push(dataDim);\n          }\n    });\n  } // Do not make a complex rule! Hard to code maintain and not necessary.\n  // ??? TODO refactor: provide by series itself.\n  // [{name: ..., value: ...}, ...] like:\n  else if (nSeriesMap.get(seriesType) != null) {\n      // Find the first not ordinal. (5 is an experience value)\n      var firstNotOrdinal;\n\n      for (var i = 0; i < 5 && firstNotOrdinal == null; i++) {\n        if (!doGuessOrdinal(data, sourceFormat, seriesLayoutBy, completeResult.dimensionsDefine, completeResult.startIndex, i)) {\n          firstNotOrdinal = i;\n        }\n      }\n\n      if (firstNotOrdinal != null) {\n        encode.value = firstNotOrdinal;\n        var nameDimIndex = completeResult.potentialNameDimIndex || Math.max(firstNotOrdinal - 1, 0); // By default, label use itemName in charts.\n        // So we dont set encodeLabel here.\n\n        encodeSeriesName.push(nameDimIndex);\n        encodeItemName.push(nameDimIndex); // encodeTooltip.push(firstNotOrdinal);\n      }\n    } // encodeTooltip.length && (encode.tooltip = encodeTooltip);\n  // encodeLabel.length && (encode.label = encodeLabel);\n\n\n  encodeItemName.length && (encode.itemName = encodeItemName);\n  encodeSeriesName.length && (encode.seriesName = encodeSeriesName);\n  return encode;\n}\n/**\n * If return null/undefined, indicate that should not use datasetModel.\n */\n\n\nfunction getDatasetModel(seriesModel) {\n  var option = seriesModel.option; // Caution: consider the scenario:\n  // A dataset is declared and a series is not expected to use the dataset,\n  // and at the beginning `setOption({series: { noData })` (just prepare other\n  // option but no data), then `setOption({series: {data: [...]}); In this case,\n  // the user should set an empty array to avoid that dataset is used by default.\n\n  var thisData = option.data;\n\n  if (!thisData) {\n    return seriesModel.ecModel.getComponent('dataset', option.datasetIndex || 0);\n  }\n}\n/**\n * The rule should not be complex, otherwise user might not\n * be able to known where the data is wrong.\n * The code is ugly, but how to make it neat?\n *\n * @param {module:echars/data/Source} source\n * @param {number} dimIndex\n * @return {boolean} Whether ordinal.\n */\n\n\nfunction guessOrdinal(source, dimIndex) {\n  return doGuessOrdinal(source.data, source.sourceFormat, source.seriesLayoutBy, source.dimensionsDefine, source.startIndex, dimIndex);\n} // dimIndex may be overflow source data.\n\n\nfunction doGuessOrdinal(data, sourceFormat, seriesLayoutBy, dimensionsDefine, startIndex, dimIndex) {\n  var result; // Experience value.\n\n  var maxLoop = 5;\n\n  if (isTypedArray(data)) {\n    return false;\n  } // When sourceType is 'objectRows' or 'keyedColumns', dimensionsDefine\n  // always exists in source.\n\n\n  var dimName;\n\n  if (dimensionsDefine) {\n    dimName = dimensionsDefine[dimIndex];\n    dimName = isObject(dimName) ? dimName.name : dimName;\n  }\n\n  if (sourceFormat === SOURCE_FORMAT_ARRAY_ROWS) {\n    if (seriesLayoutBy === SERIES_LAYOUT_BY_ROW) {\n      var sample = data[dimIndex];\n\n      for (var i = 0; i < (sample || []).length && i < maxLoop; i++) {\n        if ((result = detectValue(sample[startIndex + i])) != null) {\n          return result;\n        }\n      }\n    } else {\n      for (var i = 0; i < data.length && i < maxLoop; i++) {\n        var row = data[startIndex + i];\n\n        if (row && (result = detectValue(row[dimIndex])) != null) {\n          return result;\n        }\n      }\n    }\n  } else if (sourceFormat === SOURCE_FORMAT_OBJECT_ROWS) {\n    if (!dimName) {\n      return;\n    }\n\n    for (var i = 0; i < data.length && i < maxLoop; i++) {\n      var item = data[i];\n\n      if (item && (result = detectValue(item[dimName])) != null) {\n        return result;\n      }\n    }\n  } else if (sourceFormat === SOURCE_FORMAT_KEYED_COLUMNS) {\n    if (!dimName) {\n      return;\n    }\n\n    var sample = data[dimName];\n\n    if (!sample || isTypedArray(sample)) {\n      return false;\n    }\n\n    for (var i = 0; i < sample.length && i < maxLoop; i++) {\n      if ((result = detectValue(sample[i])) != null) {\n        return result;\n      }\n    }\n  } else if (sourceFormat === SOURCE_FORMAT_ORIGINAL) {\n    for (var i = 0; i < data.length && i < maxLoop; i++) {\n      var item = data[i];\n      var val = getDataItemValue(item);\n\n      if (!isArray(val)) {\n        return false;\n      }\n\n      if ((result = detectValue(val[dimIndex])) != null) {\n        return result;\n      }\n    }\n  }\n\n  function detectValue(val) {\n    // Consider usage convenience, '1', '2' will be treated as \"number\".\n    // `isFinit('')` get `true`.\n    if (val != null && isFinite(val) && val !== '') {\n      return false;\n    } else if (isString(val) && val !== '-') {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nexports.detectSourceFormat = detectSourceFormat;\nexports.getSource = getSource;\nexports.resetSourceDefaulter = resetSourceDefaulter;\nexports.prepareSource = prepareSource;\nexports.guessOrdinal = guessOrdinal;","var numberUtil = require(\"../util/number\");\n\nvar formatUtil = require(\"../util/format\");\n\nvar Scale = require(\"./Scale\");\n\nvar helper = require(\"./helper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Interval scale\n * @module echarts/scale/Interval\n */\nvar roundNumber = numberUtil.round;\n/**\n * @alias module:echarts/coord/scale/Interval\n * @constructor\n */\n\nvar IntervalScale = Scale.extend({\n  type: 'interval',\n  _interval: 0,\n  _intervalPrecision: 2,\n  setExtent: function (start, end) {\n    var thisExtent = this._extent; //start,end may be a Number like '25',so...\n\n    if (!isNaN(start)) {\n      thisExtent[0] = parseFloat(start);\n    }\n\n    if (!isNaN(end)) {\n      thisExtent[1] = parseFloat(end);\n    }\n  },\n  unionExtent: function (other) {\n    var extent = this._extent;\n    other[0] < extent[0] && (extent[0] = other[0]);\n    other[1] > extent[1] && (extent[1] = other[1]); // unionExtent may called by it's sub classes\n\n    IntervalScale.prototype.setExtent.call(this, extent[0], extent[1]);\n  },\n\n  /**\n   * Get interval\n   */\n  getInterval: function () {\n    return this._interval;\n  },\n\n  /**\n   * Set interval\n   */\n  setInterval: function (interval) {\n    this._interval = interval; // Dropped auto calculated niceExtent and use user setted extent\n    // We assume user wan't to set both interval, min, max to get a better result\n\n    this._niceExtent = this._extent.slice();\n    this._intervalPrecision = helper.getIntervalPrecision(interval);\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getTicks: function () {\n    return helper.intervalScaleGetTicks(this._interval, this._extent, this._niceExtent, this._intervalPrecision);\n  },\n\n  /**\n   * @param {number} data\n   * @param {Object} [opt]\n   * @param {number|string} [opt.precision] If 'auto', use nice presision.\n   * @param {boolean} [opt.pad] returns 1.50 but not 1.5 if precision is 2.\n   * @return {string}\n   */\n  getLabel: function (data, opt) {\n    if (data == null) {\n      return '';\n    }\n\n    var precision = opt && opt.precision;\n\n    if (precision == null) {\n      precision = numberUtil.getPrecisionSafe(data) || 0;\n    } else if (precision === 'auto') {\n      // Should be more precise then tick.\n      precision = this._intervalPrecision;\n    } // (1) If `precision` is set, 12.005 should be display as '12.00500'.\n    // (2) Use roundNumber (toFixed) to avoid scientific notation like '3.5e-7'.\n\n\n    data = roundNumber(data, precision, true);\n    return formatUtil.addCommas(data);\n  },\n\n  /**\n   * Update interval and extent of intervals for nice ticks\n   *\n   * @param {number} [splitNumber = 5] Desired number of ticks\n   * @param {number} [minInterval]\n   * @param {number} [maxInterval]\n   */\n  niceTicks: function (splitNumber, minInterval, maxInterval) {\n    splitNumber = splitNumber || 5;\n    var extent = this._extent;\n    var span = extent[1] - extent[0];\n\n    if (!isFinite(span)) {\n      return;\n    } // User may set axis min 0 and data are all negative\n    // FIXME If it needs to reverse ?\n\n\n    if (span < 0) {\n      span = -span;\n      extent.reverse();\n    }\n\n    var result = helper.intervalScaleNiceTicks(extent, splitNumber, minInterval, maxInterval);\n    this._intervalPrecision = result.intervalPrecision;\n    this._interval = result.interval;\n    this._niceExtent = result.niceTickExtent;\n  },\n\n  /**\n   * Nice extent.\n   * @param {Object} opt\n   * @param {number} [opt.splitNumber = 5] Given approx tick number\n   * @param {boolean} [opt.fixMin=false]\n   * @param {boolean} [opt.fixMax=false]\n   * @param {boolean} [opt.minInterval]\n   * @param {boolean} [opt.maxInterval]\n   */\n  niceExtent: function (opt) {\n    var extent = this._extent; // If extent start and end are same, expand them\n\n    if (extent[0] === extent[1]) {\n      if (extent[0] !== 0) {\n        // Expand extent\n        var expandSize = extent[0]; // In the fowllowing case\n        //      Axis has been fixed max 100\n        //      Plus data are all 100 and axis extent are [100, 100].\n        // Extend to the both side will cause expanded max is larger than fixed max.\n        // So only expand to the smaller side.\n\n        if (!opt.fixMax) {\n          extent[1] += expandSize / 2;\n          extent[0] -= expandSize / 2;\n        } else {\n          extent[0] -= expandSize / 2;\n        }\n      } else {\n        extent[1] = 1;\n      }\n    }\n\n    var span = extent[1] - extent[0]; // If there are no data and extent are [Infinity, -Infinity]\n\n    if (!isFinite(span)) {\n      extent[0] = 0;\n      extent[1] = 1;\n    }\n\n    this.niceTicks(opt.splitNumber, opt.minInterval, opt.maxInterval); // var extent = this._extent;\n\n    var interval = this._interval;\n\n    if (!opt.fixMin) {\n      extent[0] = roundNumber(Math.floor(extent[0] / interval) * interval);\n    }\n\n    if (!opt.fixMax) {\n      extent[1] = roundNumber(Math.ceil(extent[1] / interval) * interval);\n    }\n  }\n});\n/**\n * @return {module:echarts/scale/Time}\n */\n\nIntervalScale.create = function () {\n  return new IntervalScale();\n};\n\nvar _default = IntervalScale;\nmodule.exports = _default;","var Gradient = require(\"zrender/lib/graphic/Gradient\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = {\n  createOnAllSeries: true,\n  performRawSeries: true,\n  reset: function (seriesModel, ecModel) {\n    var data = seriesModel.getData();\n    var colorAccessPath = (seriesModel.visualColorAccessPath || 'itemStyle.color').split('.');\n    var color = seriesModel.get(colorAccessPath) // Set in itemStyle\n    || seriesModel.getColorFromPalette( // TODO series count changed.\n    seriesModel.name, null, ecModel.getSeriesCount()); // Default color\n    // FIXME Set color function or use the platte color\n\n    data.setVisual('color', color); // Only visible series has each data be visual encoded\n\n    if (!ecModel.isSeriesFiltered(seriesModel)) {\n      if (typeof color === 'function' && !(color instanceof Gradient)) {\n        data.each(function (idx) {\n          data.setItemVisual(idx, 'color', color(seriesModel.getDataParams(idx)));\n        });\n      } // itemStyle in each data item\n\n\n      var dataEach = function (data, idx) {\n        var itemModel = data.getItemModel(idx);\n        var color = itemModel.get(colorAccessPath, true);\n\n        if (color != null) {\n          data.setItemVisual(idx, 'color', color);\n        }\n      };\n\n      return {\n        dataEach: data.hasItemOption ? dataEach : null\n      };\n    }\n  }\n};\nmodule.exports = _default;","var _default = typeof window !== 'undefined' && (window.requestAnimationFrame && window.requestAnimationFrame.bind(window) || // https://github.com/ecomfe/zrender/issues/189#issuecomment-224919809\nwindow.msRequestAnimationFrame && window.msRequestAnimationFrame.bind(window) || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame) || function (func) {\n  setTimeout(func, 16);\n};\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// (1) The code `if (__DEV__) ...` can be removed by build tool.\n// (2) If intend to use `__DEV__`, this module should be imported. Use a global\n// variable `__DEV__` may cause that miss the declaration (see #6535), or the\n// declaration is behind of the using position (for example in `Model.extent`,\n// And tools like rollup can not analysis the dependency if not import).\nvar dev; // In browser\n\nif (typeof window !== 'undefined') {\n  dev = window.__DEV__;\n} // In node\nelse if (typeof global !== 'undefined') {\n    dev = global.__DEV__;\n  }\n\nif (typeof dev === 'undefined') {\n  dev = true;\n}\n\nvar __DEV__ = dev;\nexports.__DEV__ = __DEV__;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar textContain = require(\"zrender/lib/contain/text\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar axisHelper = require(\"../../coord/axisHelper\");\n\nvar AxisBuilder = require(\"../axis/AxisBuilder\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {module:echarts/model/Model} axisPointerModel\n */\nfunction buildElStyle(axisPointerModel) {\n  var axisPointerType = axisPointerModel.get('type');\n  var styleModel = axisPointerModel.getModel(axisPointerType + 'Style');\n  var style;\n\n  if (axisPointerType === 'line') {\n    style = styleModel.getLineStyle();\n    style.fill = null;\n  } else if (axisPointerType === 'shadow') {\n    style = styleModel.getAreaStyle();\n    style.stroke = null;\n  }\n\n  return style;\n}\n/**\n * @param {Function} labelPos {align, verticalAlign, position}\n */\n\n\nfunction buildLabelElOption(elOption, axisModel, axisPointerModel, api, labelPos) {\n  var value = axisPointerModel.get('value');\n  var text = getValueLabel(value, axisModel.axis, axisModel.ecModel, axisPointerModel.get('seriesDataIndices'), {\n    precision: axisPointerModel.get('label.precision'),\n    formatter: axisPointerModel.get('label.formatter')\n  });\n  var labelModel = axisPointerModel.getModel('label');\n  var paddings = formatUtil.normalizeCssArray(labelModel.get('padding') || 0);\n  var font = labelModel.getFont();\n  var textRect = textContain.getBoundingRect(text, font);\n  var position = labelPos.position;\n  var width = textRect.width + paddings[1] + paddings[3];\n  var height = textRect.height + paddings[0] + paddings[2]; // Adjust by align.\n\n  var align = labelPos.align;\n  align === 'right' && (position[0] -= width);\n  align === 'center' && (position[0] -= width / 2);\n  var verticalAlign = labelPos.verticalAlign;\n  verticalAlign === 'bottom' && (position[1] -= height);\n  verticalAlign === 'middle' && (position[1] -= height / 2); // Not overflow ec container\n\n  confineInContainer(position, width, height, api);\n  var bgColor = labelModel.get('backgroundColor');\n\n  if (!bgColor || bgColor === 'auto') {\n    bgColor = axisModel.get('axisLine.lineStyle.color');\n  }\n\n  elOption.label = {\n    shape: {\n      x: 0,\n      y: 0,\n      width: width,\n      height: height,\n      r: labelModel.get('borderRadius')\n    },\n    position: position.slice(),\n    // TODO: rich\n    style: {\n      text: text,\n      textFont: font,\n      textFill: labelModel.getTextColor(),\n      textPosition: 'inside',\n      fill: bgColor,\n      stroke: labelModel.get('borderColor') || 'transparent',\n      lineWidth: labelModel.get('borderWidth') || 0,\n      shadowBlur: labelModel.get('shadowBlur'),\n      shadowColor: labelModel.get('shadowColor'),\n      shadowOffsetX: labelModel.get('shadowOffsetX'),\n      shadowOffsetY: labelModel.get('shadowOffsetY')\n    },\n    // Lable should be over axisPointer.\n    z2: 10\n  };\n} // Do not overflow ec container\n\n\nfunction confineInContainer(position, width, height, api) {\n  var viewWidth = api.getWidth();\n  var viewHeight = api.getHeight();\n  position[0] = Math.min(position[0] + width, viewWidth) - width;\n  position[1] = Math.min(position[1] + height, viewHeight) - height;\n  position[0] = Math.max(position[0], 0);\n  position[1] = Math.max(position[1], 0);\n}\n/**\n * @param {number} value\n * @param {module:echarts/coord/Axis} axis\n * @param {module:echarts/model/Global} ecModel\n * @param {Object} opt\n * @param {Array.<Object>} seriesDataIndices\n * @param {number|string} opt.precision 'auto' or a number\n * @param {string|Function} opt.formatter label formatter\n */\n\n\nfunction getValueLabel(value, axis, ecModel, seriesDataIndices, opt) {\n  value = axis.scale.parse(value);\n  var text = axis.scale.getLabel( // If `precision` is set, width can be fixed (like '12.00500'), which\n  // helps to debounce when when moving label.\n  value, {\n    precision: opt.precision\n  });\n  var formatter = opt.formatter;\n\n  if (formatter) {\n    var params = {\n      value: axisHelper.getAxisRawValue(axis, value),\n      seriesData: []\n    };\n    zrUtil.each(seriesDataIndices, function (idxItem) {\n      var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n      var dataIndex = idxItem.dataIndexInside;\n      var dataParams = series && series.getDataParams(dataIndex);\n      dataParams && params.seriesData.push(dataParams);\n    });\n\n    if (zrUtil.isString(formatter)) {\n      text = formatter.replace('{value}', text);\n    } else if (zrUtil.isFunction(formatter)) {\n      text = formatter(params);\n    }\n  }\n\n  return text;\n}\n/**\n * @param {module:echarts/coord/Axis} axis\n * @param {number} value\n * @param {Object} layoutInfo {\n *  rotation, position, labelOffset, labelDirection, labelMargin\n * }\n */\n\n\nfunction getTransformedPosition(axis, value, layoutInfo) {\n  var transform = matrix.create();\n  matrix.rotate(transform, transform, layoutInfo.rotation);\n  matrix.translate(transform, transform, layoutInfo.position);\n  return graphic.applyTransform([axis.dataToCoord(value), (layoutInfo.labelOffset || 0) + (layoutInfo.labelDirection || 1) * (layoutInfo.labelMargin || 0)], transform);\n}\n\nfunction buildCartesianSingleLabelElOption(value, elOption, layoutInfo, axisModel, axisPointerModel, api) {\n  var textLayout = AxisBuilder.innerTextLayout(layoutInfo.rotation, 0, layoutInfo.labelDirection);\n  layoutInfo.labelMargin = axisPointerModel.get('label.margin');\n  buildLabelElOption(elOption, axisModel, axisPointerModel, api, {\n    position: getTransformedPosition(axisModel.axis, value, layoutInfo),\n    align: textLayout.textAlign,\n    verticalAlign: textLayout.textVerticalAlign\n  });\n}\n/**\n * @param {Array.<number>} p1\n * @param {Array.<number>} p2\n * @param {number} [xDimIndex=0] or 1\n */\n\n\nfunction makeLineShape(p1, p2, xDimIndex) {\n  xDimIndex = xDimIndex || 0;\n  return {\n    x1: p1[xDimIndex],\n    y1: p1[1 - xDimIndex],\n    x2: p2[xDimIndex],\n    y2: p2[1 - xDimIndex]\n  };\n}\n/**\n * @param {Array.<number>} xy\n * @param {Array.<number>} wh\n * @param {number} [xDimIndex=0] or 1\n */\n\n\nfunction makeRectShape(xy, wh, xDimIndex) {\n  xDimIndex = xDimIndex || 0;\n  return {\n    x: xy[xDimIndex],\n    y: xy[1 - xDimIndex],\n    width: wh[xDimIndex],\n    height: wh[1 - xDimIndex]\n  };\n}\n\nfunction makeSectorShape(cx, cy, r0, r, startAngle, endAngle) {\n  return {\n    cx: cx,\n    cy: cy,\n    r0: r0,\n    r: r,\n    startAngle: startAngle,\n    endAngle: endAngle,\n    clockwise: true\n  };\n}\n\nexports.buildElStyle = buildElStyle;\nexports.buildLabelElOption = buildLabelElOption;\nexports.getValueLabel = getValueLabel;\nexports.getTransformedPosition = getTransformedPosition;\nexports.buildCartesianSingleLabelElOption = buildCartesianSingleLabelElOption;\nexports.makeLineShape = makeLineShape;\nexports.makeRectShape = makeRectShape;\nexports.makeSectorShape = makeSectorShape;","var echarts = require(\"../../echarts\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = echarts.extendComponentModel({\n  type: 'tooltip',\n  dependencies: ['axisPointer'],\n  defaultOption: {\n    zlevel: 0,\n    z: 8,\n    show: true,\n    // tooltip主体内容\n    showContent: true,\n    // 'trigger' only works on coordinate system.\n    // 'item' | 'axis' | 'none'\n    trigger: 'item',\n    // 'click' | 'mousemove' | 'none'\n    triggerOn: 'mousemove|click',\n    alwaysShowContent: false,\n    displayMode: 'single',\n    // 'single' | 'multipleByCoordSys'\n    // 位置 {Array} | {Function}\n    // position: null\n    // Consider triggered from axisPointer handle, verticalAlign should be 'middle'\n    // align: null,\n    // verticalAlign: null,\n    // 是否约束 content 在 viewRect 中。默认 false 是为了兼容以前版本。\n    confine: false,\n    // 内容格式器：{string}（Template） ¦ {Function}\n    // formatter: null\n    showDelay: 0,\n    // 隐藏延迟，单位ms\n    hideDelay: 100,\n    // 动画变换时间，单位s\n    transitionDuration: 0.4,\n    enterable: false,\n    // 提示背景颜色，默认为透明度为0.7的黑色\n    backgroundColor: 'rgba(50,50,50,0.7)',\n    // 提示边框颜色\n    borderColor: '#333',\n    // 提示边框圆角，单位px，默认为4\n    borderRadius: 4,\n    // 提示边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 提示内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // Extra css text\n    extraCssText: '',\n    // 坐标轴指示器，坐标轴触发有效\n    axisPointer: {\n      // 默认为直线\n      // 可选为：'line' | 'shadow' | 'cross'\n      type: 'line',\n      // type 为 line 的时候有效，指定 tooltip line 所在的轴，可选\n      // 可选 'x' | 'y' | 'angle' | 'radius' | 'auto'\n      // 默认 'auto'，会选择类型为 category 的轴，对于双数值轴，笛卡尔坐标系会默认选择 x 轴\n      // 极坐标系会默认选择 angle 轴\n      axis: 'auto',\n      animation: 'auto',\n      animationDurationUpdate: 200,\n      animationEasingUpdate: 'exponentialOut',\n      crossStyle: {\n        color: '#999',\n        width: 1,\n        type: 'dashed',\n        // TODO formatter\n        textStyle: {} // lineStyle and shadowStyle should not be specified here,\n        // otherwise it will always override those styles on option.axisPointer.\n\n      }\n    },\n    textStyle: {\n      color: '#fff',\n      fontSize: 14\n    }\n  }\n});\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../util/graphic\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar PI = Math.PI;\n/**\n * @param {module:echarts/ExtensionAPI} api\n * @param {Object} [opts]\n * @param {string} [opts.text]\n * @param {string} [opts.color]\n * @param {string} [opts.textColor]\n * @return {module:zrender/Element}\n */\n\nfunction _default(api, opts) {\n  opts = opts || {};\n  zrUtil.defaults(opts, {\n    text: 'loading',\n    color: '#c23531',\n    textColor: '#000',\n    maskColor: 'rgba(255, 255, 255, 0.8)',\n    zlevel: 0\n  });\n  var mask = new graphic.Rect({\n    style: {\n      fill: opts.maskColor\n    },\n    zlevel: opts.zlevel,\n    z: 10000\n  });\n  var arc = new graphic.Arc({\n    shape: {\n      startAngle: -PI / 2,\n      endAngle: -PI / 2 + 0.1,\n      r: 10\n    },\n    style: {\n      stroke: opts.color,\n      lineCap: 'round',\n      lineWidth: 5\n    },\n    zlevel: opts.zlevel,\n    z: 10001\n  });\n  var labelRect = new graphic.Rect({\n    style: {\n      fill: 'none',\n      text: opts.text,\n      textPosition: 'right',\n      textDistance: 10,\n      textFill: opts.textColor\n    },\n    zlevel: opts.zlevel,\n    z: 10001\n  });\n  arc.animateShape(true).when(1000, {\n    endAngle: PI * 3 / 2\n  }).start('circularInOut');\n  arc.animateShape(true).when(1000, {\n    startAngle: PI * 3 / 2\n  }).delay(300).start('circularInOut');\n  var group = new graphic.Group();\n  group.add(arc);\n  group.add(labelRect);\n  group.add(mask); // Inject resize\n\n  group.resize = function () {\n    var cx = api.getWidth() / 2;\n    var cy = api.getHeight() / 2;\n    arc.setShape({\n      cx: cx,\n      cy: cy\n    });\n    var r = arc.shape.r;\n    labelRect.setShape({\n      x: cx - r,\n      y: cy - r,\n      width: r * 2,\n      height: r * 2\n    });\n    mask.setShape({\n      x: 0,\n      y: 0,\n      width: api.getWidth(),\n      height: api.getHeight()\n    });\n  };\n\n  group.resize();\n  return group;\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Region = require(\"./Region\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Parse and decode geo json\n * @module echarts/coord/geo/parseGeoJson\n */\nfunction decode(json) {\n  if (!json.UTF8Encoding) {\n    return json;\n  }\n\n  var encodeScale = json.UTF8Scale;\n\n  if (encodeScale == null) {\n    encodeScale = 1024;\n  }\n\n  var features = json.features;\n\n  for (var f = 0; f < features.length; f++) {\n    var feature = features[f];\n    var geometry = feature.geometry;\n    var coordinates = geometry.coordinates;\n    var encodeOffsets = geometry.encodeOffsets;\n\n    for (var c = 0; c < coordinates.length; c++) {\n      var coordinate = coordinates[c];\n\n      if (geometry.type === 'Polygon') {\n        coordinates[c] = decodePolygon(coordinate, encodeOffsets[c], encodeScale);\n      } else if (geometry.type === 'MultiPolygon') {\n        for (var c2 = 0; c2 < coordinate.length; c2++) {\n          var polygon = coordinate[c2];\n          coordinate[c2] = decodePolygon(polygon, encodeOffsets[c][c2], encodeScale);\n        }\n      }\n    }\n  } // Has been decoded\n\n\n  json.UTF8Encoding = false;\n  return json;\n}\n\nfunction decodePolygon(coordinate, encodeOffsets, encodeScale) {\n  var result = [];\n  var prevX = encodeOffsets[0];\n  var prevY = encodeOffsets[1];\n\n  for (var i = 0; i < coordinate.length; i += 2) {\n    var x = coordinate.charCodeAt(i) - 64;\n    var y = coordinate.charCodeAt(i + 1) - 64; // ZigZag decoding\n\n    x = x >> 1 ^ -(x & 1);\n    y = y >> 1 ^ -(y & 1); // Delta deocding\n\n    x += prevX;\n    y += prevY;\n    prevX = x;\n    prevY = y; // Dequantize\n\n    result.push([x / encodeScale, y / encodeScale]);\n  }\n\n  return result;\n}\n/**\n * @alias module:echarts/coord/geo/parseGeoJson\n * @param {Object} geoJson\n * @return {module:zrender/container/Group}\n */\n\n\nfunction _default(geoJson) {\n  decode(geoJson);\n  return zrUtil.map(zrUtil.filter(geoJson.features, function (featureObj) {\n    // Output of mapshaper may have geometry null\n    return featureObj.geometry && featureObj.properties && featureObj.geometry.coordinates.length > 0;\n  }), function (featureObj) {\n    var properties = featureObj.properties;\n    var geo = featureObj.geometry;\n    var coordinates = geo.coordinates;\n    var geometries = [];\n\n    if (geo.type === 'Polygon') {\n      geometries.push({\n        type: 'polygon',\n        // According to the GeoJSON specification.\n        // First must be exterior, and the rest are all interior(holes).\n        exterior: coordinates[0],\n        interiors: coordinates.slice(1)\n      });\n    }\n\n    if (geo.type === 'MultiPolygon') {\n      zrUtil.each(coordinates, function (item) {\n        if (item[0]) {\n          geometries.push({\n            type: 'polygon',\n            exterior: item[0],\n            interiors: item.slice(1)\n          });\n        }\n      });\n    }\n\n    var region = new Region(properties.name, geometries, properties.cp);\n    region.properties = properties;\n    return region;\n  });\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Scale = require(\"./Scale\");\n\nvar OrdinalMeta = require(\"../data/OrdinalMeta\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Linear continuous scale\n * @module echarts/coord/scale/Ordinal\n *\n * http://en.wikipedia.org/wiki/Level_of_measurement\n */\n// FIXME only one data\nvar scaleProto = Scale.prototype;\nvar OrdinalScale = Scale.extend({\n  type: 'ordinal',\n\n  /**\n   * @param {module:echarts/data/OrdianlMeta|Array.<string>} ordinalMeta\n   */\n  init: function (ordinalMeta, extent) {\n    // Caution: Should not use instanceof, consider ec-extensions using\n    // import approach to get OrdinalMeta class.\n    if (!ordinalMeta || zrUtil.isArray(ordinalMeta)) {\n      ordinalMeta = new OrdinalMeta({\n        categories: ordinalMeta\n      });\n    }\n\n    this._ordinalMeta = ordinalMeta;\n    this._extent = extent || [0, ordinalMeta.categories.length - 1];\n  },\n  parse: function (val) {\n    return typeof val === 'string' ? this._ordinalMeta.getOrdinal(val) // val might be float.\n    : Math.round(val);\n  },\n  contain: function (rank) {\n    rank = this.parse(rank);\n    return scaleProto.contain.call(this, rank) && this._ordinalMeta.categories[rank] != null;\n  },\n\n  /**\n   * Normalize given rank or name to linear [0, 1]\n   * @param {number|string} [val]\n   * @return {number}\n   */\n  normalize: function (val) {\n    return scaleProto.normalize.call(this, this.parse(val));\n  },\n  scale: function (val) {\n    return Math.round(scaleProto.scale.call(this, val));\n  },\n\n  /**\n   * @return {Array}\n   */\n  getTicks: function () {\n    var ticks = [];\n    var extent = this._extent;\n    var rank = extent[0];\n\n    while (rank <= extent[1]) {\n      ticks.push(rank);\n      rank++;\n    }\n\n    return ticks;\n  },\n\n  /**\n   * Get item on rank n\n   * @param {number} n\n   * @return {string}\n   */\n  getLabel: function (n) {\n    if (!this.isBlank()) {\n      // Note that if no data, ordinalMeta.categories is an empty array.\n      return this._ordinalMeta.categories[n];\n    }\n  },\n\n  /**\n   * @return {number}\n   */\n  count: function () {\n    return this._extent[1] - this._extent[0] + 1;\n  },\n\n  /**\n   * @override\n   */\n  unionExtentFromData: function (data, dim) {\n    this.unionExtent(data.getApproximateExtent(dim));\n  },\n  getOrdinalMeta: function () {\n    return this._ordinalMeta;\n  },\n  niceTicks: zrUtil.noop,\n  niceExtent: zrUtil.noop\n});\n/**\n * @return {module:echarts/scale/Time}\n */\n\nOrdinalScale.create = function () {\n  return new OrdinalScale();\n};\n\nvar _default = OrdinalScale;\nmodule.exports = _default;","var smoothSpline = require(\"./smoothSpline\");\n\nvar smoothBezier = require(\"./smoothBezier\");\n\nfunction buildPath(ctx, shape, closePath) {\n  var points = shape.points;\n  var smooth = shape.smooth;\n\n  if (points && points.length >= 2) {\n    if (smooth && smooth !== 'spline') {\n      var controlPoints = smoothBezier(points, smooth, closePath, shape.smoothConstraint);\n      ctx.moveTo(points[0][0], points[0][1]);\n      var len = points.length;\n\n      for (var i = 0; i < (closePath ? len : len - 1); i++) {\n        var cp1 = controlPoints[i * 2];\n        var cp2 = controlPoints[i * 2 + 1];\n        var p = points[(i + 1) % len];\n        ctx.bezierCurveTo(cp1[0], cp1[1], cp2[0], cp2[1], p[0], p[1]);\n      }\n    } else {\n      if (smooth === 'spline') {\n        points = smoothSpline(points, closePath);\n      }\n\n      ctx.moveTo(points[0][0], points[0][1]);\n\n      for (var i = 1, l = points.length; i < l; i++) {\n        ctx.lineTo(points[i][0], points[i][1]);\n      }\n    }\n\n    closePath && ctx.closePath();\n  }\n}\n\nexports.buildPath = buildPath;","var LRU = require(\"../../core/LRU\");\n\nvar globalImageCache = new LRU(50);\n/**\n * @param {string|HTMLImageElement|HTMLCanvasElement|Canvas} newImageOrSrc\n * @return {HTMLImageElement|HTMLCanvasElement|Canvas} image\n */\n\nfunction findExistImage(newImageOrSrc) {\n  if (typeof newImageOrSrc === 'string') {\n    var cachedImgObj = globalImageCache.get(newImageOrSrc);\n    return cachedImgObj && cachedImgObj.image;\n  } else {\n    return newImageOrSrc;\n  }\n}\n/**\n * Caution: User should cache loaded images, but not just count on LRU.\n * Consider if required images more than LRU size, will dead loop occur?\n *\n * @param {string|HTMLImageElement|HTMLCanvasElement|Canvas} newImageOrSrc\n * @param {HTMLImageElement|HTMLCanvasElement|Canvas} image Existent image.\n * @param {module:zrender/Element} [hostEl] For calling `dirty`.\n * @param {Function} [cb] params: (image, cbPayload)\n * @param {Object} [cbPayload] Payload on cb calling.\n * @return {HTMLImageElement|HTMLCanvasElement|Canvas} image\n */\n\n\nfunction createOrUpdateImage(newImageOrSrc, image, hostEl, cb, cbPayload) {\n  if (!newImageOrSrc) {\n    return image;\n  } else if (typeof newImageOrSrc === 'string') {\n    // Image should not be loaded repeatly.\n    if (image && image.__zrImageSrc === newImageOrSrc || !hostEl) {\n      return image;\n    } // Only when there is no existent image or existent image src\n    // is different, this method is responsible for load.\n\n\n    var cachedImgObj = globalImageCache.get(newImageOrSrc);\n    var pendingWrap = {\n      hostEl: hostEl,\n      cb: cb,\n      cbPayload: cbPayload\n    };\n\n    if (cachedImgObj) {\n      image = cachedImgObj.image;\n      !isImageReady(image) && cachedImgObj.pending.push(pendingWrap);\n    } else {\n      !image && (image = new Image());\n      image.onload = imageOnLoad;\n      globalImageCache.put(newImageOrSrc, image.__cachedImgObj = {\n        image: image,\n        pending: [pendingWrap]\n      });\n      image.src = image.__zrImageSrc = newImageOrSrc;\n    }\n\n    return image;\n  } // newImageOrSrc is an HTMLImageElement or HTMLCanvasElement or Canvas\n  else {\n      return newImageOrSrc;\n    }\n}\n\nfunction imageOnLoad() {\n  var cachedImgObj = this.__cachedImgObj;\n  this.onload = this.__cachedImgObj = null;\n\n  for (var i = 0; i < cachedImgObj.pending.length; i++) {\n    var pendingWrap = cachedImgObj.pending[i];\n    var cb = pendingWrap.cb;\n    cb && cb(this, pendingWrap.cbPayload);\n    pendingWrap.hostEl.dirty();\n  }\n\n  cachedImgObj.pending.length = 0;\n}\n\nfunction isImageReady(image) {\n  return image && image.width && image.height;\n}\n\nexports.findExistImage = findExistImage;\nexports.createOrUpdateImage = createOrUpdateImage;\nexports.isImageReady = isImageReady;","var curve = require(\"./curve\");\n\nvar vec2 = require(\"./vector\");\n\nvar bbox = require(\"./bbox\");\n\nvar BoundingRect = require(\"./BoundingRect\");\n\nvar _config = require(\"../config\");\n\nvar dpr = _config.devicePixelRatio;\n\n/**\n * Path 代理，可以在`buildPath`中用于替代`ctx`, 会保存每个path操作的命令到pathCommands属性中\n * 可以用于 isInsidePath 判断以及获取boundingRect\n *\n * @module zrender/core/PathProxy\n * @author Yi Shen (http://www.github.com/pissang)\n */\n// TODO getTotalLength, getPointAtLength\nvar CMD = {\n  M: 1,\n  L: 2,\n  C: 3,\n  Q: 4,\n  A: 5,\n  Z: 6,\n  // Rect\n  R: 7\n}; // var CMD_MEM_SIZE = {\n//     M: 3,\n//     L: 3,\n//     C: 7,\n//     Q: 5,\n//     A: 9,\n//     R: 5,\n//     Z: 1\n// };\n\nvar min = [];\nvar max = [];\nvar min2 = [];\nvar max2 = [];\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathCos = Math.cos;\nvar mathSin = Math.sin;\nvar mathSqrt = Math.sqrt;\nvar mathAbs = Math.abs;\nvar hasTypedArray = typeof Float32Array != 'undefined';\n/**\n * @alias module:zrender/core/PathProxy\n * @constructor\n */\n\nvar PathProxy = function (notSaveData) {\n  this._saveData = !(notSaveData || false);\n\n  if (this._saveData) {\n    /**\n     * Path data. Stored as flat array\n     * @type {Array.<Object>}\n     */\n    this.data = [];\n  }\n\n  this._ctx = null;\n};\n/**\n * 快速计算Path包围盒（并不是最小包围盒）\n * @return {Object}\n */\n\n\nPathProxy.prototype = {\n  constructor: PathProxy,\n  _xi: 0,\n  _yi: 0,\n  _x0: 0,\n  _y0: 0,\n  // Unit x, Unit y. Provide for avoiding drawing that too short line segment\n  _ux: 0,\n  _uy: 0,\n  _len: 0,\n  _lineDash: null,\n  _dashOffset: 0,\n  _dashIdx: 0,\n  _dashSum: 0,\n\n  /**\n   * @readOnly\n   */\n  setScale: function (sx, sy) {\n    this._ux = mathAbs(1 / dpr / sx) || 0;\n    this._uy = mathAbs(1 / dpr / sy) || 0;\n  },\n  getContext: function () {\n    return this._ctx;\n  },\n\n  /**\n   * @param  {CanvasRenderingContext2D} ctx\n   * @return {module:zrender/core/PathProxy}\n   */\n  beginPath: function (ctx) {\n    this._ctx = ctx;\n    ctx && ctx.beginPath();\n    ctx && (this.dpr = ctx.dpr); // Reset\n\n    if (this._saveData) {\n      this._len = 0;\n    }\n\n    if (this._lineDash) {\n      this._lineDash = null;\n      this._dashOffset = 0;\n    }\n\n    return this;\n  },\n\n  /**\n   * @param  {number} x\n   * @param  {number} y\n   * @return {module:zrender/core/PathProxy}\n   */\n  moveTo: function (x, y) {\n    this.addData(CMD.M, x, y);\n    this._ctx && this._ctx.moveTo(x, y); // x0, y0, xi, yi 是记录在 _dashedXXXXTo 方法中使用\n    // xi, yi 记录当前点, x0, y0 在 closePath 的时候回到起始点。\n    // 有可能在 beginPath 之后直接调用 lineTo，这时候 x0, y0 需要\n    // 在 lineTo 方法中记录，这里先不考虑这种情况，dashed line 也只在 IE10- 中不支持\n\n    this._x0 = x;\n    this._y0 = y;\n    this._xi = x;\n    this._yi = y;\n    return this;\n  },\n\n  /**\n   * @param  {number} x\n   * @param  {number} y\n   * @return {module:zrender/core/PathProxy}\n   */\n  lineTo: function (x, y) {\n    var exceedUnit = mathAbs(x - this._xi) > this._ux || mathAbs(y - this._yi) > this._uy // Force draw the first segment\n    || this._len < 5;\n    this.addData(CMD.L, x, y);\n\n    if (this._ctx && exceedUnit) {\n      this._needsDash() ? this._dashedLineTo(x, y) : this._ctx.lineTo(x, y);\n    }\n\n    if (exceedUnit) {\n      this._xi = x;\n      this._yi = y;\n    }\n\n    return this;\n  },\n\n  /**\n   * @param  {number} x1\n   * @param  {number} y1\n   * @param  {number} x2\n   * @param  {number} y2\n   * @param  {number} x3\n   * @param  {number} y3\n   * @return {module:zrender/core/PathProxy}\n   */\n  bezierCurveTo: function (x1, y1, x2, y2, x3, y3) {\n    this.addData(CMD.C, x1, y1, x2, y2, x3, y3);\n\n    if (this._ctx) {\n      this._needsDash() ? this._dashedBezierTo(x1, y1, x2, y2, x3, y3) : this._ctx.bezierCurveTo(x1, y1, x2, y2, x3, y3);\n    }\n\n    this._xi = x3;\n    this._yi = y3;\n    return this;\n  },\n\n  /**\n   * @param  {number} x1\n   * @param  {number} y1\n   * @param  {number} x2\n   * @param  {number} y2\n   * @return {module:zrender/core/PathProxy}\n   */\n  quadraticCurveTo: function (x1, y1, x2, y2) {\n    this.addData(CMD.Q, x1, y1, x2, y2);\n\n    if (this._ctx) {\n      this._needsDash() ? this._dashedQuadraticTo(x1, y1, x2, y2) : this._ctx.quadraticCurveTo(x1, y1, x2, y2);\n    }\n\n    this._xi = x2;\n    this._yi = y2;\n    return this;\n  },\n\n  /**\n   * @param  {number} cx\n   * @param  {number} cy\n   * @param  {number} r\n   * @param  {number} startAngle\n   * @param  {number} endAngle\n   * @param  {boolean} anticlockwise\n   * @return {module:zrender/core/PathProxy}\n   */\n  arc: function (cx, cy, r, startAngle, endAngle, anticlockwise) {\n    this.addData(CMD.A, cx, cy, r, r, startAngle, endAngle - startAngle, 0, anticlockwise ? 0 : 1);\n    this._ctx && this._ctx.arc(cx, cy, r, startAngle, endAngle, anticlockwise);\n    this._xi = mathCos(endAngle) * r + cx;\n    this._yi = mathSin(endAngle) * r + cx;\n    return this;\n  },\n  // TODO\n  arcTo: function (x1, y1, x2, y2, radius) {\n    if (this._ctx) {\n      this._ctx.arcTo(x1, y1, x2, y2, radius);\n    }\n\n    return this;\n  },\n  // TODO\n  rect: function (x, y, w, h) {\n    this._ctx && this._ctx.rect(x, y, w, h);\n    this.addData(CMD.R, x, y, w, h);\n    return this;\n  },\n\n  /**\n   * @return {module:zrender/core/PathProxy}\n   */\n  closePath: function () {\n    this.addData(CMD.Z);\n    var ctx = this._ctx;\n    var x0 = this._x0;\n    var y0 = this._y0;\n\n    if (ctx) {\n      this._needsDash() && this._dashedLineTo(x0, y0);\n      ctx.closePath();\n    }\n\n    this._xi = x0;\n    this._yi = y0;\n    return this;\n  },\n\n  /**\n   * Context 从外部传入，因为有可能是 rebuildPath 完之后再 fill。\n   * stroke 同样\n   * @param {CanvasRenderingContext2D} ctx\n   * @return {module:zrender/core/PathProxy}\n   */\n  fill: function (ctx) {\n    ctx && ctx.fill();\n    this.toStatic();\n  },\n\n  /**\n   * @param {CanvasRenderingContext2D} ctx\n   * @return {module:zrender/core/PathProxy}\n   */\n  stroke: function (ctx) {\n    ctx && ctx.stroke();\n    this.toStatic();\n  },\n\n  /**\n   * 必须在其它绘制命令前调用\n   * Must be invoked before all other path drawing methods\n   * @return {module:zrender/core/PathProxy}\n   */\n  setLineDash: function (lineDash) {\n    if (lineDash instanceof Array) {\n      this._lineDash = lineDash;\n      this._dashIdx = 0;\n      var lineDashSum = 0;\n\n      for (var i = 0; i < lineDash.length; i++) {\n        lineDashSum += lineDash[i];\n      }\n\n      this._dashSum = lineDashSum;\n    }\n\n    return this;\n  },\n\n  /**\n   * 必须在其它绘制命令前调用\n   * Must be invoked before all other path drawing methods\n   * @return {module:zrender/core/PathProxy}\n   */\n  setLineDashOffset: function (offset) {\n    this._dashOffset = offset;\n    return this;\n  },\n\n  /**\n   *\n   * @return {boolean}\n   */\n  len: function () {\n    return this._len;\n  },\n\n  /**\n   * 直接设置 Path 数据\n   */\n  setData: function (data) {\n    var len = data.length;\n\n    if (!(this.data && this.data.length == len) && hasTypedArray) {\n      this.data = new Float32Array(len);\n    }\n\n    for (var i = 0; i < len; i++) {\n      this.data[i] = data[i];\n    }\n\n    this._len = len;\n  },\n\n  /**\n   * 添加子路径\n   * @param {module:zrender/core/PathProxy|Array.<module:zrender/core/PathProxy>} path\n   */\n  appendPath: function (path) {\n    if (!(path instanceof Array)) {\n      path = [path];\n    }\n\n    var len = path.length;\n    var appendSize = 0;\n    var offset = this._len;\n\n    for (var i = 0; i < len; i++) {\n      appendSize += path[i].len();\n    }\n\n    if (hasTypedArray && this.data instanceof Float32Array) {\n      this.data = new Float32Array(offset + appendSize);\n    }\n\n    for (var i = 0; i < len; i++) {\n      var appendPathData = path[i].data;\n\n      for (var k = 0; k < appendPathData.length; k++) {\n        this.data[offset++] = appendPathData[k];\n      }\n    }\n\n    this._len = offset;\n  },\n\n  /**\n   * 填充 Path 数据。\n   * 尽量复用而不申明新的数组。大部分图形重绘的指令数据长度都是不变的。\n   */\n  addData: function (cmd) {\n    if (!this._saveData) {\n      return;\n    }\n\n    var data = this.data;\n\n    if (this._len + arguments.length > data.length) {\n      // 因为之前的数组已经转换成静态的 Float32Array\n      // 所以不够用时需要扩展一个新的动态数组\n      this._expandData();\n\n      data = this.data;\n    }\n\n    for (var i = 0; i < arguments.length; i++) {\n      data[this._len++] = arguments[i];\n    }\n\n    this._prevCmd = cmd;\n  },\n  _expandData: function () {\n    // Only if data is Float32Array\n    if (!(this.data instanceof Array)) {\n      var newData = [];\n\n      for (var i = 0; i < this._len; i++) {\n        newData[i] = this.data[i];\n      }\n\n      this.data = newData;\n    }\n  },\n\n  /**\n   * If needs js implemented dashed line\n   * @return {boolean}\n   * @private\n   */\n  _needsDash: function () {\n    return this._lineDash;\n  },\n  _dashedLineTo: function (x1, y1) {\n    var dashSum = this._dashSum;\n    var offset = this._dashOffset;\n    var lineDash = this._lineDash;\n    var ctx = this._ctx;\n    var x0 = this._xi;\n    var y0 = this._yi;\n    var dx = x1 - x0;\n    var dy = y1 - y0;\n    var dist = mathSqrt(dx * dx + dy * dy);\n    var x = x0;\n    var y = y0;\n    var dash;\n    var nDash = lineDash.length;\n    var idx;\n    dx /= dist;\n    dy /= dist;\n\n    if (offset < 0) {\n      // Convert to positive offset\n      offset = dashSum + offset;\n    }\n\n    offset %= dashSum;\n    x -= offset * dx;\n    y -= offset * dy;\n\n    while (dx > 0 && x <= x1 || dx < 0 && x >= x1 || dx == 0 && (dy > 0 && y <= y1 || dy < 0 && y >= y1)) {\n      idx = this._dashIdx;\n      dash = lineDash[idx];\n      x += dx * dash;\n      y += dy * dash;\n      this._dashIdx = (idx + 1) % nDash; // Skip positive offset\n\n      if (dx > 0 && x < x0 || dx < 0 && x > x0 || dy > 0 && y < y0 || dy < 0 && y > y0) {\n        continue;\n      }\n\n      ctx[idx % 2 ? 'moveTo' : 'lineTo'](dx >= 0 ? mathMin(x, x1) : mathMax(x, x1), dy >= 0 ? mathMin(y, y1) : mathMax(y, y1));\n    } // Offset for next lineTo\n\n\n    dx = x - x1;\n    dy = y - y1;\n    this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n  },\n  // Not accurate dashed line to\n  _dashedBezierTo: function (x1, y1, x2, y2, x3, y3) {\n    var dashSum = this._dashSum;\n    var offset = this._dashOffset;\n    var lineDash = this._lineDash;\n    var ctx = this._ctx;\n    var x0 = this._xi;\n    var y0 = this._yi;\n    var t;\n    var dx;\n    var dy;\n    var cubicAt = curve.cubicAt;\n    var bezierLen = 0;\n    var idx = this._dashIdx;\n    var nDash = lineDash.length;\n    var x;\n    var y;\n    var tmpLen = 0;\n\n    if (offset < 0) {\n      // Convert to positive offset\n      offset = dashSum + offset;\n    }\n\n    offset %= dashSum; // Bezier approx length\n\n    for (t = 0; t < 1; t += 0.1) {\n      dx = cubicAt(x0, x1, x2, x3, t + 0.1) - cubicAt(x0, x1, x2, x3, t);\n      dy = cubicAt(y0, y1, y2, y3, t + 0.1) - cubicAt(y0, y1, y2, y3, t);\n      bezierLen += mathSqrt(dx * dx + dy * dy);\n    } // Find idx after add offset\n\n\n    for (; idx < nDash; idx++) {\n      tmpLen += lineDash[idx];\n\n      if (tmpLen > offset) {\n        break;\n      }\n    }\n\n    t = (tmpLen - offset) / bezierLen;\n\n    while (t <= 1) {\n      x = cubicAt(x0, x1, x2, x3, t);\n      y = cubicAt(y0, y1, y2, y3, t); // Use line to approximate dashed bezier\n      // Bad result if dash is long\n\n      idx % 2 ? ctx.moveTo(x, y) : ctx.lineTo(x, y);\n      t += lineDash[idx] / bezierLen;\n      idx = (idx + 1) % nDash;\n    } // Finish the last segment and calculate the new offset\n\n\n    idx % 2 !== 0 && ctx.lineTo(x3, y3);\n    dx = x3 - x;\n    dy = y3 - y;\n    this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n  },\n  _dashedQuadraticTo: function (x1, y1, x2, y2) {\n    // Convert quadratic to cubic using degree elevation\n    var x3 = x2;\n    var y3 = y2;\n    x2 = (x2 + 2 * x1) / 3;\n    y2 = (y2 + 2 * y1) / 3;\n    x1 = (this._xi + 2 * x1) / 3;\n    y1 = (this._yi + 2 * y1) / 3;\n\n    this._dashedBezierTo(x1, y1, x2, y2, x3, y3);\n  },\n\n  /**\n   * 转成静态的 Float32Array 减少堆内存占用\n   * Convert dynamic array to static Float32Array\n   */\n  toStatic: function () {\n    var data = this.data;\n\n    if (data instanceof Array) {\n      data.length = this._len;\n\n      if (hasTypedArray) {\n        this.data = new Float32Array(data);\n      }\n    }\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getBoundingRect: function () {\n    min[0] = min[1] = min2[0] = min2[1] = Number.MAX_VALUE;\n    max[0] = max[1] = max2[0] = max2[1] = -Number.MAX_VALUE;\n    var data = this.data;\n    var xi = 0;\n    var yi = 0;\n    var x0 = 0;\n    var y0 = 0;\n\n    for (var i = 0; i < data.length;) {\n      var cmd = data[i++];\n\n      if (i == 1) {\n        // 如果第一个命令是 L, C, Q\n        // 则 previous point 同绘制命令的第一个 point\n        //\n        // 第一个命令为 Arc 的情况下会在后面特殊处理\n        xi = data[i];\n        yi = data[i + 1];\n        x0 = xi;\n        y0 = yi;\n      }\n\n      switch (cmd) {\n        case CMD.M:\n          // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n          // 在 closePath 的时候使用\n          x0 = data[i++];\n          y0 = data[i++];\n          xi = x0;\n          yi = y0;\n          min2[0] = x0;\n          min2[1] = y0;\n          max2[0] = x0;\n          max2[1] = y0;\n          break;\n\n        case CMD.L:\n          bbox.fromLine(xi, yi, data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.C:\n          bbox.fromCubic(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.Q:\n          bbox.fromQuadratic(xi, yi, data[i++], data[i++], data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.A:\n          // TODO Arc 判断的开销比较大\n          var cx = data[i++];\n          var cy = data[i++];\n          var rx = data[i++];\n          var ry = data[i++];\n          var startAngle = data[i++];\n          var endAngle = data[i++] + startAngle; // TODO Arc 旋转\n\n          var psi = data[i++];\n          var anticlockwise = 1 - data[i++];\n\n          if (i == 1) {\n            // 直接使用 arc 命令\n            // 第一个命令起点还未定义\n            x0 = mathCos(startAngle) * rx + cx;\n            y0 = mathSin(startAngle) * ry + cy;\n          }\n\n          bbox.fromArc(cx, cy, rx, ry, startAngle, endAngle, anticlockwise, min2, max2);\n          xi = mathCos(endAngle) * rx + cx;\n          yi = mathSin(endAngle) * ry + cy;\n          break;\n\n        case CMD.R:\n          x0 = xi = data[i++];\n          y0 = yi = data[i++];\n          var width = data[i++];\n          var height = data[i++]; // Use fromLine\n\n          bbox.fromLine(x0, y0, x0 + width, y0 + height, min2, max2);\n          break;\n\n        case CMD.Z:\n          xi = x0;\n          yi = y0;\n          break;\n      } // Union\n\n\n      vec2.min(min, min, min2);\n      vec2.max(max, max, max2);\n    } // No data\n\n\n    if (i === 0) {\n      min[0] = min[1] = max[0] = max[1] = 0;\n    }\n\n    return new BoundingRect(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n  },\n\n  /**\n   * Rebuild path from current data\n   * Rebuild path will not consider javascript implemented line dash.\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  rebuildPath: function (ctx) {\n    var d = this.data;\n    var x0, y0;\n    var xi, yi;\n    var x, y;\n    var ux = this._ux;\n    var uy = this._uy;\n    var len = this._len;\n\n    for (var i = 0; i < len;) {\n      var cmd = d[i++];\n\n      if (i == 1) {\n        // 如果第一个命令是 L, C, Q\n        // 则 previous point 同绘制命令的第一个 point\n        //\n        // 第一个命令为 Arc 的情况下会在后面特殊处理\n        xi = d[i];\n        yi = d[i + 1];\n        x0 = xi;\n        y0 = yi;\n      }\n\n      switch (cmd) {\n        case CMD.M:\n          x0 = xi = d[i++];\n          y0 = yi = d[i++];\n          ctx.moveTo(xi, yi);\n          break;\n\n        case CMD.L:\n          x = d[i++];\n          y = d[i++]; // Not draw too small seg between\n\n          if (mathAbs(x - xi) > ux || mathAbs(y - yi) > uy || i === len - 1) {\n            ctx.lineTo(x, y);\n            xi = x;\n            yi = y;\n          }\n\n          break;\n\n        case CMD.C:\n          ctx.bezierCurveTo(d[i++], d[i++], d[i++], d[i++], d[i++], d[i++]);\n          xi = d[i - 2];\n          yi = d[i - 1];\n          break;\n\n        case CMD.Q:\n          ctx.quadraticCurveTo(d[i++], d[i++], d[i++], d[i++]);\n          xi = d[i - 2];\n          yi = d[i - 1];\n          break;\n\n        case CMD.A:\n          var cx = d[i++];\n          var cy = d[i++];\n          var rx = d[i++];\n          var ry = d[i++];\n          var theta = d[i++];\n          var dTheta = d[i++];\n          var psi = d[i++];\n          var fs = d[i++];\n          var r = rx > ry ? rx : ry;\n          var scaleX = rx > ry ? 1 : rx / ry;\n          var scaleY = rx > ry ? ry / rx : 1;\n          var isEllipse = Math.abs(rx - ry) > 1e-3;\n          var endAngle = theta + dTheta;\n\n          if (isEllipse) {\n            ctx.translate(cx, cy);\n            ctx.rotate(psi);\n            ctx.scale(scaleX, scaleY);\n            ctx.arc(0, 0, r, theta, endAngle, 1 - fs);\n            ctx.scale(1 / scaleX, 1 / scaleY);\n            ctx.rotate(-psi);\n            ctx.translate(-cx, -cy);\n          } else {\n            ctx.arc(cx, cy, r, theta, endAngle, 1 - fs);\n          }\n\n          if (i == 1) {\n            // 直接使用 arc 命令\n            // 第一个命令起点还未定义\n            x0 = mathCos(theta) * rx + cx;\n            y0 = mathSin(theta) * ry + cy;\n          }\n\n          xi = mathCos(endAngle) * rx + cx;\n          yi = mathSin(endAngle) * ry + cy;\n          break;\n\n        case CMD.R:\n          x0 = xi = d[i];\n          y0 = yi = d[i + 1];\n          ctx.rect(d[i++], d[i++], d[i++], d[i++]);\n          break;\n\n        case CMD.Z:\n          ctx.closePath();\n          xi = x0;\n          yi = y0;\n      }\n    }\n  }\n};\nPathProxy.CMD = CMD;\nvar _default = PathProxy;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar clazzUtil = require(\"../../util/clazz\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar axisPointerModelHelper = require(\"./modelHelper\");\n\nvar eventTool = require(\"zrender/lib/core/event\");\n\nvar throttleUtil = require(\"../../util/throttle\");\n\nvar _model = require(\"../../util/model\");\n\nvar makeInner = _model.makeInner;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar inner = makeInner();\nvar clone = zrUtil.clone;\nvar bind = zrUtil.bind;\n/**\n * Base axis pointer class in 2D.\n * Implemenents {module:echarts/component/axis/IAxisPointer}.\n */\n\nfunction BaseAxisPointer() {}\n\nBaseAxisPointer.prototype = {\n  /**\n   * @private\n   */\n  _group: null,\n\n  /**\n   * @private\n   */\n  _lastGraphicKey: null,\n\n  /**\n   * @private\n   */\n  _handle: null,\n\n  /**\n   * @private\n   */\n  _dragging: false,\n\n  /**\n   * @private\n   */\n  _lastValue: null,\n\n  /**\n   * @private\n   */\n  _lastStatus: null,\n\n  /**\n   * @private\n   */\n  _payloadInfo: null,\n\n  /**\n   * In px, arbitrary value. Do not set too small,\n   * no animation is ok for most cases.\n   * @protected\n   */\n  animationThreshold: 15,\n\n  /**\n   * @implement\n   */\n  render: function (axisModel, axisPointerModel, api, forceRender) {\n    var value = axisPointerModel.get('value');\n    var status = axisPointerModel.get('status'); // Bind them to `this`, not in closure, otherwise they will not\n    // be replaced when user calling setOption in not merge mode.\n\n    this._axisModel = axisModel;\n    this._axisPointerModel = axisPointerModel;\n    this._api = api; // Optimize: `render` will be called repeatly during mouse move.\n    // So it is power consuming if performing `render` each time,\n    // especially on mobile device.\n\n    if (!forceRender && this._lastValue === value && this._lastStatus === status) {\n      return;\n    }\n\n    this._lastValue = value;\n    this._lastStatus = status;\n    var group = this._group;\n    var handle = this._handle;\n\n    if (!status || status === 'hide') {\n      // Do not clear here, for animation better.\n      group && group.hide();\n      handle && handle.hide();\n      return;\n    }\n\n    group && group.show();\n    handle && handle.show(); // Otherwise status is 'show'\n\n    var elOption = {};\n    this.makeElOption(elOption, value, axisModel, axisPointerModel, api); // Enable change axis pointer type.\n\n    var graphicKey = elOption.graphicKey;\n\n    if (graphicKey !== this._lastGraphicKey) {\n      this.clear(api);\n    }\n\n    this._lastGraphicKey = graphicKey;\n    var moveAnimation = this._moveAnimation = this.determineAnimation(axisModel, axisPointerModel);\n\n    if (!group) {\n      group = this._group = new graphic.Group();\n      this.createPointerEl(group, elOption, axisModel, axisPointerModel);\n      this.createLabelEl(group, elOption, axisModel, axisPointerModel);\n      api.getZr().add(group);\n    } else {\n      var doUpdateProps = zrUtil.curry(updateProps, axisPointerModel, moveAnimation);\n      this.updatePointerEl(group, elOption, doUpdateProps, axisPointerModel);\n      this.updateLabelEl(group, elOption, doUpdateProps, axisPointerModel);\n    }\n\n    updateMandatoryProps(group, axisPointerModel, true);\n\n    this._renderHandle(value);\n  },\n\n  /**\n   * @implement\n   */\n  remove: function (api) {\n    this.clear(api);\n  },\n\n  /**\n   * @implement\n   */\n  dispose: function (api) {\n    this.clear(api);\n  },\n\n  /**\n   * @protected\n   */\n  determineAnimation: function (axisModel, axisPointerModel) {\n    var animation = axisPointerModel.get('animation');\n    var axis = axisModel.axis;\n    var isCategoryAxis = axis.type === 'category';\n    var useSnap = axisPointerModel.get('snap'); // Value axis without snap always do not snap.\n\n    if (!useSnap && !isCategoryAxis) {\n      return false;\n    }\n\n    if (animation === 'auto' || animation == null) {\n      var animationThreshold = this.animationThreshold;\n\n      if (isCategoryAxis && axis.getBandWidth() > animationThreshold) {\n        return true;\n      } // It is important to auto animation when snap used. Consider if there is\n      // a dataZoom, animation will be disabled when too many points exist, while\n      // it will be enabled for better visual effect when little points exist.\n\n\n      if (useSnap) {\n        var seriesDataCount = axisPointerModelHelper.getAxisInfo(axisModel).seriesDataCount;\n        var axisExtent = axis.getExtent(); // Approximate band width\n\n        return Math.abs(axisExtent[0] - axisExtent[1]) / seriesDataCount > animationThreshold;\n      }\n\n      return false;\n    }\n\n    return animation === true;\n  },\n\n  /**\n   * add {pointer, label, graphicKey} to elOption\n   * @protected\n   */\n  makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {// Shoule be implemenented by sub-class.\n  },\n\n  /**\n   * @protected\n   */\n  createPointerEl: function (group, elOption, axisModel, axisPointerModel) {\n    var pointerOption = elOption.pointer;\n\n    if (pointerOption) {\n      var pointerEl = inner(group).pointerEl = new graphic[pointerOption.type](clone(elOption.pointer));\n      group.add(pointerEl);\n    }\n  },\n\n  /**\n   * @protected\n   */\n  createLabelEl: function (group, elOption, axisModel, axisPointerModel) {\n    if (elOption.label) {\n      var labelEl = inner(group).labelEl = new graphic.Rect(clone(elOption.label));\n      group.add(labelEl);\n      updateLabelShowHide(labelEl, axisPointerModel);\n    }\n  },\n\n  /**\n   * @protected\n   */\n  updatePointerEl: function (group, elOption, updateProps) {\n    var pointerEl = inner(group).pointerEl;\n\n    if (pointerEl) {\n      pointerEl.setStyle(elOption.pointer.style);\n      updateProps(pointerEl, {\n        shape: elOption.pointer.shape\n      });\n    }\n  },\n\n  /**\n   * @protected\n   */\n  updateLabelEl: function (group, elOption, updateProps, axisPointerModel) {\n    var labelEl = inner(group).labelEl;\n\n    if (labelEl) {\n      labelEl.setStyle(elOption.label.style);\n      updateProps(labelEl, {\n        // Consider text length change in vertical axis, animation should\n        // be used on shape, otherwise the effect will be weird.\n        shape: elOption.label.shape,\n        position: elOption.label.position\n      });\n      updateLabelShowHide(labelEl, axisPointerModel);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _renderHandle: function (value) {\n    if (this._dragging || !this.updateHandleTransform) {\n      return;\n    }\n\n    var axisPointerModel = this._axisPointerModel;\n\n    var zr = this._api.getZr();\n\n    var handle = this._handle;\n    var handleModel = axisPointerModel.getModel('handle');\n    var status = axisPointerModel.get('status');\n\n    if (!handleModel.get('show') || !status || status === 'hide') {\n      handle && zr.remove(handle);\n      this._handle = null;\n      return;\n    }\n\n    var isInit;\n\n    if (!this._handle) {\n      isInit = true;\n      handle = this._handle = graphic.createIcon(handleModel.get('icon'), {\n        cursor: 'move',\n        draggable: true,\n        onmousemove: function (e) {\n          // Fot mobile devicem, prevent screen slider on the button.\n          eventTool.stop(e.event);\n        },\n        onmousedown: bind(this._onHandleDragMove, this, 0, 0),\n        drift: bind(this._onHandleDragMove, this),\n        ondragend: bind(this._onHandleDragEnd, this)\n      });\n      zr.add(handle);\n    }\n\n    updateMandatoryProps(handle, axisPointerModel, false); // update style\n\n    var includeStyles = ['color', 'borderColor', 'borderWidth', 'opacity', 'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY'];\n    handle.setStyle(handleModel.getItemStyle(null, includeStyles)); // update position\n\n    var handleSize = handleModel.get('size');\n\n    if (!zrUtil.isArray(handleSize)) {\n      handleSize = [handleSize, handleSize];\n    }\n\n    handle.attr('scale', [handleSize[0] / 2, handleSize[1] / 2]);\n    throttleUtil.createOrUpdate(this, '_doDispatchAxisPointer', handleModel.get('throttle') || 0, 'fixRate');\n\n    this._moveHandleToValue(value, isInit);\n  },\n\n  /**\n   * @private\n   */\n  _moveHandleToValue: function (value, isInit) {\n    updateProps(this._axisPointerModel, !isInit && this._moveAnimation, this._handle, getHandleTransProps(this.getHandleTransform(value, this._axisModel, this._axisPointerModel)));\n  },\n\n  /**\n   * @private\n   */\n  _onHandleDragMove: function (dx, dy) {\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    this._dragging = true; // Persistent for throttle.\n\n    var trans = this.updateHandleTransform(getHandleTransProps(handle), [dx, dy], this._axisModel, this._axisPointerModel);\n    this._payloadInfo = trans;\n    handle.stopAnimation();\n    handle.attr(getHandleTransProps(trans));\n    inner(handle).lastProp = null;\n\n    this._doDispatchAxisPointer();\n  },\n\n  /**\n   * Throttled method.\n   * @private\n   */\n  _doDispatchAxisPointer: function () {\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    var payloadInfo = this._payloadInfo;\n    var axisModel = this._axisModel;\n\n    this._api.dispatchAction({\n      type: 'updateAxisPointer',\n      x: payloadInfo.cursorPoint[0],\n      y: payloadInfo.cursorPoint[1],\n      tooltipOption: payloadInfo.tooltipOption,\n      axesInfo: [{\n        axisDim: axisModel.axis.dim,\n        axisIndex: axisModel.componentIndex\n      }]\n    });\n  },\n\n  /**\n   * @private\n   */\n  _onHandleDragEnd: function (moveAnimation) {\n    this._dragging = false;\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    var value = this._axisPointerModel.get('value'); // Consider snap or categroy axis, handle may be not consistent with\n    // axisPointer. So move handle to align the exact value position when\n    // drag ended.\n\n\n    this._moveHandleToValue(value); // For the effect: tooltip will be shown when finger holding on handle\n    // button, and will be hidden after finger left handle button.\n\n\n    this._api.dispatchAction({\n      type: 'hideTip'\n    });\n  },\n\n  /**\n   * Should be implemenented by sub-class if support `handle`.\n   * @protected\n   * @param {number} value\n   * @param {module:echarts/model/Model} axisModel\n   * @param {module:echarts/model/Model} axisPointerModel\n   * @return {Object} {position: [x, y], rotation: 0}\n   */\n  getHandleTransform: null,\n\n  /**\n   * * Should be implemenented by sub-class if support `handle`.\n   * @protected\n   * @param {Object} transform {position, rotation}\n   * @param {Array.<number>} delta [dx, dy]\n   * @param {module:echarts/model/Model} axisModel\n   * @param {module:echarts/model/Model} axisPointerModel\n   * @return {Object} {position: [x, y], rotation: 0, cursorPoint: [x, y]}\n   */\n  updateHandleTransform: null,\n\n  /**\n   * @private\n   */\n  clear: function (api) {\n    this._lastValue = null;\n    this._lastStatus = null;\n    var zr = api.getZr();\n    var group = this._group;\n    var handle = this._handle;\n\n    if (zr && group) {\n      this._lastGraphicKey = null;\n      group && zr.remove(group);\n      handle && zr.remove(handle);\n      this._group = null;\n      this._handle = null;\n      this._payloadInfo = null;\n    }\n  },\n\n  /**\n   * @protected\n   */\n  doClear: function () {// Implemented by sub-class if necessary.\n  },\n\n  /**\n   * @protected\n   * @param {Array.<number>} xy\n   * @param {Array.<number>} wh\n   * @param {number} [xDimIndex=0] or 1\n   */\n  buildLabel: function (xy, wh, xDimIndex) {\n    xDimIndex = xDimIndex || 0;\n    return {\n      x: xy[xDimIndex],\n      y: xy[1 - xDimIndex],\n      width: wh[xDimIndex],\n      height: wh[1 - xDimIndex]\n    };\n  }\n};\nBaseAxisPointer.prototype.constructor = BaseAxisPointer;\n\nfunction updateProps(animationModel, moveAnimation, el, props) {\n  // Animation optimize.\n  if (!propsEqual(inner(el).lastProp, props)) {\n    inner(el).lastProp = props;\n    moveAnimation ? graphic.updateProps(el, props, animationModel) : (el.stopAnimation(), el.attr(props));\n  }\n}\n\nfunction propsEqual(lastProps, newProps) {\n  if (zrUtil.isObject(lastProps) && zrUtil.isObject(newProps)) {\n    var equals = true;\n    zrUtil.each(newProps, function (item, key) {\n      equals = equals && propsEqual(lastProps[key], item);\n    });\n    return !!equals;\n  } else {\n    return lastProps === newProps;\n  }\n}\n\nfunction updateLabelShowHide(labelEl, axisPointerModel) {\n  labelEl[axisPointerModel.get('label.show') ? 'show' : 'hide']();\n}\n\nfunction getHandleTransProps(trans) {\n  return {\n    position: trans.position.slice(),\n    rotation: trans.rotation || 0\n  };\n}\n\nfunction updateMandatoryProps(group, axisPointerModel, silent) {\n  var z = axisPointerModel.get('z');\n  var zlevel = axisPointerModel.get('zlevel');\n  group && group.traverse(function (el) {\n    if (el.type !== 'group') {\n      z != null && (el.z = z);\n      zlevel != null && (el.zlevel = zlevel);\n      el.silent = silent;\n    }\n  });\n}\n\nclazzUtil.enableClassExtend(BaseAxisPointer);\nvar _default = BaseAxisPointer;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar globalListener = require(\"./globalListener\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar AxisPointerView = echarts.extendComponentView({\n  type: 'axisPointer',\n  render: function (globalAxisPointerModel, ecModel, api) {\n    var globalTooltipModel = ecModel.getComponent('tooltip');\n    var triggerOn = globalAxisPointerModel.get('triggerOn') || globalTooltipModel && globalTooltipModel.get('triggerOn') || 'mousemove|click'; // Register global listener in AxisPointerView to enable\n    // AxisPointerView to be independent to Tooltip.\n\n    globalListener.register('axisPointer', api, function (currTrigger, e, dispatchAction) {\n      // If 'none', it is not controlled by mouse totally.\n      if (triggerOn !== 'none' && (currTrigger === 'leave' || triggerOn.indexOf(currTrigger) >= 0)) {\n        dispatchAction({\n          type: 'updateAxisPointer',\n          currTrigger: currTrigger,\n          x: e && e.offsetX,\n          y: e && e.offsetY\n        });\n      }\n    });\n  },\n\n  /**\n   * @override\n   */\n  remove: function (ecModel, api) {\n    globalListener.unregister(api.getZr(), 'axisPointer');\n    AxisPointerView.superApply(this._model, 'remove', arguments);\n  },\n\n  /**\n   * @override\n   */\n  dispose: function (ecModel, api) {\n    globalListener.unregister('axisPointer', api);\n    AxisPointerView.superApply(this._model, 'dispose', arguments);\n  }\n});\nvar _default = AxisPointerView;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../../util/model\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {Object} finder contains {seriesIndex, dataIndex, dataIndexInside}\n * @param {module:echarts/model/Global} ecModel\n * @return {Object} {point: [x, y], el: ...} point Will not be null.\n */\nfunction _default(finder, ecModel) {\n  var point = [];\n  var seriesIndex = finder.seriesIndex;\n  var seriesModel;\n\n  if (seriesIndex == null || !(seriesModel = ecModel.getSeriesByIndex(seriesIndex))) {\n    return {\n      point: []\n    };\n  }\n\n  var data = seriesModel.getData();\n  var dataIndex = modelUtil.queryDataIndex(data, finder);\n\n  if (dataIndex == null || dataIndex < 0 || zrUtil.isArray(dataIndex)) {\n    return {\n      point: []\n    };\n  }\n\n  var el = data.getItemGraphicEl(dataIndex);\n  var coordSys = seriesModel.coordinateSystem;\n\n  if (seriesModel.getTooltipPosition) {\n    point = seriesModel.getTooltipPosition(dataIndex) || [];\n  } else if (coordSys && coordSys.dataToPoint) {\n    point = coordSys.dataToPoint(data.getValues(zrUtil.map(coordSys.dimensions, function (dim) {\n      return data.mapDimension(dim);\n    }), dataIndex, true)) || [];\n  } else if (el) {\n    // Use graphic bounding rect\n    var rect = el.getBoundingRect().clone();\n    rect.applyTransform(el.transform);\n    point = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  }\n\n  return {\n    point: point,\n    el: el\n  };\n}\n\nmodule.exports = _default;","var _event = require(\"../core/event\");\n\nvar addEventListener = _event.addEventListener;\nvar removeEventListener = _event.removeEventListener;\nvar normalizeEvent = _event.normalizeEvent;\n\nvar zrUtil = require(\"../core/util\");\n\nvar Eventful = require(\"../mixin/Eventful\");\n\nvar env = require(\"../core/env\");\n\nvar GestureMgr = require(\"../core/GestureMgr\");\n\nvar TOUCH_CLICK_DELAY = 300;\nvar mouseHandlerNames = ['click', 'dblclick', 'mousewheel', 'mouseout', 'mouseup', 'mousedown', 'mousemove', 'contextmenu'];\nvar touchHandlerNames = ['touchstart', 'touchend', 'touchmove'];\nvar pointerEventNames = {\n  pointerdown: 1,\n  pointerup: 1,\n  pointermove: 1,\n  pointerout: 1\n};\nvar pointerHandlerNames = zrUtil.map(mouseHandlerNames, function (name) {\n  var nm = name.replace('mouse', 'pointer');\n  return pointerEventNames[nm] ? nm : name;\n});\n\nfunction eventNameFix(name) {\n  return name === 'mousewheel' && env.browser.firefox ? 'DOMMouseScroll' : name;\n}\n\nfunction processGesture(proxy, event, stage) {\n  var gestureMgr = proxy._gestureMgr;\n  stage === 'start' && gestureMgr.clear();\n  var gestureInfo = gestureMgr.recognize(event, proxy.handler.findHover(event.zrX, event.zrY, null).target, proxy.dom);\n  stage === 'end' && gestureMgr.clear(); // Do not do any preventDefault here. Upper application do that if necessary.\n\n  if (gestureInfo) {\n    var type = gestureInfo.type;\n    event.gestureEvent = type;\n    proxy.handler.dispatchToElement({\n      target: gestureInfo.target\n    }, type, gestureInfo.event);\n  }\n} // function onMSGestureChange(proxy, event) {\n//     if (event.translationX || event.translationY) {\n//         // mousemove is carried by MSGesture to reduce the sensitivity.\n//         proxy.handler.dispatchToElement(event.target, 'mousemove', event);\n//     }\n//     if (event.scale !== 1) {\n//         event.pinchX = event.offsetX;\n//         event.pinchY = event.offsetY;\n//         event.pinchScale = event.scale;\n//         proxy.handler.dispatchToElement(event.target, 'pinch', event);\n//     }\n// }\n\n/**\n * Prevent mouse event from being dispatched after Touch Events action\n * @see <https://github.com/deltakosh/handjs/blob/master/src/hand.base.js>\n * 1. Mobile browsers dispatch mouse events 300ms after touchend.\n * 2. Chrome for Android dispatch mousedown for long-touch about 650ms\n * Result: Blocking Mouse Events for 700ms.\n */\n\n\nfunction setTouchTimer(instance) {\n  instance._touching = true;\n  clearTimeout(instance._touchTimer);\n  instance._touchTimer = setTimeout(function () {\n    instance._touching = false;\n  }, 700);\n}\n\nvar domHandlers = {\n  /**\n   * Mouse move handler\n   * @inner\n   * @param {Event} event\n   */\n  mousemove: function (event) {\n    event = normalizeEvent(this.dom, event);\n    this.trigger('mousemove', event);\n  },\n\n  /**\n   * Mouse out handler\n   * @inner\n   * @param {Event} event\n   */\n  mouseout: function (event) {\n    event = normalizeEvent(this.dom, event);\n    var element = event.toElement || event.relatedTarget;\n\n    if (element != this.dom) {\n      while (element && element.nodeType != 9) {\n        // 忽略包含在root中的dom引起的mouseOut\n        if (element === this.dom) {\n          return;\n        }\n\n        element = element.parentNode;\n      }\n    }\n\n    this.trigger('mouseout', event);\n  },\n\n  /**\n   * Touch开始响应函数\n   * @inner\n   * @param {Event} event\n   */\n  touchstart: function (event) {\n    // Default mouse behaviour should not be disabled here.\n    // For example, page may needs to be slided.\n    event = normalizeEvent(this.dom, event); // Mark touch, which is useful in distinguish touch and\n    // mouse event in upper applicatoin.\n\n    event.zrByTouch = true;\n    this._lastTouchMoment = new Date();\n    processGesture(this, event, 'start'); // In touch device, trigger `mousemove`(`mouseover`) should\n    // be triggered, and must before `mousedown` triggered.\n\n    domHandlers.mousemove.call(this, event);\n    domHandlers.mousedown.call(this, event);\n    setTouchTimer(this);\n  },\n\n  /**\n   * Touch移动响应函数\n   * @inner\n   * @param {Event} event\n   */\n  touchmove: function (event) {\n    event = normalizeEvent(this.dom, event); // Mark touch, which is useful in distinguish touch and\n    // mouse event in upper applicatoin.\n\n    event.zrByTouch = true;\n    processGesture(this, event, 'change'); // Mouse move should always be triggered no matter whether\n    // there is gestrue event, because mouse move and pinch may\n    // be used at the same time.\n\n    domHandlers.mousemove.call(this, event);\n    setTouchTimer(this);\n  },\n\n  /**\n   * Touch结束响应函数\n   * @inner\n   * @param {Event} event\n   */\n  touchend: function (event) {\n    event = normalizeEvent(this.dom, event); // Mark touch, which is useful in distinguish touch and\n    // mouse event in upper applicatoin.\n\n    event.zrByTouch = true;\n    processGesture(this, event, 'end');\n    domHandlers.mouseup.call(this, event); // Do not trigger `mouseout` here, in spite of `mousemove`(`mouseover`) is\n    // triggered in `touchstart`. This seems to be illogical, but by this mechanism,\n    // we can conveniently implement \"hover style\" in both PC and touch device just\n    // by listening to `mouseover` to add \"hover style\" and listening to `mouseout`\n    // to remove \"hover style\" on an element, without any additional code for\n    // compatibility. (`mouseout` will not be triggered in `touchend`, so \"hover\n    // style\" will remain for user view)\n    // click event should always be triggered no matter whether\n    // there is gestrue event. System click can not be prevented.\n\n    if (+new Date() - this._lastTouchMoment < TOUCH_CLICK_DELAY) {\n      domHandlers.click.call(this, event);\n    }\n\n    setTouchTimer(this);\n  },\n  pointerdown: function (event) {\n    domHandlers.mousedown.call(this, event); // if (useMSGuesture(this, event)) {\n    //     this._msGesture.addPointer(event.pointerId);\n    // }\n  },\n  pointermove: function (event) {\n    // FIXME\n    // pointermove is so sensitive that it always triggered when\n    // tap(click) on touch screen, which affect some judgement in\n    // upper application. So, we dont support mousemove on MS touch\n    // device yet.\n    if (!isPointerFromTouch(event)) {\n      domHandlers.mousemove.call(this, event);\n    }\n  },\n  pointerup: function (event) {\n    domHandlers.mouseup.call(this, event);\n  },\n  pointerout: function (event) {\n    // pointerout will be triggered when tap on touch screen\n    // (IE11+/Edge on MS Surface) after click event triggered,\n    // which is inconsistent with the mousout behavior we defined\n    // in touchend. So we unify them.\n    // (check domHandlers.touchend for detailed explanation)\n    if (!isPointerFromTouch(event)) {\n      domHandlers.mouseout.call(this, event);\n    }\n  }\n};\n\nfunction isPointerFromTouch(event) {\n  var pointerType = event.pointerType;\n  return pointerType === 'pen' || pointerType === 'touch';\n} // function useMSGuesture(handlerProxy, event) {\n//     return isPointerFromTouch(event) && !!handlerProxy._msGesture;\n// }\n// Common handlers\n\n\nzrUtil.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n  domHandlers[name] = function (event) {\n    event = normalizeEvent(this.dom, event);\n    this.trigger(name, event);\n  };\n});\n/**\n * 为控制类实例初始化dom 事件处理函数\n *\n * @inner\n * @param {module:zrender/Handler} instance 控制类实例\n */\n\nfunction initDomHandler(instance) {\n  zrUtil.each(touchHandlerNames, function (name) {\n    instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n  });\n  zrUtil.each(pointerHandlerNames, function (name) {\n    instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n  });\n  zrUtil.each(mouseHandlerNames, function (name) {\n    instance._handlers[name] = makeMouseHandler(domHandlers[name], instance);\n  });\n\n  function makeMouseHandler(fn, instance) {\n    return function () {\n      if (instance._touching) {\n        return;\n      }\n\n      return fn.apply(instance, arguments);\n    };\n  }\n}\n\nfunction HandlerDomProxy(dom) {\n  Eventful.call(this);\n  this.dom = dom;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._touching = false;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._touchTimer;\n  /**\n   * @private\n   * @type {module:zrender/core/GestureMgr}\n   */\n\n  this._gestureMgr = new GestureMgr();\n  this._handlers = {};\n  initDomHandler(this);\n\n  if (env.pointerEventsSupported) {\n    // Only IE11+/Edge\n    // 1. On devices that both enable touch and mouse (e.g., MS Surface and lenovo X240),\n    // IE11+/Edge do not trigger touch event, but trigger pointer event and mouse event\n    // at the same time.\n    // 2. On MS Surface, it probablely only trigger mousedown but no mouseup when tap on\n    // screen, which do not occurs in pointer event.\n    // So we use pointer event to both detect touch gesture and mouse behavior.\n    mountHandlers(pointerHandlerNames, this); // FIXME\n    // Note: MS Gesture require CSS touch-action set. But touch-action is not reliable,\n    // which does not prevent defuault behavior occasionally (which may cause view port\n    // zoomed in but use can not zoom it back). And event.preventDefault() does not work.\n    // So we have to not to use MSGesture and not to support touchmove and pinch on MS\n    // touch screen. And we only support click behavior on MS touch screen now.\n    // MS Gesture Event is only supported on IE11+/Edge and on Windows 8+.\n    // We dont support touch on IE on win7.\n    // See <https://msdn.microsoft.com/en-us/library/dn433243(v=vs.85).aspx>\n    // if (typeof MSGesture === 'function') {\n    //     (this._msGesture = new MSGesture()).target = dom; // jshint ignore:line\n    //     dom.addEventListener('MSGestureChange', onMSGestureChange);\n    // }\n  } else {\n    if (env.touchEventsSupported) {\n      mountHandlers(touchHandlerNames, this); // Handler of 'mouseout' event is needed in touch mode, which will be mounted below.\n      // addEventListener(root, 'mouseout', this._mouseoutHandler);\n    } // 1. Considering some devices that both enable touch and mouse event (like on MS Surface\n    // and lenovo X240, @see #2350), we make mouse event be always listened, otherwise\n    // mouse event can not be handle in those devices.\n    // 2. On MS Surface, Chrome will trigger both touch event and mouse event. How to prevent\n    // mouseevent after touch event triggered, see `setTouchTimer`.\n\n\n    mountHandlers(mouseHandlerNames, this);\n  }\n\n  function mountHandlers(handlerNames, instance) {\n    zrUtil.each(handlerNames, function (name) {\n      addEventListener(dom, eventNameFix(name), instance._handlers[name]);\n    }, instance);\n  }\n}\n\nvar handlerDomProxyProto = HandlerDomProxy.prototype;\n\nhandlerDomProxyProto.dispose = function () {\n  var handlerNames = mouseHandlerNames.concat(touchHandlerNames);\n\n  for (var i = 0; i < handlerNames.length; i++) {\n    var name = handlerNames[i];\n    removeEventListener(this.dom, eventNameFix(name), this._handlers[name]);\n  }\n};\n\nhandlerDomProxyProto.setCursor = function (cursorStyle) {\n  this.dom.style && (this.dom.style.cursor = cursorStyle || 'default');\n};\n\nzrUtil.mixin(HandlerDomProxy, Eventful);\nvar _default = HandlerDomProxy;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Scale = require(\"./Scale\");\n\nvar numberUtil = require(\"../util/number\");\n\nvar IntervalScale = require(\"./Interval\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Log scale\n * @module echarts/scale/Log\n */\n// Use some method of IntervalScale\nvar scaleProto = Scale.prototype;\nvar intervalScaleProto = IntervalScale.prototype;\nvar getPrecisionSafe = numberUtil.getPrecisionSafe;\nvar roundingErrorFix = numberUtil.round;\nvar mathFloor = Math.floor;\nvar mathCeil = Math.ceil;\nvar mathPow = Math.pow;\nvar mathLog = Math.log;\nvar LogScale = Scale.extend({\n  type: 'log',\n  base: 10,\n  $constructor: function () {\n    Scale.apply(this, arguments);\n    this._originalScale = new IntervalScale();\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getTicks: function () {\n    var originalScale = this._originalScale;\n    var extent = this._extent;\n    var originalExtent = originalScale.getExtent();\n    return zrUtil.map(intervalScaleProto.getTicks.call(this), function (val) {\n      var powVal = numberUtil.round(mathPow(this.base, val)); // Fix #4158\n\n      powVal = val === extent[0] && originalScale.__fixMin ? fixRoundingError(powVal, originalExtent[0]) : powVal;\n      powVal = val === extent[1] && originalScale.__fixMax ? fixRoundingError(powVal, originalExtent[1]) : powVal;\n      return powVal;\n    }, this);\n  },\n\n  /**\n   * @param {number} val\n   * @return {string}\n   */\n  getLabel: intervalScaleProto.getLabel,\n\n  /**\n   * @param  {number} val\n   * @return {number}\n   */\n  scale: function (val) {\n    val = scaleProto.scale.call(this, val);\n    return mathPow(this.base, val);\n  },\n\n  /**\n   * @param {number} start\n   * @param {number} end\n   */\n  setExtent: function (start, end) {\n    var base = this.base;\n    start = mathLog(start) / mathLog(base);\n    end = mathLog(end) / mathLog(base);\n    intervalScaleProto.setExtent.call(this, start, end);\n  },\n\n  /**\n   * @return {number} end\n   */\n  getExtent: function () {\n    var base = this.base;\n    var extent = scaleProto.getExtent.call(this);\n    extent[0] = mathPow(base, extent[0]);\n    extent[1] = mathPow(base, extent[1]); // Fix #4158\n\n    var originalScale = this._originalScale;\n    var originalExtent = originalScale.getExtent();\n    originalScale.__fixMin && (extent[0] = fixRoundingError(extent[0], originalExtent[0]));\n    originalScale.__fixMax && (extent[1] = fixRoundingError(extent[1], originalExtent[1]));\n    return extent;\n  },\n\n  /**\n   * @param  {Array.<number>} extent\n   */\n  unionExtent: function (extent) {\n    this._originalScale.unionExtent(extent);\n\n    var base = this.base;\n    extent[0] = mathLog(extent[0]) / mathLog(base);\n    extent[1] = mathLog(extent[1]) / mathLog(base);\n    scaleProto.unionExtent.call(this, extent);\n  },\n\n  /**\n   * @override\n   */\n  unionExtentFromData: function (data, dim) {\n    // TODO\n    // filter value that <= 0\n    this.unionExtent(data.getApproximateExtent(dim));\n  },\n\n  /**\n   * Update interval and extent of intervals for nice ticks\n   * @param  {number} [approxTickNum = 10] Given approx tick number\n   */\n  niceTicks: function (approxTickNum) {\n    approxTickNum = approxTickNum || 10;\n    var extent = this._extent;\n    var span = extent[1] - extent[0];\n\n    if (span === Infinity || span <= 0) {\n      return;\n    }\n\n    var interval = numberUtil.quantity(span);\n    var err = approxTickNum / span * interval; // Filter ticks to get closer to the desired count.\n\n    if (err <= 0.5) {\n      interval *= 10;\n    } // Interval should be integer\n\n\n    while (!isNaN(interval) && Math.abs(interval) < 1 && Math.abs(interval) > 0) {\n      interval *= 10;\n    }\n\n    var niceExtent = [numberUtil.round(mathCeil(extent[0] / interval) * interval), numberUtil.round(mathFloor(extent[1] / interval) * interval)];\n    this._interval = interval;\n    this._niceExtent = niceExtent;\n  },\n\n  /**\n   * Nice extent.\n   * @override\n   */\n  niceExtent: function (opt) {\n    intervalScaleProto.niceExtent.call(this, opt);\n    var originalScale = this._originalScale;\n    originalScale.__fixMin = opt.fixMin;\n    originalScale.__fixMax = opt.fixMax;\n  }\n});\nzrUtil.each(['contain', 'normalize'], function (methodName) {\n  LogScale.prototype[methodName] = function (val) {\n    val = mathLog(val) / mathLog(this.base);\n    return scaleProto[methodName].call(this, val);\n  };\n});\n\nLogScale.create = function () {\n  return new LogScale();\n};\n\nfunction fixRoundingError(val, originalVal) {\n  return roundingErrorFix(val, getPrecisionSafe(originalVal));\n}\n\nvar _default = LogScale;\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar isTypedArray = _util.isTypedArray;\nvar extend = _util.extend;\nvar assert = _util.assert;\nvar each = _util.each;\nvar isObject = _util.isObject;\n\nvar _model = require(\"../../util/model\");\n\nvar getDataItemValue = _model.getDataItemValue;\nvar isDataItemOption = _model.isDataItemOption;\n\nvar _number = require(\"../../util/number\");\n\nvar parseDate = _number.parseDate;\n\nvar Source = require(\"../Source\");\n\nvar _sourceType = require(\"./sourceType\");\n\nvar SOURCE_FORMAT_TYPED_ARRAY = _sourceType.SOURCE_FORMAT_TYPED_ARRAY;\nvar SOURCE_FORMAT_ARRAY_ROWS = _sourceType.SOURCE_FORMAT_ARRAY_ROWS;\nvar SOURCE_FORMAT_ORIGINAL = _sourceType.SOURCE_FORMAT_ORIGINAL;\nvar SOURCE_FORMAT_OBJECT_ROWS = _sourceType.SOURCE_FORMAT_OBJECT_ROWS;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// TODO\n// ??? refactor? check the outer usage of data provider.\n// merge with defaultDimValueGetter?\n\n/**\n * If normal array used, mutable chunk size is supported.\n * If typed array used, chunk size must be fixed.\n */\nfunction DefaultDataProvider(source, dimSize) {\n  if (!Source.isInstance(source)) {\n    source = Source.seriesDataToSource(source);\n  }\n\n  this._source = source;\n  var data = this._data = source.data;\n  var sourceFormat = source.sourceFormat; // Typed array. TODO IE10+?\n\n  if (sourceFormat === SOURCE_FORMAT_TYPED_ARRAY) {\n    this._offset = 0;\n    this._dimSize = dimSize;\n    this._data = data;\n  }\n\n  var methods = providerMethods[sourceFormat === SOURCE_FORMAT_ARRAY_ROWS ? sourceFormat + '_' + source.seriesLayoutBy : sourceFormat];\n  extend(this, methods);\n}\n\nvar providerProto = DefaultDataProvider.prototype; // If data is pure without style configuration\n\nproviderProto.pure = false; // If data is persistent and will not be released after use.\n\nproviderProto.persistent = true; // ???! FIXME legacy data provider do not has method getSource\n\nproviderProto.getSource = function () {\n  return this._source;\n};\n\nvar providerMethods = {\n  'arrayRows_column': {\n    pure: true,\n    count: function () {\n      return Math.max(0, this._data.length - this._source.startIndex);\n    },\n    getItem: function (idx) {\n      return this._data[idx + this._source.startIndex];\n    },\n    appendData: appendDataSimply\n  },\n  'arrayRows_row': {\n    pure: true,\n    count: function () {\n      var row = this._data[0];\n      return row ? Math.max(0, row.length - this._source.startIndex) : 0;\n    },\n    getItem: function (idx) {\n      idx += this._source.startIndex;\n      var item = [];\n      var data = this._data;\n\n      for (var i = 0; i < data.length; i++) {\n        var row = data[i];\n        item.push(row ? row[idx] : null);\n      }\n\n      return item;\n    },\n    appendData: function () {\n      throw new Error('Do not support appendData when set seriesLayoutBy: \"row\".');\n    }\n  },\n  'objectRows': {\n    pure: true,\n    count: countSimply,\n    getItem: getItemSimply,\n    appendData: appendDataSimply\n  },\n  'keyedColumns': {\n    pure: true,\n    count: function () {\n      var dimName = this._source.dimensionsDefine[0].name;\n      var col = this._data[dimName];\n      return col ? col.length : 0;\n    },\n    getItem: function (idx) {\n      var item = [];\n      var dims = this._source.dimensionsDefine;\n\n      for (var i = 0; i < dims.length; i++) {\n        var col = this._data[dims[i].name];\n        item.push(col ? col[idx] : null);\n      }\n\n      return item;\n    },\n    appendData: function (newData) {\n      var data = this._data;\n      each(newData, function (newCol, key) {\n        var oldCol = data[key] || (data[key] = []);\n\n        for (var i = 0; i < (newCol || []).length; i++) {\n          oldCol.push(newCol[i]);\n        }\n      });\n    }\n  },\n  'original': {\n    count: countSimply,\n    getItem: getItemSimply,\n    appendData: appendDataSimply\n  },\n  'typedArray': {\n    persistent: false,\n    pure: true,\n    count: function () {\n      return this._data ? this._data.length / this._dimSize : 0;\n    },\n    getItem: function (idx, out) {\n      idx = idx - this._offset;\n      out = out || [];\n      var offset = this._dimSize * idx;\n\n      for (var i = 0; i < this._dimSize; i++) {\n        out[i] = this._data[offset + i];\n      }\n\n      return out;\n    },\n    appendData: function (newData) {\n      this._data = newData;\n    },\n    // Clean self if data is already used.\n    clean: function () {\n      // PENDING\n      this._offset += this.count();\n      this._data = null;\n    }\n  }\n};\n\nfunction countSimply() {\n  return this._data.length;\n}\n\nfunction getItemSimply(idx) {\n  return this._data[idx];\n}\n\nfunction appendDataSimply(newData) {\n  for (var i = 0; i < newData.length; i++) {\n    this._data.push(newData[i]);\n  }\n}\n\nvar rawValueGetters = {\n  arrayRows: getRawValueSimply,\n  objectRows: function (dataItem, dataIndex, dimIndex, dimName) {\n    return dimIndex != null ? dataItem[dimName] : dataItem;\n  },\n  keyedColumns: getRawValueSimply,\n  original: function (dataItem, dataIndex, dimIndex, dimName) {\n    // FIXME\n    // In some case (markpoint in geo (geo-map.html)), dataItem\n    // is {coord: [...]}\n    var value = getDataItemValue(dataItem);\n    return dimIndex == null || !(value instanceof Array) ? value : value[dimIndex];\n  },\n  typedArray: getRawValueSimply\n};\n\nfunction getRawValueSimply(dataItem, dataIndex, dimIndex, dimName) {\n  return dimIndex != null ? dataItem[dimIndex] : dataItem;\n}\n\nvar defaultDimValueGetters = {\n  arrayRows: getDimValueSimply,\n  objectRows: function (dataItem, dimName, dataIndex, dimIndex) {\n    return converDataValue(dataItem[dimName], this._dimensionInfos[dimName]);\n  },\n  keyedColumns: getDimValueSimply,\n  original: function (dataItem, dimName, dataIndex, dimIndex) {\n    // Performance sensitive, do not use modelUtil.getDataItemValue.\n    // If dataItem is an plain object with no value field, the var `value`\n    // will be assigned with the object, but it will be tread correctly\n    // in the `convertDataValue`.\n    var value = dataItem && (dataItem.value == null ? dataItem : dataItem.value); // If any dataItem is like { value: 10 }\n\n    if (!this._rawData.pure && isDataItemOption(dataItem)) {\n      this.hasItemOption = true;\n    }\n\n    return converDataValue(value instanceof Array ? value[dimIndex] // If value is a single number or something else not array.\n    : value, this._dimensionInfos[dimName]);\n  },\n  typedArray: function (dataItem, dimName, dataIndex, dimIndex) {\n    return dataItem[dimIndex];\n  }\n};\n\nfunction getDimValueSimply(dataItem, dimName, dataIndex, dimIndex) {\n  return converDataValue(dataItem[dimIndex], this._dimensionInfos[dimName]);\n}\n/**\n * This helper method convert value in data.\n * @param {string|number|Date} value\n * @param {Object|string} [dimInfo] If string (like 'x'), dimType defaults 'number'.\n *        If \"dimInfo.ordinalParseAndSave\", ordinal value can be parsed.\n */\n\n\nfunction converDataValue(value, dimInfo) {\n  // Performance sensitive.\n  var dimType = dimInfo && dimInfo.type;\n\n  if (dimType === 'ordinal') {\n    // If given value is a category string\n    var ordinalMeta = dimInfo && dimInfo.ordinalMeta;\n    return ordinalMeta ? ordinalMeta.parseAndCollect(value) : value;\n  }\n\n  if (dimType === 'time' // spead up when using timestamp\n  && typeof value !== 'number' && value != null && value !== '-') {\n    value = +parseDate(value);\n  } // dimType defaults 'number'.\n  // If dimType is not ordinal and value is null or undefined or NaN or '-',\n  // parse to NaN.\n\n\n  return value == null || value === '' ? NaN // If string (like '-'), using '+' parse to NaN\n  // If object, also parse to NaN\n  : +value;\n} // ??? FIXME can these logic be more neat: getRawValue, getRawDataItem,\n// Consider persistent.\n// Caution: why use raw value to display on label or tooltip?\n// A reason is to avoid format. For example time value we do not know\n// how to format is expected. More over, if stack is used, calculated\n// value may be 0.91000000001, which have brings trouble to display.\n// TODO: consider how to treat null/undefined/NaN when display?\n\n/**\n * @param {module:echarts/data/List} data\n * @param {number} dataIndex\n * @param {string|number} [dim] dimName or dimIndex\n * @return {Array.<number>|string|number} can be null/undefined.\n */\n\n\nfunction retrieveRawValue(data, dataIndex, dim) {\n  if (!data) {\n    return;\n  } // Consider data may be not persistent.\n\n\n  var dataItem = data.getRawDataItem(dataIndex);\n\n  if (dataItem == null) {\n    return;\n  }\n\n  var sourceFormat = data.getProvider().getSource().sourceFormat;\n  var dimName;\n  var dimIndex;\n  var dimInfo = data.getDimensionInfo(dim);\n\n  if (dimInfo) {\n    dimName = dimInfo.name;\n    dimIndex = dimInfo.index;\n  }\n\n  return rawValueGetters[sourceFormat](dataItem, dataIndex, dimIndex, dimName);\n}\n/**\n * Compatible with some cases (in pie, map) like:\n * data: [{name: 'xx', value: 5, selected: true}, ...]\n * where only sourceFormat is 'original' and 'objectRows' supported.\n *\n * ??? TODO\n * Supported detail options in data item when using 'arrayRows'.\n *\n * @param {module:echarts/data/List} data\n * @param {number} dataIndex\n * @param {string} attr like 'selected'\n */\n\n\nfunction retrieveRawAttr(data, dataIndex, attr) {\n  if (!data) {\n    return;\n  }\n\n  var sourceFormat = data.getProvider().getSource().sourceFormat;\n\n  if (sourceFormat !== SOURCE_FORMAT_ORIGINAL && sourceFormat !== SOURCE_FORMAT_OBJECT_ROWS) {\n    return;\n  }\n\n  var dataItem = data.getRawDataItem(dataIndex);\n\n  if (sourceFormat === SOURCE_FORMAT_ORIGINAL && !isObject(dataItem)) {\n    dataItem = null;\n  }\n\n  if (dataItem) {\n    return dataItem[attr];\n  }\n}\n\nexports.DefaultDataProvider = DefaultDataProvider;\nexports.defaultDimValueGetters = defaultDimValueGetters;\nexports.retrieveRawValue = retrieveRawValue;\nexports.retrieveRawAttr = retrieveRawAttr;","var _vector = require(\"../../core/vector\");\n\nvar v2Distance = _vector.distance;\n\n/**\n * Catmull-Rom spline 插值折线\n * @module zrender/shape/util/smoothSpline\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n/**\n * @inner\n */\nfunction interpolate(p0, p1, p2, p3, t, t2, t3) {\n  var v0 = (p2 - p0) * 0.5;\n  var v1 = (p3 - p1) * 0.5;\n  return (2 * (p1 - p2) + v0 + v1) * t3 + (-3 * (p1 - p2) - 2 * v0 - v1) * t2 + v0 * t + p1;\n}\n/**\n * @alias module:zrender/shape/util/smoothSpline\n * @param {Array} points 线段顶点数组\n * @param {boolean} isLoop\n * @return {Array}\n */\n\n\nfunction _default(points, isLoop) {\n  var len = points.length;\n  var ret = [];\n  var distance = 0;\n\n  for (var i = 1; i < len; i++) {\n    distance += v2Distance(points[i - 1], points[i]);\n  }\n\n  var segs = distance / 2;\n  segs = segs < len ? len : segs;\n\n  for (var i = 0; i < segs; i++) {\n    var pos = i / (segs - 1) * (isLoop ? len : len - 1);\n    var idx = Math.floor(pos);\n    var w = pos - idx;\n    var p0;\n    var p1 = points[idx % len];\n    var p2;\n    var p3;\n\n    if (!isLoop) {\n      p0 = points[idx === 0 ? idx : idx - 1];\n      p2 = points[idx > len - 2 ? len - 1 : idx + 1];\n      p3 = points[idx > len - 3 ? len - 1 : idx + 2];\n    } else {\n      p0 = points[(idx - 1 + len) % len];\n      p2 = points[(idx + 1) % len];\n      p3 = points[(idx + 2) % len];\n    }\n\n    var w2 = w * w;\n    var w3 = w * w2;\n    ret.push([interpolate(p0[0], p1[0], p2[0], p3[0], w, w2, w3), interpolate(p0[1], p1[1], p2[1], p3[1], w, w2, w3)]);\n  }\n\n  return ret;\n}\n\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar axisPointerModelHelper = require(\"./axisPointer/modelHelper\");\n\nvar axisTrigger = require(\"./axisPointer/axisTrigger\");\n\nrequire(\"./axisPointer/AxisPointerModel\");\n\nrequire(\"./axisPointer/AxisPointerView\");\n\nrequire(\"./axisPointer/CartesianAxisPointer\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// CartesianAxisPointer is not supposed to be required here. But consider\n// echarts.simple.js and online build tooltip, which only require gridSimple,\n// CartesianAxisPointer should be able to required somewhere.\necharts.registerPreprocessor(function (option) {\n  // Always has a global axisPointerModel for default setting.\n  if (option) {\n    (!option.axisPointer || option.axisPointer.length === 0) && (option.axisPointer = {});\n    var link = option.axisPointer.link; // Normalize to array to avoid object mergin. But if link\n    // is not set, remain null/undefined, otherwise it will\n    // override existent link setting.\n\n    if (link && !zrUtil.isArray(link)) {\n      option.axisPointer.link = [link];\n    }\n  }\n}); // This process should proformed after coordinate systems created\n// and series data processed. So put it on statistic processing stage.\n\necharts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, function (ecModel, api) {\n  // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n  // allAxesInfo should be updated when setOption performed.\n  ecModel.getComponent('axisPointer').coordSysAxesInfo = axisPointerModelHelper.collect(ecModel, api);\n}); // Broadcast to all views.\n\necharts.registerAction({\n  type: 'updateAxisPointer',\n  event: 'updateAxisPointer',\n  update: ':updateAxisPointer'\n}, axisTrigger);","var env = require(\"../../core/env\");\n\n// Fix weird bug in some version of IE11 (like 11.0.9600.178**),\n// where exception \"unexpected call to method or property access\"\n// might be thrown when calling ctx.fill or ctx.stroke after a path\n// whose area size is zero is drawn and ctx.clip() is called and\n// shadowBlur is set. See #4572, #3112, #5777.\n// (e.g.,\n//  ctx.moveTo(10, 10);\n//  ctx.lineTo(20, 10);\n//  ctx.closePath();\n//  ctx.clip();\n//  ctx.shadowBlur = 10;\n//  ...\n//  ctx.fill();\n// )\nvar shadowTemp = [['shadowBlur', 0], ['shadowColor', '#000'], ['shadowOffsetX', 0], ['shadowOffsetY', 0]];\n\nfunction _default(orignalBrush) {\n  // version string can be: '11.0'\n  return env.browser.ie && env.browser.version >= 11 ? function () {\n    var clipPaths = this.__clipPaths;\n    var style = this.style;\n    var modified;\n\n    if (clipPaths) {\n      for (var i = 0; i < clipPaths.length; i++) {\n        var clipPath = clipPaths[i];\n        var shape = clipPath && clipPath.shape;\n        var type = clipPath && clipPath.type;\n\n        if (shape && (type === 'sector' && shape.startAngle === shape.endAngle || type === 'rect' && (!shape.width || !shape.height))) {\n          for (var j = 0; j < shadowTemp.length; j++) {\n            // It is save to put shadowTemp static, because shadowTemp\n            // will be all modified each item brush called.\n            shadowTemp[j][2] = style[shadowTemp[j][0]];\n            style[shadowTemp[j][0]] = shadowTemp[j][1];\n          }\n\n          modified = true;\n          break;\n        }\n      }\n    }\n\n    orignalBrush.apply(this, arguments);\n\n    if (modified) {\n      for (var j = 0; j < shadowTemp.length; j++) {\n        style[shadowTemp[j][0]] = shadowTemp[j][2];\n      }\n    }\n  } : orignalBrush;\n}\n\nmodule.exports = _default;","var Displayable = require(\"./Displayable\");\n\nvar zrUtil = require(\"../core/util\");\n\nvar textContain = require(\"../contain/text\");\n\nvar textHelper = require(\"./helper/text\");\n\n/**\n * @alias zrender/graphic/Text\n * @extends module:zrender/graphic/Displayable\n * @constructor\n * @param {Object} opts\n */\nvar Text = function (opts) {\n  // jshint ignore:line\n  Displayable.call(this, opts);\n};\n\nText.prototype = {\n  constructor: Text,\n  type: 'text',\n  brush: function (ctx, prevEl) {\n    var style = this.style; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true); // Use props with prefix 'text'.\n\n    style.fill = style.stroke = style.shadowBlur = style.shadowColor = style.shadowOffsetX = style.shadowOffsetY = null;\n    var text = style.text; // Convert to string\n\n    text != null && (text += ''); // Always bind style\n\n    style.bind(ctx, this, prevEl);\n\n    if (!textHelper.needDrawText(text, style)) {\n      return;\n    }\n\n    this.setTransform(ctx);\n    textHelper.renderText(this, ctx, text, style);\n    this.restoreTransform(ctx);\n  },\n  getBoundingRect: function () {\n    var style = this.style; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true);\n\n    if (!this._rect) {\n      var text = style.text;\n      text != null ? text += '' : text = '';\n      var rect = textContain.getBoundingRect(style.text + '', style.font, style.textAlign, style.textVerticalAlign, style.textPadding, style.rich);\n      rect.x += style.x || 0;\n      rect.y += style.y || 0;\n\n      if (textHelper.getStroke(style.textStroke, style.textStrokeWidth)) {\n        var w = style.textStrokeWidth;\n        rect.x -= w / 2;\n        rect.y -= w / 2;\n        rect.width += w;\n        rect.height += w;\n      }\n\n      this._rect = rect;\n    }\n\n    return this._rect;\n  }\n};\nzrUtil.inherits(Text, Displayable);\nvar _default = Text;\nmodule.exports = _default;","var Path = require(\"../Path\");\n\n/**\n * 直线\n * @module zrender/graphic/shape/Line\n */\nvar _default = Path.extend({\n  type: 'line',\n  shape: {\n    // Start point\n    x1: 0,\n    y1: 0,\n    // End point\n    x2: 0,\n    y2: 0,\n    percent: 1\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    var x1 = shape.x1;\n    var y1 = shape.y1;\n    var x2 = shape.x2;\n    var y2 = shape.y2;\n    var percent = shape.percent;\n\n    if (percent === 0) {\n      return;\n    }\n\n    ctx.moveTo(x1, y1);\n\n    if (percent < 1) {\n      x2 = x1 * (1 - percent) + x2 * percent;\n      y2 = y1 * (1 - percent) + y2 * percent;\n    }\n\n    ctx.lineTo(x2, y2);\n  },\n\n  /**\n   * Get point at percent\n   * @param  {number} percent\n   * @return {Array.<number>}\n   */\n  pointAt: function (p) {\n    var shape = this.shape;\n    return [shape.x1 * (1 - p) + shape.x2 * p, shape.y1 * (1 - p) + shape.y2 * p];\n  }\n});\n\nmodule.exports = _default;","var util = require(\"./core/util\");\n\nvar _config = require(\"./config\");\n\nvar devicePixelRatio = _config.devicePixelRatio;\n\nvar Style = require(\"./graphic/Style\");\n\nvar Pattern = require(\"./graphic/Pattern\");\n\n/**\n * @module zrender/Layer\n * @author pissang(https://www.github.com/pissang)\n */\nfunction returnFalse() {\n  return false;\n}\n/**\n * 创建dom\n *\n * @inner\n * @param {string} id dom id 待用\n * @param {Painter} painter painter instance\n * @param {number} number\n */\n\n\nfunction createDom(id, painter, dpr) {\n  var newDom = util.createCanvas();\n  var width = painter.getWidth();\n  var height = painter.getHeight();\n  var newDomStyle = newDom.style;\n\n  if (newDomStyle) {\n    // In node or some other non-browser environment\n    newDomStyle.position = 'absolute';\n    newDomStyle.left = 0;\n    newDomStyle.top = 0;\n    newDomStyle.width = width + 'px';\n    newDomStyle.height = height + 'px';\n    newDom.setAttribute('data-zr-dom-id', id);\n  }\n\n  newDom.width = width * dpr;\n  newDom.height = height * dpr;\n  return newDom;\n}\n/**\n * @alias module:zrender/Layer\n * @constructor\n * @extends module:zrender/mixin/Transformable\n * @param {string} id\n * @param {module:zrender/Painter} painter\n * @param {number} [dpr]\n */\n\n\nvar Layer = function (id, painter, dpr) {\n  var dom;\n  dpr = dpr || devicePixelRatio;\n\n  if (typeof id === 'string') {\n    dom = createDom(id, painter, dpr);\n  } // Not using isDom because in node it will return false\n  else if (util.isObject(id)) {\n      dom = id;\n      id = dom.id;\n    }\n\n  this.id = id;\n  this.dom = dom;\n  var domStyle = dom.style;\n\n  if (domStyle) {\n    // Not in node\n    dom.onselectstart = returnFalse; // 避免页面选中的尴尬\n\n    domStyle['-webkit-user-select'] = 'none';\n    domStyle['user-select'] = 'none';\n    domStyle['-webkit-touch-callout'] = 'none';\n    domStyle['-webkit-tap-highlight-color'] = 'rgba(0,0,0,0)';\n    domStyle['padding'] = 0;\n    domStyle['margin'] = 0;\n    domStyle['border-width'] = 0;\n  }\n\n  this.domBack = null;\n  this.ctxBack = null;\n  this.painter = painter;\n  this.config = null; // Configs\n\n  /**\n   * 每次清空画布的颜色\n   * @type {string}\n   * @default 0\n   */\n\n  this.clearColor = 0;\n  /**\n   * 是否开启动态模糊\n   * @type {boolean}\n   * @default false\n   */\n\n  this.motionBlur = false;\n  /**\n   * 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n   * @type {number}\n   * @default 0.7\n   */\n\n  this.lastFrameAlpha = 0.7;\n  /**\n   * Layer dpr\n   * @type {number}\n   */\n\n  this.dpr = dpr;\n};\n\nLayer.prototype = {\n  constructor: Layer,\n  __dirty: true,\n  __used: false,\n  __drawIndex: 0,\n  __startIndex: 0,\n  __endIndex: 0,\n  incremental: false,\n  getElementCount: function () {\n    return this.__endIndex - this.__startIndex;\n  },\n  initContext: function () {\n    this.ctx = this.dom.getContext('2d');\n    this.ctx.dpr = this.dpr;\n  },\n  createBackBuffer: function () {\n    var dpr = this.dpr;\n    this.domBack = createDom('back-' + this.id, this.painter, dpr);\n    this.ctxBack = this.domBack.getContext('2d');\n\n    if (dpr != 1) {\n      this.ctxBack.scale(dpr, dpr);\n    }\n  },\n\n  /**\n   * @param  {number} width\n   * @param  {number} height\n   */\n  resize: function (width, height) {\n    var dpr = this.dpr;\n    var dom = this.dom;\n    var domStyle = dom.style;\n    var domBack = this.domBack;\n\n    if (domStyle) {\n      domStyle.width = width + 'px';\n      domStyle.height = height + 'px';\n    }\n\n    dom.width = width * dpr;\n    dom.height = height * dpr;\n\n    if (domBack) {\n      domBack.width = width * dpr;\n      domBack.height = height * dpr;\n\n      if (dpr != 1) {\n        this.ctxBack.scale(dpr, dpr);\n      }\n    }\n  },\n\n  /**\n   * 清空该层画布\n   * @param {boolean} [clearAll]=false Clear all with out motion blur\n   * @param {Color} [clearColor]\n   */\n  clear: function (clearAll, clearColor) {\n    var dom = this.dom;\n    var ctx = this.ctx;\n    var width = dom.width;\n    var height = dom.height;\n    var clearColor = clearColor || this.clearColor;\n    var haveMotionBLur = this.motionBlur && !clearAll;\n    var lastFrameAlpha = this.lastFrameAlpha;\n    var dpr = this.dpr;\n\n    if (haveMotionBLur) {\n      if (!this.domBack) {\n        this.createBackBuffer();\n      }\n\n      this.ctxBack.globalCompositeOperation = 'copy';\n      this.ctxBack.drawImage(dom, 0, 0, width / dpr, height / dpr);\n    }\n\n    ctx.clearRect(0, 0, width, height);\n\n    if (clearColor && clearColor !== 'transparent') {\n      var clearColorGradientOrPattern; // Gradient\n\n      if (clearColor.colorStops) {\n        // Cache canvas gradient\n        clearColorGradientOrPattern = clearColor.__canvasGradient || Style.getGradient(ctx, clearColor, {\n          x: 0,\n          y: 0,\n          width: width,\n          height: height\n        });\n        clearColor.__canvasGradient = clearColorGradientOrPattern;\n      } // Pattern\n      else if (clearColor.image) {\n          clearColorGradientOrPattern = Pattern.prototype.getCanvasPattern.call(clearColor, ctx);\n        }\n\n      ctx.save();\n      ctx.fillStyle = clearColorGradientOrPattern || clearColor;\n      ctx.fillRect(0, 0, width, height);\n      ctx.restore();\n    }\n\n    if (haveMotionBLur) {\n      var domBack = this.domBack;\n      ctx.save();\n      ctx.globalAlpha = lastFrameAlpha;\n      ctx.drawImage(domBack, 0, 0, width, height);\n      ctx.restore();\n    }\n  }\n};\nvar _default = Layer;\nmodule.exports = _default;","var _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\nvar each = _util.each;\nvar isString = _util.isString;\nvar defaults = _util.defaults;\nvar extend = _util.extend;\nvar isObject = _util.isObject;\nvar clone = _util.clone;\n\nvar _model = require(\"../../util/model\");\n\nvar normalizeToArray = _model.normalizeToArray;\n\nvar _sourceHelper = require(\"./sourceHelper\");\n\nvar guessOrdinal = _sourceHelper.guessOrdinal;\n\nvar Source = require(\"../Source\");\n\nvar _dimensionHelper = require(\"./dimensionHelper\");\n\nvar OTHER_DIMENSIONS = _dimensionHelper.OTHER_DIMENSIONS;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @deprecated\n * Use `echarts/data/helper/createDimensions` instead.\n */\n\n/**\n * @see {module:echarts/test/ut/spec/data/completeDimensions}\n *\n * Complete the dimensions array, by user defined `dimension` and `encode`,\n * and guessing from the data structure.\n * If no 'value' dimension specified, the first no-named dimension will be\n * named as 'value'.\n *\n * @param {Array.<string>} sysDims Necessary dimensions, like ['x', 'y'], which\n *      provides not only dim template, but also default order.\n *      properties: 'name', 'type', 'displayName'.\n *      `name` of each item provides default coord name.\n *      [{dimsDef: [string|Object, ...]}, ...] dimsDef of sysDim item provides default dim name, and\n *                                    provide dims count that the sysDim required.\n *      [{ordinalMeta}] can be specified.\n * @param {module:echarts/data/Source|Array|Object} source or data (for compatibal with pervious)\n * @param {Object} [opt]\n * @param {Array.<Object|string>} [opt.dimsDef] option.series.dimensions User defined dimensions\n *      For example: ['asdf', {name, type}, ...].\n * @param {Object|HashMap} [opt.encodeDef] option.series.encode {x: 2, y: [3, 1], tooltip: [1, 2], label: 3}\n * @param {string} [opt.generateCoord] Generate coord dim with the given name.\n *                 If not specified, extra dim names will be:\n *                 'value', 'value0', 'value1', ...\n * @param {number} [opt.generateCoordCount] By default, the generated dim name is `generateCoord`.\n *                 If `generateCoordCount` specified, the generated dim names will be:\n *                 `generateCoord` + 0, `generateCoord` + 1, ...\n *                 can be Infinity, indicate that use all of the remain columns.\n * @param {number} [opt.dimCount] If not specified, guess by the first data item.\n * @param {number} [opt.encodeDefaulter] If not specified, auto find the next available data dim.\n * @return {Array.<Object>} [{\n *      name: string mandatory,\n *      displayName: string, the origin name in dimsDef, see source helper.\n *                 If displayName given, the tooltip will displayed vertically.\n *      coordDim: string mandatory,\n *      coordDimIndex: number mandatory,\n *      type: string optional,\n *      otherDims: { never null/undefined\n *          tooltip: number optional,\n *          label: number optional,\n *          itemName: number optional,\n *          seriesName: number optional,\n *      },\n *      isExtraCoord: boolean true if coord is generated\n *          (not specified in encode and not series specified)\n *      other props ...\n * }]\n */\nfunction completeDimensions(sysDims, source, opt) {\n  if (!Source.isInstance(source)) {\n    source = Source.seriesDataToSource(source);\n  }\n\n  opt = opt || {};\n  sysDims = (sysDims || []).slice();\n  var dimsDef = (opt.dimsDef || []).slice();\n  var encodeDef = createHashMap(opt.encodeDef);\n  var dataDimNameMap = createHashMap();\n  var coordDimNameMap = createHashMap(); // var valueCandidate;\n\n  var result = [];\n  var dimCount = getDimCount(source, sysDims, dimsDef, opt.dimCount); // Apply user defined dims (`name` and `type`) and init result.\n\n  for (var i = 0; i < dimCount; i++) {\n    var dimDefItem = dimsDef[i] = extend({}, isObject(dimsDef[i]) ? dimsDef[i] : {\n      name: dimsDef[i]\n    });\n    var userDimName = dimDefItem.name;\n    var resultItem = result[i] = {\n      otherDims: {}\n    }; // Name will be applied later for avoiding duplication.\n\n    if (userDimName != null && dataDimNameMap.get(userDimName) == null) {\n      // Only if `series.dimensions` is defined in option\n      // displayName, will be set, and dimension will be diplayed vertically in\n      // tooltip by default.\n      resultItem.name = resultItem.displayName = userDimName;\n      dataDimNameMap.set(userDimName, i);\n    }\n\n    dimDefItem.type != null && (resultItem.type = dimDefItem.type);\n    dimDefItem.displayName != null && (resultItem.displayName = dimDefItem.displayName);\n  } // Set `coordDim` and `coordDimIndex` by `encodeDef` and normalize `encodeDef`.\n\n\n  encodeDef.each(function (dataDims, coordDim) {\n    dataDims = normalizeToArray(dataDims).slice();\n    var validDataDims = encodeDef.set(coordDim, []);\n    each(dataDims, function (resultDimIdx, idx) {\n      // The input resultDimIdx can be dim name or index.\n      isString(resultDimIdx) && (resultDimIdx = dataDimNameMap.get(resultDimIdx));\n\n      if (resultDimIdx != null && resultDimIdx < dimCount) {\n        validDataDims[idx] = resultDimIdx;\n        applyDim(result[resultDimIdx], coordDim, idx);\n      }\n    });\n  }); // Apply templetes and default order from `sysDims`.\n\n  var availDimIdx = 0;\n  each(sysDims, function (sysDimItem, sysDimIndex) {\n    var coordDim;\n    var sysDimItem;\n    var sysDimItemDimsDef;\n    var sysDimItemOtherDims;\n\n    if (isString(sysDimItem)) {\n      coordDim = sysDimItem;\n      sysDimItem = {};\n    } else {\n      coordDim = sysDimItem.name;\n      var ordinalMeta = sysDimItem.ordinalMeta;\n      sysDimItem.ordinalMeta = null;\n      sysDimItem = clone(sysDimItem);\n      sysDimItem.ordinalMeta = ordinalMeta; // `coordDimIndex` should not be set directly.\n\n      sysDimItemDimsDef = sysDimItem.dimsDef;\n      sysDimItemOtherDims = sysDimItem.otherDims;\n      sysDimItem.name = sysDimItem.coordDim = sysDimItem.coordDimIndex = sysDimItem.dimsDef = sysDimItem.otherDims = null;\n    }\n\n    var dataDims = normalizeToArray(encodeDef.get(coordDim)); // dimensions provides default dim sequences.\n\n    if (!dataDims.length) {\n      for (var i = 0; i < (sysDimItemDimsDef && sysDimItemDimsDef.length || 1); i++) {\n        while (availDimIdx < result.length && result[availDimIdx].coordDim != null) {\n          availDimIdx++;\n        }\n\n        availDimIdx < result.length && dataDims.push(availDimIdx++);\n      }\n    } // Apply templates.\n\n\n    each(dataDims, function (resultDimIdx, coordDimIndex) {\n      var resultItem = result[resultDimIdx];\n      applyDim(defaults(resultItem, sysDimItem), coordDim, coordDimIndex);\n\n      if (resultItem.name == null && sysDimItemDimsDef) {\n        var sysDimItemDimsDefItem = sysDimItemDimsDef[coordDimIndex];\n        !isObject(sysDimItemDimsDefItem) && (sysDimItemDimsDefItem = {\n          name: sysDimItemDimsDefItem\n        });\n        resultItem.name = resultItem.displayName = sysDimItemDimsDefItem.name;\n        resultItem.defaultTooltip = sysDimItemDimsDefItem.defaultTooltip;\n      } // FIXME refactor, currently only used in case: {otherDims: {tooltip: false}}\n\n\n      sysDimItemOtherDims && defaults(resultItem.otherDims, sysDimItemOtherDims);\n    });\n  });\n\n  function applyDim(resultItem, coordDim, coordDimIndex) {\n    if (OTHER_DIMENSIONS.get(coordDim) != null) {\n      resultItem.otherDims[coordDim] = coordDimIndex;\n    } else {\n      resultItem.coordDim = coordDim;\n      resultItem.coordDimIndex = coordDimIndex;\n      coordDimNameMap.set(coordDim, true);\n    }\n  } // Make sure the first extra dim is 'value'.\n\n\n  var generateCoord = opt.generateCoord;\n  var generateCoordCount = opt.generateCoordCount;\n  var fromZero = generateCoordCount != null;\n  generateCoordCount = generateCoord ? generateCoordCount || 1 : 0;\n  var extra = generateCoord || 'value'; // Set dim `name` and other `coordDim` and other props.\n\n  for (var resultDimIdx = 0; resultDimIdx < dimCount; resultDimIdx++) {\n    var resultItem = result[resultDimIdx] = result[resultDimIdx] || {};\n    var coordDim = resultItem.coordDim;\n\n    if (coordDim == null) {\n      resultItem.coordDim = genName(extra, coordDimNameMap, fromZero);\n      resultItem.coordDimIndex = 0;\n\n      if (!generateCoord || generateCoordCount <= 0) {\n        resultItem.isExtraCoord = true;\n      }\n\n      generateCoordCount--;\n    }\n\n    resultItem.name == null && (resultItem.name = genName(resultItem.coordDim, dataDimNameMap));\n\n    if (resultItem.type == null && guessOrdinal(source, resultDimIdx, resultItem.name)) {\n      resultItem.type = 'ordinal';\n    }\n  }\n\n  return result;\n} // ??? TODO\n// Originally detect dimCount by data[0]. Should we\n// optimize it to only by sysDims and dimensions and encode.\n// So only necessary dims will be initialized.\n// But\n// (1) custom series should be considered. where other dims\n// may be visited.\n// (2) sometimes user need to calcualte bubble size or use visualMap\n// on other dimensions besides coordSys needed.\n// So, dims that is not used by system, should be shared in storage?\n\n\nfunction getDimCount(source, sysDims, dimsDef, optDimCount) {\n  // Note that the result dimCount should not small than columns count\n  // of data, otherwise `dataDimNameMap` checking will be incorrect.\n  var dimCount = Math.max(source.dimensionsDetectCount || 1, sysDims.length, dimsDef.length, optDimCount || 0);\n  each(sysDims, function (sysDimItem) {\n    var sysDimItemDimsDef = sysDimItem.dimsDef;\n    sysDimItemDimsDef && (dimCount = Math.max(dimCount, sysDimItemDimsDef.length));\n  });\n  return dimCount;\n}\n\nfunction genName(name, map, fromZero) {\n  if (fromZero || map.get(name) != null) {\n    var i = 0;\n\n    while (map.get(name + i) != null) {\n      i++;\n    }\n\n    name += i;\n  }\n\n  map.set(name, true);\n  return name;\n}\n\nvar _default = completeDimensions;\nmodule.exports = _default;","var _vector = require(\"./vector\");\n\nvar v2Create = _vector.create;\nvar v2DistSquare = _vector.distSquare;\n\n/**\n * 曲线辅助模块\n * @module zrender/core/curve\n * @author pissang(https://www.github.com/pissang)\n */\nvar mathPow = Math.pow;\nvar mathSqrt = Math.sqrt;\nvar EPSILON = 1e-8;\nvar EPSILON_NUMERIC = 1e-4;\nvar THREE_SQRT = mathSqrt(3);\nvar ONE_THIRD = 1 / 3; // 临时变量\n\nvar _v0 = v2Create();\n\nvar _v1 = v2Create();\n\nvar _v2 = v2Create();\n\nfunction isAroundZero(val) {\n  return val > -EPSILON && val < EPSILON;\n}\n\nfunction isNotAroundZero(val) {\n  return val > EPSILON || val < -EPSILON;\n}\n/**\n * 计算三次贝塞尔值\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction cubicAt(p0, p1, p2, p3, t) {\n  var onet = 1 - t;\n  return onet * onet * (onet * p0 + 3 * t * p1) + t * t * (t * p3 + 3 * onet * p2);\n}\n/**\n * 计算三次贝塞尔导数值\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction cubicDerivativeAt(p0, p1, p2, p3, t) {\n  var onet = 1 - t;\n  return 3 * (((p1 - p0) * onet + 2 * (p2 - p1) * t) * onet + (p3 - p2) * t * t);\n}\n/**\n * 计算三次贝塞尔方程根，使用盛金公式\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} val\n * @param  {Array.<number>} roots\n * @return {number} 有效根数目\n */\n\n\nfunction cubicRootAt(p0, p1, p2, p3, val, roots) {\n  // Evaluate roots of cubic functions\n  var a = p3 + 3 * (p1 - p2) - p0;\n  var b = 3 * (p2 - p1 * 2 + p0);\n  var c = 3 * (p1 - p0);\n  var d = p0 - val;\n  var A = b * b - 3 * a * c;\n  var B = b * c - 9 * a * d;\n  var C = c * c - 3 * b * d;\n  var n = 0;\n\n  if (isAroundZero(A) && isAroundZero(B)) {\n    if (isAroundZero(b)) {\n      roots[0] = 0;\n    } else {\n      var t1 = -c / b; //t1, t2, t3, b is not zero\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    }\n  } else {\n    var disc = B * B - 4 * A * C;\n\n    if (isAroundZero(disc)) {\n      var K = B / A;\n      var t1 = -b / a + K; // t1, a is not zero\n\n      var t2 = -K / 2; // t2, t3\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        roots[n++] = t2;\n      }\n    } else if (disc > 0) {\n      var discSqrt = mathSqrt(disc);\n      var Y1 = A * b + 1.5 * a * (-B + discSqrt);\n      var Y2 = A * b + 1.5 * a * (-B - discSqrt);\n\n      if (Y1 < 0) {\n        Y1 = -mathPow(-Y1, ONE_THIRD);\n      } else {\n        Y1 = mathPow(Y1, ONE_THIRD);\n      }\n\n      if (Y2 < 0) {\n        Y2 = -mathPow(-Y2, ONE_THIRD);\n      } else {\n        Y2 = mathPow(Y2, ONE_THIRD);\n      }\n\n      var t1 = (-b - (Y1 + Y2)) / (3 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    } else {\n      var T = (2 * A * b - 3 * a * B) / (2 * mathSqrt(A * A * A));\n      var theta = Math.acos(T) / 3;\n      var ASqrt = mathSqrt(A);\n      var tmp = Math.cos(theta);\n      var t1 = (-b - 2 * ASqrt * tmp) / (3 * a);\n      var t2 = (-b + ASqrt * (tmp + THREE_SQRT * Math.sin(theta))) / (3 * a);\n      var t3 = (-b + ASqrt * (tmp - THREE_SQRT * Math.sin(theta))) / (3 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        roots[n++] = t2;\n      }\n\n      if (t3 >= 0 && t3 <= 1) {\n        roots[n++] = t3;\n      }\n    }\n  }\n\n  return n;\n}\n/**\n * 计算三次贝塞尔方程极限值的位置\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {Array.<number>} extrema\n * @return {number} 有效数目\n */\n\n\nfunction cubicExtrema(p0, p1, p2, p3, extrema) {\n  var b = 6 * p2 - 12 * p1 + 6 * p0;\n  var a = 9 * p1 + 3 * p3 - 3 * p0 - 9 * p2;\n  var c = 3 * p1 - 3 * p0;\n  var n = 0;\n\n  if (isAroundZero(a)) {\n    if (isNotAroundZero(b)) {\n      var t1 = -c / b;\n\n      if (t1 >= 0 && t1 <= 1) {\n        extrema[n++] = t1;\n      }\n    }\n  } else {\n    var disc = b * b - 4 * a * c;\n\n    if (isAroundZero(disc)) {\n      extrema[0] = -b / (2 * a);\n    } else if (disc > 0) {\n      var discSqrt = mathSqrt(disc);\n      var t1 = (-b + discSqrt) / (2 * a);\n      var t2 = (-b - discSqrt) / (2 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        extrema[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        extrema[n++] = t2;\n      }\n    }\n  }\n\n  return n;\n}\n/**\n * 细分三次贝塞尔曲线\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @param  {Array.<number>} out\n */\n\n\nfunction cubicSubdivide(p0, p1, p2, p3, t, out) {\n  var p01 = (p1 - p0) * t + p0;\n  var p12 = (p2 - p1) * t + p1;\n  var p23 = (p3 - p2) * t + p2;\n  var p012 = (p12 - p01) * t + p01;\n  var p123 = (p23 - p12) * t + p12;\n  var p0123 = (p123 - p012) * t + p012; // Seg0\n\n  out[0] = p0;\n  out[1] = p01;\n  out[2] = p012;\n  out[3] = p0123; // Seg1\n\n  out[4] = p0123;\n  out[5] = p123;\n  out[6] = p23;\n  out[7] = p3;\n}\n/**\n * 投射点到三次贝塞尔曲线上，返回投射距离。\n * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {number} x3\n * @param {number} y3\n * @param {number} x\n * @param {number} y\n * @param {Array.<number>} [out] 投射点\n * @return {number}\n */\n\n\nfunction cubicProjectPoint(x0, y0, x1, y1, x2, y2, x3, y3, x, y, out) {\n  // http://pomax.github.io/bezierinfo/#projections\n  var t;\n  var interval = 0.005;\n  var d = Infinity;\n  var prev;\n  var next;\n  var d1;\n  var d2;\n  _v0[0] = x;\n  _v0[1] = y; // 先粗略估计一下可能的最小距离的 t 值\n  // PENDING\n\n  for (var _t = 0; _t < 1; _t += 0.05) {\n    _v1[0] = cubicAt(x0, x1, x2, x3, _t);\n    _v1[1] = cubicAt(y0, y1, y2, y3, _t);\n    d1 = v2DistSquare(_v0, _v1);\n\n    if (d1 < d) {\n      t = _t;\n      d = d1;\n    }\n  }\n\n  d = Infinity; // At most 32 iteration\n\n  for (var i = 0; i < 32; i++) {\n    if (interval < EPSILON_NUMERIC) {\n      break;\n    }\n\n    prev = t - interval;\n    next = t + interval; // t - interval\n\n    _v1[0] = cubicAt(x0, x1, x2, x3, prev);\n    _v1[1] = cubicAt(y0, y1, y2, y3, prev);\n    d1 = v2DistSquare(_v1, _v0);\n\n    if (prev >= 0 && d1 < d) {\n      t = prev;\n      d = d1;\n    } else {\n      // t + interval\n      _v2[0] = cubicAt(x0, x1, x2, x3, next);\n      _v2[1] = cubicAt(y0, y1, y2, y3, next);\n      d2 = v2DistSquare(_v2, _v0);\n\n      if (next <= 1 && d2 < d) {\n        t = next;\n        d = d2;\n      } else {\n        interval *= 0.5;\n      }\n    }\n  } // t\n\n\n  if (out) {\n    out[0] = cubicAt(x0, x1, x2, x3, t);\n    out[1] = cubicAt(y0, y1, y2, y3, t);\n  } // console.log(interval, i);\n\n\n  return mathSqrt(d);\n}\n/**\n * 计算二次方贝塞尔值\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction quadraticAt(p0, p1, p2, t) {\n  var onet = 1 - t;\n  return onet * (onet * p0 + 2 * t * p1) + t * t * p2;\n}\n/**\n * 计算二次方贝塞尔导数值\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction quadraticDerivativeAt(p0, p1, p2, t) {\n  return 2 * ((1 - t) * (p1 - p0) + t * (p2 - p1));\n}\n/**\n * 计算二次方贝塞尔方程根\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @param  {Array.<number>} roots\n * @return {number} 有效根数目\n */\n\n\nfunction quadraticRootAt(p0, p1, p2, val, roots) {\n  var a = p0 - 2 * p1 + p2;\n  var b = 2 * (p1 - p0);\n  var c = p0 - val;\n  var n = 0;\n\n  if (isAroundZero(a)) {\n    if (isNotAroundZero(b)) {\n      var t1 = -c / b;\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    }\n  } else {\n    var disc = b * b - 4 * a * c;\n\n    if (isAroundZero(disc)) {\n      var t1 = -b / (2 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    } else if (disc > 0) {\n      var discSqrt = mathSqrt(disc);\n      var t1 = (-b + discSqrt) / (2 * a);\n      var t2 = (-b - discSqrt) / (2 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        roots[n++] = t2;\n      }\n    }\n  }\n\n  return n;\n}\n/**\n * 计算二次贝塞尔方程极限值\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @return {number}\n */\n\n\nfunction quadraticExtremum(p0, p1, p2) {\n  var divider = p0 + p2 - 2 * p1;\n\n  if (divider === 0) {\n    // p1 is center of p0 and p2\n    return 0.5;\n  } else {\n    return (p0 - p1) / divider;\n  }\n}\n/**\n * 细分二次贝塞尔曲线\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @param  {Array.<number>} out\n */\n\n\nfunction quadraticSubdivide(p0, p1, p2, t, out) {\n  var p01 = (p1 - p0) * t + p0;\n  var p12 = (p2 - p1) * t + p1;\n  var p012 = (p12 - p01) * t + p01; // Seg0\n\n  out[0] = p0;\n  out[1] = p01;\n  out[2] = p012; // Seg1\n\n  out[3] = p012;\n  out[4] = p12;\n  out[5] = p2;\n}\n/**\n * 投射点到二次贝塞尔曲线上，返回投射距离。\n * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {number} x\n * @param {number} y\n * @param {Array.<number>} out 投射点\n * @return {number}\n */\n\n\nfunction quadraticProjectPoint(x0, y0, x1, y1, x2, y2, x, y, out) {\n  // http://pomax.github.io/bezierinfo/#projections\n  var t;\n  var interval = 0.005;\n  var d = Infinity;\n  _v0[0] = x;\n  _v0[1] = y; // 先粗略估计一下可能的最小距离的 t 值\n  // PENDING\n\n  for (var _t = 0; _t < 1; _t += 0.05) {\n    _v1[0] = quadraticAt(x0, x1, x2, _t);\n    _v1[1] = quadraticAt(y0, y1, y2, _t);\n    var d1 = v2DistSquare(_v0, _v1);\n\n    if (d1 < d) {\n      t = _t;\n      d = d1;\n    }\n  }\n\n  d = Infinity; // At most 32 iteration\n\n  for (var i = 0; i < 32; i++) {\n    if (interval < EPSILON_NUMERIC) {\n      break;\n    }\n\n    var prev = t - interval;\n    var next = t + interval; // t - interval\n\n    _v1[0] = quadraticAt(x0, x1, x2, prev);\n    _v1[1] = quadraticAt(y0, y1, y2, prev);\n    var d1 = v2DistSquare(_v1, _v0);\n\n    if (prev >= 0 && d1 < d) {\n      t = prev;\n      d = d1;\n    } else {\n      // t + interval\n      _v2[0] = quadraticAt(x0, x1, x2, next);\n      _v2[1] = quadraticAt(y0, y1, y2, next);\n      var d2 = v2DistSquare(_v2, _v0);\n\n      if (next <= 1 && d2 < d) {\n        t = next;\n        d = d2;\n      } else {\n        interval *= 0.5;\n      }\n    }\n  } // t\n\n\n  if (out) {\n    out[0] = quadraticAt(x0, x1, x2, t);\n    out[1] = quadraticAt(y0, y1, y2, t);\n  } // console.log(interval, i);\n\n\n  return mathSqrt(d);\n}\n\nexports.cubicAt = cubicAt;\nexports.cubicDerivativeAt = cubicDerivativeAt;\nexports.cubicRootAt = cubicRootAt;\nexports.cubicExtrema = cubicExtrema;\nexports.cubicSubdivide = cubicSubdivide;\nexports.cubicProjectPoint = cubicProjectPoint;\nexports.quadraticAt = quadraticAt;\nexports.quadraticDerivativeAt = quadraticDerivativeAt;\nexports.quadraticRootAt = quadraticRootAt;\nexports.quadraticExtremum = quadraticExtremum;\nexports.quadraticSubdivide = quadraticSubdivide;\nexports.quadraticProjectPoint = quadraticProjectPoint;","var _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\nvar isObject = _util.isObject;\nvar map = _util.map;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @constructor\n * @param {Object} [opt]\n * @param {Object} [opt.categories=[]]\n * @param {Object} [opt.needCollect=false]\n * @param {Object} [opt.deduplication=false]\n */\nfunction OrdinalMeta(opt) {\n  /**\n   * @readOnly\n   * @type {Array.<string>}\n   */\n  this.categories = opt.categories || [];\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._needCollect = opt.needCollect;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._deduplication = opt.deduplication;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._map;\n}\n/**\n * @param {module:echarts/model/Model} axisModel\n * @return {module:echarts/data/OrdinalMeta}\n */\n\n\nOrdinalMeta.createByAxisModel = function (axisModel) {\n  var option = axisModel.option;\n  var data = option.data;\n  var categories = data && map(data, getName);\n  return new OrdinalMeta({\n    categories: categories,\n    needCollect: !categories,\n    // deduplication is default in axis.\n    deduplication: option.dedplication !== false\n  });\n};\n\nvar proto = OrdinalMeta.prototype;\n/**\n * @param {string} category\n * @return {number} ordinal\n */\n\nproto.getOrdinal = function (category) {\n  return getOrCreateMap(this).get(category);\n};\n/**\n * @param {*} category\n * @return {number} The ordinal. If not found, return NaN.\n */\n\n\nproto.parseAndCollect = function (category) {\n  var index;\n  var needCollect = this._needCollect; // The value of category dim can be the index of the given category set.\n  // This feature is only supported when !needCollect, because we should\n  // consider a common case: a value is 2017, which is a number but is\n  // expected to be tread as a category. This case usually happen in dataset,\n  // where it happent to be no need of the index feature.\n\n  if (typeof category !== 'string' && !needCollect) {\n    return category;\n  } // Optimize for the scenario:\n  // category is ['2012-01-01', '2012-01-02', ...], where the input\n  // data has been ensured not duplicate and is large data.\n  // Notice, if a dataset dimension provide categroies, usually echarts\n  // should remove duplication except user tell echarts dont do that\n  // (set axis.deduplication = false), because echarts do not know whether\n  // the values in the category dimension has duplication (consider the\n  // parallel-aqi example)\n\n\n  if (needCollect && !this._deduplication) {\n    index = this.categories.length;\n    this.categories[index] = category;\n    return index;\n  }\n\n  var map = getOrCreateMap(this);\n  index = map.get(category);\n\n  if (index == null) {\n    if (needCollect) {\n      index = this.categories.length;\n      this.categories[index] = category;\n      map.set(category, index);\n    } else {\n      index = NaN;\n    }\n  }\n\n  return index;\n}; // Consider big data, do not create map until needed.\n\n\nfunction getOrCreateMap(ordinalMeta) {\n  return ordinalMeta._map || (ordinalMeta._map = createHashMap(ordinalMeta.categories));\n}\n\nfunction getName(obj) {\n  if (isObject(obj) && obj.value != null) {\n    return obj.value;\n  } else {\n    return obj + '';\n  }\n}\n\nvar _default = OrdinalMeta;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction legendSelectActionHandler(methodName, payload, ecModel) {\n  var selectedMap = {};\n  var isToggleSelect = methodName === 'toggleSelected';\n  var isSelected; // Update all legend components\n\n  ecModel.eachComponent('legend', function (legendModel) {\n    if (isToggleSelect && isSelected != null) {\n      // Force other legend has same selected status\n      // Or the first is toggled to true and other are toggled to false\n      // In the case one legend has some item unSelected in option. And if other legend\n      // doesn't has the item, they will assume it is selected.\n      legendModel[isSelected ? 'select' : 'unSelect'](payload.name);\n    } else {\n      legendModel[methodName](payload.name);\n      isSelected = legendModel.isSelected(payload.name);\n    }\n\n    var legendData = legendModel.getData();\n    zrUtil.each(legendData, function (model) {\n      var name = model.get('name'); // Wrap element\n\n      if (name === '\\n' || name === '') {\n        return;\n      }\n\n      var isItemSelected = legendModel.isSelected(name);\n\n      if (selectedMap.hasOwnProperty(name)) {\n        // Unselected if any legend is unselected\n        selectedMap[name] = selectedMap[name] && isItemSelected;\n      } else {\n        selectedMap[name] = isItemSelected;\n      }\n    });\n  }); // Return the event explicitly\n\n  return {\n    name: payload.name,\n    selected: selectedMap\n  };\n}\n/**\n * @event legendToggleSelect\n * @type {Object}\n * @property {string} type 'legendToggleSelect'\n * @property {string} [from]\n * @property {string} name Series name or data item name\n */\n\n\necharts.registerAction('legendToggleSelect', 'legendselectchanged', zrUtil.curry(legendSelectActionHandler, 'toggleSelected'));\n/**\n * @event legendSelect\n * @type {Object}\n * @property {string} type 'legendSelect'\n * @property {string} name Series name or data item name\n */\n\necharts.registerAction('legendSelect', 'legendselected', zrUtil.curry(legendSelectActionHandler, 'select'));\n/**\n * @event legendUnSelect\n * @type {Object}\n * @property {string} type 'legendUnSelect'\n * @property {string} name Series name or data item name\n */\n\necharts.registerAction('legendUnSelect', 'legendunselected', zrUtil.curry(legendSelectActionHandler, 'unSelect'));","/**\n * zrender: 生成唯一id\n *\n * @author errorrik (errorrik@gmail.com)\n */\nvar idStart = 0x0907;\n\nfunction _default() {\n  return idStart++;\n}\n\nmodule.exports = _default;","var Path = require(\"../Path\");\n\n/**\n * 圆环\n * @module zrender/graphic/shape/Ring\n */\nvar _default = Path.extend({\n  type: 'ring',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r: 0,\n    r0: 0\n  },\n  buildPath: function (ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var PI2 = Math.PI * 2;\n    ctx.moveTo(x + shape.r, y);\n    ctx.arc(x, y, shape.r, 0, PI2, false);\n    ctx.moveTo(x + shape.r0, y);\n    ctx.arc(x, y, shape.r0, 0, PI2, true);\n  }\n});\n\nmodule.exports = _default;","var eventUtil = require(\"./event\");\n\n/**\n * Only implements needed gestures for mobile.\n */\nvar GestureMgr = function () {\n  /**\n   * @private\n   * @type {Array.<Object>}\n   */\n  this._track = [];\n};\n\nGestureMgr.prototype = {\n  constructor: GestureMgr,\n  recognize: function (event, target, root) {\n    this._doTrack(event, target, root);\n\n    return this._recognize(event);\n  },\n  clear: function () {\n    this._track.length = 0;\n    return this;\n  },\n  _doTrack: function (event, target, root) {\n    var touches = event.touches;\n\n    if (!touches) {\n      return;\n    }\n\n    var trackItem = {\n      points: [],\n      touches: [],\n      target: target,\n      event: event\n    };\n\n    for (var i = 0, len = touches.length; i < len; i++) {\n      var touch = touches[i];\n      var pos = eventUtil.clientToLocal(root, touch, {});\n      trackItem.points.push([pos.zrX, pos.zrY]);\n      trackItem.touches.push(touch);\n    }\n\n    this._track.push(trackItem);\n  },\n  _recognize: function (event) {\n    for (var eventName in recognizers) {\n      if (recognizers.hasOwnProperty(eventName)) {\n        var gestureInfo = recognizers[eventName](this._track, event);\n\n        if (gestureInfo) {\n          return gestureInfo;\n        }\n      }\n    }\n  }\n};\n\nfunction dist(pointPair) {\n  var dx = pointPair[1][0] - pointPair[0][0];\n  var dy = pointPair[1][1] - pointPair[0][1];\n  return Math.sqrt(dx * dx + dy * dy);\n}\n\nfunction center(pointPair) {\n  return [(pointPair[0][0] + pointPair[1][0]) / 2, (pointPair[0][1] + pointPair[1][1]) / 2];\n}\n\nvar recognizers = {\n  pinch: function (track, event) {\n    var trackLen = track.length;\n\n    if (!trackLen) {\n      return;\n    }\n\n    var pinchEnd = (track[trackLen - 1] || {}).points;\n    var pinchPre = (track[trackLen - 2] || {}).points || pinchEnd;\n\n    if (pinchPre && pinchPre.length > 1 && pinchEnd && pinchEnd.length > 1) {\n      var pinchScale = dist(pinchEnd) / dist(pinchPre);\n      !isFinite(pinchScale) && (pinchScale = 1);\n      event.pinchScale = pinchScale;\n      var pinchCenter = center(pinchEnd);\n      event.pinchX = pinchCenter[0];\n      event.pinchY = pinchCenter[1];\n      return {\n        type: 'pinch',\n        target: track[0].target,\n        event: event\n      };\n    }\n  } // Only pinch currently.\n\n};\nvar _default = GestureMgr;\nmodule.exports = _default;","var util = require(\"../core/util\");\n\nvar _event = require(\"../core/event\");\n\nvar Dispatcher = _event.Dispatcher;\n\nvar requestAnimationFrame = require(\"./requestAnimationFrame\");\n\nvar Animator = require(\"./Animator\");\n\n/**\n * 动画主类, 调度和管理所有动画控制器\n *\n * @module zrender/animation/Animation\n * @author pissang(https://github.com/pissang)\n */\n// TODO Additive animation\n// http://iosoteric.com/additive-animations-animatewithduration-in-ios-8/\n// https://developer.apple.com/videos/wwdc2014/#236\n\n/**\n * @typedef {Object} IZRenderStage\n * @property {Function} update\n */\n\n/**\n * @alias module:zrender/animation/Animation\n * @constructor\n * @param {Object} [options]\n * @param {Function} [options.onframe]\n * @param {IZRenderStage} [options.stage]\n * @example\n *     var animation = new Animation();\n *     var obj = {\n *         x: 100,\n *         y: 100\n *     };\n *     animation.animate(node.position)\n *         .when(1000, {\n *             x: 500,\n *             y: 500\n *         })\n *         .when(2000, {\n *             x: 100,\n *             y: 100\n *         })\n *         .start('spline');\n */\nvar Animation = function (options) {\n  options = options || {};\n  this.stage = options.stage || {};\n\n  this.onframe = options.onframe || function () {}; // private properties\n\n\n  this._clips = [];\n  this._running = false;\n  this._time;\n  this._pausedTime;\n  this._pauseStart;\n  this._paused = false;\n  Dispatcher.call(this);\n};\n\nAnimation.prototype = {\n  constructor: Animation,\n\n  /**\n   * 添加 clip\n   * @param {module:zrender/animation/Clip} clip\n   */\n  addClip: function (clip) {\n    this._clips.push(clip);\n  },\n\n  /**\n   * 添加 animator\n   * @param {module:zrender/animation/Animator} animator\n   */\n  addAnimator: function (animator) {\n    animator.animation = this;\n    var clips = animator.getClips();\n\n    for (var i = 0; i < clips.length; i++) {\n      this.addClip(clips[i]);\n    }\n  },\n\n  /**\n   * 删除动画片段\n   * @param {module:zrender/animation/Clip} clip\n   */\n  removeClip: function (clip) {\n    var idx = util.indexOf(this._clips, clip);\n\n    if (idx >= 0) {\n      this._clips.splice(idx, 1);\n    }\n  },\n\n  /**\n   * 删除动画片段\n   * @param {module:zrender/animation/Animator} animator\n   */\n  removeAnimator: function (animator) {\n    var clips = animator.getClips();\n\n    for (var i = 0; i < clips.length; i++) {\n      this.removeClip(clips[i]);\n    }\n\n    animator.animation = null;\n  },\n  _update: function () {\n    var time = new Date().getTime() - this._pausedTime;\n\n    var delta = time - this._time;\n    var clips = this._clips;\n    var len = clips.length;\n    var deferredEvents = [];\n    var deferredClips = [];\n\n    for (var i = 0; i < len; i++) {\n      var clip = clips[i];\n      var e = clip.step(time, delta); // Throw out the events need to be called after\n      // stage.update, like destroy\n\n      if (e) {\n        deferredEvents.push(e);\n        deferredClips.push(clip);\n      }\n    } // Remove the finished clip\n\n\n    for (var i = 0; i < len;) {\n      if (clips[i]._needsRemove) {\n        clips[i] = clips[len - 1];\n        clips.pop();\n        len--;\n      } else {\n        i++;\n      }\n    }\n\n    len = deferredEvents.length;\n\n    for (var i = 0; i < len; i++) {\n      deferredClips[i].fire(deferredEvents[i]);\n    }\n\n    this._time = time;\n    this.onframe(delta); // 'frame' should be triggered before stage, because upper application\n    // depends on the sequence (e.g., echarts-stream and finish\n    // event judge)\n\n    this.trigger('frame', delta);\n\n    if (this.stage.update) {\n      this.stage.update();\n    }\n  },\n  _startLoop: function () {\n    var self = this;\n    this._running = true;\n\n    function step() {\n      if (self._running) {\n        requestAnimationFrame(step);\n        !self._paused && self._update();\n      }\n    }\n\n    requestAnimationFrame(step);\n  },\n\n  /**\n   * Start animation.\n   */\n  start: function () {\n    this._time = new Date().getTime();\n    this._pausedTime = 0;\n\n    this._startLoop();\n  },\n\n  /**\n   * Stop animation.\n   */\n  stop: function () {\n    this._running = false;\n  },\n\n  /**\n   * Pause animation.\n   */\n  pause: function () {\n    if (!this._paused) {\n      this._pauseStart = new Date().getTime();\n      this._paused = true;\n    }\n  },\n\n  /**\n   * Resume animation.\n   */\n  resume: function () {\n    if (this._paused) {\n      this._pausedTime += new Date().getTime() - this._pauseStart;\n      this._paused = false;\n    }\n  },\n\n  /**\n   * Clear animation.\n   */\n  clear: function () {\n    this._clips = [];\n  },\n\n  /**\n   * Whether animation finished.\n   */\n  isFinished: function () {\n    return !this._clips.length;\n  },\n\n  /**\n   * Creat animator for a target, whose props can be animated.\n   *\n   * @param  {Object} target\n   * @param  {Object} options\n   * @param  {boolean} [options.loop=false] Whether loop animation.\n   * @param  {Function} [options.getter=null] Get value from target.\n   * @param  {Function} [options.setter=null] Set value to target.\n   * @return {module:zrender/animation/Animation~Animator}\n   */\n  // TODO Gap\n  animate: function (target, options) {\n    options = options || {};\n    var animator = new Animator(target, options.loop, options.getter, options.setter);\n    this.addAnimator(animator);\n    return animator;\n  }\n};\nutil.mixin(Animation, Dispatcher);\nvar _default = Animation;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar AxisPointerModel = echarts.extendComponentModel({\n  type: 'axisPointer',\n  coordSysAxesInfo: null,\n  defaultOption: {\n    // 'auto' means that show when triggered by tooltip or handle.\n    show: 'auto',\n    // 'click' | 'mousemove' | 'none'\n    triggerOn: null,\n    // set default in AxisPonterView.js\n    zlevel: 0,\n    z: 50,\n    type: 'line',\n    // axispointer triggered by tootip determine snap automatically,\n    // see `modelHelper`.\n    snap: false,\n    triggerTooltip: true,\n    value: null,\n    status: null,\n    // Init value depends on whether handle is used.\n    // [group0, group1, ...]\n    // Each group can be: {\n    //      mapper: function () {},\n    //      singleTooltip: 'multiple',  // 'multiple' or 'single'\n    //      xAxisId: ...,\n    //      yAxisName: ...,\n    //      angleAxisIndex: ...\n    // }\n    // mapper: can be ignored.\n    //      input: {axisInfo, value}\n    //      output: {axisInfo, value}\n    link: [],\n    // Do not set 'auto' here, otherwise global animation: false\n    // will not effect at this axispointer.\n    animation: null,\n    animationDurationUpdate: 200,\n    lineStyle: {\n      color: '#aaa',\n      width: 1,\n      type: 'solid'\n    },\n    shadowStyle: {\n      color: 'rgba(150,150,150,0.3)'\n    },\n    label: {\n      show: true,\n      formatter: null,\n      // string | Function\n      precision: 'auto',\n      // Or a number like 0, 1, 2 ...\n      margin: 3,\n      color: '#fff',\n      padding: [5, 7, 5, 7],\n      backgroundColor: 'auto',\n      // default: axis line color\n      borderColor: null,\n      borderWidth: 0,\n      shadowBlur: 3,\n      shadowColor: '#aaa' // Considering applicability, common style should\n      // better not have shadowOffset.\n      // shadowOffsetX: 0,\n      // shadowOffsetY: 2\n\n    },\n    handle: {\n      show: false,\n      icon: 'M10.7,11.9v-1.3H9.3v1.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4h1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7v-1.2h6.6z M13.3,22H6.7v-1.2h6.6z M13.3,19.6H6.7v-1.2h6.6z',\n      // jshint ignore:line\n      size: 45,\n      // handle margin is from symbol center to axis, which is stable when circular move.\n      margin: 50,\n      // color: '#1b8bbd'\n      // color: '#2f4554'\n      color: '#333',\n      shadowBlur: 3,\n      shadowColor: '#aaa',\n      shadowOffsetX: 0,\n      shadowOffsetY: 2,\n      // For mobile performance\n      throttle: 40\n    }\n  }\n});\nvar _default = AxisPointerModel;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Can only be called after coordinate system creation stage.\n * (Can be called before coordinate system update stage).\n *\n * @param {Object} opt {labelInside}\n * @return {Object} {\n *  position, rotation, labelDirection, labelOffset,\n *  tickDirection, labelRotate, z2\n * }\n */\nfunction layout(gridModel, axisModel, opt) {\n  opt = opt || {};\n  var grid = gridModel.coordinateSystem;\n  var axis = axisModel.axis;\n  var layout = {};\n  var otherAxisOnZeroOf = axis.getAxesOnZeroOf()[0];\n  var rawAxisPosition = axis.position;\n  var axisPosition = otherAxisOnZeroOf ? 'onZero' : rawAxisPosition;\n  var axisDim = axis.dim;\n  var rect = grid.getRect();\n  var rectBound = [rect.x, rect.x + rect.width, rect.y, rect.y + rect.height];\n  var idx = {\n    left: 0,\n    right: 1,\n    top: 0,\n    bottom: 1,\n    onZero: 2\n  };\n  var axisOffset = axisModel.get('offset') || 0;\n  var posBound = axisDim === 'x' ? [rectBound[2] - axisOffset, rectBound[3] + axisOffset] : [rectBound[0] - axisOffset, rectBound[1] + axisOffset];\n\n  if (otherAxisOnZeroOf) {\n    var onZeroCoord = otherAxisOnZeroOf.toGlobalCoord(otherAxisOnZeroOf.dataToCoord(0));\n    posBound[idx['onZero']] = Math.max(Math.min(onZeroCoord, posBound[1]), posBound[0]);\n  } // Axis position\n\n\n  layout.position = [axisDim === 'y' ? posBound[idx[axisPosition]] : rectBound[0], axisDim === 'x' ? posBound[idx[axisPosition]] : rectBound[3]]; // Axis rotation\n\n  layout.rotation = Math.PI / 2 * (axisDim === 'x' ? 0 : 1); // Tick and label direction, x y is axisDim\n\n  var dirMap = {\n    top: -1,\n    bottom: 1,\n    left: -1,\n    right: 1\n  };\n  layout.labelDirection = layout.tickDirection = layout.nameDirection = dirMap[rawAxisPosition];\n  layout.labelOffset = otherAxisOnZeroOf ? posBound[idx[rawAxisPosition]] - posBound[idx['onZero']] : 0;\n\n  if (axisModel.get('axisTick.inside')) {\n    layout.tickDirection = -layout.tickDirection;\n  }\n\n  if (zrUtil.retrieve(opt.labelInside, axisModel.get('axisLabel.inside'))) {\n    layout.labelDirection = -layout.labelDirection;\n  } // Special label rotation\n\n\n  var labelRotate = axisModel.get('axisLabel.rotate');\n  layout.labelRotate = axisPosition === 'top' ? -labelRotate : labelRotate; // Over splitLine and splitArea\n\n  layout.z2 = 1;\n  return layout;\n}\n\nexports.layout = layout;","// https://github.com/mziccard/node-timsort\nvar DEFAULT_MIN_MERGE = 32;\nvar DEFAULT_MIN_GALLOPING = 7;\nvar DEFAULT_TMP_STORAGE_LENGTH = 256;\n\nfunction minRunLength(n) {\n  var r = 0;\n\n  while (n >= DEFAULT_MIN_MERGE) {\n    r |= n & 1;\n    n >>= 1;\n  }\n\n  return n + r;\n}\n\nfunction makeAscendingRun(array, lo, hi, compare) {\n  var runHi = lo + 1;\n\n  if (runHi === hi) {\n    return 1;\n  }\n\n  if (compare(array[runHi++], array[lo]) < 0) {\n    while (runHi < hi && compare(array[runHi], array[runHi - 1]) < 0) {\n      runHi++;\n    }\n\n    reverseRun(array, lo, runHi);\n  } else {\n    while (runHi < hi && compare(array[runHi], array[runHi - 1]) >= 0) {\n      runHi++;\n    }\n  }\n\n  return runHi - lo;\n}\n\nfunction reverseRun(array, lo, hi) {\n  hi--;\n\n  while (lo < hi) {\n    var t = array[lo];\n    array[lo++] = array[hi];\n    array[hi--] = t;\n  }\n}\n\nfunction binaryInsertionSort(array, lo, hi, start, compare) {\n  if (start === lo) {\n    start++;\n  }\n\n  for (; start < hi; start++) {\n    var pivot = array[start];\n    var left = lo;\n    var right = start;\n    var mid;\n\n    while (left < right) {\n      mid = left + right >>> 1;\n\n      if (compare(pivot, array[mid]) < 0) {\n        right = mid;\n      } else {\n        left = mid + 1;\n      }\n    }\n\n    var n = start - left;\n\n    switch (n) {\n      case 3:\n        array[left + 3] = array[left + 2];\n\n      case 2:\n        array[left + 2] = array[left + 1];\n\n      case 1:\n        array[left + 1] = array[left];\n        break;\n\n      default:\n        while (n > 0) {\n          array[left + n] = array[left + n - 1];\n          n--;\n        }\n\n    }\n\n    array[left] = pivot;\n  }\n}\n\nfunction gallopLeft(value, array, start, length, hint, compare) {\n  var lastOffset = 0;\n  var maxOffset = 0;\n  var offset = 1;\n\n  if (compare(value, array[start + hint]) > 0) {\n    maxOffset = length - hint;\n\n    while (offset < maxOffset && compare(value, array[start + hint + offset]) > 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    lastOffset += hint;\n    offset += hint;\n  } else {\n    maxOffset = hint + 1;\n\n    while (offset < maxOffset && compare(value, array[start + hint - offset]) <= 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    var tmp = lastOffset;\n    lastOffset = hint - offset;\n    offset = hint - tmp;\n  }\n\n  lastOffset++;\n\n  while (lastOffset < offset) {\n    var m = lastOffset + (offset - lastOffset >>> 1);\n\n    if (compare(value, array[start + m]) > 0) {\n      lastOffset = m + 1;\n    } else {\n      offset = m;\n    }\n  }\n\n  return offset;\n}\n\nfunction gallopRight(value, array, start, length, hint, compare) {\n  var lastOffset = 0;\n  var maxOffset = 0;\n  var offset = 1;\n\n  if (compare(value, array[start + hint]) < 0) {\n    maxOffset = hint + 1;\n\n    while (offset < maxOffset && compare(value, array[start + hint - offset]) < 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    var tmp = lastOffset;\n    lastOffset = hint - offset;\n    offset = hint - tmp;\n  } else {\n    maxOffset = length - hint;\n\n    while (offset < maxOffset && compare(value, array[start + hint + offset]) >= 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    lastOffset += hint;\n    offset += hint;\n  }\n\n  lastOffset++;\n\n  while (lastOffset < offset) {\n    var m = lastOffset + (offset - lastOffset >>> 1);\n\n    if (compare(value, array[start + m]) < 0) {\n      offset = m;\n    } else {\n      lastOffset = m + 1;\n    }\n  }\n\n  return offset;\n}\n\nfunction TimSort(array, compare) {\n  var minGallop = DEFAULT_MIN_GALLOPING;\n  var length = 0;\n  var tmpStorageLength = DEFAULT_TMP_STORAGE_LENGTH;\n  var stackLength = 0;\n  var runStart;\n  var runLength;\n  var stackSize = 0;\n  length = array.length;\n\n  if (length < 2 * DEFAULT_TMP_STORAGE_LENGTH) {\n    tmpStorageLength = length >>> 1;\n  }\n\n  var tmp = [];\n  stackLength = length < 120 ? 5 : length < 1542 ? 10 : length < 119151 ? 19 : 40;\n  runStart = [];\n  runLength = [];\n\n  function pushRun(_runStart, _runLength) {\n    runStart[stackSize] = _runStart;\n    runLength[stackSize] = _runLength;\n    stackSize += 1;\n  }\n\n  function mergeRuns() {\n    while (stackSize > 1) {\n      var n = stackSize - 2;\n\n      if (n >= 1 && runLength[n - 1] <= runLength[n] + runLength[n + 1] || n >= 2 && runLength[n - 2] <= runLength[n] + runLength[n - 1]) {\n        if (runLength[n - 1] < runLength[n + 1]) {\n          n--;\n        }\n      } else if (runLength[n] > runLength[n + 1]) {\n        break;\n      }\n\n      mergeAt(n);\n    }\n  }\n\n  function forceMergeRuns() {\n    while (stackSize > 1) {\n      var n = stackSize - 2;\n\n      if (n > 0 && runLength[n - 1] < runLength[n + 1]) {\n        n--;\n      }\n\n      mergeAt(n);\n    }\n  }\n\n  function mergeAt(i) {\n    var start1 = runStart[i];\n    var length1 = runLength[i];\n    var start2 = runStart[i + 1];\n    var length2 = runLength[i + 1];\n    runLength[i] = length1 + length2;\n\n    if (i === stackSize - 3) {\n      runStart[i + 1] = runStart[i + 2];\n      runLength[i + 1] = runLength[i + 2];\n    }\n\n    stackSize--;\n    var k = gallopRight(array[start2], array, start1, length1, 0, compare);\n    start1 += k;\n    length1 -= k;\n\n    if (length1 === 0) {\n      return;\n    }\n\n    length2 = gallopLeft(array[start1 + length1 - 1], array, start2, length2, length2 - 1, compare);\n\n    if (length2 === 0) {\n      return;\n    }\n\n    if (length1 <= length2) {\n      mergeLow(start1, length1, start2, length2);\n    } else {\n      mergeHigh(start1, length1, start2, length2);\n    }\n  }\n\n  function mergeLow(start1, length1, start2, length2) {\n    var i = 0;\n\n    for (i = 0; i < length1; i++) {\n      tmp[i] = array[start1 + i];\n    }\n\n    var cursor1 = 0;\n    var cursor2 = start2;\n    var dest = start1;\n    array[dest++] = array[cursor2++];\n\n    if (--length2 === 0) {\n      for (i = 0; i < length1; i++) {\n        array[dest + i] = tmp[cursor1 + i];\n      }\n\n      return;\n    }\n\n    if (length1 === 1) {\n      for (i = 0; i < length2; i++) {\n        array[dest + i] = array[cursor2 + i];\n      }\n\n      array[dest + length2] = tmp[cursor1];\n      return;\n    }\n\n    var _minGallop = minGallop;\n    var count1, count2, exit;\n\n    while (1) {\n      count1 = 0;\n      count2 = 0;\n      exit = false;\n\n      do {\n        if (compare(array[cursor2], tmp[cursor1]) < 0) {\n          array[dest++] = array[cursor2++];\n          count2++;\n          count1 = 0;\n\n          if (--length2 === 0) {\n            exit = true;\n            break;\n          }\n        } else {\n          array[dest++] = tmp[cursor1++];\n          count1++;\n          count2 = 0;\n\n          if (--length1 === 1) {\n            exit = true;\n            break;\n          }\n        }\n      } while ((count1 | count2) < _minGallop);\n\n      if (exit) {\n        break;\n      }\n\n      do {\n        count1 = gallopRight(array[cursor2], tmp, cursor1, length1, 0, compare);\n\n        if (count1 !== 0) {\n          for (i = 0; i < count1; i++) {\n            array[dest + i] = tmp[cursor1 + i];\n          }\n\n          dest += count1;\n          cursor1 += count1;\n          length1 -= count1;\n\n          if (length1 <= 1) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest++] = array[cursor2++];\n\n        if (--length2 === 0) {\n          exit = true;\n          break;\n        }\n\n        count2 = gallopLeft(tmp[cursor1], array, cursor2, length2, 0, compare);\n\n        if (count2 !== 0) {\n          for (i = 0; i < count2; i++) {\n            array[dest + i] = array[cursor2 + i];\n          }\n\n          dest += count2;\n          cursor2 += count2;\n          length2 -= count2;\n\n          if (length2 === 0) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest++] = tmp[cursor1++];\n\n        if (--length1 === 1) {\n          exit = true;\n          break;\n        }\n\n        _minGallop--;\n      } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n      if (exit) {\n        break;\n      }\n\n      if (_minGallop < 0) {\n        _minGallop = 0;\n      }\n\n      _minGallop += 2;\n    }\n\n    minGallop = _minGallop;\n    minGallop < 1 && (minGallop = 1);\n\n    if (length1 === 1) {\n      for (i = 0; i < length2; i++) {\n        array[dest + i] = array[cursor2 + i];\n      }\n\n      array[dest + length2] = tmp[cursor1];\n    } else if (length1 === 0) {\n      throw new Error(); // throw new Error('mergeLow preconditions were not respected');\n    } else {\n      for (i = 0; i < length1; i++) {\n        array[dest + i] = tmp[cursor1 + i];\n      }\n    }\n  }\n\n  function mergeHigh(start1, length1, start2, length2) {\n    var i = 0;\n\n    for (i = 0; i < length2; i++) {\n      tmp[i] = array[start2 + i];\n    }\n\n    var cursor1 = start1 + length1 - 1;\n    var cursor2 = length2 - 1;\n    var dest = start2 + length2 - 1;\n    var customCursor = 0;\n    var customDest = 0;\n    array[dest--] = array[cursor1--];\n\n    if (--length1 === 0) {\n      customCursor = dest - (length2 - 1);\n\n      for (i = 0; i < length2; i++) {\n        array[customCursor + i] = tmp[i];\n      }\n\n      return;\n    }\n\n    if (length2 === 1) {\n      dest -= length1;\n      cursor1 -= length1;\n      customDest = dest + 1;\n      customCursor = cursor1 + 1;\n\n      for (i = length1 - 1; i >= 0; i--) {\n        array[customDest + i] = array[customCursor + i];\n      }\n\n      array[dest] = tmp[cursor2];\n      return;\n    }\n\n    var _minGallop = minGallop;\n\n    while (true) {\n      var count1 = 0;\n      var count2 = 0;\n      var exit = false;\n\n      do {\n        if (compare(tmp[cursor2], array[cursor1]) < 0) {\n          array[dest--] = array[cursor1--];\n          count1++;\n          count2 = 0;\n\n          if (--length1 === 0) {\n            exit = true;\n            break;\n          }\n        } else {\n          array[dest--] = tmp[cursor2--];\n          count2++;\n          count1 = 0;\n\n          if (--length2 === 1) {\n            exit = true;\n            break;\n          }\n        }\n      } while ((count1 | count2) < _minGallop);\n\n      if (exit) {\n        break;\n      }\n\n      do {\n        count1 = length1 - gallopRight(tmp[cursor2], array, start1, length1, length1 - 1, compare);\n\n        if (count1 !== 0) {\n          dest -= count1;\n          cursor1 -= count1;\n          length1 -= count1;\n          customDest = dest + 1;\n          customCursor = cursor1 + 1;\n\n          for (i = count1 - 1; i >= 0; i--) {\n            array[customDest + i] = array[customCursor + i];\n          }\n\n          if (length1 === 0) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest--] = tmp[cursor2--];\n\n        if (--length2 === 1) {\n          exit = true;\n          break;\n        }\n\n        count2 = length2 - gallopLeft(array[cursor1], tmp, 0, length2, length2 - 1, compare);\n\n        if (count2 !== 0) {\n          dest -= count2;\n          cursor2 -= count2;\n          length2 -= count2;\n          customDest = dest + 1;\n          customCursor = cursor2 + 1;\n\n          for (i = 0; i < count2; i++) {\n            array[customDest + i] = tmp[customCursor + i];\n          }\n\n          if (length2 <= 1) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest--] = array[cursor1--];\n\n        if (--length1 === 0) {\n          exit = true;\n          break;\n        }\n\n        _minGallop--;\n      } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n      if (exit) {\n        break;\n      }\n\n      if (_minGallop < 0) {\n        _minGallop = 0;\n      }\n\n      _minGallop += 2;\n    }\n\n    minGallop = _minGallop;\n\n    if (minGallop < 1) {\n      minGallop = 1;\n    }\n\n    if (length2 === 1) {\n      dest -= length1;\n      cursor1 -= length1;\n      customDest = dest + 1;\n      customCursor = cursor1 + 1;\n\n      for (i = length1 - 1; i >= 0; i--) {\n        array[customDest + i] = array[customCursor + i];\n      }\n\n      array[dest] = tmp[cursor2];\n    } else if (length2 === 0) {\n      throw new Error(); // throw new Error('mergeHigh preconditions were not respected');\n    } else {\n      customCursor = dest - (length2 - 1);\n\n      for (i = 0; i < length2; i++) {\n        array[customCursor + i] = tmp[i];\n      }\n    }\n  }\n\n  this.mergeRuns = mergeRuns;\n  this.forceMergeRuns = forceMergeRuns;\n  this.pushRun = pushRun;\n}\n\nfunction sort(array, compare, lo, hi) {\n  if (!lo) {\n    lo = 0;\n  }\n\n  if (!hi) {\n    hi = array.length;\n  }\n\n  var remaining = hi - lo;\n\n  if (remaining < 2) {\n    return;\n  }\n\n  var runLength = 0;\n\n  if (remaining < DEFAULT_MIN_MERGE) {\n    runLength = makeAscendingRun(array, lo, hi, compare);\n    binaryInsertionSort(array, lo, hi, lo + runLength, compare);\n    return;\n  }\n\n  var ts = new TimSort(array, compare);\n  var minRun = minRunLength(remaining);\n\n  do {\n    runLength = makeAscendingRun(array, lo, hi, compare);\n\n    if (runLength < minRun) {\n      var force = remaining;\n\n      if (force > minRun) {\n        force = minRun;\n      }\n\n      binaryInsertionSort(array, lo, lo + force, lo + runLength, compare);\n      runLength = force;\n    }\n\n    ts.pushRun(lo, runLength);\n    ts.mergeRuns();\n    remaining -= runLength;\n    lo += runLength;\n  } while (remaining !== 0);\n\n  ts.forceMergeRuns();\n}\n\nmodule.exports = sort;","var _util = require(\"zrender/lib/core/util\");\n\nvar retrieve = _util.retrieve;\nvar defaults = _util.defaults;\nvar extend = _util.extend;\nvar each = _util.each;\n\nvar formatUtil = require(\"../../util/format\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar Model = require(\"../../model/Model\");\n\nvar _number = require(\"../../util/number\");\n\nvar isRadianAroundZero = _number.isRadianAroundZero;\nvar remRadian = _number.remRadian;\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar matrixUtil = require(\"zrender/lib/core/matrix\");\n\nvar _vector = require(\"zrender/lib/core/vector\");\n\nvar v2ApplyTransform = _vector.applyTransform;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar PI = Math.PI;\n\nfunction makeAxisEventDataBase(axisModel) {\n  var eventData = {\n    componentType: axisModel.mainType\n  };\n  eventData[axisModel.mainType + 'Index'] = axisModel.componentIndex;\n  return eventData;\n}\n/**\n * A final axis is translated and rotated from a \"standard axis\".\n * So opt.position and opt.rotation is required.\n *\n * A standard axis is and axis from [0, 0] to [0, axisExtent[1]],\n * for example: (0, 0) ------------> (0, 50)\n *\n * nameDirection or tickDirection or labelDirection is 1 means tick\n * or label is below the standard axis, whereas is -1 means above\n * the standard axis. labelOffset means offset between label and axis,\n * which is useful when 'onZero', where axisLabel is in the grid and\n * label in outside grid.\n *\n * Tips: like always,\n * positive rotation represents anticlockwise, and negative rotation\n * represents clockwise.\n * The direction of position coordinate is the same as the direction\n * of screen coordinate.\n *\n * Do not need to consider axis 'inverse', which is auto processed by\n * axis extent.\n *\n * @param {module:zrender/container/Group} group\n * @param {Object} axisModel\n * @param {Object} opt Standard axis parameters.\n * @param {Array.<number>} opt.position [x, y]\n * @param {number} opt.rotation by radian\n * @param {number} [opt.nameDirection=1] 1 or -1 Used when nameLocation is 'middle' or 'center'.\n * @param {number} [opt.tickDirection=1] 1 or -1\n * @param {number} [opt.labelDirection=1] 1 or -1\n * @param {number} [opt.labelOffset=0] Usefull when onZero.\n * @param {string} [opt.axisLabelShow] default get from axisModel.\n * @param {string} [opt.axisName] default get from axisModel.\n * @param {number} [opt.axisNameAvailableWidth]\n * @param {number} [opt.labelRotate] by degree, default get from axisModel.\n * @param {number} [opt.strokeContainThreshold] Default label interval when label\n * @param {number} [opt.nameTruncateMaxWidth]\n */\n\n\nvar AxisBuilder = function (axisModel, opt) {\n  /**\n   * @readOnly\n   */\n  this.opt = opt;\n  /**\n   * @readOnly\n   */\n\n  this.axisModel = axisModel; // Default value\n\n  defaults(opt, {\n    labelOffset: 0,\n    nameDirection: 1,\n    tickDirection: 1,\n    labelDirection: 1,\n    silent: true\n  });\n  /**\n   * @readOnly\n   */\n\n  this.group = new graphic.Group(); // FIXME Not use a seperate text group?\n\n  var dumbGroup = new graphic.Group({\n    position: opt.position.slice(),\n    rotation: opt.rotation\n  }); // this.group.add(dumbGroup);\n  // this._dumbGroup = dumbGroup;\n\n  dumbGroup.updateTransform();\n  this._transform = dumbGroup.transform;\n  this._dumbGroup = dumbGroup;\n};\n\nAxisBuilder.prototype = {\n  constructor: AxisBuilder,\n  hasBuilder: function (name) {\n    return !!builders[name];\n  },\n  add: function (name) {\n    builders[name].call(this);\n  },\n  getGroup: function () {\n    return this.group;\n  }\n};\nvar builders = {\n  /**\n   * @private\n   */\n  axisLine: function () {\n    var opt = this.opt;\n    var axisModel = this.axisModel;\n\n    if (!axisModel.get('axisLine.show')) {\n      return;\n    }\n\n    var extent = this.axisModel.axis.getExtent();\n    var matrix = this._transform;\n    var pt1 = [extent[0], 0];\n    var pt2 = [extent[1], 0];\n\n    if (matrix) {\n      v2ApplyTransform(pt1, pt1, matrix);\n      v2ApplyTransform(pt2, pt2, matrix);\n    }\n\n    var lineStyle = extend({\n      lineCap: 'round'\n    }, axisModel.getModel('axisLine.lineStyle').getLineStyle());\n    this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\n      // Id for animation\n      anid: 'line',\n      shape: {\n        x1: pt1[0],\n        y1: pt1[1],\n        x2: pt2[0],\n        y2: pt2[1]\n      },\n      style: lineStyle,\n      strokeContainThreshold: opt.strokeContainThreshold || 5,\n      silent: true,\n      z2: 1\n    })));\n    var arrows = axisModel.get('axisLine.symbol');\n    var arrowSize = axisModel.get('axisLine.symbolSize');\n    var arrowOffset = axisModel.get('axisLine.symbolOffset') || 0;\n\n    if (typeof arrowOffset === 'number') {\n      arrowOffset = [arrowOffset, arrowOffset];\n    }\n\n    if (arrows != null) {\n      if (typeof arrows === 'string') {\n        // Use the same arrow for start and end point\n        arrows = [arrows, arrows];\n      }\n\n      if (typeof arrowSize === 'string' || typeof arrowSize === 'number') {\n        // Use the same size for width and height\n        arrowSize = [arrowSize, arrowSize];\n      }\n\n      var symbolWidth = arrowSize[0];\n      var symbolHeight = arrowSize[1];\n      each([{\n        rotate: opt.rotation + Math.PI / 2,\n        offset: arrowOffset[0],\n        r: 0\n      }, {\n        rotate: opt.rotation - Math.PI / 2,\n        offset: arrowOffset[1],\n        r: Math.sqrt((pt1[0] - pt2[0]) * (pt1[0] - pt2[0]) + (pt1[1] - pt2[1]) * (pt1[1] - pt2[1]))\n      }], function (point, index) {\n        if (arrows[index] !== 'none' && arrows[index] != null) {\n          var symbol = createSymbol(arrows[index], -symbolWidth / 2, -symbolHeight / 2, symbolWidth, symbolHeight, lineStyle.stroke, true); // Calculate arrow position with offset\n\n          var r = point.r + point.offset;\n          var pos = [pt1[0] + r * Math.cos(opt.rotation), pt1[1] - r * Math.sin(opt.rotation)];\n          symbol.attr({\n            rotation: point.rotate,\n            position: pos,\n            silent: true\n          });\n          this.group.add(symbol);\n        }\n      }, this);\n    }\n  },\n\n  /**\n   * @private\n   */\n  axisTickLabel: function () {\n    var axisModel = this.axisModel;\n    var opt = this.opt;\n    var tickEls = buildAxisTick(this, axisModel, opt);\n    var labelEls = buildAxisLabel(this, axisModel, opt);\n    fixMinMaxLabelShow(axisModel, labelEls, tickEls);\n  },\n\n  /**\n   * @private\n   */\n  axisName: function () {\n    var opt = this.opt;\n    var axisModel = this.axisModel;\n    var name = retrieve(opt.axisName, axisModel.get('name'));\n\n    if (!name) {\n      return;\n    }\n\n    var nameLocation = axisModel.get('nameLocation');\n    var nameDirection = opt.nameDirection;\n    var textStyleModel = axisModel.getModel('nameTextStyle');\n    var gap = axisModel.get('nameGap') || 0;\n    var extent = this.axisModel.axis.getExtent();\n    var gapSignal = extent[0] > extent[1] ? -1 : 1;\n    var pos = [nameLocation === 'start' ? extent[0] - gapSignal * gap : nameLocation === 'end' ? extent[1] + gapSignal * gap : (extent[0] + extent[1]) / 2, // 'middle'\n    // Reuse labelOffset.\n    isNameLocationCenter(nameLocation) ? opt.labelOffset + nameDirection * gap : 0];\n    var labelLayout;\n    var nameRotation = axisModel.get('nameRotate');\n\n    if (nameRotation != null) {\n      nameRotation = nameRotation * PI / 180; // To radian.\n    }\n\n    var axisNameAvailableWidth;\n\n    if (isNameLocationCenter(nameLocation)) {\n      labelLayout = innerTextLayout(opt.rotation, nameRotation != null ? nameRotation : opt.rotation, // Adapt to axis.\n      nameDirection);\n    } else {\n      labelLayout = endTextLayout(opt, nameLocation, nameRotation || 0, extent);\n      axisNameAvailableWidth = opt.axisNameAvailableWidth;\n\n      if (axisNameAvailableWidth != null) {\n        axisNameAvailableWidth = Math.abs(axisNameAvailableWidth / Math.sin(labelLayout.rotation));\n        !isFinite(axisNameAvailableWidth) && (axisNameAvailableWidth = null);\n      }\n    }\n\n    var textFont = textStyleModel.getFont();\n    var truncateOpt = axisModel.get('nameTruncate', true) || {};\n    var ellipsis = truncateOpt.ellipsis;\n    var maxWidth = retrieve(opt.nameTruncateMaxWidth, truncateOpt.maxWidth, axisNameAvailableWidth); // FIXME\n    // truncate rich text? (consider performance)\n\n    var truncatedText = ellipsis != null && maxWidth != null ? formatUtil.truncateText(name, maxWidth, textFont, ellipsis, {\n      minChar: 2,\n      placeholder: truncateOpt.placeholder\n    }) : name;\n    var tooltipOpt = axisModel.get('tooltip', true);\n    var mainType = axisModel.mainType;\n    var formatterParams = {\n      componentType: mainType,\n      name: name,\n      $vars: ['name']\n    };\n    formatterParams[mainType + 'Index'] = axisModel.componentIndex;\n    var textEl = new graphic.Text({\n      // Id for animation\n      anid: 'name',\n      __fullText: name,\n      __truncatedText: truncatedText,\n      position: pos,\n      rotation: labelLayout.rotation,\n      silent: isSilent(axisModel),\n      z2: 1,\n      tooltip: tooltipOpt && tooltipOpt.show ? extend({\n        content: name,\n        formatter: function () {\n          return name;\n        },\n        formatterParams: formatterParams\n      }, tooltipOpt) : null\n    });\n    graphic.setTextStyle(textEl.style, textStyleModel, {\n      text: truncatedText,\n      textFont: textFont,\n      textFill: textStyleModel.getTextColor() || axisModel.get('axisLine.lineStyle.color'),\n      textAlign: labelLayout.textAlign,\n      textVerticalAlign: labelLayout.textVerticalAlign\n    });\n\n    if (axisModel.get('triggerEvent')) {\n      textEl.eventData = makeAxisEventDataBase(axisModel);\n      textEl.eventData.targetType = 'axisName';\n      textEl.eventData.name = name;\n    } // FIXME\n\n\n    this._dumbGroup.add(textEl);\n\n    textEl.updateTransform();\n    this.group.add(textEl);\n    textEl.decomposeTransform();\n  }\n};\n/**\n * @public\n * @static\n * @param {Object} opt\n * @param {number} axisRotation in radian\n * @param {number} textRotation in radian\n * @param {number} direction\n * @return {Object} {\n *  rotation, // according to axis\n *  textAlign,\n *  textVerticalAlign\n * }\n */\n\nvar innerTextLayout = AxisBuilder.innerTextLayout = function (axisRotation, textRotation, direction) {\n  var rotationDiff = remRadian(textRotation - axisRotation);\n  var textAlign;\n  var textVerticalAlign;\n\n  if (isRadianAroundZero(rotationDiff)) {\n    // Label is parallel with axis line.\n    textVerticalAlign = direction > 0 ? 'top' : 'bottom';\n    textAlign = 'center';\n  } else if (isRadianAroundZero(rotationDiff - PI)) {\n    // Label is inverse parallel with axis line.\n    textVerticalAlign = direction > 0 ? 'bottom' : 'top';\n    textAlign = 'center';\n  } else {\n    textVerticalAlign = 'middle';\n\n    if (rotationDiff > 0 && rotationDiff < PI) {\n      textAlign = direction > 0 ? 'right' : 'left';\n    } else {\n      textAlign = direction > 0 ? 'left' : 'right';\n    }\n  }\n\n  return {\n    rotation: rotationDiff,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n};\n\nfunction endTextLayout(opt, textPosition, textRotate, extent) {\n  var rotationDiff = remRadian(textRotate - opt.rotation);\n  var textAlign;\n  var textVerticalAlign;\n  var inverse = extent[0] > extent[1];\n  var onLeft = textPosition === 'start' && !inverse || textPosition !== 'start' && inverse;\n\n  if (isRadianAroundZero(rotationDiff - PI / 2)) {\n    textVerticalAlign = onLeft ? 'bottom' : 'top';\n    textAlign = 'center';\n  } else if (isRadianAroundZero(rotationDiff - PI * 1.5)) {\n    textVerticalAlign = onLeft ? 'top' : 'bottom';\n    textAlign = 'center';\n  } else {\n    textVerticalAlign = 'middle';\n\n    if (rotationDiff < PI * 1.5 && rotationDiff > PI / 2) {\n      textAlign = onLeft ? 'left' : 'right';\n    } else {\n      textAlign = onLeft ? 'right' : 'left';\n    }\n  }\n\n  return {\n    rotation: rotationDiff,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n\nfunction isSilent(axisModel) {\n  var tooltipOpt = axisModel.get('tooltip');\n  return axisModel.get('silent') // Consider mouse cursor, add these restrictions.\n  || !(axisModel.get('triggerEvent') || tooltipOpt && tooltipOpt.show);\n}\n\nfunction fixMinMaxLabelShow(axisModel, labelEls, tickEls) {\n  // If min or max are user set, we need to check\n  // If the tick on min(max) are overlap on their neighbour tick\n  // If they are overlapped, we need to hide the min(max) tick label\n  var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n  var showMaxLabel = axisModel.get('axisLabel.showMaxLabel'); // FIXME\n  // Have not consider onBand yet, where tick els is more than label els.\n\n  labelEls = labelEls || [];\n  tickEls = tickEls || [];\n  var firstLabel = labelEls[0];\n  var nextLabel = labelEls[1];\n  var lastLabel = labelEls[labelEls.length - 1];\n  var prevLabel = labelEls[labelEls.length - 2];\n  var firstTick = tickEls[0];\n  var nextTick = tickEls[1];\n  var lastTick = tickEls[tickEls.length - 1];\n  var prevTick = tickEls[tickEls.length - 2];\n\n  if (showMinLabel === false) {\n    ignoreEl(firstLabel);\n    ignoreEl(firstTick);\n  } else if (isTwoLabelOverlapped(firstLabel, nextLabel)) {\n    if (showMinLabel) {\n      ignoreEl(nextLabel);\n      ignoreEl(nextTick);\n    } else {\n      ignoreEl(firstLabel);\n      ignoreEl(firstTick);\n    }\n  }\n\n  if (showMaxLabel === false) {\n    ignoreEl(lastLabel);\n    ignoreEl(lastTick);\n  } else if (isTwoLabelOverlapped(prevLabel, lastLabel)) {\n    if (showMaxLabel) {\n      ignoreEl(prevLabel);\n      ignoreEl(prevTick);\n    } else {\n      ignoreEl(lastLabel);\n      ignoreEl(lastTick);\n    }\n  }\n}\n\nfunction ignoreEl(el) {\n  el && (el.ignore = true);\n}\n\nfunction isTwoLabelOverlapped(current, next, labelLayout) {\n  // current and next has the same rotation.\n  var firstRect = current && current.getBoundingRect().clone();\n  var nextRect = next && next.getBoundingRect().clone();\n\n  if (!firstRect || !nextRect) {\n    return;\n  } // When checking intersect of two rotated labels, we use mRotationBack\n  // to avoid that boundingRect is enlarge when using `boundingRect.applyTransform`.\n\n\n  var mRotationBack = matrixUtil.identity([]);\n  matrixUtil.rotate(mRotationBack, mRotationBack, -current.rotation);\n  firstRect.applyTransform(matrixUtil.mul([], mRotationBack, current.getLocalTransform()));\n  nextRect.applyTransform(matrixUtil.mul([], mRotationBack, next.getLocalTransform()));\n  return firstRect.intersect(nextRect);\n}\n\nfunction isNameLocationCenter(nameLocation) {\n  return nameLocation === 'middle' || nameLocation === 'center';\n}\n\nfunction buildAxisTick(axisBuilder, axisModel, opt) {\n  var axis = axisModel.axis;\n\n  if (!axisModel.get('axisTick.show') || axis.scale.isBlank()) {\n    return;\n  }\n\n  var tickModel = axisModel.getModel('axisTick');\n  var lineStyleModel = tickModel.getModel('lineStyle');\n  var tickLen = tickModel.get('length');\n  var ticksCoords = axis.getTicksCoords();\n  var pt1 = [];\n  var pt2 = [];\n  var matrix = axisBuilder._transform;\n  var tickEls = [];\n\n  for (var i = 0; i < ticksCoords.length; i++) {\n    var tickCoord = ticksCoords[i].coord;\n    pt1[0] = tickCoord;\n    pt1[1] = 0;\n    pt2[0] = tickCoord;\n    pt2[1] = opt.tickDirection * tickLen;\n\n    if (matrix) {\n      v2ApplyTransform(pt1, pt1, matrix);\n      v2ApplyTransform(pt2, pt2, matrix);\n    } // Tick line, Not use group transform to have better line draw\n\n\n    var tickEl = new graphic.Line(graphic.subPixelOptimizeLine({\n      // Id for animation\n      anid: 'tick_' + ticksCoords[i].tickValue,\n      shape: {\n        x1: pt1[0],\n        y1: pt1[1],\n        x2: pt2[0],\n        y2: pt2[1]\n      },\n      style: defaults(lineStyleModel.getLineStyle(), {\n        stroke: axisModel.get('axisLine.lineStyle.color')\n      }),\n      z2: 2,\n      silent: true\n    }));\n    axisBuilder.group.add(tickEl);\n    tickEls.push(tickEl);\n  }\n\n  return tickEls;\n}\n\nfunction buildAxisLabel(axisBuilder, axisModel, opt) {\n  var axis = axisModel.axis;\n  var show = retrieve(opt.axisLabelShow, axisModel.get('axisLabel.show'));\n\n  if (!show || axis.scale.isBlank()) {\n    return;\n  }\n\n  var labelModel = axisModel.getModel('axisLabel');\n  var labelMargin = labelModel.get('margin');\n  var labels = axis.getViewLabels(); // Special label rotate.\n\n  var labelRotation = (retrieve(opt.labelRotate, labelModel.get('rotate')) || 0) * PI / 180;\n  var labelLayout = innerTextLayout(opt.rotation, labelRotation, opt.labelDirection);\n  var rawCategoryData = axisModel.getCategories(true);\n  var labelEls = [];\n  var silent = isSilent(axisModel);\n  var triggerEvent = axisModel.get('triggerEvent');\n  each(labels, function (labelItem, index) {\n    var tickValue = labelItem.tickValue;\n    var formattedLabel = labelItem.formattedLabel;\n    var rawLabel = labelItem.rawLabel;\n    var itemLabelModel = labelModel;\n\n    if (rawCategoryData && rawCategoryData[tickValue] && rawCategoryData[tickValue].textStyle) {\n      itemLabelModel = new Model(rawCategoryData[tickValue].textStyle, labelModel, axisModel.ecModel);\n    }\n\n    var textColor = itemLabelModel.getTextColor() || axisModel.get('axisLine.lineStyle.color');\n    var tickCoord = axis.dataToCoord(tickValue);\n    var pos = [tickCoord, opt.labelOffset + opt.labelDirection * labelMargin];\n    var textEl = new graphic.Text({\n      // Id for animation\n      anid: 'label_' + tickValue,\n      position: pos,\n      rotation: labelLayout.rotation,\n      silent: silent,\n      z2: 10\n    });\n    graphic.setTextStyle(textEl.style, itemLabelModel, {\n      text: formattedLabel,\n      textAlign: itemLabelModel.getShallow('align', true) || labelLayout.textAlign,\n      textVerticalAlign: itemLabelModel.getShallow('verticalAlign', true) || itemLabelModel.getShallow('baseline', true) || labelLayout.textVerticalAlign,\n      textFill: typeof textColor === 'function' ? textColor( // (1) In category axis with data zoom, tick is not the original\n      // index of axis.data. So tick should not be exposed to user\n      // in category axis.\n      // (2) Compatible with previous version, which always use formatted label as\n      // input. But in interval scale the formatted label is like '223,445', which\n      // maked user repalce ','. So we modify it to return original val but remain\n      // it as 'string' to avoid error in replacing.\n      axis.type === 'category' ? rawLabel : axis.type === 'value' ? tickValue + '' : tickValue, index) : textColor\n    }); // Pack data for mouse event\n\n    if (triggerEvent) {\n      textEl.eventData = makeAxisEventDataBase(axisModel);\n      textEl.eventData.targetType = 'axisLabel';\n      textEl.eventData.value = rawLabel;\n    } // FIXME\n\n\n    axisBuilder._dumbGroup.add(textEl);\n\n    textEl.updateTransform();\n    labelEls.push(textEl);\n    axisBuilder.group.add(textEl);\n    textEl.decomposeTransform();\n  });\n  return labelEls;\n}\n\nvar _default = AxisBuilder;\nmodule.exports = _default;","var Path = require(\"../Path\");\n\n/**\n * 圆弧\n * @module zrender/graphic/shape/Arc\n */\nvar _default = Path.extend({\n  type: 'arc',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r: 0,\n    startAngle: 0,\n    endAngle: Math.PI * 2,\n    clockwise: true\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var r = Math.max(shape.r, 0);\n    var startAngle = shape.startAngle;\n    var endAngle = shape.endAngle;\n    var clockwise = shape.clockwise;\n    var unitX = Math.cos(startAngle);\n    var unitY = Math.sin(startAngle);\n    ctx.moveTo(unitX * r + x, unitY * r + y);\n    ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n  }\n});\n\nmodule.exports = _default;","var Displayable = require(\"./Displayable\");\n\nvar zrUtil = require(\"../core/util\");\n\nvar PathProxy = require(\"../core/PathProxy\");\n\nvar pathContain = require(\"../contain/path\");\n\nvar Pattern = require(\"./Pattern\");\n\nvar getCanvasPattern = Pattern.prototype.getCanvasPattern;\nvar abs = Math.abs;\nvar pathProxyForDraw = new PathProxy(true);\n/**\n * @alias module:zrender/graphic/Path\n * @extends module:zrender/graphic/Displayable\n * @constructor\n * @param {Object} opts\n */\n\nfunction Path(opts) {\n  Displayable.call(this, opts);\n  /**\n   * @type {module:zrender/core/PathProxy}\n   * @readOnly\n   */\n\n  this.path = null;\n}\n\nPath.prototype = {\n  constructor: Path,\n  type: 'path',\n  __dirtyPath: true,\n  strokeContainThreshold: 5,\n  brush: function (ctx, prevEl) {\n    var style = this.style;\n    var path = this.path || pathProxyForDraw;\n    var hasStroke = style.hasStroke();\n    var hasFill = style.hasFill();\n    var fill = style.fill;\n    var stroke = style.stroke;\n    var hasFillGradient = hasFill && !!fill.colorStops;\n    var hasStrokeGradient = hasStroke && !!stroke.colorStops;\n    var hasFillPattern = hasFill && !!fill.image;\n    var hasStrokePattern = hasStroke && !!stroke.image;\n    style.bind(ctx, this, prevEl);\n    this.setTransform(ctx);\n\n    if (this.__dirty) {\n      var rect; // Update gradient because bounding rect may changed\n\n      if (hasFillGradient) {\n        rect = rect || this.getBoundingRect();\n        this._fillGradient = style.getGradient(ctx, fill, rect);\n      }\n\n      if (hasStrokeGradient) {\n        rect = rect || this.getBoundingRect();\n        this._strokeGradient = style.getGradient(ctx, stroke, rect);\n      }\n    } // Use the gradient or pattern\n\n\n    if (hasFillGradient) {\n      // PENDING If may have affect the state\n      ctx.fillStyle = this._fillGradient;\n    } else if (hasFillPattern) {\n      ctx.fillStyle = getCanvasPattern.call(fill, ctx);\n    }\n\n    if (hasStrokeGradient) {\n      ctx.strokeStyle = this._strokeGradient;\n    } else if (hasStrokePattern) {\n      ctx.strokeStyle = getCanvasPattern.call(stroke, ctx);\n    }\n\n    var lineDash = style.lineDash;\n    var lineDashOffset = style.lineDashOffset;\n    var ctxLineDash = !!ctx.setLineDash; // Update path sx, sy\n\n    var scale = this.getGlobalScale();\n    path.setScale(scale[0], scale[1]); // Proxy context\n    // Rebuild path in following 2 cases\n    // 1. Path is dirty\n    // 2. Path needs javascript implemented lineDash stroking.\n    //    In this case, lineDash information will not be saved in PathProxy\n\n    if (this.__dirtyPath || lineDash && !ctxLineDash && hasStroke) {\n      path.beginPath(ctx); // Setting line dash before build path\n\n      if (lineDash && !ctxLineDash) {\n        path.setLineDash(lineDash);\n        path.setLineDashOffset(lineDashOffset);\n      }\n\n      this.buildPath(path, this.shape, false); // Clear path dirty flag\n\n      if (this.path) {\n        this.__dirtyPath = false;\n      }\n    } else {\n      // Replay path building\n      ctx.beginPath();\n      this.path.rebuildPath(ctx);\n    }\n\n    hasFill && path.fill(ctx);\n\n    if (lineDash && ctxLineDash) {\n      ctx.setLineDash(lineDash);\n      ctx.lineDashOffset = lineDashOffset;\n    }\n\n    hasStroke && path.stroke(ctx);\n\n    if (lineDash && ctxLineDash) {\n      // PENDING\n      // Remove lineDash\n      ctx.setLineDash([]);\n    } // Draw rect text\n\n\n    if (style.text != null) {\n      // Only restore transform when needs draw text.\n      this.restoreTransform(ctx);\n      this.drawRectText(ctx, this.getBoundingRect());\n    }\n  },\n  // When bundling path, some shape may decide if use moveTo to begin a new subpath or closePath\n  // Like in circle\n  buildPath: function (ctx, shapeCfg, inBundle) {},\n  createPathProxy: function () {\n    this.path = new PathProxy();\n  },\n  getBoundingRect: function () {\n    var rect = this._rect;\n    var style = this.style;\n    var needsUpdateRect = !rect;\n\n    if (needsUpdateRect) {\n      var path = this.path;\n\n      if (!path) {\n        // Create path on demand.\n        path = this.path = new PathProxy();\n      }\n\n      if (this.__dirtyPath) {\n        path.beginPath();\n        this.buildPath(path, this.shape, false);\n      }\n\n      rect = path.getBoundingRect();\n    }\n\n    this._rect = rect;\n\n    if (style.hasStroke()) {\n      // Needs update rect with stroke lineWidth when\n      // 1. Element changes scale or lineWidth\n      // 2. Shape is changed\n      var rectWithStroke = this._rectWithStroke || (this._rectWithStroke = rect.clone());\n\n      if (this.__dirty || needsUpdateRect) {\n        rectWithStroke.copy(rect); // FIXME Must after updateTransform\n\n        var w = style.lineWidth; // PENDING, Min line width is needed when line is horizontal or vertical\n\n        var lineScale = style.strokeNoScale ? this.getLineScale() : 1; // Only add extra hover lineWidth when there are no fill\n\n        if (!style.hasFill()) {\n          w = Math.max(w, this.strokeContainThreshold || 4);\n        } // Consider line width\n        // Line scale can't be 0;\n\n\n        if (lineScale > 1e-10) {\n          rectWithStroke.width += w / lineScale;\n          rectWithStroke.height += w / lineScale;\n          rectWithStroke.x -= w / lineScale / 2;\n          rectWithStroke.y -= w / lineScale / 2;\n        }\n      } // Return rect with stroke\n\n\n      return rectWithStroke;\n    }\n\n    return rect;\n  },\n  contain: function (x, y) {\n    var localPos = this.transformCoordToLocal(x, y);\n    var rect = this.getBoundingRect();\n    var style = this.style;\n    x = localPos[0];\n    y = localPos[1];\n\n    if (rect.contain(x, y)) {\n      var pathData = this.path.data;\n\n      if (style.hasStroke()) {\n        var lineWidth = style.lineWidth;\n        var lineScale = style.strokeNoScale ? this.getLineScale() : 1; // Line scale can't be 0;\n\n        if (lineScale > 1e-10) {\n          // Only add extra hover lineWidth when there are no fill\n          if (!style.hasFill()) {\n            lineWidth = Math.max(lineWidth, this.strokeContainThreshold);\n          }\n\n          if (pathContain.containStroke(pathData, lineWidth / lineScale, x, y)) {\n            return true;\n          }\n        }\n      }\n\n      if (style.hasFill()) {\n        return pathContain.contain(pathData, x, y);\n      }\n    }\n\n    return false;\n  },\n\n  /**\n   * @param  {boolean} dirtyPath\n   */\n  dirty: function (dirtyPath) {\n    if (dirtyPath == null) {\n      dirtyPath = true;\n    } // Only mark dirty, not mark clean\n\n\n    if (dirtyPath) {\n      this.__dirtyPath = dirtyPath;\n      this._rect = null;\n    }\n\n    this.__dirty = true;\n    this.__zr && this.__zr.refresh(); // Used as a clipping path\n\n    if (this.__clipTarget) {\n      this.__clipTarget.dirty();\n    }\n  },\n\n  /**\n   * Alias for animate('shape')\n   * @param {boolean} loop\n   */\n  animateShape: function (loop) {\n    return this.animate('shape', loop);\n  },\n  // Overwrite attrKV\n  attrKV: function (key, value) {\n    // FIXME\n    if (key === 'shape') {\n      this.setShape(value);\n      this.__dirtyPath = true;\n      this._rect = null;\n    } else {\n      Displayable.prototype.attrKV.call(this, key, value);\n    }\n  },\n\n  /**\n   * @param {Object|string} key\n   * @param {*} value\n   */\n  setShape: function (key, value) {\n    var shape = this.shape; // Path from string may not have shape\n\n    if (shape) {\n      if (zrUtil.isObject(key)) {\n        for (var name in key) {\n          if (key.hasOwnProperty(name)) {\n            shape[name] = key[name];\n          }\n        }\n      } else {\n        shape[key] = value;\n      }\n\n      this.dirty(true);\n    }\n\n    return this;\n  },\n  getLineScale: function () {\n    var m = this.transform; // Get the line scale.\n    // Determinant of `m` means how much the area is enlarged by the\n    // transformation. So its square root can be used as a scale factor\n    // for width.\n\n    return m && abs(m[0] - 1) > 1e-10 && abs(m[3] - 1) > 1e-10 ? Math.sqrt(abs(m[0] * m[3] - m[2] * m[1])) : 1;\n  }\n};\n/**\n * 扩展一个 Path element, 比如星形，圆等。\n * Extend a path element\n * @param {Object} props\n * @param {string} props.type Path type\n * @param {Function} props.init Initialize\n * @param {Function} props.buildPath Overwrite buildPath method\n * @param {Object} [props.style] Extended default style config\n * @param {Object} [props.shape] Extended default shape config\n */\n\nPath.extend = function (defaults) {\n  var Sub = function (opts) {\n    Path.call(this, opts);\n\n    if (defaults.style) {\n      // Extend default style\n      this.style.extendFrom(defaults.style, false);\n    } // Extend default shape\n\n\n    var defaultShape = defaults.shape;\n\n    if (defaultShape) {\n      this.shape = this.shape || {};\n      var thisShape = this.shape;\n\n      for (var name in defaultShape) {\n        if (!thisShape.hasOwnProperty(name) && defaultShape.hasOwnProperty(name)) {\n          thisShape[name] = defaultShape[name];\n        }\n      }\n    }\n\n    defaults.init && defaults.init.call(this, opts);\n  };\n\n  zrUtil.inherits(Sub, Path); // FIXME 不能 extend position, rotation 等引用对象\n\n  for (var name in defaults) {\n    // Extending prototype values and methods\n    if (name !== 'style' && name !== 'shape') {\n      Sub.prototype[name] = defaults[name];\n    }\n  }\n\n  return Sub;\n};\n\nzrUtil.inherits(Path, Displayable);\nvar _default = Path;\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar colorAll = ['#37A2DA', '#32C5E9', '#67E0E3', '#9FE6B8', '#FFDB5C', '#ff9f7f', '#fb7293', '#E062AE', '#E690D1', '#e7bcf3', '#9d96f5', '#8378EA', '#96BFFF'];\nvar _default = {\n  color: colorAll,\n  colorLayer: [['#37A2DA', '#ffd85c', '#fd7b5f'], ['#37A2DA', '#67E0E3', '#FFDB5C', '#ff9f7f', '#E062AE', '#9d96f5'], ['#37A2DA', '#32C5E9', '#9FE6B8', '#FFDB5C', '#ff9f7f', '#fb7293', '#e7bcf3', '#8378EA', '#96BFFF'], colorAll]\n};\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar TooltipContent = require(\"./TooltipContent\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar findPointFromSeries = require(\"../axisPointer/findPointFromSeries\");\n\nvar layoutUtil = require(\"../../util/layout\");\n\nvar Model = require(\"../../model/Model\");\n\nvar globalListener = require(\"../axisPointer/globalListener\");\n\nvar axisHelper = require(\"../../coord/axisHelper\");\n\nvar axisPointerViewHelper = require(\"../axisPointer/viewHelper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar bind = zrUtil.bind;\nvar each = zrUtil.each;\nvar parsePercent = numberUtil.parsePercent;\nvar proxyRect = new graphic.Rect({\n  shape: {\n    x: -1,\n    y: -1,\n    width: 2,\n    height: 2\n  }\n});\n\nvar _default = echarts.extendComponentView({\n  type: 'tooltip',\n  init: function (ecModel, api) {\n    if (env.node) {\n      return;\n    }\n\n    var tooltipContent = new TooltipContent(api.getDom(), api);\n    this._tooltipContent = tooltipContent;\n  },\n  render: function (tooltipModel, ecModel, api) {\n    if (env.node || env.wxa) {\n      return;\n    } // Reset\n\n\n    this.group.removeAll();\n    /**\n     * @private\n     * @type {module:echarts/component/tooltip/TooltipModel}\n     */\n\n    this._tooltipModel = tooltipModel;\n    /**\n     * @private\n     * @type {module:echarts/model/Global}\n     */\n\n    this._ecModel = ecModel;\n    /**\n     * @private\n     * @type {module:echarts/ExtensionAPI}\n     */\n\n    this._api = api;\n    /**\n     * Should be cleaned when render.\n     * @private\n     * @type {Array.<Array.<Object>>}\n     */\n\n    this._lastDataByCoordSys = null;\n    /**\n     * @private\n     * @type {boolean}\n     */\n\n    this._alwaysShowContent = tooltipModel.get('alwaysShowContent');\n    var tooltipContent = this._tooltipContent;\n    tooltipContent.update();\n    tooltipContent.setEnterable(tooltipModel.get('enterable'));\n\n    this._initGlobalListener();\n\n    this._keepShow();\n  },\n  _initGlobalListener: function () {\n    var tooltipModel = this._tooltipModel;\n    var triggerOn = tooltipModel.get('triggerOn');\n    globalListener.register('itemTooltip', this._api, bind(function (currTrigger, e, dispatchAction) {\n      // If 'none', it is not controlled by mouse totally.\n      if (triggerOn !== 'none') {\n        if (triggerOn.indexOf(currTrigger) >= 0) {\n          this._tryShow(e, dispatchAction);\n        } else if (currTrigger === 'leave') {\n          this._hide(dispatchAction);\n        }\n      }\n    }, this));\n  },\n  _keepShow: function () {\n    var tooltipModel = this._tooltipModel;\n    var ecModel = this._ecModel;\n    var api = this._api; // Try to keep the tooltip show when refreshing\n\n    if (this._lastX != null && this._lastY != null // When user is willing to control tooltip totally using API,\n    // self.manuallyShowTip({x, y}) might cause tooltip hide,\n    // which is not expected.\n    && tooltipModel.get('triggerOn') !== 'none') {\n      var self = this;\n      clearTimeout(this._refreshUpdateTimeout);\n      this._refreshUpdateTimeout = setTimeout(function () {\n        // Show tip next tick after other charts are rendered\n        // In case highlight action has wrong result\n        // FIXME\n        self.manuallyShowTip(tooltipModel, ecModel, api, {\n          x: self._lastX,\n          y: self._lastY\n        });\n      });\n    }\n  },\n\n  /**\n   * Show tip manually by\n   * dispatchAction({\n   *     type: 'showTip',\n   *     x: 10,\n   *     y: 10\n   * });\n   * Or\n   * dispatchAction({\n   *      type: 'showTip',\n   *      seriesIndex: 0,\n   *      dataIndex or dataIndexInside or name\n   * });\n   *\n   *  TODO Batch\n   */\n  manuallyShowTip: function (tooltipModel, ecModel, api, payload) {\n    if (payload.from === this.uid || env.node) {\n      return;\n    }\n\n    var dispatchAction = makeDispatchAction(payload, api); // Reset ticket\n\n    this._ticket = ''; // When triggered from axisPointer.\n\n    var dataByCoordSys = payload.dataByCoordSys;\n\n    if (payload.tooltip && payload.x != null && payload.y != null) {\n      var el = proxyRect;\n      el.position = [payload.x, payload.y];\n      el.update();\n      el.tooltip = payload.tooltip; // Manually show tooltip while view is not using zrender elements.\n\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        target: el\n      }, dispatchAction);\n    } else if (dataByCoordSys) {\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        position: payload.position,\n        event: {},\n        dataByCoordSys: payload.dataByCoordSys,\n        tooltipOption: payload.tooltipOption\n      }, dispatchAction);\n    } else if (payload.seriesIndex != null) {\n      if (this._manuallyAxisShowTip(tooltipModel, ecModel, api, payload)) {\n        return;\n      }\n\n      var pointInfo = findPointFromSeries(payload, ecModel);\n      var cx = pointInfo.point[0];\n      var cy = pointInfo.point[1];\n\n      if (cx != null && cy != null) {\n        this._tryShow({\n          offsetX: cx,\n          offsetY: cy,\n          position: payload.position,\n          target: pointInfo.el,\n          event: {}\n        }, dispatchAction);\n      }\n    } else if (payload.x != null && payload.y != null) {\n      // FIXME\n      // should wrap dispatchAction like `axisPointer/globalListener` ?\n      api.dispatchAction({\n        type: 'updateAxisPointer',\n        x: payload.x,\n        y: payload.y\n      });\n\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        position: payload.position,\n        target: api.getZr().findHover(payload.x, payload.y).target,\n        event: {}\n      }, dispatchAction);\n    }\n  },\n  manuallyHideTip: function (tooltipModel, ecModel, api, payload) {\n    var tooltipContent = this._tooltipContent;\n\n    if (!this._alwaysShowContent && this._tooltipModel) {\n      tooltipContent.hideLater(this._tooltipModel.get('hideDelay'));\n    }\n\n    this._lastX = this._lastY = null;\n\n    if (payload.from !== this.uid) {\n      this._hide(makeDispatchAction(payload, api));\n    }\n  },\n  // Be compatible with previous design, that is, when tooltip.type is 'axis' and\n  // dispatchAction 'showTip' with seriesIndex and dataIndex will trigger axis pointer\n  // and tooltip.\n  _manuallyAxisShowTip: function (tooltipModel, ecModel, api, payload) {\n    var seriesIndex = payload.seriesIndex;\n    var dataIndex = payload.dataIndex;\n    var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo;\n\n    if (seriesIndex == null || dataIndex == null || coordSysAxesInfo == null) {\n      return;\n    }\n\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n\n    if (!seriesModel) {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var tooltipModel = buildTooltipModel([data.getItemModel(dataIndex), seriesModel, (seriesModel.coordinateSystem || {}).model, tooltipModel]);\n\n    if (tooltipModel.get('trigger') !== 'axis') {\n      return;\n    }\n\n    api.dispatchAction({\n      type: 'updateAxisPointer',\n      seriesIndex: seriesIndex,\n      dataIndex: dataIndex,\n      position: payload.position\n    });\n    return true;\n  },\n  _tryShow: function (e, dispatchAction) {\n    var el = e.target;\n    var tooltipModel = this._tooltipModel;\n\n    if (!tooltipModel) {\n      return;\n    } // Save mouse x, mouse y. So we can try to keep showing the tip if chart is refreshed\n\n\n    this._lastX = e.offsetX;\n    this._lastY = e.offsetY;\n    var dataByCoordSys = e.dataByCoordSys;\n\n    if (dataByCoordSys && dataByCoordSys.length) {\n      this._showAxisTooltip(dataByCoordSys, e);\n    } // Always show item tooltip if mouse is on the element with dataIndex\n    else if (el && el.dataIndex != null) {\n        this._lastDataByCoordSys = null;\n\n        this._showSeriesItemTooltip(e, el, dispatchAction);\n      } // Tooltip provided directly. Like legend.\n      else if (el && el.tooltip) {\n          this._lastDataByCoordSys = null;\n\n          this._showComponentItemTooltip(e, el, dispatchAction);\n        } else {\n          this._lastDataByCoordSys = null;\n\n          this._hide(dispatchAction);\n        }\n  },\n  _showOrMove: function (tooltipModel, cb) {\n    // showDelay is used in this case: tooltip.enterable is set\n    // as true. User intent to move mouse into tooltip and click\n    // something. `showDelay` makes it easyer to enter the content\n    // but tooltip do not move immediately.\n    var delay = tooltipModel.get('showDelay');\n    cb = zrUtil.bind(cb, this);\n    clearTimeout(this._showTimout);\n    delay > 0 ? this._showTimout = setTimeout(cb, delay) : cb();\n  },\n  _showAxisTooltip: function (dataByCoordSys, e) {\n    var ecModel = this._ecModel;\n    var globalTooltipModel = this._tooltipModel;\n    var point = [e.offsetX, e.offsetY];\n    var singleDefaultHTML = [];\n    var singleParamsList = [];\n    var singleTooltipModel = buildTooltipModel([e.tooltipOption, globalTooltipModel]);\n    each(dataByCoordSys, function (itemCoordSys) {\n      // var coordParamList = [];\n      // var coordDefaultHTML = [];\n      // var coordTooltipModel = buildTooltipModel([\n      //     e.tooltipOption,\n      //     itemCoordSys.tooltipOption,\n      //     ecModel.getComponent(itemCoordSys.coordSysMainType, itemCoordSys.coordSysIndex),\n      //     globalTooltipModel\n      // ]);\n      // var displayMode = coordTooltipModel.get('displayMode');\n      // var paramsList = displayMode === 'single' ? singleParamsList : [];\n      each(itemCoordSys.dataByAxis, function (item) {\n        var axisModel = ecModel.getComponent(item.axisDim + 'Axis', item.axisIndex);\n        var axisValue = item.value;\n        var seriesDefaultHTML = [];\n\n        if (!axisModel || axisValue == null) {\n          return;\n        }\n\n        var valueLabel = axisPointerViewHelper.getValueLabel(axisValue, axisModel.axis, ecModel, item.seriesDataIndices, item.valueLabelOpt);\n        zrUtil.each(item.seriesDataIndices, function (idxItem) {\n          var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n          var dataIndex = idxItem.dataIndexInside;\n          var dataParams = series && series.getDataParams(dataIndex);\n          dataParams.axisDim = item.axisDim;\n          dataParams.axisIndex = item.axisIndex;\n          dataParams.axisType = item.axisType;\n          dataParams.axisId = item.axisId;\n          dataParams.axisValue = axisHelper.getAxisRawValue(axisModel.axis, axisValue);\n          dataParams.axisValueLabel = valueLabel;\n\n          if (dataParams) {\n            singleParamsList.push(dataParams);\n            seriesDefaultHTML.push(series.formatTooltip(dataIndex, true));\n          }\n        }); // Default tooltip content\n        // FIXME\n        // (1) shold be the first data which has name?\n        // (2) themeRiver, firstDataIndex is array, and first line is unnecessary.\n\n        var firstLine = valueLabel;\n        singleDefaultHTML.push((firstLine ? formatUtil.encodeHTML(firstLine) + '<br />' : '') + seriesDefaultHTML.join('<br />'));\n      });\n    }, this); // In most case, the second axis is shown upper than the first one.\n\n    singleDefaultHTML.reverse();\n    singleDefaultHTML = singleDefaultHTML.join('<br /><br />');\n    var positionExpr = e.position;\n\n    this._showOrMove(singleTooltipModel, function () {\n      if (this._updateContentNotChangedOnAxis(dataByCoordSys)) {\n        this._updatePosition(singleTooltipModel, positionExpr, point[0], point[1], this._tooltipContent, singleParamsList);\n      } else {\n        this._showTooltipContent(singleTooltipModel, singleDefaultHTML, singleParamsList, Math.random(), point[0], point[1], positionExpr);\n      }\n    }); // Do not trigger events here, because this branch only be entered\n    // from dispatchAction.\n\n  },\n  _showSeriesItemTooltip: function (e, el, dispatchAction) {\n    var ecModel = this._ecModel; // Use dataModel in element if possible\n    // Used when mouseover on a element like markPoint or edge\n    // In which case, the data is not main data in series.\n\n    var seriesIndex = el.seriesIndex;\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex); // For example, graph link.\n\n    var dataModel = el.dataModel || seriesModel;\n    var dataIndex = el.dataIndex;\n    var dataType = el.dataType;\n    var data = dataModel.getData();\n    var tooltipModel = buildTooltipModel([data.getItemModel(dataIndex), dataModel, seriesModel && (seriesModel.coordinateSystem || {}).model, this._tooltipModel]);\n    var tooltipTrigger = tooltipModel.get('trigger');\n\n    if (tooltipTrigger != null && tooltipTrigger !== 'item') {\n      return;\n    }\n\n    var params = dataModel.getDataParams(dataIndex, dataType);\n    var defaultHtml = dataModel.formatTooltip(dataIndex, false, dataType);\n    var asyncTicket = 'item_' + dataModel.name + '_' + dataIndex;\n\n    this._showOrMove(tooltipModel, function () {\n      this._showTooltipContent(tooltipModel, defaultHtml, params, asyncTicket, e.offsetX, e.offsetY, e.position, e.target);\n    }); // FIXME\n    // duplicated showtip if manuallyShowTip is called from dispatchAction.\n\n\n    dispatchAction({\n      type: 'showTip',\n      dataIndexInside: dataIndex,\n      dataIndex: data.getRawIndex(dataIndex),\n      seriesIndex: seriesIndex,\n      from: this.uid\n    });\n  },\n  _showComponentItemTooltip: function (e, el, dispatchAction) {\n    var tooltipOpt = el.tooltip;\n\n    if (typeof tooltipOpt === 'string') {\n      var content = tooltipOpt;\n      tooltipOpt = {\n        content: content,\n        // Fixed formatter\n        formatter: content\n      };\n    }\n\n    var subTooltipModel = new Model(tooltipOpt, this._tooltipModel, this._ecModel);\n    var defaultHtml = subTooltipModel.get('content');\n    var asyncTicket = Math.random(); // Do not check whether `trigger` is 'none' here, because `trigger`\n    // only works on cooridinate system. In fact, we have not found case\n    // that requires setting `trigger` nothing on component yet.\n\n    this._showOrMove(subTooltipModel, function () {\n      this._showTooltipContent(subTooltipModel, defaultHtml, subTooltipModel.get('formatterParams') || {}, asyncTicket, e.offsetX, e.offsetY, e.position, el);\n    }); // If not dispatch showTip, tip may be hide triggered by axis.\n\n\n    dispatchAction({\n      type: 'showTip',\n      from: this.uid\n    });\n  },\n  _showTooltipContent: function (tooltipModel, defaultHtml, params, asyncTicket, x, y, positionExpr, el) {\n    // Reset ticket\n    this._ticket = '';\n\n    if (!tooltipModel.get('showContent') || !tooltipModel.get('show')) {\n      return;\n    }\n\n    var tooltipContent = this._tooltipContent;\n    var formatter = tooltipModel.get('formatter');\n    positionExpr = positionExpr || tooltipModel.get('position');\n    var html = defaultHtml;\n\n    if (formatter && typeof formatter === 'string') {\n      html = formatUtil.formatTpl(formatter, params, true);\n    } else if (typeof formatter === 'function') {\n      var callback = bind(function (cbTicket, html) {\n        if (cbTicket === this._ticket) {\n          tooltipContent.setContent(html);\n\n          this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);\n        }\n      }, this);\n      this._ticket = asyncTicket;\n      html = formatter(params, asyncTicket, callback);\n    }\n\n    tooltipContent.setContent(html);\n    tooltipContent.show(tooltipModel);\n\n    this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);\n  },\n\n  /**\n   * @param  {string|Function|Array.<number>|Object} positionExpr\n   * @param  {number} x Mouse x\n   * @param  {number} y Mouse y\n   * @param  {boolean} confine Whether confine tooltip content in view rect.\n   * @param  {Object|<Array.<Object>} params\n   * @param  {module:zrender/Element} el target element\n   * @param  {module:echarts/ExtensionAPI} api\n   * @return {Array.<number>}\n   */\n  _updatePosition: function (tooltipModel, positionExpr, x, y, content, params, el) {\n    var viewWidth = this._api.getWidth();\n\n    var viewHeight = this._api.getHeight();\n\n    positionExpr = positionExpr || tooltipModel.get('position');\n    var contentSize = content.getSize();\n    var align = tooltipModel.get('align');\n    var vAlign = tooltipModel.get('verticalAlign');\n    var rect = el && el.getBoundingRect().clone();\n    el && rect.applyTransform(el.transform);\n\n    if (typeof positionExpr === 'function') {\n      // Callback of position can be an array or a string specify the position\n      positionExpr = positionExpr([x, y], params, content.el, rect, {\n        viewSize: [viewWidth, viewHeight],\n        contentSize: contentSize.slice()\n      });\n    }\n\n    if (zrUtil.isArray(positionExpr)) {\n      x = parsePercent(positionExpr[0], viewWidth);\n      y = parsePercent(positionExpr[1], viewHeight);\n    } else if (zrUtil.isObject(positionExpr)) {\n      positionExpr.width = contentSize[0];\n      positionExpr.height = contentSize[1];\n      var layoutRect = layoutUtil.getLayoutRect(positionExpr, {\n        width: viewWidth,\n        height: viewHeight\n      });\n      x = layoutRect.x;\n      y = layoutRect.y;\n      align = null; // When positionExpr is left/top/right/bottom,\n      // align and verticalAlign will not work.\n\n      vAlign = null;\n    } // Specify tooltip position by string 'top' 'bottom' 'left' 'right' around graphic element\n    else if (typeof positionExpr === 'string' && el) {\n        var pos = calcTooltipPosition(positionExpr, rect, contentSize);\n        x = pos[0];\n        y = pos[1];\n      } else {\n        var pos = refixTooltipPosition(x, y, content.el, viewWidth, viewHeight, align ? null : 20, vAlign ? null : 20);\n        x = pos[0];\n        y = pos[1];\n      }\n\n    align && (x -= isCenterAlign(align) ? contentSize[0] / 2 : align === 'right' ? contentSize[0] : 0);\n    vAlign && (y -= isCenterAlign(vAlign) ? contentSize[1] / 2 : vAlign === 'bottom' ? contentSize[1] : 0);\n\n    if (tooltipModel.get('confine')) {\n      var pos = confineTooltipPosition(x, y, content.el, viewWidth, viewHeight);\n      x = pos[0];\n      y = pos[1];\n    }\n\n    content.moveTo(x, y);\n  },\n  // FIXME\n  // Should we remove this but leave this to user?\n  _updateContentNotChangedOnAxis: function (dataByCoordSys) {\n    var lastCoordSys = this._lastDataByCoordSys;\n    var contentNotChanged = !!lastCoordSys && lastCoordSys.length === dataByCoordSys.length;\n    contentNotChanged && each(lastCoordSys, function (lastItemCoordSys, indexCoordSys) {\n      var lastDataByAxis = lastItemCoordSys.dataByAxis || {};\n      var thisItemCoordSys = dataByCoordSys[indexCoordSys] || {};\n      var thisDataByAxis = thisItemCoordSys.dataByAxis || [];\n      contentNotChanged &= lastDataByAxis.length === thisDataByAxis.length;\n      contentNotChanged && each(lastDataByAxis, function (lastItem, indexAxis) {\n        var thisItem = thisDataByAxis[indexAxis] || {};\n        var lastIndices = lastItem.seriesDataIndices || [];\n        var newIndices = thisItem.seriesDataIndices || [];\n        contentNotChanged &= lastItem.value === thisItem.value && lastItem.axisType === thisItem.axisType && lastItem.axisId === thisItem.axisId && lastIndices.length === newIndices.length;\n        contentNotChanged && each(lastIndices, function (lastIdxItem, j) {\n          var newIdxItem = newIndices[j];\n          contentNotChanged &= lastIdxItem.seriesIndex === newIdxItem.seriesIndex && lastIdxItem.dataIndex === newIdxItem.dataIndex;\n        });\n      });\n    });\n    this._lastDataByCoordSys = dataByCoordSys;\n    return !!contentNotChanged;\n  },\n  _hide: function (dispatchAction) {\n    // Do not directly hideLater here, because this behavior may be prevented\n    // in dispatchAction when showTip is dispatched.\n    // FIXME\n    // duplicated hideTip if manuallyHideTip is called from dispatchAction.\n    this._lastDataByCoordSys = null;\n    dispatchAction({\n      type: 'hideTip',\n      from: this.uid\n    });\n  },\n  dispose: function (ecModel, api) {\n    if (env.node || env.wxa) {\n      return;\n    }\n\n    this._tooltipContent.hide();\n\n    globalListener.unregister('itemTooltip', api);\n  }\n});\n/**\n * @param {Array.<Object|module:echarts/model/Model>} modelCascade\n * From top to bottom. (the last one should be globalTooltipModel);\n */\n\n\nfunction buildTooltipModel(modelCascade) {\n  var resultModel = modelCascade.pop();\n\n  while (modelCascade.length) {\n    var tooltipOpt = modelCascade.pop();\n\n    if (tooltipOpt) {\n      if (Model.isInstance(tooltipOpt)) {\n        tooltipOpt = tooltipOpt.get('tooltip', true);\n      } // In each data item tooltip can be simply write:\n      // {\n      //  value: 10,\n      //  tooltip: 'Something you need to know'\n      // }\n\n\n      if (typeof tooltipOpt === 'string') {\n        tooltipOpt = {\n          formatter: tooltipOpt\n        };\n      }\n\n      resultModel = new Model(tooltipOpt, resultModel, resultModel.ecModel);\n    }\n  }\n\n  return resultModel;\n}\n\nfunction makeDispatchAction(payload, api) {\n  return payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n}\n\nfunction refixTooltipPosition(x, y, el, viewWidth, viewHeight, gapH, gapV) {\n  var size = getOuterSize(el);\n  var width = size.width;\n  var height = size.height;\n\n  if (gapH != null) {\n    if (x + width + gapH > viewWidth) {\n      x -= width + gapH;\n    } else {\n      x += gapH;\n    }\n  }\n\n  if (gapV != null) {\n    if (y + height + gapV > viewHeight) {\n      y -= height + gapV;\n    } else {\n      y += gapV;\n    }\n  }\n\n  return [x, y];\n}\n\nfunction confineTooltipPosition(x, y, el, viewWidth, viewHeight) {\n  var size = getOuterSize(el);\n  var width = size.width;\n  var height = size.height;\n  x = Math.min(x + width, viewWidth) - width;\n  y = Math.min(y + height, viewHeight) - height;\n  x = Math.max(x, 0);\n  y = Math.max(y, 0);\n  return [x, y];\n}\n\nfunction getOuterSize(el) {\n  var width = el.clientWidth;\n  var height = el.clientHeight; // Consider browser compatibility.\n  // IE8 does not support getComputedStyle.\n\n  if (document.defaultView && document.defaultView.getComputedStyle) {\n    var stl = document.defaultView.getComputedStyle(el);\n\n    if (stl) {\n      width += parseInt(stl.paddingLeft, 10) + parseInt(stl.paddingRight, 10) + parseInt(stl.borderLeftWidth, 10) + parseInt(stl.borderRightWidth, 10);\n      height += parseInt(stl.paddingTop, 10) + parseInt(stl.paddingBottom, 10) + parseInt(stl.borderTopWidth, 10) + parseInt(stl.borderBottomWidth, 10);\n    }\n  }\n\n  return {\n    width: width,\n    height: height\n  };\n}\n\nfunction calcTooltipPosition(position, rect, contentSize) {\n  var domWidth = contentSize[0];\n  var domHeight = contentSize[1];\n  var gap = 5;\n  var x = 0;\n  var y = 0;\n  var rectWidth = rect.width;\n  var rectHeight = rect.height;\n\n  switch (position) {\n    case 'inside':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n      break;\n\n    case 'top':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y - domHeight - gap;\n      break;\n\n    case 'bottom':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y + rectHeight + gap;\n      break;\n\n    case 'left':\n      x = rect.x - domWidth - gap;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n      break;\n\n    case 'right':\n      x = rect.x + rectWidth + gap;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n  }\n\n  return [x, y];\n}\n\nfunction isCenterAlign(align) {\n  return align === 'center' || align === 'middle';\n}\n\nmodule.exports = _default;","var zrUtil = require(\"../core/util\");\n\nvar Gradient = require(\"./Gradient\");\n\n/**\n * x, y, r are all percent from 0 to 1\n * @param {number} [x=0.5]\n * @param {number} [y=0.5]\n * @param {number} [r=0.5]\n * @param {Array.<Object>} [colorStops]\n * @param {boolean} [globalCoord=false]\n */\nvar RadialGradient = function (x, y, r, colorStops, globalCoord) {\n  // Should do nothing more in this constructor. Because gradient can be\n  // declard by `color: {type: 'radial', colorStops: ...}`, where\n  // this constructor will not be called.\n  this.x = x == null ? 0.5 : x;\n  this.y = y == null ? 0.5 : y;\n  this.r = r == null ? 0.5 : r; // Can be cloned\n\n  this.type = 'radial'; // If use global coord\n\n  this.global = globalCoord || false;\n  Gradient.call(this, colorStops);\n};\n\nRadialGradient.prototype = {\n  constructor: RadialGradient\n};\nzrUtil.inherits(RadialGradient, Gradient);\nvar _default = RadialGradient;\nmodule.exports = _default;","var Path = require(\"../graphic/Path\");\n\nvar PathProxy = require(\"../core/PathProxy\");\n\nvar transformPath = require(\"./transformPath\");\n\n// command chars\nvar cc = ['m', 'M', 'l', 'L', 'v', 'V', 'h', 'H', 'z', 'Z', 'c', 'C', 'q', 'Q', 't', 'T', 's', 'S', 'a', 'A'];\nvar mathSqrt = Math.sqrt;\nvar mathSin = Math.sin;\nvar mathCos = Math.cos;\nvar PI = Math.PI;\n\nvar vMag = function (v) {\n  return Math.sqrt(v[0] * v[0] + v[1] * v[1]);\n};\n\nvar vRatio = function (u, v) {\n  return (u[0] * v[0] + u[1] * v[1]) / (vMag(u) * vMag(v));\n};\n\nvar vAngle = function (u, v) {\n  return (u[0] * v[1] < u[1] * v[0] ? -1 : 1) * Math.acos(vRatio(u, v));\n};\n\nfunction processArc(x1, y1, x2, y2, fa, fs, rx, ry, psiDeg, cmd, path) {\n  var psi = psiDeg * (PI / 180.0);\n  var xp = mathCos(psi) * (x1 - x2) / 2.0 + mathSin(psi) * (y1 - y2) / 2.0;\n  var yp = -1 * mathSin(psi) * (x1 - x2) / 2.0 + mathCos(psi) * (y1 - y2) / 2.0;\n  var lambda = xp * xp / (rx * rx) + yp * yp / (ry * ry);\n\n  if (lambda > 1) {\n    rx *= mathSqrt(lambda);\n    ry *= mathSqrt(lambda);\n  }\n\n  var f = (fa === fs ? -1 : 1) * mathSqrt((rx * rx * (ry * ry) - rx * rx * (yp * yp) - ry * ry * (xp * xp)) / (rx * rx * (yp * yp) + ry * ry * (xp * xp))) || 0;\n  var cxp = f * rx * yp / ry;\n  var cyp = f * -ry * xp / rx;\n  var cx = (x1 + x2) / 2.0 + mathCos(psi) * cxp - mathSin(psi) * cyp;\n  var cy = (y1 + y2) / 2.0 + mathSin(psi) * cxp + mathCos(psi) * cyp;\n  var theta = vAngle([1, 0], [(xp - cxp) / rx, (yp - cyp) / ry]);\n  var u = [(xp - cxp) / rx, (yp - cyp) / ry];\n  var v = [(-1 * xp - cxp) / rx, (-1 * yp - cyp) / ry];\n  var dTheta = vAngle(u, v);\n\n  if (vRatio(u, v) <= -1) {\n    dTheta = PI;\n  }\n\n  if (vRatio(u, v) >= 1) {\n    dTheta = 0;\n  }\n\n  if (fs === 0 && dTheta > 0) {\n    dTheta = dTheta - 2 * PI;\n  }\n\n  if (fs === 1 && dTheta < 0) {\n    dTheta = dTheta + 2 * PI;\n  }\n\n  path.addData(cmd, cx, cy, rx, ry, theta, dTheta, psi, fs);\n}\n\nfunction createPathProxyFromString(data) {\n  if (!data) {\n    return [];\n  } // command string\n\n\n  var cs = data.replace(/-/g, ' -').replace(/  /g, ' ').replace(/ /g, ',').replace(/,,/g, ',');\n  var n; // create pipes so that we can split the data\n\n  for (n = 0; n < cc.length; n++) {\n    cs = cs.replace(new RegExp(cc[n], 'g'), '|' + cc[n]);\n  } // create array\n\n\n  var arr = cs.split('|'); // init context point\n\n  var cpx = 0;\n  var cpy = 0;\n  var path = new PathProxy();\n  var CMD = PathProxy.CMD;\n  var prevCmd;\n\n  for (n = 1; n < arr.length; n++) {\n    var str = arr[n];\n    var c = str.charAt(0);\n    var off = 0;\n    var p = str.slice(1).replace(/e,-/g, 'e-').split(',');\n    var cmd;\n\n    if (p.length > 0 && p[0] === '') {\n      p.shift();\n    }\n\n    for (var i = 0; i < p.length; i++) {\n      p[i] = parseFloat(p[i]);\n    }\n\n    while (off < p.length && !isNaN(p[off])) {\n      if (isNaN(p[0])) {\n        break;\n      }\n\n      var ctlPtx;\n      var ctlPty;\n      var rx;\n      var ry;\n      var psi;\n      var fa;\n      var fs;\n      var x1 = cpx;\n      var y1 = cpy; // convert l, H, h, V, and v to L\n\n      switch (c) {\n        case 'l':\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'L':\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'm':\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.M;\n          path.addData(cmd, cpx, cpy);\n          c = 'l';\n          break;\n\n        case 'M':\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.M;\n          path.addData(cmd, cpx, cpy);\n          c = 'L';\n          break;\n\n        case 'h':\n          cpx += p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'H':\n          cpx = p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'v':\n          cpy += p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'V':\n          cpy = p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'C':\n          cmd = CMD.C;\n          path.addData(cmd, p[off++], p[off++], p[off++], p[off++], p[off++], p[off++]);\n          cpx = p[off - 2];\n          cpy = p[off - 1];\n          break;\n\n        case 'c':\n          cmd = CMD.C;\n          path.addData(cmd, p[off++] + cpx, p[off++] + cpy, p[off++] + cpx, p[off++] + cpy, p[off++] + cpx, p[off++] + cpy);\n          cpx += p[off - 2];\n          cpy += p[off - 1];\n          break;\n\n        case 'S':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.C) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cmd = CMD.C;\n          x1 = p[off++];\n          y1 = p[off++];\n          cpx = p[off++];\n          cpy = p[off++];\n          path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n          break;\n\n        case 's':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.C) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cmd = CMD.C;\n          x1 = cpx + p[off++];\n          y1 = cpy + p[off++];\n          cpx += p[off++];\n          cpy += p[off++];\n          path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n          break;\n\n        case 'Q':\n          x1 = p[off++];\n          y1 = p[off++];\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, x1, y1, cpx, cpy);\n          break;\n\n        case 'q':\n          x1 = p[off++] + cpx;\n          y1 = p[off++] + cpy;\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, x1, y1, cpx, cpy);\n          break;\n\n        case 'T':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.Q) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n          break;\n\n        case 't':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.Q) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n          break;\n\n        case 'A':\n          rx = p[off++];\n          ry = p[off++];\n          psi = p[off++];\n          fa = p[off++];\n          fs = p[off++];\n          x1 = cpx, y1 = cpy;\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.A;\n          processArc(x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path);\n          break;\n\n        case 'a':\n          rx = p[off++];\n          ry = p[off++];\n          psi = p[off++];\n          fa = p[off++];\n          fs = p[off++];\n          x1 = cpx, y1 = cpy;\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.A;\n          processArc(x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path);\n          break;\n      }\n    }\n\n    if (c === 'z' || c === 'Z') {\n      cmd = CMD.Z;\n      path.addData(cmd);\n    }\n\n    prevCmd = cmd;\n  }\n\n  path.toStatic();\n  return path;\n} // TODO Optimize double memory cost problem\n\n\nfunction createPathOptions(str, opts) {\n  var pathProxy = createPathProxyFromString(str);\n  opts = opts || {};\n\n  opts.buildPath = function (path) {\n    if (path.setData) {\n      path.setData(pathProxy.data); // Svg and vml renderer don't have context\n\n      var ctx = path.getContext();\n\n      if (ctx) {\n        path.rebuildPath(ctx);\n      }\n    } else {\n      var ctx = path;\n      pathProxy.rebuildPath(ctx);\n    }\n  };\n\n  opts.applyTransform = function (m) {\n    transformPath(pathProxy, m);\n    this.dirty(true);\n  };\n\n  return opts;\n}\n/**\n * Create a Path object from path string data\n * http://www.w3.org/TR/SVG/paths.html#PathData\n * @param  {Object} opts Other options\n */\n\n\nfunction createFromString(str, opts) {\n  return new Path(createPathOptions(str, opts));\n}\n/**\n * Create a Path class from path string data\n * @param  {string} str\n * @param  {Object} opts Other options\n */\n\n\nfunction extendFromString(str, opts) {\n  return Path.extend(createPathOptions(str, opts));\n}\n/**\n * Merge multiple paths\n */\n// TODO Apply transform\n// TODO stroke dash\n// TODO Optimize double memory cost problem\n\n\nfunction mergePath(pathEls, opts) {\n  var pathList = [];\n  var len = pathEls.length;\n\n  for (var i = 0; i < len; i++) {\n    var pathEl = pathEls[i];\n\n    if (!pathEl.path) {\n      pathEl.createPathProxy();\n    }\n\n    if (pathEl.__dirtyPath) {\n      pathEl.buildPath(pathEl.path, pathEl.shape, true);\n    }\n\n    pathList.push(pathEl.path);\n  }\n\n  var pathBundle = new Path(opts); // Need path proxy.\n\n  pathBundle.createPathProxy();\n\n  pathBundle.buildPath = function (path) {\n    path.appendPath(pathList); // Svg and vml renderer don't have context\n\n    var ctx = path.getContext();\n\n    if (ctx) {\n      path.rebuildPath(ctx);\n    }\n  };\n\n  return pathBundle;\n}\n\nexports.createFromString = createFromString;\nexports.extendFromString = extendFromString;\nexports.mergePath = mergePath;","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar OrdinalScale = require(\"../scale/Ordinal\");\n\nvar IntervalScale = require(\"../scale/Interval\");\n\nvar Scale = require(\"../scale/Scale\");\n\nvar numberUtil = require(\"../util/number\");\n\nvar _barGrid = require(\"../layout/barGrid\");\n\nvar prepareLayoutBarSeries = _barGrid.prepareLayoutBarSeries;\nvar makeColumnLayout = _barGrid.makeColumnLayout;\nvar retrieveColumnLayout = _barGrid.retrieveColumnLayout;\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nrequire(\"../scale/Time\");\n\nrequire(\"../scale/Log\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Get axis scale extent before niced.\n * Item of returned array can only be number (including Infinity and NaN).\n */\nfunction getScaleExtent(scale, model) {\n  var scaleType = scale.type;\n  var min = model.getMin();\n  var max = model.getMax();\n  var fixMin = min != null;\n  var fixMax = max != null;\n  var originalExtent = scale.getExtent();\n  var axisDataLen;\n  var boundaryGap;\n  var span;\n\n  if (scaleType === 'ordinal') {\n    axisDataLen = model.getCategories().length;\n  } else {\n    boundaryGap = model.get('boundaryGap');\n\n    if (!zrUtil.isArray(boundaryGap)) {\n      boundaryGap = [boundaryGap || 0, boundaryGap || 0];\n    }\n\n    if (typeof boundaryGap[0] === 'boolean') {\n      boundaryGap = [0, 0];\n    }\n\n    boundaryGap[0] = numberUtil.parsePercent(boundaryGap[0], 1);\n    boundaryGap[1] = numberUtil.parsePercent(boundaryGap[1], 1);\n    span = originalExtent[1] - originalExtent[0] || Math.abs(originalExtent[0]);\n  } // Notice: When min/max is not set (that is, when there are null/undefined,\n  // which is the most common case), these cases should be ensured:\n  // (1) For 'ordinal', show all axis.data.\n  // (2) For others:\n  //      + `boundaryGap` is applied (if min/max set, boundaryGap is\n  //      disabled).\n  //      + If `needCrossZero`, min/max should be zero, otherwise, min/max should\n  //      be the result that originalExtent enlarged by boundaryGap.\n  // (3) If no data, it should be ensured that `scale.setBlank` is set.\n  // FIXME\n  // (1) When min/max is 'dataMin' or 'dataMax', should boundaryGap be able to used?\n  // (2) When `needCrossZero` and all data is positive/negative, should it be ensured\n  // that the results processed by boundaryGap are positive/negative?\n\n\n  if (min == null) {\n    min = scaleType === 'ordinal' ? axisDataLen ? 0 : NaN : originalExtent[0] - boundaryGap[0] * span;\n  }\n\n  if (max == null) {\n    max = scaleType === 'ordinal' ? axisDataLen ? axisDataLen - 1 : NaN : originalExtent[1] + boundaryGap[1] * span;\n  }\n\n  if (min === 'dataMin') {\n    min = originalExtent[0];\n  } else if (typeof min === 'function') {\n    min = min({\n      min: originalExtent[0],\n      max: originalExtent[1]\n    });\n  }\n\n  if (max === 'dataMax') {\n    max = originalExtent[1];\n  } else if (typeof max === 'function') {\n    max = max({\n      min: originalExtent[0],\n      max: originalExtent[1]\n    });\n  }\n\n  (min == null || !isFinite(min)) && (min = NaN);\n  (max == null || !isFinite(max)) && (max = NaN);\n  scale.setBlank(zrUtil.eqNaN(min) || zrUtil.eqNaN(max) || scaleType === 'ordinal' && !scale.getOrdinalMeta().categories.length); // Evaluate if axis needs cross zero\n\n  if (model.getNeedCrossZero()) {\n    // Axis is over zero and min is not set\n    if (min > 0 && max > 0 && !fixMin) {\n      min = 0;\n    } // Axis is under zero and max is not set\n\n\n    if (min < 0 && max < 0 && !fixMax) {\n      max = 0;\n    }\n  } // If bars are placed on a base axis of type time or interval account for axis boundary overflow and current axis\n  // is base axis\n  // FIXME\n  // (1) Consider support value axis, where below zero and axis `onZero` should be handled properly.\n  // (2) Refactor the logic with `barGrid`. Is it not need to `makeBarWidthAndOffsetInfo` twice with different extent?\n  //     Should not depend on series type `bar`?\n  // (3) Fix that might overlap when using dataZoom.\n  // (4) Consider other chart types using `barGrid`?\n  // See #6728, #4862, `test/bar-overflow-time-plot.html`\n\n\n  var ecModel = model.ecModel;\n\n  if (ecModel && scaleType === 'time'\n  /*|| scaleType === 'interval' */\n  ) {\n    var barSeriesModels = prepareLayoutBarSeries('bar', ecModel);\n    var isBaseAxisAndHasBarSeries;\n    zrUtil.each(barSeriesModels, function (seriesModel) {\n      isBaseAxisAndHasBarSeries |= seriesModel.getBaseAxis() === model.axis;\n    });\n\n    if (isBaseAxisAndHasBarSeries) {\n      // Calculate placement of bars on axis\n      var barWidthAndOffset = makeColumnLayout(barSeriesModels); // Adjust axis min and max to account for overflow\n\n      var adjustedScale = adjustScaleForOverflow(min, max, model, barWidthAndOffset);\n      min = adjustedScale.min;\n      max = adjustedScale.max;\n    }\n  }\n\n  return [min, max];\n}\n\nfunction adjustScaleForOverflow(min, max, model, barWidthAndOffset) {\n  // Get Axis Length\n  var axisExtent = model.axis.getExtent();\n  var axisLength = axisExtent[1] - axisExtent[0]; // Get bars on current base axis and calculate min and max overflow\n\n  var barsOnCurrentAxis = retrieveColumnLayout(barWidthAndOffset, model.axis);\n\n  if (barsOnCurrentAxis === undefined) {\n    return {\n      min: min,\n      max: max\n    };\n  }\n\n  var minOverflow = Infinity;\n  zrUtil.each(barsOnCurrentAxis, function (item) {\n    minOverflow = Math.min(item.offset, minOverflow);\n  });\n  var maxOverflow = -Infinity;\n  zrUtil.each(barsOnCurrentAxis, function (item) {\n    maxOverflow = Math.max(item.offset + item.width, maxOverflow);\n  });\n  minOverflow = Math.abs(minOverflow);\n  maxOverflow = Math.abs(maxOverflow);\n  var totalOverFlow = minOverflow + maxOverflow; // Calulate required buffer based on old range and overflow\n\n  var oldRange = max - min;\n  var oldRangePercentOfNew = 1 - (minOverflow + maxOverflow) / axisLength;\n  var overflowBuffer = oldRange / oldRangePercentOfNew - oldRange;\n  max += overflowBuffer * (maxOverflow / totalOverFlow);\n  min -= overflowBuffer * (minOverflow / totalOverFlow);\n  return {\n    min: min,\n    max: max\n  };\n}\n\nfunction niceScaleExtent(scale, model) {\n  var extent = getScaleExtent(scale, model);\n  var fixMin = model.getMin() != null;\n  var fixMax = model.getMax() != null;\n  var splitNumber = model.get('splitNumber');\n\n  if (scale.type === 'log') {\n    scale.base = model.get('logBase');\n  }\n\n  var scaleType = scale.type;\n  scale.setExtent(extent[0], extent[1]);\n  scale.niceExtent({\n    splitNumber: splitNumber,\n    fixMin: fixMin,\n    fixMax: fixMax,\n    minInterval: scaleType === 'interval' || scaleType === 'time' ? model.get('minInterval') : null,\n    maxInterval: scaleType === 'interval' || scaleType === 'time' ? model.get('maxInterval') : null\n  }); // If some one specified the min, max. And the default calculated interval\n  // is not good enough. He can specify the interval. It is often appeared\n  // in angle axis with angle 0 - 360. Interval calculated in interval scale is hard\n  // to be 60.\n  // FIXME\n\n  var interval = model.get('interval');\n\n  if (interval != null) {\n    scale.setInterval && scale.setInterval(interval);\n  }\n}\n/**\n * @param {module:echarts/model/Model} model\n * @param {string} [axisType] Default retrieve from model.type\n * @return {module:echarts/scale/*}\n */\n\n\nfunction createScaleByModel(model, axisType) {\n  axisType = axisType || model.get('type');\n\n  if (axisType) {\n    switch (axisType) {\n      // Buildin scale\n      case 'category':\n        return new OrdinalScale(model.getOrdinalMeta ? model.getOrdinalMeta() : model.getCategories(), [Infinity, -Infinity]);\n\n      case 'value':\n        return new IntervalScale();\n      // Extended scale, like time and log\n\n      default:\n        return (Scale.getClass(axisType) || IntervalScale).create(model);\n    }\n  }\n}\n/**\n * Check if the axis corss 0\n */\n\n\nfunction ifAxisCrossZero(axis) {\n  var dataExtent = axis.scale.getExtent();\n  var min = dataExtent[0];\n  var max = dataExtent[1];\n  return !(min > 0 && max > 0 || min < 0 && max < 0);\n}\n/**\n * @param {module:echarts/coord/Axis} axis\n * @return {Function} Label formatter function.\n *         param: {number} tickValue,\n *         param: {number} idx, the index in all ticks.\n *                         If category axis, this param is not requied.\n *         return: {string} label string.\n */\n\n\nfunction makeLabelFormatter(axis) {\n  var labelFormatter = axis.getLabelModel().get('formatter');\n  var categoryTickStart = axis.type === 'category' ? axis.scale.getExtent()[0] : null;\n\n  if (typeof labelFormatter === 'string') {\n    labelFormatter = function (tpl) {\n      return function (val) {\n        return tpl.replace('{value}', val != null ? val : '');\n      };\n    }(labelFormatter); // Consider empty array\n\n\n    return labelFormatter;\n  } else if (typeof labelFormatter === 'function') {\n    return function (tickValue, idx) {\n      // The original intention of `idx` is \"the index of the tick in all ticks\".\n      // But the previous implementation of category axis do not consider the\n      // `axisLabel.interval`, which cause that, for example, the `interval` is\n      // `1`, then the ticks \"name5\", \"name7\", \"name9\" are displayed, where the\n      // corresponding `idx` are `0`, `2`, `4`, but not `0`, `1`, `2`. So we keep\n      // the definition here for back compatibility.\n      if (categoryTickStart != null) {\n        idx = tickValue - categoryTickStart;\n      }\n\n      return labelFormatter(getAxisRawValue(axis, tickValue), idx);\n    };\n  } else {\n    return function (tick) {\n      return axis.scale.getLabel(tick);\n    };\n  }\n}\n\nfunction getAxisRawValue(axis, value) {\n  // In category axis with data zoom, tick is not the original\n  // index of axis.data. So tick should not be exposed to user\n  // in category axis.\n  return axis.type === 'category' ? axis.scale.getLabel(value) : value;\n}\n/**\n * @param {module:echarts/coord/Axis} axis\n * @return {module:zrender/core/BoundingRect} Be null/undefined if no labels.\n */\n\n\nfunction estimateLabelUnionRect(axis) {\n  var axisModel = axis.model;\n  var scale = axis.scale;\n\n  if (!axisModel.get('axisLabel.show') || scale.isBlank()) {\n    return;\n  }\n\n  var isCategory = axis.type === 'category';\n  var realNumberScaleTicks;\n  var tickCount;\n  var categoryScaleExtent = scale.getExtent(); // Optimize for large category data, avoid call `getTicks()`.\n\n  if (isCategory) {\n    tickCount = scale.count();\n  } else {\n    realNumberScaleTicks = scale.getTicks();\n    tickCount = realNumberScaleTicks.length;\n  }\n\n  var axisLabelModel = axis.getLabelModel();\n  var labelFormatter = makeLabelFormatter(axis);\n  var rect;\n  var step = 1; // Simple optimization for large amount of labels\n\n  if (tickCount > 40) {\n    step = Math.ceil(tickCount / 40);\n  }\n\n  for (var i = 0; i < tickCount; i += step) {\n    var tickValue = realNumberScaleTicks ? realNumberScaleTicks[i] : categoryScaleExtent[0] + i;\n    var label = labelFormatter(tickValue);\n    var unrotatedSingleRect = axisLabelModel.getTextRect(label);\n    var singleRect = rotateTextRect(unrotatedSingleRect, axisLabelModel.get('rotate') || 0);\n    rect ? rect.union(singleRect) : rect = singleRect;\n  }\n\n  return rect;\n}\n\nfunction rotateTextRect(textRect, rotate) {\n  var rotateRadians = rotate * Math.PI / 180;\n  var boundingBox = textRect.plain();\n  var beforeWidth = boundingBox.width;\n  var beforeHeight = boundingBox.height;\n  var afterWidth = beforeWidth * Math.cos(rotateRadians) + beforeHeight * Math.sin(rotateRadians);\n  var afterHeight = beforeWidth * Math.sin(rotateRadians) + beforeHeight * Math.cos(rotateRadians);\n  var rotatedRect = new BoundingRect(boundingBox.x, boundingBox.y, afterWidth, afterHeight);\n  return rotatedRect;\n}\n\nexports.getScaleExtent = getScaleExtent;\nexports.niceScaleExtent = niceScaleExtent;\nexports.createScaleByModel = createScaleByModel;\nexports.ifAxisCrossZero = ifAxisCrossZero;\nexports.makeLabelFormatter = makeLabelFormatter;\nexports.getAxisRawValue = getAxisRawValue;\nexports.estimateLabelUnionRect = estimateLabelUnionRect;","var util = require(\"./core/util\");\n\nvar vec2 = require(\"./core/vector\");\n\nvar Draggable = require(\"./mixin/Draggable\");\n\nvar Eventful = require(\"./mixin/Eventful\");\n\nvar SILENT = 'silent';\n\nfunction makeEventPacket(eveType, targetInfo, event) {\n  return {\n    type: eveType,\n    event: event,\n    // target can only be an element that is not silent.\n    target: targetInfo.target,\n    // topTarget can be a silent element.\n    topTarget: targetInfo.topTarget,\n    cancelBubble: false,\n    offsetX: event.zrX,\n    offsetY: event.zrY,\n    gestureEvent: event.gestureEvent,\n    pinchX: event.pinchX,\n    pinchY: event.pinchY,\n    pinchScale: event.pinchScale,\n    wheelDelta: event.zrDelta,\n    zrByTouch: event.zrByTouch,\n    which: event.which\n  };\n}\n\nfunction EmptyProxy() {}\n\nEmptyProxy.prototype.dispose = function () {};\n\nvar handlerNames = ['click', 'dblclick', 'mousewheel', 'mouseout', 'mouseup', 'mousedown', 'mousemove', 'contextmenu'];\n/**\n * @alias module:zrender/Handler\n * @constructor\n * @extends module:zrender/mixin/Eventful\n * @param {module:zrender/Storage} storage Storage instance.\n * @param {module:zrender/Painter} painter Painter instance.\n * @param {module:zrender/dom/HandlerProxy} proxy HandlerProxy instance.\n * @param {HTMLElement} painterRoot painter.root (not painter.getViewportRoot()).\n */\n\nvar Handler = function (storage, painter, proxy, painterRoot) {\n  Eventful.call(this);\n  this.storage = storage;\n  this.painter = painter;\n  this.painterRoot = painterRoot;\n  proxy = proxy || new EmptyProxy();\n  /**\n   * Proxy of event. can be Dom, WebGLSurface, etc.\n   */\n\n  this.proxy = null;\n  /**\n   * {target, topTarget, x, y}\n   * @private\n   * @type {Object}\n   */\n\n  this._hovered = {};\n  /**\n   * @private\n   * @type {Date}\n   */\n\n  this._lastTouchMoment;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._lastX;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._lastY;\n  Draggable.call(this);\n  this.setHandlerProxy(proxy);\n};\n\nHandler.prototype = {\n  constructor: Handler,\n  setHandlerProxy: function (proxy) {\n    if (this.proxy) {\n      this.proxy.dispose();\n    }\n\n    if (proxy) {\n      util.each(handlerNames, function (name) {\n        proxy.on && proxy.on(name, this[name], this);\n      }, this); // Attach handler\n\n      proxy.handler = this;\n    }\n\n    this.proxy = proxy;\n  },\n  mousemove: function (event) {\n    var x = event.zrX;\n    var y = event.zrY;\n    var lastHovered = this._hovered;\n    var lastHoveredTarget = lastHovered.target; // If lastHoveredTarget is removed from zr (detected by '__zr') by some API call\n    // (like 'setOption' or 'dispatchAction') in event handlers, we should find\n    // lastHovered again here. Otherwise 'mouseout' can not be triggered normally.\n    // See #6198.\n\n    if (lastHoveredTarget && !lastHoveredTarget.__zr) {\n      lastHovered = this.findHover(lastHovered.x, lastHovered.y);\n      lastHoveredTarget = lastHovered.target;\n    }\n\n    var hovered = this._hovered = this.findHover(x, y);\n    var hoveredTarget = hovered.target;\n    var proxy = this.proxy;\n    proxy.setCursor && proxy.setCursor(hoveredTarget ? hoveredTarget.cursor : 'default'); // Mouse out on previous hovered element\n\n    if (lastHoveredTarget && hoveredTarget !== lastHoveredTarget) {\n      this.dispatchToElement(lastHovered, 'mouseout', event);\n    } // Mouse moving on one element\n\n\n    this.dispatchToElement(hovered, 'mousemove', event); // Mouse over on a new element\n\n    if (hoveredTarget && hoveredTarget !== lastHoveredTarget) {\n      this.dispatchToElement(hovered, 'mouseover', event);\n    }\n  },\n  mouseout: function (event) {\n    this.dispatchToElement(this._hovered, 'mouseout', event); // There might be some doms created by upper layer application\n    // at the same level of painter.getViewportRoot() (e.g., tooltip\n    // dom created by echarts), where 'globalout' event should not\n    // be triggered when mouse enters these doms. (But 'mouseout'\n    // should be triggered at the original hovered element as usual).\n\n    var element = event.toElement || event.relatedTarget;\n    var innerDom;\n\n    do {\n      element = element && element.parentNode;\n    } while (element && element.nodeType != 9 && !(innerDom = element === this.painterRoot));\n\n    !innerDom && this.trigger('globalout', {\n      event: event\n    });\n  },\n\n  /**\n   * Resize\n   */\n  resize: function (event) {\n    this._hovered = {};\n  },\n\n  /**\n   * Dispatch event\n   * @param {string} eventName\n   * @param {event=} eventArgs\n   */\n  dispatch: function (eventName, eventArgs) {\n    var handler = this[eventName];\n    handler && handler.call(this, eventArgs);\n  },\n\n  /**\n   * Dispose\n   */\n  dispose: function () {\n    this.proxy.dispose();\n    this.storage = this.proxy = this.painter = null;\n  },\n\n  /**\n   * 设置默认的cursor style\n   * @param {string} [cursorStyle='default'] 例如 crosshair\n   */\n  setCursorStyle: function (cursorStyle) {\n    var proxy = this.proxy;\n    proxy.setCursor && proxy.setCursor(cursorStyle);\n  },\n\n  /**\n   * 事件分发代理\n   *\n   * @private\n   * @param {Object} targetInfo {target, topTarget} 目标图形元素\n   * @param {string} eventName 事件名称\n   * @param {Object} event 事件对象\n   */\n  dispatchToElement: function (targetInfo, eventName, event) {\n    targetInfo = targetInfo || {};\n    var el = targetInfo.target;\n\n    if (el && el.silent) {\n      return;\n    }\n\n    var eventHandler = 'on' + eventName;\n    var eventPacket = makeEventPacket(eventName, targetInfo, event);\n\n    while (el) {\n      el[eventHandler] && (eventPacket.cancelBubble = el[eventHandler].call(el, eventPacket));\n      el.trigger(eventName, eventPacket);\n      el = el.parent;\n\n      if (eventPacket.cancelBubble) {\n        break;\n      }\n    }\n\n    if (!eventPacket.cancelBubble) {\n      // 冒泡到顶级 zrender 对象\n      this.trigger(eventName, eventPacket); // 分发事件到用户自定义层\n      // 用户有可能在全局 click 事件中 dispose，所以需要判断下 painter 是否存在\n\n      this.painter && this.painter.eachOtherLayer(function (layer) {\n        if (typeof layer[eventHandler] == 'function') {\n          layer[eventHandler].call(layer, eventPacket);\n        }\n\n        if (layer.trigger) {\n          layer.trigger(eventName, eventPacket);\n        }\n      });\n    }\n  },\n\n  /**\n   * @private\n   * @param {number} x\n   * @param {number} y\n   * @param {module:zrender/graphic/Displayable} exclude\n   * @return {model:zrender/Element}\n   * @method\n   */\n  findHover: function (x, y, exclude) {\n    var list = this.storage.getDisplayList();\n    var out = {\n      x: x,\n      y: y\n    };\n\n    for (var i = list.length - 1; i >= 0; i--) {\n      var hoverCheckResult;\n\n      if (list[i] !== exclude // getDisplayList may include ignored item in VML mode\n      && !list[i].ignore && (hoverCheckResult = isHover(list[i], x, y))) {\n        !out.topTarget && (out.topTarget = list[i]);\n\n        if (hoverCheckResult !== SILENT) {\n          out.target = list[i];\n          break;\n        }\n      }\n    }\n\n    return out;\n  }\n}; // Common handlers\n\nutil.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n  Handler.prototype[name] = function (event) {\n    // Find hover again to avoid click event is dispatched manually. Or click is triggered without mouseover\n    var hovered = this.findHover(event.zrX, event.zrY);\n    var hoveredTarget = hovered.target;\n\n    if (name === 'mousedown') {\n      this._downEl = hoveredTarget;\n      this._downPoint = [event.zrX, event.zrY]; // In case click triggered before mouseup\n\n      this._upEl = hoveredTarget;\n    } else if (name === 'mouseup') {\n      this._upEl = hoveredTarget;\n    } else if (name === 'click') {\n      if (this._downEl !== this._upEl // Original click event is triggered on the whole canvas element,\n      // including the case that `mousedown` - `mousemove` - `mouseup`,\n      // which should be filtered, otherwise it will bring trouble to\n      // pan and zoom.\n      || !this._downPoint // Arbitrary value\n      || vec2.dist(this._downPoint, [event.zrX, event.zrY]) > 4) {\n        return;\n      }\n\n      this._downPoint = null;\n    }\n\n    this.dispatchToElement(hovered, name, event);\n  };\n});\n\nfunction isHover(displayable, x, y) {\n  if (displayable[displayable.rectHover ? 'rectContain' : 'contain'](x, y)) {\n    var el = displayable;\n    var isSilent;\n\n    while (el) {\n      // If clipped by ancestor.\n      // FIXME: If clipPath has neither stroke nor fill,\n      // el.clipPath.contain(x, y) will always return false.\n      if (el.clipPath && !el.clipPath.contain(x, y)) {\n        return false;\n      }\n\n      if (el.silent) {\n        isSilent = true;\n      }\n\n      el = el.parent;\n    }\n\n    return isSilent ? SILENT : true;\n  }\n\n  return false;\n}\n\nutil.mixin(Handler, Eventful);\nutil.mixin(Handler, Draggable);\nvar _default = Handler;\nmodule.exports = _default;","var _model = require(\"../../util/model\");\n\nvar makeInner = _model.makeInner;\nvar normalizeToArray = _model.normalizeToArray;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar inner = makeInner();\n\nfunction getNearestColorPalette(colors, requestColorNum) {\n  var paletteNum = colors.length; // TODO colors must be in order\n\n  for (var i = 0; i < paletteNum; i++) {\n    if (colors[i].length > requestColorNum) {\n      return colors[i];\n    }\n  }\n\n  return colors[paletteNum - 1];\n}\n\nvar _default = {\n  clearColorPalette: function () {\n    inner(this).colorIdx = 0;\n    inner(this).colorNameMap = {};\n  },\n\n  /**\n   * @param {string} name MUST NOT be null/undefined. Otherwise call this function\n   *                 twise with the same parameters will get different result.\n   * @param {Object} [scope=this]\n   * @param {Object} [requestColorNum]\n   * @return {string} color string.\n   */\n  getColorFromPalette: function (name, scope, requestColorNum) {\n    scope = scope || this;\n    var scopeFields = inner(scope);\n    var colorIdx = scopeFields.colorIdx || 0;\n    var colorNameMap = scopeFields.colorNameMap = scopeFields.colorNameMap || {}; // Use `hasOwnProperty` to avoid conflict with Object.prototype.\n\n    if (colorNameMap.hasOwnProperty(name)) {\n      return colorNameMap[name];\n    }\n\n    var defaultColorPalette = normalizeToArray(this.get('color', true));\n    var layeredColorPalette = this.get('colorLayer', true);\n    var colorPalette = requestColorNum == null || !layeredColorPalette ? defaultColorPalette : getNearestColorPalette(layeredColorPalette, requestColorNum); // In case can't find in layered color palette.\n\n    colorPalette = colorPalette || defaultColorPalette;\n\n    if (!colorPalette || !colorPalette.length) {\n      return;\n    }\n\n    var color = colorPalette[colorIdx];\n\n    if (name) {\n      colorNameMap[name] = color;\n    }\n\n    scopeFields.colorIdx = (colorIdx + 1) % colorPalette.length;\n    return color;\n  }\n};\nmodule.exports = _default;","var ComponentModel = require(\"../model/Component\");\n\nvar ComponentView = require(\"../view/Component\");\n\nvar _sourceHelper = require(\"../data/helper/sourceHelper\");\n\nvar detectSourceFormat = _sourceHelper.detectSourceFormat;\n\nvar _sourceType = require(\"../data/helper/sourceType\");\n\nvar SERIES_LAYOUT_BY_COLUMN = _sourceType.SERIES_LAYOUT_BY_COLUMN;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * This module is imported by echarts directly.\n *\n * Notice:\n * Always keep this file exists for backward compatibility.\n * Because before 4.1.0, dataset is an optional component,\n * some users may import this module manually.\n */\nComponentModel.extend({\n  type: 'dataset',\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    // 'row', 'column'\n    seriesLayoutBy: SERIES_LAYOUT_BY_COLUMN,\n    // null/'auto': auto detect header, see \"module:echarts/data/helper/sourceHelper\"\n    sourceHeader: null,\n    dimensions: null,\n    source: null\n  },\n  optionUpdated: function () {\n    detectSourceFormat(this);\n  }\n});\nComponentView.extend({\n  type: 'dataset'\n});","var Animator = require(\"../animation/Animator\");\n\nvar log = require(\"../core/log\");\n\nvar _util = require(\"../core/util\");\n\nvar isString = _util.isString;\nvar isFunction = _util.isFunction;\nvar isObject = _util.isObject;\nvar isArrayLike = _util.isArrayLike;\nvar indexOf = _util.indexOf;\n\n/**\n * @alias modue:zrender/mixin/Animatable\n * @constructor\n */\nvar Animatable = function () {\n  /**\n   * @type {Array.<module:zrender/animation/Animator>}\n   * @readOnly\n   */\n  this.animators = [];\n};\n\nAnimatable.prototype = {\n  constructor: Animatable,\n\n  /**\n   * 动画\n   *\n   * @param {string} path The path to fetch value from object, like 'a.b.c'.\n   * @param {boolean} [loop] Whether to loop animation.\n   * @return {module:zrender/animation/Animator}\n   * @example:\n   *     el.animate('style', false)\n   *         .when(1000, {x: 10} )\n   *         .done(function(){ // Animation done })\n   *         .start()\n   */\n  animate: function (path, loop) {\n    var target;\n    var animatingShape = false;\n    var el = this;\n    var zr = this.__zr;\n\n    if (path) {\n      var pathSplitted = path.split('.');\n      var prop = el; // If animating shape\n\n      animatingShape = pathSplitted[0] === 'shape';\n\n      for (var i = 0, l = pathSplitted.length; i < l; i++) {\n        if (!prop) {\n          continue;\n        }\n\n        prop = prop[pathSplitted[i]];\n      }\n\n      if (prop) {\n        target = prop;\n      }\n    } else {\n      target = el;\n    }\n\n    if (!target) {\n      log('Property \"' + path + '\" is not existed in element ' + el.id);\n      return;\n    }\n\n    var animators = el.animators;\n    var animator = new Animator(target, loop);\n    animator.during(function (target) {\n      el.dirty(animatingShape);\n    }).done(function () {\n      // FIXME Animator will not be removed if use `Animator#stop` to stop animation\n      animators.splice(indexOf(animators, animator), 1);\n    });\n    animators.push(animator); // If animate after added to the zrender\n\n    if (zr) {\n      zr.animation.addAnimator(animator);\n    }\n\n    return animator;\n  },\n\n  /**\n   * 停止动画\n   * @param {boolean} forwardToLast If move to last frame before stop\n   */\n  stopAnimation: function (forwardToLast) {\n    var animators = this.animators;\n    var len = animators.length;\n\n    for (var i = 0; i < len; i++) {\n      animators[i].stop(forwardToLast);\n    }\n\n    animators.length = 0;\n    return this;\n  },\n\n  /**\n   * Caution: this method will stop previous animation.\n   * So do not use this method to one element twice before\n   * animation starts, unless you know what you are doing.\n   * @param {Object} target\n   * @param {number} [time=500] Time in ms\n   * @param {string} [easing='linear']\n   * @param {number} [delay=0]\n   * @param {Function} [callback]\n   * @param {Function} [forceAnimate] Prevent stop animation and callback\n   *        immediently when target values are the same as current values.\n   *\n   * @example\n   *  // Animate position\n   *  el.animateTo({\n   *      position: [10, 10]\n   *  }, function () { // done })\n   *\n   *  // Animate shape, style and position in 100ms, delayed 100ms, with cubicOut easing\n   *  el.animateTo({\n   *      shape: {\n   *          width: 500\n   *      },\n   *      style: {\n   *          fill: 'red'\n   *      }\n   *      position: [10, 10]\n   *  }, 100, 100, 'cubicOut', function () { // done })\n   */\n  // TODO Return animation key\n  animateTo: function (target, time, delay, easing, callback, forceAnimate) {\n    // animateTo(target, time, easing, callback);\n    if (isString(delay)) {\n      callback = easing;\n      easing = delay;\n      delay = 0;\n    } // animateTo(target, time, delay, callback);\n    else if (isFunction(easing)) {\n        callback = easing;\n        easing = 'linear';\n        delay = 0;\n      } // animateTo(target, time, callback);\n      else if (isFunction(delay)) {\n          callback = delay;\n          delay = 0;\n        } // animateTo(target, callback)\n        else if (isFunction(time)) {\n            callback = time;\n            time = 500;\n          } // animateTo(target)\n          else if (!time) {\n              time = 500;\n            } // Stop all previous animations\n\n\n    this.stopAnimation();\n\n    this._animateToShallow('', this, target, time, delay); // Animators may be removed immediately after start\n    // if there is nothing to animate\n\n\n    var animators = this.animators.slice();\n    var count = animators.length;\n\n    function done() {\n      count--;\n\n      if (!count) {\n        callback && callback();\n      }\n    } // No animators. This should be checked before animators[i].start(),\n    // because 'done' may be executed immediately if no need to animate.\n\n\n    if (!count) {\n      callback && callback();\n    } // Start after all animators created\n    // Incase any animator is done immediately when all animation properties are not changed\n\n\n    for (var i = 0; i < animators.length; i++) {\n      animators[i].done(done).start(easing, forceAnimate);\n    }\n  },\n\n  /**\n   * @private\n   * @param {string} path=''\n   * @param {Object} source=this\n   * @param {Object} target\n   * @param {number} [time=500]\n   * @param {number} [delay=0]\n   *\n   * @example\n   *  // Animate position\n   *  el._animateToShallow({\n   *      position: [10, 10]\n   *  })\n   *\n   *  // Animate shape, style and position in 100ms, delayed 100ms\n   *  el._animateToShallow({\n   *      shape: {\n   *          width: 500\n   *      },\n   *      style: {\n   *          fill: 'red'\n   *      }\n   *      position: [10, 10]\n   *  }, 100, 100)\n   */\n  _animateToShallow: function (path, source, target, time, delay) {\n    var objShallow = {};\n    var propertyCount = 0;\n\n    for (var name in target) {\n      if (!target.hasOwnProperty(name)) {\n        continue;\n      }\n\n      if (source[name] != null) {\n        if (isObject(target[name]) && !isArrayLike(target[name])) {\n          this._animateToShallow(path ? path + '.' + name : name, source[name], target[name], time, delay);\n        } else {\n          objShallow[name] = target[name];\n          propertyCount++;\n        }\n      } else if (target[name] != null) {\n        // Attr directly if not has property\n        // FIXME, if some property not needed for element ?\n        if (!path) {\n          this.attr(name, target[name]);\n        } else {\n          // Shape or style\n          var props = {};\n          props[path] = {};\n          props[path][name] = target[name];\n          this.attr(props);\n        }\n      }\n    }\n\n    if (propertyCount > 0) {\n      this.animate(path, false).when(time == null ? 500 : time, objShallow).delay(delay || 0);\n    }\n\n    return this;\n  }\n};\nvar _default = Animatable;\nmodule.exports = _default;","var _model = require(\"../../util/model\");\n\nvar makeInner = _model.makeInner;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @return {string} If large mode changed, return string 'reset';\n */\nfunction _default() {\n  var inner = makeInner();\n  return function (seriesModel) {\n    var fields = inner(seriesModel);\n    var pipelineContext = seriesModel.pipelineContext;\n    var originalLarge = fields.large;\n    var originalProgressive = fields.progressiveRender;\n    var large = fields.large = pipelineContext.large;\n    var progressive = fields.progressiveRender = pipelineContext.progressiveRender;\n    return !!(originalLarge ^ large || originalProgressive ^ progressive) && 'reset';\n  };\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar each = zrUtil.each;\nvar isObject = zrUtil.isObject;\nvar isArray = zrUtil.isArray;\n/**\n * Make the name displayable. But we should\n * make sure it is not duplicated with user\n * specified name, so use '\\0';\n */\n\nvar DUMMY_COMPONENT_NAME_PREFIX = 'series\\0';\n/**\n * If value is not array, then translate it to array.\n * @param  {*} value\n * @return {Array} [value] or value\n */\n\nfunction normalizeToArray(value) {\n  return value instanceof Array ? value : value == null ? [] : [value];\n}\n/**\n * Sync default option between normal and emphasis like `position` and `show`\n * In case some one will write code like\n *     label: {\n *          show: false,\n *          position: 'outside',\n *          fontSize: 18\n *     },\n *     emphasis: {\n *          label: { show: true }\n *     }\n * @param {Object} opt\n * @param {string} key\n * @param {Array.<string>} subOpts\n */\n\n\nfunction defaultEmphasis(opt, key, subOpts) {\n  // Caution: performance sensitive.\n  if (opt) {\n    opt[key] = opt[key] || {};\n    opt.emphasis = opt.emphasis || {};\n    opt.emphasis[key] = opt.emphasis[key] || {}; // Default emphasis option from normal\n\n    for (var i = 0, len = subOpts.length; i < len; i++) {\n      var subOptName = subOpts[i];\n\n      if (!opt.emphasis[key].hasOwnProperty(subOptName) && opt[key].hasOwnProperty(subOptName)) {\n        opt.emphasis[key][subOptName] = opt[key][subOptName];\n      }\n    }\n  }\n}\n\nvar TEXT_STYLE_OPTIONS = ['fontStyle', 'fontWeight', 'fontSize', 'fontFamily', 'rich', 'tag', 'color', 'textBorderColor', 'textBorderWidth', 'width', 'height', 'lineHeight', 'align', 'verticalAlign', 'baseline', 'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY', 'textShadowColor', 'textShadowBlur', 'textShadowOffsetX', 'textShadowOffsetY', 'backgroundColor', 'borderColor', 'borderWidth', 'borderRadius', 'padding']; // modelUtil.LABEL_OPTIONS = modelUtil.TEXT_STYLE_OPTIONS.concat([\n//     'position', 'offset', 'rotate', 'origin', 'show', 'distance', 'formatter',\n//     'fontStyle', 'fontWeight', 'fontSize', 'fontFamily',\n//     // FIXME: deprecated, check and remove it.\n//     'textStyle'\n// ]);\n\n/**\n * The method do not ensure performance.\n * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n * This helper method retieves value from data.\n * @param {string|number|Date|Array|Object} dataItem\n * @return {number|string|Date|Array.<number|string|Date>}\n */\n\nfunction getDataItemValue(dataItem) {\n  return isObject(dataItem) && !isArray(dataItem) && !(dataItem instanceof Date) ? dataItem.value : dataItem;\n}\n/**\n * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n * This helper method determine if dataItem has extra option besides value\n * @param {string|number|Date|Array|Object} dataItem\n */\n\n\nfunction isDataItemOption(dataItem) {\n  return isObject(dataItem) && !(dataItem instanceof Array); // // markLine data can be array\n  // && !(dataItem[0] && isObject(dataItem[0]) && !(dataItem[0] instanceof Array));\n}\n/**\n * Mapping to exists for merge.\n *\n * @public\n * @param {Array.<Object>|Array.<module:echarts/model/Component>} exists\n * @param {Object|Array.<Object>} newCptOptions\n * @return {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n *                          index of which is the same as exists.\n */\n\n\nfunction mappingToExists(exists, newCptOptions) {\n  // Mapping by the order by original option (but not order of\n  // new option) in merge mode. Because we should ensure\n  // some specified index (like xAxisIndex) is consistent with\n  // original option, which is easy to understand, espatially in\n  // media query. And in most case, merge option is used to\n  // update partial option but not be expected to change order.\n  newCptOptions = (newCptOptions || []).slice();\n  var result = zrUtil.map(exists || [], function (obj, index) {\n    return {\n      exist: obj\n    };\n  }); // Mapping by id or name if specified.\n\n  each(newCptOptions, function (cptOption, index) {\n    if (!isObject(cptOption)) {\n      return;\n    } // id has highest priority.\n\n\n    for (var i = 0; i < result.length; i++) {\n      if (!result[i].option // Consider name: two map to one.\n      && cptOption.id != null && result[i].exist.id === cptOption.id + '') {\n        result[i].option = cptOption;\n        newCptOptions[index] = null;\n        return;\n      }\n    }\n\n    for (var i = 0; i < result.length; i++) {\n      var exist = result[i].exist;\n\n      if (!result[i].option // Consider name: two map to one.\n      // Can not match when both ids exist but different.\n      && (exist.id == null || cptOption.id == null) && cptOption.name != null && !isIdInner(cptOption) && !isIdInner(exist) && exist.name === cptOption.name + '') {\n        result[i].option = cptOption;\n        newCptOptions[index] = null;\n        return;\n      }\n    }\n  }); // Otherwise mapping by index.\n\n  each(newCptOptions, function (cptOption, index) {\n    if (!isObject(cptOption)) {\n      return;\n    }\n\n    var i = 0;\n\n    for (; i < result.length; i++) {\n      var exist = result[i].exist;\n\n      if (!result[i].option // Existing model that already has id should be able to\n      // mapped to (because after mapping performed model may\n      // be assigned with a id, whish should not affect next\n      // mapping), except those has inner id.\n      && !isIdInner(exist) // Caution:\n      // Do not overwrite id. But name can be overwritten,\n      // because axis use name as 'show label text'.\n      // 'exist' always has id and name and we dont\n      // need to check it.\n      && cptOption.id == null) {\n        result[i].option = cptOption;\n        break;\n      }\n    }\n\n    if (i >= result.length) {\n      result.push({\n        option: cptOption\n      });\n    }\n  });\n  return result;\n}\n/**\n * Make id and name for mapping result (result of mappingToExists)\n * into `keyInfo` field.\n *\n * @public\n * @param {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n *                          which order is the same as exists.\n * @return {Array.<Object>} The input.\n */\n\n\nfunction makeIdAndName(mapResult) {\n  // We use this id to hash component models and view instances\n  // in echarts. id can be specified by user, or auto generated.\n  // The id generation rule ensures new view instance are able\n  // to mapped to old instance when setOption are called in\n  // no-merge mode. So we generate model id by name and plus\n  // type in view id.\n  // name can be duplicated among components, which is convenient\n  // to specify multi components (like series) by one name.\n  // Ensure that each id is distinct.\n  var idMap = zrUtil.createHashMap();\n  each(mapResult, function (item, index) {\n    var existCpt = item.exist;\n    existCpt && idMap.set(existCpt.id, item);\n  });\n  each(mapResult, function (item, index) {\n    var opt = item.option;\n    zrUtil.assert(!opt || opt.id == null || !idMap.get(opt.id) || idMap.get(opt.id) === item, 'id duplicates: ' + (opt && opt.id));\n    opt && opt.id != null && idMap.set(opt.id, item);\n    !item.keyInfo && (item.keyInfo = {});\n  }); // Make name and id.\n\n  each(mapResult, function (item, index) {\n    var existCpt = item.exist;\n    var opt = item.option;\n    var keyInfo = item.keyInfo;\n\n    if (!isObject(opt)) {\n      return;\n    } // name can be overwitten. Consider case: axis.name = '20km'.\n    // But id generated by name will not be changed, which affect\n    // only in that case: setOption with 'not merge mode' and view\n    // instance will be recreated, which can be accepted.\n\n\n    keyInfo.name = opt.name != null ? opt.name + '' : existCpt ? existCpt.name // Avoid diffferent series has the same name,\n    // because name may be used like in color pallet.\n    : DUMMY_COMPONENT_NAME_PREFIX + index;\n\n    if (existCpt) {\n      keyInfo.id = existCpt.id;\n    } else if (opt.id != null) {\n      keyInfo.id = opt.id + '';\n    } else {\n      // Consider this situatoin:\n      //  optionA: [{name: 'a'}, {name: 'a'}, {..}]\n      //  optionB [{..}, {name: 'a'}, {name: 'a'}]\n      // Series with the same name between optionA and optionB\n      // should be mapped.\n      var idNum = 0;\n\n      do {\n        keyInfo.id = '\\0' + keyInfo.name + '\\0' + idNum++;\n      } while (idMap.get(keyInfo.id));\n    }\n\n    idMap.set(keyInfo.id, item);\n  });\n}\n\nfunction isNameSpecified(componentModel) {\n  var name = componentModel.name; // Is specified when `indexOf` get -1 or > 0.\n\n  return !!(name && name.indexOf(DUMMY_COMPONENT_NAME_PREFIX));\n}\n/**\n * @public\n * @param {Object} cptOption\n * @return {boolean}\n */\n\n\nfunction isIdInner(cptOption) {\n  return isObject(cptOption) && cptOption.id && (cptOption.id + '').indexOf('\\0_ec_\\0') === 0;\n}\n/**\n * A helper for removing duplicate items between batchA and batchB,\n * and in themselves, and categorize by series.\n *\n * @param {Array.<Object>} batchA Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n * @param {Array.<Object>} batchB Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n * @return {Array.<Array.<Object>, Array.<Object>>} result: [resultBatchA, resultBatchB]\n */\n\n\nfunction compressBatches(batchA, batchB) {\n  var mapA = {};\n  var mapB = {};\n  makeMap(batchA || [], mapA);\n  makeMap(batchB || [], mapB, mapA);\n  return [mapToArray(mapA), mapToArray(mapB)];\n\n  function makeMap(sourceBatch, map, otherMap) {\n    for (var i = 0, len = sourceBatch.length; i < len; i++) {\n      var seriesId = sourceBatch[i].seriesId;\n      var dataIndices = normalizeToArray(sourceBatch[i].dataIndex);\n      var otherDataIndices = otherMap && otherMap[seriesId];\n\n      for (var j = 0, lenj = dataIndices.length; j < lenj; j++) {\n        var dataIndex = dataIndices[j];\n\n        if (otherDataIndices && otherDataIndices[dataIndex]) {\n          otherDataIndices[dataIndex] = null;\n        } else {\n          (map[seriesId] || (map[seriesId] = {}))[dataIndex] = 1;\n        }\n      }\n    }\n  }\n\n  function mapToArray(map, isData) {\n    var result = [];\n\n    for (var i in map) {\n      if (map.hasOwnProperty(i) && map[i] != null) {\n        if (isData) {\n          result.push(+i);\n        } else {\n          var dataIndices = mapToArray(map[i], true);\n          dataIndices.length && result.push({\n            seriesId: i,\n            dataIndex: dataIndices\n          });\n        }\n      }\n    }\n\n    return result;\n  }\n}\n/**\n * @param {module:echarts/data/List} data\n * @param {Object} payload Contains dataIndex (means rawIndex) / dataIndexInside / name\n *                         each of which can be Array or primary type.\n * @return {number|Array.<number>} dataIndex If not found, return undefined/null.\n */\n\n\nfunction queryDataIndex(data, payload) {\n  if (payload.dataIndexInside != null) {\n    return payload.dataIndexInside;\n  } else if (payload.dataIndex != null) {\n    return zrUtil.isArray(payload.dataIndex) ? zrUtil.map(payload.dataIndex, function (value) {\n      return data.indexOfRawIndex(value);\n    }) : data.indexOfRawIndex(payload.dataIndex);\n  } else if (payload.name != null) {\n    return zrUtil.isArray(payload.name) ? zrUtil.map(payload.name, function (value) {\n      return data.indexOfName(value);\n    }) : data.indexOfName(payload.name);\n  }\n}\n/**\n * Enable property storage to any host object.\n * Notice: Serialization is not supported.\n *\n * For example:\n * var inner = zrUitl.makeInner();\n *\n * function some1(hostObj) {\n *      inner(hostObj).someProperty = 1212;\n *      ...\n * }\n * function some2() {\n *      var fields = inner(this);\n *      fields.someProperty1 = 1212;\n *      fields.someProperty2 = 'xx';\n *      ...\n * }\n *\n * @return {Function}\n */\n\n\nfunction makeInner() {\n  // Consider different scope by es module import.\n  var key = '__\\0ec_inner_' + innerUniqueIndex++ + '_' + Math.random().toFixed(5);\n  return function (hostObj) {\n    return hostObj[key] || (hostObj[key] = {});\n  };\n}\n\nvar innerUniqueIndex = 0;\n/**\n * @param {module:echarts/model/Global} ecModel\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex, seriesId, seriesName,\n *            geoIndex, geoId, geoName,\n *            bmapIndex, bmapId, bmapName,\n *            xAxisIndex, xAxisId, xAxisName,\n *            yAxisIndex, yAxisId, yAxisName,\n *            gridIndex, gridId, gridName,\n *            ... (can be extended)\n *        }\n *        Each properties can be number|string|Array.<number>|Array.<string>\n *        For example, a finder could be\n *        {\n *            seriesIndex: 3,\n *            geoId: ['aa', 'cc'],\n *            gridName: ['xx', 'rr']\n *        }\n *        xxxIndex can be set as 'all' (means all xxx) or 'none' (means not specify)\n *        If nothing or null/undefined specified, return nothing.\n * @param {Object} [opt]\n * @param {string} [opt.defaultMainType]\n * @param {Array.<string>} [opt.includeMainTypes]\n * @return {Object} result like:\n *        {\n *            seriesModels: [seriesModel1, seriesModel2],\n *            seriesModel: seriesModel1, // The first model\n *            geoModels: [geoModel1, geoModel2],\n *            geoModel: geoModel1, // The first model\n *            ...\n *        }\n */\n\nfunction parseFinder(ecModel, finder, opt) {\n  if (zrUtil.isString(finder)) {\n    var obj = {};\n    obj[finder + 'Index'] = 0;\n    finder = obj;\n  }\n\n  var defaultMainType = opt && opt.defaultMainType;\n\n  if (defaultMainType && !has(finder, defaultMainType + 'Index') && !has(finder, defaultMainType + 'Id') && !has(finder, defaultMainType + 'Name')) {\n    finder[defaultMainType + 'Index'] = 0;\n  }\n\n  var result = {};\n  each(finder, function (value, key) {\n    var value = finder[key]; // Exclude 'dataIndex' and other illgal keys.\n\n    if (key === 'dataIndex' || key === 'dataIndexInside') {\n      result[key] = value;\n      return;\n    }\n\n    var parsedKey = key.match(/^(\\w+)(Index|Id|Name)$/) || [];\n    var mainType = parsedKey[1];\n    var queryType = (parsedKey[2] || '').toLowerCase();\n\n    if (!mainType || !queryType || value == null || queryType === 'index' && value === 'none' || opt && opt.includeMainTypes && zrUtil.indexOf(opt.includeMainTypes, mainType) < 0) {\n      return;\n    }\n\n    var queryParam = {\n      mainType: mainType\n    };\n\n    if (queryType !== 'index' || value !== 'all') {\n      queryParam[queryType] = value;\n    }\n\n    var models = ecModel.queryComponents(queryParam);\n    result[mainType + 'Models'] = models;\n    result[mainType + 'Model'] = models[0];\n  });\n  return result;\n}\n\nfunction has(obj, prop) {\n  return obj && obj.hasOwnProperty(prop);\n}\n\nfunction setAttribute(dom, key, value) {\n  dom.setAttribute ? dom.setAttribute(key, value) : dom[key] = value;\n}\n\nfunction getAttribute(dom, key) {\n  return dom.getAttribute ? dom.getAttribute(key) : dom[key];\n}\n\nexports.normalizeToArray = normalizeToArray;\nexports.defaultEmphasis = defaultEmphasis;\nexports.TEXT_STYLE_OPTIONS = TEXT_STYLE_OPTIONS;\nexports.getDataItemValue = getDataItemValue;\nexports.isDataItemOption = isDataItemOption;\nexports.mappingToExists = mappingToExists;\nexports.makeIdAndName = makeIdAndName;\nexports.isNameSpecified = isNameSpecified;\nexports.isIdInner = isIdInner;\nexports.compressBatches = compressBatches;\nexports.queryDataIndex = queryDataIndex;\nexports.makeInner = makeInner;\nexports.parseFinder = parseFinder;\nexports.setAttribute = setAttribute;\nexports.getAttribute = getAttribute;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = {\n  toolbox: {\n    brush: {\n      title: {\n        rect: '矩形选择',\n        polygon: '圈选',\n        lineX: '横向选择',\n        lineY: '纵向选择',\n        keep: '保持选择',\n        clear: '清除选择'\n      }\n    },\n    dataView: {\n      title: '数据视图',\n      lang: ['数据视图', '关闭', '刷新']\n    },\n    dataZoom: {\n      title: {\n        zoom: '区域缩放',\n        back: '区域缩放还原'\n      }\n    },\n    magicType: {\n      title: {\n        line: '切换为折线图',\n        bar: '切换为柱状图',\n        stack: '切换为堆叠',\n        tiled: '切换为平铺'\n      }\n    },\n    restore: {\n      title: '还原'\n    },\n    saveAsImage: {\n      title: '保存为图片',\n      lang: ['右键另存为图片']\n    }\n  },\n  series: {\n    typeNames: {\n      pie: '饼图',\n      bar: '柱状图',\n      line: '折线图',\n      scatter: '散点图',\n      effectScatter: '涟漪散点图',\n      radar: '雷达图',\n      tree: '树图',\n      treemap: '矩形树图',\n      boxplot: '箱型图',\n      candlestick: 'K线图',\n      k: 'K线图',\n      heatmap: '热力图',\n      map: '地图',\n      parallel: '平行坐标图',\n      lines: '线图',\n      graph: '关系图',\n      sankey: '桑基图',\n      funnel: '漏斗图',\n      gauge: '仪表盘图',\n      pictorialBar: '象形柱图',\n      themeRiver: '主题河流图',\n      sunburst: '旭日图'\n    }\n  },\n  aria: {\n    general: {\n      withTitle: '这是一个关于“{title}”的图表。',\n      withoutTitle: '这是一个图表，'\n    },\n    series: {\n      single: {\n        prefix: '',\n        withName: '图表类型是{seriesType}，表示{seriesName}。',\n        withoutName: '图表类型是{seriesType}。'\n      },\n      multiple: {\n        prefix: '它由{seriesCount}个图表系列组成。',\n        withName: '第{seriesId}个系列是一个表示{seriesName}的{seriesType}，',\n        withoutName: '第{seriesId}个系列是一个{seriesType}，',\n        separator: {\n          middle: '；',\n          end: '。'\n        }\n      }\n    },\n    data: {\n      allData: '其数据是——',\n      partialData: '其中，前{displayCnt}项是——',\n      withName: '{name}的数据是{value}',\n      withoutName: '{value}',\n      separator: {\n        middle: '，',\n        end: ''\n      }\n    }\n  }\n};\nmodule.exports = _default;","var zrender = require(\"zrender/lib/zrender\");\n\nexports.zrender = zrender;\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nexports.matrix = matrix;\n\nvar vector = require(\"zrender/lib/core/vector\");\n\nexports.vector = vector;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar colorTool = require(\"zrender/lib/tool/color\");\n\nexports.color = colorTool;\n\nvar graphic = require(\"./util/graphic\");\n\nexports.graphic = graphic;\n\nvar numberUtil = require(\"./util/number\");\n\nexports.number = numberUtil;\n\nvar formatUtil = require(\"./util/format\");\n\nexports.format = formatUtil;\n\nvar _throttle = require(\"./util/throttle\");\n\nvar throttle = _throttle.throttle;\nexports.throttle = _throttle.throttle;\n\nvar ecHelper = require(\"./helper\");\n\nexports.helper = ecHelper;\n\nvar parseGeoJSON = require(\"./coord/geo/parseGeoJson\");\n\nexports.parseGeoJSON = parseGeoJSON;\n\nvar _List = require(\"./data/List\");\n\nexports.List = _List;\n\nvar _Model = require(\"./model/Model\");\n\nexports.Model = _Model;\n\nvar _Axis = require(\"./coord/Axis\");\n\nexports.Axis = _Axis;\n\nvar _env = require(\"zrender/lib/core/env\");\n\nexports.env = _env;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Do not mount those modules on 'src/echarts' for better tree shaking.\n */\nvar parseGeoJson = parseGeoJSON;\nvar ecUtil = {};\nzrUtil.each(['map', 'each', 'filter', 'indexOf', 'inherits', 'reduce', 'filter', 'bind', 'curry', 'isArray', 'isString', 'isObject', 'isFunction', 'extend', 'defaults', 'clone', 'merge'], function (name) {\n  ecUtil[name] = zrUtil[name];\n});\nexports.parseGeoJson = parseGeoJson;\nexports.util = ecUtil;","var SHADOW_PROPS = {\n  'shadowBlur': 1,\n  'shadowOffsetX': 1,\n  'shadowOffsetY': 1,\n  'textShadowBlur': 1,\n  'textShadowOffsetX': 1,\n  'textShadowOffsetY': 1,\n  'textBoxShadowBlur': 1,\n  'textBoxShadowOffsetX': 1,\n  'textBoxShadowOffsetY': 1\n};\n\nfunction _default(ctx, propName, value) {\n  if (SHADOW_PROPS.hasOwnProperty(propName)) {\n    return value *= ctx.dpr;\n  }\n\n  return value;\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _clazz = require(\"./clazz\");\n\nvar parseClassType = _clazz.parseClassType;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar base = 0;\n/**\n * @public\n * @param {string} type\n * @return {string}\n */\n\nfunction getUID(type) {\n  // Considering the case of crossing js context,\n  // use Math.random to make id as unique as possible.\n  return [type || '', base++, Math.random().toFixed(5)].join('_');\n}\n/**\n * @inner\n */\n\n\nfunction enableSubTypeDefaulter(entity) {\n  var subTypeDefaulters = {};\n\n  entity.registerSubTypeDefaulter = function (componentType, defaulter) {\n    componentType = parseClassType(componentType);\n    subTypeDefaulters[componentType.main] = defaulter;\n  };\n\n  entity.determineSubType = function (componentType, option) {\n    var type = option.type;\n\n    if (!type) {\n      var componentTypeMain = parseClassType(componentType).main;\n\n      if (entity.hasSubTypes(componentType) && subTypeDefaulters[componentTypeMain]) {\n        type = subTypeDefaulters[componentTypeMain](option);\n      }\n    }\n\n    return type;\n  };\n\n  return entity;\n}\n/**\n * Topological travel on Activity Network (Activity On Vertices).\n * Dependencies is defined in Model.prototype.dependencies, like ['xAxis', 'yAxis'].\n *\n * If 'xAxis' or 'yAxis' is absent in componentTypeList, just ignore it in topology.\n *\n * If there is circle dependencey, Error will be thrown.\n *\n */\n\n\nfunction enableTopologicalTravel(entity, dependencyGetter) {\n  /**\n   * @public\n   * @param {Array.<string>} targetNameList Target Component type list.\n   *                                           Can be ['aa', 'bb', 'aa.xx']\n   * @param {Array.<string>} fullNameList By which we can build dependency graph.\n   * @param {Function} callback Params: componentType, dependencies.\n   * @param {Object} context Scope of callback.\n   */\n  entity.topologicalTravel = function (targetNameList, fullNameList, callback, context) {\n    if (!targetNameList.length) {\n      return;\n    }\n\n    var result = makeDepndencyGraph(fullNameList);\n    var graph = result.graph;\n    var stack = result.noEntryList;\n    var targetNameSet = {};\n    zrUtil.each(targetNameList, function (name) {\n      targetNameSet[name] = true;\n    });\n\n    while (stack.length) {\n      var currComponentType = stack.pop();\n      var currVertex = graph[currComponentType];\n      var isInTargetNameSet = !!targetNameSet[currComponentType];\n\n      if (isInTargetNameSet) {\n        callback.call(context, currComponentType, currVertex.originalDeps.slice());\n        delete targetNameSet[currComponentType];\n      }\n\n      zrUtil.each(currVertex.successor, isInTargetNameSet ? removeEdgeAndAdd : removeEdge);\n    }\n\n    zrUtil.each(targetNameSet, function () {\n      throw new Error('Circle dependency may exists');\n    });\n\n    function removeEdge(succComponentType) {\n      graph[succComponentType].entryCount--;\n\n      if (graph[succComponentType].entryCount === 0) {\n        stack.push(succComponentType);\n      }\n    } // Consider this case: legend depends on series, and we call\n    // chart.setOption({series: [...]}), where only series is in option.\n    // If we do not have 'removeEdgeAndAdd', legendModel.mergeOption will\n    // not be called, but only sereis.mergeOption is called. Thus legend\n    // have no chance to update its local record about series (like which\n    // name of series is available in legend).\n\n\n    function removeEdgeAndAdd(succComponentType) {\n      targetNameSet[succComponentType] = true;\n      removeEdge(succComponentType);\n    }\n  };\n  /**\n   * DepndencyGraph: {Object}\n   * key: conponentType,\n   * value: {\n   *     successor: [conponentTypes...],\n   *     originalDeps: [conponentTypes...],\n   *     entryCount: {number}\n   * }\n   */\n\n\n  function makeDepndencyGraph(fullNameList) {\n    var graph = {};\n    var noEntryList = [];\n    zrUtil.each(fullNameList, function (name) {\n      var thisItem = createDependencyGraphItem(graph, name);\n      var originalDeps = thisItem.originalDeps = dependencyGetter(name);\n      var availableDeps = getAvailableDependencies(originalDeps, fullNameList);\n      thisItem.entryCount = availableDeps.length;\n\n      if (thisItem.entryCount === 0) {\n        noEntryList.push(name);\n      }\n\n      zrUtil.each(availableDeps, function (dependentName) {\n        if (zrUtil.indexOf(thisItem.predecessor, dependentName) < 0) {\n          thisItem.predecessor.push(dependentName);\n        }\n\n        var thatItem = createDependencyGraphItem(graph, dependentName);\n\n        if (zrUtil.indexOf(thatItem.successor, dependentName) < 0) {\n          thatItem.successor.push(name);\n        }\n      });\n    });\n    return {\n      graph: graph,\n      noEntryList: noEntryList\n    };\n  }\n\n  function createDependencyGraphItem(graph, name) {\n    if (!graph[name]) {\n      graph[name] = {\n        predecessor: [],\n        successor: []\n      };\n    }\n\n    return graph[name];\n  }\n\n  function getAvailableDependencies(originalDeps, fullNameList) {\n    var availableDeps = [];\n    zrUtil.each(originalDeps, function (dep) {\n      zrUtil.indexOf(fullNameList, dep) >= 0 && availableDeps.push(dep);\n    });\n    return availableDeps;\n  }\n}\n\nexports.getUID = getUID;\nexports.enableSubTypeDefaulter = enableSubTypeDefaulter;\nexports.enableTopologicalTravel = enableTopologicalTravel;","var Path = require(\"../Path\");\n\n/**\n * 圆形\n * @module zrender/shape/Circle\n */\nvar _default = Path.extend({\n  type: 'circle',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r: 0\n  },\n  buildPath: function (ctx, shape, inBundle) {\n    // Better stroking in ShapeBundle\n    // Always do it may have performence issue ( fill may be 2x more cost)\n    if (inBundle) {\n      ctx.moveTo(shape.cx + shape.r, shape.cy);\n    } // else {\n    //     if (ctx.allocate && !ctx.data.length) {\n    //         ctx.allocate(ctx.CMD_MEM_SIZE.A);\n    //     }\n    // }\n    // Better stroking in ShapeBundle\n    // ctx.moveTo(shape.cx + shape.r, shape.cy);\n\n\n    ctx.arc(shape.cx, shape.cy, shape.r, 0, Math.PI * 2, true);\n  }\n});\n\nmodule.exports = _default;","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"../model/Model\");\n\nvar DataDiffer = require(\"./DataDiffer\");\n\nvar Source = require(\"./Source\");\n\nvar _dataProvider = require(\"./helper/dataProvider\");\n\nvar defaultDimValueGetters = _dataProvider.defaultDimValueGetters;\nvar DefaultDataProvider = _dataProvider.DefaultDataProvider;\n\nvar _dimensionHelper = require(\"./helper/dimensionHelper\");\n\nvar summarizeDimensions = _dimensionHelper.summarizeDimensions;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * List for data storage\n * @module echarts/data/List\n */\nvar isObject = zrUtil.isObject;\nvar UNDEFINED = 'undefined'; // Use prefix to avoid index to be the same as otherIdList[idx],\n// which will cause weird udpate animation.\n\nvar ID_PREFIX = 'e\\0\\0';\nvar dataCtors = {\n  'float': typeof Float64Array === UNDEFINED ? Array : Float64Array,\n  'int': typeof Int32Array === UNDEFINED ? Array : Int32Array,\n  // Ordinal data type can be string or int\n  'ordinal': Array,\n  'number': Array,\n  'time': Array\n}; // Caution: MUST not use `new CtorUint32Array(arr, 0, len)`, because the Ctor of array is\n// different from the Ctor of typed array.\n\nvar CtorUint32Array = typeof Uint32Array === UNDEFINED ? Array : Uint32Array;\nvar CtorUint16Array = typeof Uint16Array === UNDEFINED ? Array : Uint16Array;\n\nfunction getIndicesCtor(list) {\n  // The possible max value in this._indicies is always this._rawCount despite of filtering.\n  return list._rawCount > 65535 ? CtorUint32Array : CtorUint16Array;\n}\n\nfunction cloneChunk(originalChunk) {\n  var Ctor = originalChunk.constructor; // Only shallow clone is enough when Array.\n\n  return Ctor === Array ? originalChunk.slice() : new Ctor(originalChunk);\n}\n\nvar TRANSFERABLE_PROPERTIES = ['hasItemOption', '_nameList', '_idList', '_invertedIndicesMap', '_rawData', '_chunkSize', '_chunkCount', '_dimValueGetter', '_count', '_rawCount', '_nameDimIdx', '_idDimIdx'];\nvar CLONE_PROPERTIES = ['_extent', '_approximateExtent', '_rawExtent'];\n\nfunction transferProperties(target, source) {\n  zrUtil.each(TRANSFERABLE_PROPERTIES.concat(source.__wrappedMethods || []), function (propName) {\n    if (source.hasOwnProperty(propName)) {\n      target[propName] = source[propName];\n    }\n  });\n  target.__wrappedMethods = source.__wrappedMethods;\n  zrUtil.each(CLONE_PROPERTIES, function (propName) {\n    target[propName] = zrUtil.clone(source[propName]);\n  });\n  target._calculationInfo = zrUtil.extend(source._calculationInfo);\n}\n/**\n * @constructor\n * @alias module:echarts/data/List\n *\n * @param {Array.<string|Object>} dimensions\n *      For example, ['someDimName', {name: 'someDimName', type: 'someDimType'}, ...].\n *      Dimensions should be concrete names like x, y, z, lng, lat, angle, radius\n *      Spetial fields: {\n *          ordinalMeta: <module:echarts/data/OrdinalMeta>\n *          createInvertedIndices: <boolean>\n *      }\n * @param {module:echarts/model/Model} hostModel\n */\n\n\nvar List = function (dimensions, hostModel) {\n  dimensions = dimensions || ['x', 'y'];\n  var dimensionInfos = {};\n  var dimensionNames = [];\n  var invertedIndicesMap = {};\n\n  for (var i = 0; i < dimensions.length; i++) {\n    // Use the original dimensions[i], where other flag props may exists.\n    var dimensionInfo = dimensions[i];\n\n    if (zrUtil.isString(dimensionInfo)) {\n      dimensionInfo = {\n        name: dimensionInfo\n      };\n    }\n\n    var dimensionName = dimensionInfo.name;\n    dimensionInfo.type = dimensionInfo.type || 'float';\n\n    if (!dimensionInfo.coordDim) {\n      dimensionInfo.coordDim = dimensionName;\n      dimensionInfo.coordDimIndex = 0;\n    }\n\n    dimensionInfo.otherDims = dimensionInfo.otherDims || {};\n    dimensionNames.push(dimensionName);\n    dimensionInfos[dimensionName] = dimensionInfo;\n    dimensionInfo.index = i;\n\n    if (dimensionInfo.createInvertedIndices) {\n      invertedIndicesMap[dimensionName] = [];\n    }\n  }\n  /**\n   * @readOnly\n   * @type {Array.<string>}\n   */\n\n\n  this.dimensions = dimensionNames;\n  /**\n   * Infomation of each data dimension, like data type.\n   * @type {Object}\n   */\n\n  this._dimensionInfos = dimensionInfos;\n  /**\n   * @type {module:echarts/model/Model}\n   */\n\n  this.hostModel = hostModel;\n  /**\n   * @type {module:echarts/model/Model}\n   */\n\n  this.dataType;\n  /**\n   * Indices stores the indices of data subset after filtered.\n   * This data subset will be used in chart.\n   * @type {Array.<number>}\n   * @readOnly\n   */\n\n  this._indices = null;\n  this._count = 0;\n  this._rawCount = 0;\n  /**\n   * Data storage\n   * @type {Object.<key, Array.<TypedArray|Array>>}\n   * @private\n   */\n\n  this._storage = {};\n  /**\n   * @type {Array.<string>}\n   */\n\n  this._nameList = [];\n  /**\n   * @type {Array.<string>}\n   */\n\n  this._idList = [];\n  /**\n   * Models of data option is stored sparse for optimizing memory cost\n   * @type {Array.<module:echarts/model/Model>}\n   * @private\n   */\n\n  this._optionModels = [];\n  /**\n   * Global visual properties after visual coding\n   * @type {Object}\n   * @private\n   */\n\n  this._visual = {};\n  /**\n   * Globel layout properties.\n   * @type {Object}\n   * @private\n   */\n\n  this._layout = {};\n  /**\n   * Item visual properties after visual coding\n   * @type {Array.<Object>}\n   * @private\n   */\n\n  this._itemVisuals = [];\n  /**\n   * Key: visual type, Value: boolean\n   * @type {Object}\n   * @readOnly\n   */\n\n  this.hasItemVisual = {};\n  /**\n   * Item layout properties after layout\n   * @type {Array.<Object>}\n   * @private\n   */\n\n  this._itemLayouts = [];\n  /**\n   * Graphic elemnents\n   * @type {Array.<module:zrender/Element>}\n   * @private\n   */\n\n  this._graphicEls = [];\n  /**\n   * Max size of each chunk.\n   * @type {number}\n   * @private\n   */\n\n  this._chunkSize = 1e5;\n  /**\n   * @type {number}\n   * @private\n   */\n\n  this._chunkCount = 0;\n  /**\n   * @type {Array.<Array|Object>}\n   * @private\n   */\n\n  this._rawData;\n  /**\n   * Raw extent will not be cloned, but only transfered.\n   * It will not be calculated util needed.\n   * key: dim,\n   * value: {end: number, extent: Array.<number>}\n   * @type {Object}\n   * @private\n   */\n\n  this._rawExtent = {};\n  /**\n   * @type {Object}\n   * @private\n   */\n\n  this._extent = {};\n  /**\n   * key: dim\n   * value: extent\n   * @type {Object}\n   * @private\n   */\n\n  this._approximateExtent = {};\n  /**\n   * Cache summary info for fast visit. See \"dimensionHelper\".\n   * @type {Object}\n   * @private\n   */\n\n  this._dimensionsSummary = summarizeDimensions(this);\n  /**\n   * @type {Object.<Array|TypedArray>}\n   * @private\n   */\n\n  this._invertedIndicesMap = invertedIndicesMap;\n  /**\n   * @type {Object}\n   * @private\n   */\n\n  this._calculationInfo = {};\n};\n\nvar listProto = List.prototype;\nlistProto.type = 'list';\n/**\n * If each data item has it's own option\n * @type {boolean}\n */\n\nlistProto.hasItemOption = true;\n/**\n * Get dimension name\n * @param {string|number} dim\n *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n * @return {string} Concrete dim name.\n */\n\nlistProto.getDimension = function (dim) {\n  if (!isNaN(dim)) {\n    dim = this.dimensions[dim] || dim;\n  }\n\n  return dim;\n};\n/**\n * Get type and calculation info of particular dimension\n * @param {string|number} dim\n *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n */\n\n\nlistProto.getDimensionInfo = function (dim) {\n  // Do not clone, because there may be categories in dimInfo.\n  return this._dimensionInfos[this.getDimension(dim)];\n};\n/**\n * @return {Array.<string>} concrete dimension name list on coord.\n */\n\n\nlistProto.getDimensionsOnCoord = function () {\n  return this._dimensionsSummary.dataDimsOnCoord.slice();\n};\n/**\n * @param {string} coordDim\n * @param {number} [idx] A coordDim may map to more than one data dim.\n *        If idx is `true`, return a array of all mapped dims.\n *        If idx is not specified, return the first dim not extra.\n * @return {string|Array.<string>} concrete data dim.\n *        If idx is number, and not found, return null/undefined.\n *        If idx is `true`, and not found, return empty array (always return array).\n */\n\n\nlistProto.mapDimension = function (coordDim, idx) {\n  var dimensionsSummary = this._dimensionsSummary;\n\n  if (idx == null) {\n    return dimensionsSummary.encodeFirstDimNotExtra[coordDim];\n  }\n\n  var dims = dimensionsSummary.encode[coordDim];\n  return idx === true // always return array if idx is `true`\n  ? (dims || []).slice() : dims && dims[idx];\n};\n/**\n * Initialize from data\n * @param {Array.<Object|number|Array>} data source or data or data provider.\n * @param {Array.<string>} [nameLIst] The name of a datum is used on data diff and\n *        defualt label/tooltip.\n *        A name can be specified in encode.itemName,\n *        or dataItem.name (only for series option data),\n *        or provided in nameList from outside.\n * @param {Function} [dimValueGetter] (dataItem, dimName, dataIndex, dimIndex) => number\n */\n\n\nlistProto.initData = function (data, nameList, dimValueGetter) {\n  var notProvider = Source.isInstance(data) || zrUtil.isArrayLike(data);\n\n  if (notProvider) {\n    data = new DefaultDataProvider(data, this.dimensions.length);\n  }\n\n  this._rawData = data; // Clear\n\n  this._storage = {};\n  this._indices = null;\n  this._nameList = nameList || [];\n  this._idList = [];\n  this._nameRepeatCount = {};\n\n  if (!dimValueGetter) {\n    this.hasItemOption = false;\n  }\n  /**\n   * @readOnly\n   */\n\n\n  this.defaultDimValueGetter = defaultDimValueGetters[this._rawData.getSource().sourceFormat]; // Default dim value getter\n\n  this._dimValueGetter = dimValueGetter = dimValueGetter || this.defaultDimValueGetter; // Reset raw extent.\n\n  this._rawExtent = {};\n\n  this._initDataFromProvider(0, data.count()); // If data has no item option.\n\n\n  if (data.pure) {\n    this.hasItemOption = false;\n  }\n};\n\nlistProto.getProvider = function () {\n  return this._rawData;\n};\n\nlistProto.appendData = function (data) {\n  var rawData = this._rawData;\n  var start = this.count();\n  rawData.appendData(data);\n  var end = rawData.count();\n\n  if (!rawData.persistent) {\n    end += start;\n  }\n\n  this._initDataFromProvider(start, end);\n};\n\nlistProto._initDataFromProvider = function (start, end) {\n  // Optimize.\n  if (start >= end) {\n    return;\n  }\n\n  var chunkSize = this._chunkSize;\n  var rawData = this._rawData;\n  var storage = this._storage;\n  var dimensions = this.dimensions;\n  var dimLen = dimensions.length;\n  var dimensionInfoMap = this._dimensionInfos;\n  var nameList = this._nameList;\n  var idList = this._idList;\n  var rawExtent = this._rawExtent;\n  var nameRepeatCount = this._nameRepeatCount = {};\n  var nameDimIdx;\n  var chunkCount = this._chunkCount;\n  var lastChunkIndex = chunkCount - 1;\n\n  for (var i = 0; i < dimLen; i++) {\n    var dim = dimensions[i];\n\n    if (!rawExtent[dim]) {\n      rawExtent[dim] = getInitialExtent();\n    }\n\n    var dimInfo = dimensionInfoMap[dim];\n\n    if (dimInfo.otherDims.itemName === 0) {\n      nameDimIdx = this._nameDimIdx = i;\n    }\n\n    if (dimInfo.otherDims.itemId === 0) {\n      this._idDimIdx = i;\n    }\n\n    var DataCtor = dataCtors[dimInfo.type];\n\n    if (!storage[dim]) {\n      storage[dim] = [];\n    }\n\n    var resizeChunkArray = storage[dim][lastChunkIndex];\n\n    if (resizeChunkArray && resizeChunkArray.length < chunkSize) {\n      var newStore = new DataCtor(Math.min(end - lastChunkIndex * chunkSize, chunkSize)); // The cost of the copy is probably inconsiderable\n      // within the initial chunkSize.\n\n      for (var j = 0; j < resizeChunkArray.length; j++) {\n        newStore[j] = resizeChunkArray[j];\n      }\n\n      storage[dim][lastChunkIndex] = newStore;\n    } // Create new chunks.\n\n\n    for (var k = chunkCount * chunkSize; k < end; k += chunkSize) {\n      storage[dim].push(new DataCtor(Math.min(end - k, chunkSize)));\n    }\n\n    this._chunkCount = storage[dim].length;\n  }\n\n  var dataItem = new Array(dimLen);\n\n  for (var idx = start; idx < end; idx++) {\n    // NOTICE: Try not to write things into dataItem\n    dataItem = rawData.getItem(idx, dataItem); // Each data item is value\n    // [1, 2]\n    // 2\n    // Bar chart, line chart which uses category axis\n    // only gives the 'y' value. 'x' value is the indices of category\n    // Use a tempValue to normalize the value to be a (x, y) value\n\n    var chunkIndex = Math.floor(idx / chunkSize);\n    var chunkOffset = idx % chunkSize; // Store the data by dimensions\n\n    for (var k = 0; k < dimLen; k++) {\n      var dim = dimensions[k];\n      var dimStorage = storage[dim][chunkIndex]; // PENDING NULL is empty or zero\n\n      var val = this._dimValueGetter(dataItem, dim, idx, k);\n\n      dimStorage[chunkOffset] = val;\n      var dimRawExtent = rawExtent[dim];\n\n      if (val < dimRawExtent[0]) {\n        dimRawExtent[0] = val;\n      }\n\n      if (val > dimRawExtent[1]) {\n        dimRawExtent[1] = val;\n      }\n    } // ??? FIXME not check by pure but sourceFormat?\n    // TODO refactor these logic.\n\n\n    if (!rawData.pure) {\n      var name = nameList[idx];\n\n      if (dataItem && name == null) {\n        // If dataItem is {name: ...}, it has highest priority.\n        // That is appropriate for many common cases.\n        if (dataItem.name != null) {\n          // There is no other place to persistent dataItem.name,\n          // so save it to nameList.\n          nameList[idx] = name = dataItem.name;\n        } else if (nameDimIdx != null) {\n          var nameDim = dimensions[nameDimIdx];\n          var nameDimChunk = storage[nameDim][chunkIndex];\n\n          if (nameDimChunk) {\n            name = nameDimChunk[chunkOffset];\n            var ordinalMeta = dimensionInfoMap[nameDim].ordinalMeta;\n\n            if (ordinalMeta && ordinalMeta.categories.length) {\n              name = ordinalMeta.categories[name];\n            }\n          }\n        }\n      } // Try using the id in option\n      // id or name is used on dynamical data, mapping old and new items.\n\n\n      var id = dataItem == null ? null : dataItem.id;\n\n      if (id == null && name != null) {\n        // Use name as id and add counter to avoid same name\n        nameRepeatCount[name] = nameRepeatCount[name] || 0;\n        id = name;\n\n        if (nameRepeatCount[name] > 0) {\n          id += '__ec__' + nameRepeatCount[name];\n        }\n\n        nameRepeatCount[name]++;\n      }\n\n      id != null && (idList[idx] = id);\n    }\n  }\n\n  if (!rawData.persistent && rawData.clean) {\n    // Clean unused data if data source is typed array.\n    rawData.clean();\n  }\n\n  this._rawCount = this._count = end; // Reset data extent\n\n  this._extent = {};\n  prepareInvertedIndex(this);\n};\n\nfunction prepareInvertedIndex(list) {\n  var invertedIndicesMap = list._invertedIndicesMap;\n  zrUtil.each(invertedIndicesMap, function (invertedIndices, dim) {\n    var dimInfo = list._dimensionInfos[dim]; // Currently, only dimensions that has ordinalMeta can create inverted indices.\n\n    var ordinalMeta = dimInfo.ordinalMeta;\n\n    if (ordinalMeta) {\n      invertedIndices = invertedIndicesMap[dim] = new CtorUint32Array(ordinalMeta.categories.length); // The default value of TypedArray is 0. To avoid miss\n      // mapping to 0, we should set it as NaN.\n\n      for (var i = 0; i < invertedIndices.length; i++) {\n        invertedIndices[i] = NaN;\n      }\n\n      for (var i = 0; i < list._count; i++) {\n        // Only support the case that all values are distinct.\n        invertedIndices[list.get(dim, i)] = i;\n      }\n    }\n  });\n}\n\nfunction getRawValueFromStore(list, dimIndex, rawIndex) {\n  var val;\n\n  if (dimIndex != null) {\n    var chunkSize = list._chunkSize;\n    var chunkIndex = Math.floor(rawIndex / chunkSize);\n    var chunkOffset = rawIndex % chunkSize;\n    var dim = list.dimensions[dimIndex];\n    var chunk = list._storage[dim][chunkIndex];\n\n    if (chunk) {\n      val = chunk[chunkOffset];\n      var ordinalMeta = list._dimensionInfos[dim].ordinalMeta;\n\n      if (ordinalMeta && ordinalMeta.categories.length) {\n        val = ordinalMeta.categories[val];\n      }\n    }\n  }\n\n  return val;\n}\n/**\n * @return {number}\n */\n\n\nlistProto.count = function () {\n  return this._count;\n};\n\nlistProto.getIndices = function () {\n  var newIndices;\n  var indices = this._indices;\n\n  if (indices) {\n    var Ctor = indices.constructor;\n    var thisCount = this._count; // `new Array(a, b, c)` is different from `new Uint32Array(a, b, c)`.\n\n    if (Ctor === Array) {\n      newIndices = new Ctor(thisCount);\n\n      for (var i = 0; i < thisCount; i++) {\n        newIndices[i] = indices[i];\n      }\n    } else {\n      newIndices = new Ctor(indices.buffer, 0, thisCount);\n    }\n  } else {\n    var Ctor = getIndicesCtor(this);\n    var newIndices = new Ctor(this.count());\n\n    for (var i = 0; i < newIndices.length; i++) {\n      newIndices[i] = i;\n    }\n  }\n\n  return newIndices;\n};\n/**\n * Get value. Return NaN if idx is out of range.\n * @param {string} dim Dim must be concrete name.\n * @param {number} idx\n * @param {boolean} stack\n * @return {number}\n */\n\n\nlistProto.get = function (dim, idx\n/*, stack */\n) {\n  if (!(idx >= 0 && idx < this._count)) {\n    return NaN;\n  }\n\n  var storage = this._storage;\n\n  if (!storage[dim]) {\n    // TODO Warn ?\n    return NaN;\n  }\n\n  idx = this.getRawIndex(idx);\n  var chunkIndex = Math.floor(idx / this._chunkSize);\n  var chunkOffset = idx % this._chunkSize;\n  var chunkStore = storage[dim][chunkIndex];\n  var value = chunkStore[chunkOffset]; // FIXME ordinal data type is not stackable\n  // if (stack) {\n  //     var dimensionInfo = this._dimensionInfos[dim];\n  //     if (dimensionInfo && dimensionInfo.stackable) {\n  //         var stackedOn = this.stackedOn;\n  //         while (stackedOn) {\n  //             // Get no stacked data of stacked on\n  //             var stackedValue = stackedOn.get(dim, idx);\n  //             // Considering positive stack, negative stack and empty data\n  //             if ((value >= 0 && stackedValue > 0)  // Positive stack\n  //                 || (value <= 0 && stackedValue < 0) // Negative stack\n  //             ) {\n  //                 value += stackedValue;\n  //             }\n  //             stackedOn = stackedOn.stackedOn;\n  //         }\n  //     }\n  // }\n\n  return value;\n};\n/**\n * @param {string} dim concrete dim\n * @param {number} rawIndex\n * @return {number|string}\n */\n\n\nlistProto.getByRawIndex = function (dim, rawIdx) {\n  if (!(rawIdx >= 0 && rawIdx < this._rawCount)) {\n    return NaN;\n  }\n\n  var dimStore = this._storage[dim];\n\n  if (!dimStore) {\n    // TODO Warn ?\n    return NaN;\n  }\n\n  var chunkIndex = Math.floor(rawIdx / this._chunkSize);\n  var chunkOffset = rawIdx % this._chunkSize;\n  var chunkStore = dimStore[chunkIndex];\n  return chunkStore[chunkOffset];\n};\n/**\n * FIXME Use `get` on chrome maybe slow(in filterSelf and selectRange).\n * Hack a much simpler _getFast\n * @private\n */\n\n\nlistProto._getFast = function (dim, rawIdx) {\n  var chunkIndex = Math.floor(rawIdx / this._chunkSize);\n  var chunkOffset = rawIdx % this._chunkSize;\n  var chunkStore = this._storage[dim][chunkIndex];\n  return chunkStore[chunkOffset];\n};\n/**\n * Get value for multi dimensions.\n * @param {Array.<string>} [dimensions] If ignored, using all dimensions.\n * @param {number} idx\n * @return {number}\n */\n\n\nlistProto.getValues = function (dimensions, idx\n/*, stack */\n) {\n  var values = [];\n\n  if (!zrUtil.isArray(dimensions)) {\n    // stack = idx;\n    idx = dimensions;\n    dimensions = this.dimensions;\n  }\n\n  for (var i = 0, len = dimensions.length; i < len; i++) {\n    values.push(this.get(dimensions[i], idx\n    /*, stack */\n    ));\n  }\n\n  return values;\n};\n/**\n * If value is NaN. Inlcuding '-'\n * Only check the coord dimensions.\n * @param {string} dim\n * @param {number} idx\n * @return {number}\n */\n\n\nlistProto.hasValue = function (idx) {\n  var dataDimsOnCoord = this._dimensionsSummary.dataDimsOnCoord;\n  var dimensionInfos = this._dimensionInfos;\n\n  for (var i = 0, len = dataDimsOnCoord.length; i < len; i++) {\n    if ( // Ordinal type can be string or number\n    dimensionInfos[dataDimsOnCoord[i]].type !== 'ordinal' // FIXME check ordinal when using index?\n    && isNaN(this.get(dataDimsOnCoord[i], idx))) {\n      return false;\n    }\n  }\n\n  return true;\n};\n/**\n * Get extent of data in one dimension\n * @param {string} dim\n * @param {boolean} stack\n */\n\n\nlistProto.getDataExtent = function (dim\n/*, stack */\n) {\n  // Make sure use concrete dim as cache name.\n  dim = this.getDimension(dim);\n  var dimData = this._storage[dim];\n  var initialExtent = getInitialExtent(); // stack = !!((stack || false) && this.getCalculationInfo(dim));\n\n  if (!dimData) {\n    return initialExtent;\n  } // Make more strict checkings to ensure hitting cache.\n\n\n  var currEnd = this.count(); // var cacheName = [dim, !!stack].join('_');\n  // var cacheName = dim;\n  // Consider the most cases when using data zoom, `getDataExtent`\n  // happened before filtering. We cache raw extent, which is not\n  // necessary to be cleared and recalculated when restore data.\n\n  var useRaw = !this._indices; // && !stack;\n\n  var dimExtent;\n\n  if (useRaw) {\n    return this._rawExtent[dim].slice();\n  }\n\n  dimExtent = this._extent[dim];\n\n  if (dimExtent) {\n    return dimExtent.slice();\n  }\n\n  dimExtent = initialExtent;\n  var min = dimExtent[0];\n  var max = dimExtent[1];\n\n  for (var i = 0; i < currEnd; i++) {\n    // var value = stack ? this.get(dim, i, true) : this._getFast(dim, this.getRawIndex(i));\n    var value = this._getFast(dim, this.getRawIndex(i));\n\n    value < min && (min = value);\n    value > max && (max = value);\n  }\n\n  dimExtent = [min, max];\n  this._extent[dim] = dimExtent;\n  return dimExtent;\n};\n/**\n * Optimize for the scenario that data is filtered by a given extent.\n * Consider that if data amount is more than hundreds of thousand,\n * extent calculation will cost more than 10ms and the cache will\n * be erased because of the filtering.\n */\n\n\nlistProto.getApproximateExtent = function (dim\n/*, stack */\n) {\n  dim = this.getDimension(dim);\n  return this._approximateExtent[dim] || this.getDataExtent(dim\n  /*, stack */\n  );\n};\n\nlistProto.setApproximateExtent = function (extent, dim\n/*, stack */\n) {\n  dim = this.getDimension(dim);\n  this._approximateExtent[dim] = extent.slice();\n};\n/**\n * @param {string} key\n * @return {*}\n */\n\n\nlistProto.getCalculationInfo = function (key) {\n  return this._calculationInfo[key];\n};\n/**\n * @param {string|Object} key or k-v object\n * @param {*} [value]\n */\n\n\nlistProto.setCalculationInfo = function (key, value) {\n  isObject(key) ? zrUtil.extend(this._calculationInfo, key) : this._calculationInfo[key] = value;\n};\n/**\n * Get sum of data in one dimension\n * @param {string} dim\n */\n\n\nlistProto.getSum = function (dim\n/*, stack */\n) {\n  var dimData = this._storage[dim];\n  var sum = 0;\n\n  if (dimData) {\n    for (var i = 0, len = this.count(); i < len; i++) {\n      var value = this.get(dim, i\n      /*, stack */\n      );\n\n      if (!isNaN(value)) {\n        sum += value;\n      }\n    }\n  }\n\n  return sum;\n};\n/**\n * Get median of data in one dimension\n * @param {string} dim\n */\n\n\nlistProto.getMedian = function (dim\n/*, stack */\n) {\n  var dimDataArray = []; // map all data of one dimension\n\n  this.each(dim, function (val, idx) {\n    if (!isNaN(val)) {\n      dimDataArray.push(val);\n    }\n  }); // TODO\n  // Use quick select?\n  // immutability & sort\n\n  var sortedDimDataArray = [].concat(dimDataArray).sort(function (a, b) {\n    return a - b;\n  });\n  var len = this.count(); // calculate median\n\n  return len === 0 ? 0 : len % 2 === 1 ? sortedDimDataArray[(len - 1) / 2] : (sortedDimDataArray[len / 2] + sortedDimDataArray[len / 2 - 1]) / 2;\n}; // /**\n//  * Retreive the index with given value\n//  * @param {string} dim Concrete dimension.\n//  * @param {number} value\n//  * @return {number}\n//  */\n// Currently incorrect: should return dataIndex but not rawIndex.\n// Do not fix it until this method is to be used somewhere.\n// FIXME Precision of float value\n// listProto.indexOf = function (dim, value) {\n//     var storage = this._storage;\n//     var dimData = storage[dim];\n//     var chunkSize = this._chunkSize;\n//     if (dimData) {\n//         for (var i = 0, len = this.count(); i < len; i++) {\n//             var chunkIndex = Math.floor(i / chunkSize);\n//             var chunkOffset = i % chunkSize;\n//             if (dimData[chunkIndex][chunkOffset] === value) {\n//                 return i;\n//             }\n//         }\n//     }\n//     return -1;\n// };\n\n/**\n * Only support the dimension which inverted index created.\n * Do not support other cases until required.\n * @param {string} concrete dim\n * @param {number|string} value\n * @return {number} rawIndex\n */\n\n\nlistProto.rawIndexOf = function (dim, value) {\n  var invertedIndices = dim && this._invertedIndicesMap[dim];\n  var rawIndex = invertedIndices[value];\n\n  if (rawIndex == null || isNaN(rawIndex)) {\n    return -1;\n  }\n\n  return rawIndex;\n};\n/**\n * Retreive the index with given name\n * @param {number} idx\n * @param {number} name\n * @return {number}\n */\n\n\nlistProto.indexOfName = function (name) {\n  for (var i = 0, len = this.count(); i < len; i++) {\n    if (this.getName(i) === name) {\n      return i;\n    }\n  }\n\n  return -1;\n};\n/**\n * Retreive the index with given raw data index\n * @param {number} idx\n * @param {number} name\n * @return {number}\n */\n\n\nlistProto.indexOfRawIndex = function (rawIndex) {\n  if (!this._indices) {\n    return rawIndex;\n  }\n\n  if (rawIndex >= this._rawCount || rawIndex < 0) {\n    return -1;\n  } // Indices are ascending\n\n\n  var indices = this._indices; // If rawIndex === dataIndex\n\n  var rawDataIndex = indices[rawIndex];\n\n  if (rawDataIndex != null && rawDataIndex < this._count && rawDataIndex === rawIndex) {\n    return rawIndex;\n  }\n\n  var left = 0;\n  var right = this._count - 1;\n\n  while (left <= right) {\n    var mid = (left + right) / 2 | 0;\n\n    if (indices[mid] < rawIndex) {\n      left = mid + 1;\n    } else if (indices[mid] > rawIndex) {\n      right = mid - 1;\n    } else {\n      return mid;\n    }\n  }\n\n  return -1;\n};\n/**\n * Retreive the index of nearest value\n * @param {string} dim\n * @param {number} value\n * @param {number} [maxDistance=Infinity]\n * @return {Array.<number>} Considere multiple points has the same value.\n */\n\n\nlistProto.indicesOfNearest = function (dim, value, maxDistance) {\n  var storage = this._storage;\n  var dimData = storage[dim];\n  var nearestIndices = [];\n\n  if (!dimData) {\n    return nearestIndices;\n  }\n\n  if (maxDistance == null) {\n    maxDistance = Infinity;\n  }\n\n  var minDist = Number.MAX_VALUE;\n  var minDiff = -1;\n\n  for (var i = 0, len = this.count(); i < len; i++) {\n    var diff = value - this.get(dim, i\n    /*, stack */\n    );\n    var dist = Math.abs(diff);\n\n    if (diff <= maxDistance && dist <= minDist) {\n      // For the case of two data are same on xAxis, which has sequence data.\n      // Show the nearest index\n      // https://github.com/ecomfe/echarts/issues/2869\n      if (dist < minDist || diff >= 0 && minDiff < 0) {\n        minDist = dist;\n        minDiff = diff;\n        nearestIndices.length = 0;\n      }\n\n      nearestIndices.push(i);\n    }\n  }\n\n  return nearestIndices;\n};\n/**\n * Get raw data index\n * @param {number} idx\n * @return {number}\n */\n\n\nlistProto.getRawIndex = getRawIndexWithoutIndices;\n\nfunction getRawIndexWithoutIndices(idx) {\n  return idx;\n}\n\nfunction getRawIndexWithIndices(idx) {\n  if (idx < this._count && idx >= 0) {\n    return this._indices[idx];\n  }\n\n  return -1;\n}\n/**\n * Get raw data item\n * @param {number} idx\n * @return {number}\n */\n\n\nlistProto.getRawDataItem = function (idx) {\n  if (!this._rawData.persistent) {\n    var val = [];\n\n    for (var i = 0; i < this.dimensions.length; i++) {\n      var dim = this.dimensions[i];\n      val.push(this.get(dim, idx));\n    }\n\n    return val;\n  } else {\n    return this._rawData.getItem(this.getRawIndex(idx));\n  }\n};\n/**\n * @param {number} idx\n * @param {boolean} [notDefaultIdx=false]\n * @return {string}\n */\n\n\nlistProto.getName = function (idx) {\n  var rawIndex = this.getRawIndex(idx);\n  return this._nameList[rawIndex] || getRawValueFromStore(this, this._nameDimIdx, rawIndex) || '';\n};\n/**\n * @param {number} idx\n * @param {boolean} [notDefaultIdx=false]\n * @return {string}\n */\n\n\nlistProto.getId = function (idx) {\n  return getId(this, this.getRawIndex(idx));\n};\n\nfunction getId(list, rawIndex) {\n  var id = list._idList[rawIndex];\n\n  if (id == null) {\n    id = getRawValueFromStore(list, list._idDimIdx, rawIndex);\n  }\n\n  if (id == null) {\n    // FIXME Check the usage in graph, should not use prefix.\n    id = ID_PREFIX + rawIndex;\n  }\n\n  return id;\n}\n\nfunction normalizeDimensions(dimensions) {\n  if (!zrUtil.isArray(dimensions)) {\n    dimensions = [dimensions];\n  }\n\n  return dimensions;\n}\n\nfunction validateDimensions(list, dims) {\n  for (var i = 0; i < dims.length; i++) {\n    // stroage may be empty when no data, so use\n    // dimensionInfos to check.\n    if (!list._dimensionInfos[dims[i]]) {\n      console.error('Unkown dimension ' + dims[i]);\n    }\n  }\n}\n/**\n * Data iteration\n * @param {string|Array.<string>}\n * @param {Function} cb\n * @param {*} [context=this]\n *\n * @example\n *  list.each('x', function (x, idx) {});\n *  list.each(['x', 'y'], function (x, y, idx) {});\n *  list.each(function (idx) {})\n */\n\n\nlistProto.each = function (dims, cb, context, contextCompat) {\n  'use strict';\n\n  if (!this._count) {\n    return;\n  }\n\n  if (typeof dims === 'function') {\n    contextCompat = context;\n    context = cb;\n    cb = dims;\n    dims = [];\n  } // contextCompat just for compat echarts3\n\n\n  context = context || contextCompat || this;\n  dims = zrUtil.map(normalizeDimensions(dims), this.getDimension, this);\n  var dimSize = dims.length;\n\n  for (var i = 0; i < this.count(); i++) {\n    // Simple optimization\n    switch (dimSize) {\n      case 0:\n        cb.call(context, i);\n        break;\n\n      case 1:\n        cb.call(context, this.get(dims[0], i), i);\n        break;\n\n      case 2:\n        cb.call(context, this.get(dims[0], i), this.get(dims[1], i), i);\n        break;\n\n      default:\n        var k = 0;\n        var value = [];\n\n        for (; k < dimSize; k++) {\n          value[k] = this.get(dims[k], i);\n        } // Index\n\n\n        value[k] = i;\n        cb.apply(context, value);\n    }\n  }\n};\n/**\n * Data filter\n * @param {string|Array.<string>}\n * @param {Function} cb\n * @param {*} [context=this]\n */\n\n\nlistProto.filterSelf = function (dimensions, cb, context, contextCompat) {\n  'use strict';\n\n  if (!this._count) {\n    return;\n  }\n\n  if (typeof dimensions === 'function') {\n    contextCompat = context;\n    context = cb;\n    cb = dimensions;\n    dimensions = [];\n  } // contextCompat just for compat echarts3\n\n\n  context = context || contextCompat || this;\n  dimensions = zrUtil.map(normalizeDimensions(dimensions), this.getDimension, this);\n  var count = this.count();\n  var Ctor = getIndicesCtor(this);\n  var newIndices = new Ctor(count);\n  var value = [];\n  var dimSize = dimensions.length;\n  var offset = 0;\n  var dim0 = dimensions[0];\n\n  for (var i = 0; i < count; i++) {\n    var keep;\n    var rawIdx = this.getRawIndex(i); // Simple optimization\n\n    if (dimSize === 0) {\n      keep = cb.call(context, i);\n    } else if (dimSize === 1) {\n      var val = this._getFast(dim0, rawIdx);\n\n      keep = cb.call(context, val, i);\n    } else {\n      for (var k = 0; k < dimSize; k++) {\n        value[k] = this._getFast(dim0, rawIdx);\n      }\n\n      value[k] = i;\n      keep = cb.apply(context, value);\n    }\n\n    if (keep) {\n      newIndices[offset++] = rawIdx;\n    }\n  } // Set indices after filtered.\n\n\n  if (offset < count) {\n    this._indices = newIndices;\n  }\n\n  this._count = offset; // Reset data extent\n\n  this._extent = {};\n  this.getRawIndex = this._indices ? getRawIndexWithIndices : getRawIndexWithoutIndices;\n  return this;\n};\n/**\n * Select data in range. (For optimization of filter)\n * (Manually inline code, support 5 million data filtering in data zoom.)\n */\n\n\nlistProto.selectRange = function (range) {\n  'use strict';\n\n  if (!this._count) {\n    return;\n  }\n\n  var dimensions = [];\n\n  for (var dim in range) {\n    if (range.hasOwnProperty(dim)) {\n      dimensions.push(dim);\n    }\n  }\n\n  var dimSize = dimensions.length;\n\n  if (!dimSize) {\n    return;\n  }\n\n  var originalCount = this.count();\n  var Ctor = getIndicesCtor(this);\n  var newIndices = new Ctor(originalCount);\n  var offset = 0;\n  var dim0 = dimensions[0];\n  var min = range[dim0][0];\n  var max = range[dim0][1];\n  var quickFinished = false;\n\n  if (!this._indices) {\n    // Extreme optimization for common case. About 2x faster in chrome.\n    var idx = 0;\n\n    if (dimSize === 1) {\n      var dimStorage = this._storage[dimensions[0]];\n\n      for (var k = 0; k < this._chunkCount; k++) {\n        var chunkStorage = dimStorage[k];\n        var len = Math.min(this._count - k * this._chunkSize, this._chunkSize);\n\n        for (var i = 0; i < len; i++) {\n          var val = chunkStorage[i]; // NaN will not be filtered. Consider the case, in line chart, empty\n          // value indicates the line should be broken. But for the case like\n          // scatter plot, a data item with empty value will not be rendered,\n          // but the axis extent may be effected if some other dim of the data\n          // item has value. Fortunately it is not a significant negative effect.\n\n          if (val >= min && val <= max || isNaN(val)) {\n            newIndices[offset++] = idx;\n          }\n\n          idx++;\n        }\n      }\n\n      quickFinished = true;\n    } else if (dimSize === 2) {\n      var dimStorage = this._storage[dim0];\n      var dimStorage2 = this._storage[dimensions[1]];\n      var min2 = range[dimensions[1]][0];\n      var max2 = range[dimensions[1]][1];\n\n      for (var k = 0; k < this._chunkCount; k++) {\n        var chunkStorage = dimStorage[k];\n        var chunkStorage2 = dimStorage2[k];\n        var len = Math.min(this._count - k * this._chunkSize, this._chunkSize);\n\n        for (var i = 0; i < len; i++) {\n          var val = chunkStorage[i];\n          var val2 = chunkStorage2[i]; // Do not filter NaN, see comment above.\n\n          if ((val >= min && val <= max || isNaN(val)) && (val2 >= min2 && val2 <= max2 || isNaN(val2))) {\n            newIndices[offset++] = idx;\n          }\n\n          idx++;\n        }\n      }\n\n      quickFinished = true;\n    }\n  }\n\n  if (!quickFinished) {\n    if (dimSize === 1) {\n      for (var i = 0; i < originalCount; i++) {\n        var rawIndex = this.getRawIndex(i);\n\n        var val = this._getFast(dim0, rawIndex); // Do not filter NaN, see comment above.\n\n\n        if (val >= min && val <= max || isNaN(val)) {\n          newIndices[offset++] = rawIndex;\n        }\n      }\n    } else {\n      for (var i = 0; i < originalCount; i++) {\n        var keep = true;\n        var rawIndex = this.getRawIndex(i);\n\n        for (var k = 0; k < dimSize; k++) {\n          var dimk = dimensions[k];\n\n          var val = this._getFast(dim, rawIndex); // Do not filter NaN, see comment above.\n\n\n          if (val < range[dimk][0] || val > range[dimk][1]) {\n            keep = false;\n          }\n        }\n\n        if (keep) {\n          newIndices[offset++] = this.getRawIndex(i);\n        }\n      }\n    }\n  } // Set indices after filtered.\n\n\n  if (offset < originalCount) {\n    this._indices = newIndices;\n  }\n\n  this._count = offset; // Reset data extent\n\n  this._extent = {};\n  this.getRawIndex = this._indices ? getRawIndexWithIndices : getRawIndexWithoutIndices;\n  return this;\n};\n/**\n * Data mapping to a plain array\n * @param {string|Array.<string>} [dimensions]\n * @param {Function} cb\n * @param {*} [context=this]\n * @return {Array}\n */\n\n\nlistProto.mapArray = function (dimensions, cb, context, contextCompat) {\n  'use strict';\n\n  if (typeof dimensions === 'function') {\n    contextCompat = context;\n    context = cb;\n    cb = dimensions;\n    dimensions = [];\n  } // contextCompat just for compat echarts3\n\n\n  context = context || contextCompat || this;\n  var result = [];\n  this.each(dimensions, function () {\n    result.push(cb && cb.apply(this, arguments));\n  }, context);\n  return result;\n}; // Data in excludeDimensions is copied, otherwise transfered.\n\n\nfunction cloneListForMapAndSample(original, excludeDimensions) {\n  var allDimensions = original.dimensions;\n  var list = new List(zrUtil.map(allDimensions, original.getDimensionInfo, original), original.hostModel); // FIXME If needs stackedOn, value may already been stacked\n\n  transferProperties(list, original);\n  var storage = list._storage = {};\n  var originalStorage = original._storage; // Init storage\n\n  for (var i = 0; i < allDimensions.length; i++) {\n    var dim = allDimensions[i];\n\n    if (originalStorage[dim]) {\n      // Notice that we do not reset invertedIndicesMap here, becuase\n      // there is no scenario of mapping or sampling ordinal dimension.\n      if (zrUtil.indexOf(excludeDimensions, dim) >= 0) {\n        storage[dim] = cloneDimStore(originalStorage[dim]);\n        list._rawExtent[dim] = getInitialExtent();\n        list._extent[dim] = null;\n      } else {\n        // Direct reference for other dimensions\n        storage[dim] = originalStorage[dim];\n      }\n    }\n  }\n\n  return list;\n}\n\nfunction cloneDimStore(originalDimStore) {\n  var newDimStore = new Array(originalDimStore.length);\n\n  for (var j = 0; j < originalDimStore.length; j++) {\n    newDimStore[j] = cloneChunk(originalDimStore[j]);\n  }\n\n  return newDimStore;\n}\n\nfunction getInitialExtent() {\n  return [Infinity, -Infinity];\n}\n/**\n * Data mapping to a new List with given dimensions\n * @param {string|Array.<string>} dimensions\n * @param {Function} cb\n * @param {*} [context=this]\n * @return {Array}\n */\n\n\nlistProto.map = function (dimensions, cb, context, contextCompat) {\n  'use strict'; // contextCompat just for compat echarts3\n\n  context = context || contextCompat || this;\n  dimensions = zrUtil.map(normalizeDimensions(dimensions), this.getDimension, this);\n  var list = cloneListForMapAndSample(this, dimensions); // Following properties are all immutable.\n  // So we can reference to the same value\n\n  list._indices = this._indices;\n  list.getRawIndex = list._indices ? getRawIndexWithIndices : getRawIndexWithoutIndices;\n  var storage = list._storage;\n  var tmpRetValue = [];\n  var chunkSize = this._chunkSize;\n  var dimSize = dimensions.length;\n  var dataCount = this.count();\n  var values = [];\n  var rawExtent = list._rawExtent;\n\n  for (var dataIndex = 0; dataIndex < dataCount; dataIndex++) {\n    for (var dimIndex = 0; dimIndex < dimSize; dimIndex++) {\n      values[dimIndex] = this.get(dimensions[dimIndex], dataIndex\n      /*, stack */\n      );\n    }\n\n    values[dimSize] = dataIndex;\n    var retValue = cb && cb.apply(context, values);\n\n    if (retValue != null) {\n      // a number or string (in oridinal dimension)?\n      if (typeof retValue !== 'object') {\n        tmpRetValue[0] = retValue;\n        retValue = tmpRetValue;\n      }\n\n      var rawIndex = this.getRawIndex(dataIndex);\n      var chunkIndex = Math.floor(rawIndex / chunkSize);\n      var chunkOffset = rawIndex % chunkSize;\n\n      for (var i = 0; i < retValue.length; i++) {\n        var dim = dimensions[i];\n        var val = retValue[i];\n        var rawExtentOnDim = rawExtent[dim];\n        var dimStore = storage[dim];\n\n        if (dimStore) {\n          dimStore[chunkIndex][chunkOffset] = val;\n        }\n\n        if (val < rawExtentOnDim[0]) {\n          rawExtentOnDim[0] = val;\n        }\n\n        if (val > rawExtentOnDim[1]) {\n          rawExtentOnDim[1] = val;\n        }\n      }\n    }\n  }\n\n  return list;\n};\n/**\n * Large data down sampling on given dimension\n * @param {string} dimension\n * @param {number} rate\n * @param {Function} sampleValue\n * @param {Function} sampleIndex Sample index for name and id\n */\n\n\nlistProto.downSample = function (dimension, rate, sampleValue, sampleIndex) {\n  var list = cloneListForMapAndSample(this, [dimension]);\n  var targetStorage = list._storage;\n  var frameValues = [];\n  var frameSize = Math.floor(1 / rate);\n  var dimStore = targetStorage[dimension];\n  var len = this.count();\n  var chunkSize = this._chunkSize;\n  var rawExtentOnDim = list._rawExtent[dimension];\n  var newIndices = new (getIndicesCtor(this))(len);\n  var offset = 0;\n\n  for (var i = 0; i < len; i += frameSize) {\n    // Last frame\n    if (frameSize > len - i) {\n      frameSize = len - i;\n      frameValues.length = frameSize;\n    }\n\n    for (var k = 0; k < frameSize; k++) {\n      var dataIdx = this.getRawIndex(i + k);\n      var originalChunkIndex = Math.floor(dataIdx / chunkSize);\n      var originalChunkOffset = dataIdx % chunkSize;\n      frameValues[k] = dimStore[originalChunkIndex][originalChunkOffset];\n    }\n\n    var value = sampleValue(frameValues);\n    var sampleFrameIdx = this.getRawIndex(Math.min(i + sampleIndex(frameValues, value) || 0, len - 1));\n    var sampleChunkIndex = Math.floor(sampleFrameIdx / chunkSize);\n    var sampleChunkOffset = sampleFrameIdx % chunkSize; // Only write value on the filtered data\n\n    dimStore[sampleChunkIndex][sampleChunkOffset] = value;\n\n    if (value < rawExtentOnDim[0]) {\n      rawExtentOnDim[0] = value;\n    }\n\n    if (value > rawExtentOnDim[1]) {\n      rawExtentOnDim[1] = value;\n    }\n\n    newIndices[offset++] = sampleFrameIdx;\n  }\n\n  list._count = offset;\n  list._indices = newIndices;\n  list.getRawIndex = getRawIndexWithIndices;\n  return list;\n};\n/**\n * Get model of one data item.\n *\n * @param {number} idx\n */\n// FIXME Model proxy ?\n\n\nlistProto.getItemModel = function (idx) {\n  var hostModel = this.hostModel;\n  return new Model(this.getRawDataItem(idx), hostModel, hostModel && hostModel.ecModel);\n};\n/**\n * Create a data differ\n * @param {module:echarts/data/List} otherList\n * @return {module:echarts/data/DataDiffer}\n */\n\n\nlistProto.diff = function (otherList) {\n  var thisList = this;\n  return new DataDiffer(otherList ? otherList.getIndices() : [], this.getIndices(), function (idx) {\n    return getId(otherList, idx);\n  }, function (idx) {\n    return getId(thisList, idx);\n  });\n};\n/**\n * Get visual property.\n * @param {string} key\n */\n\n\nlistProto.getVisual = function (key) {\n  var visual = this._visual;\n  return visual && visual[key];\n};\n/**\n * Set visual property\n * @param {string|Object} key\n * @param {*} [value]\n *\n * @example\n *  setVisual('color', color);\n *  setVisual({\n *      'color': color\n *  });\n */\n\n\nlistProto.setVisual = function (key, val) {\n  if (isObject(key)) {\n    for (var name in key) {\n      if (key.hasOwnProperty(name)) {\n        this.setVisual(name, key[name]);\n      }\n    }\n\n    return;\n  }\n\n  this._visual = this._visual || {};\n  this._visual[key] = val;\n};\n/**\n * Set layout property.\n * @param {string|Object} key\n * @param {*} [val]\n */\n\n\nlistProto.setLayout = function (key, val) {\n  if (isObject(key)) {\n    for (var name in key) {\n      if (key.hasOwnProperty(name)) {\n        this.setLayout(name, key[name]);\n      }\n    }\n\n    return;\n  }\n\n  this._layout[key] = val;\n};\n/**\n * Get layout property.\n * @param  {string} key.\n * @return {*}\n */\n\n\nlistProto.getLayout = function (key) {\n  return this._layout[key];\n};\n/**\n * Get layout of single data item\n * @param {number} idx\n */\n\n\nlistProto.getItemLayout = function (idx) {\n  return this._itemLayouts[idx];\n};\n/**\n * Set layout of single data item\n * @param {number} idx\n * @param {Object} layout\n * @param {boolean=} [merge=false]\n */\n\n\nlistProto.setItemLayout = function (idx, layout, merge) {\n  this._itemLayouts[idx] = merge ? zrUtil.extend(this._itemLayouts[idx] || {}, layout) : layout;\n};\n/**\n * Clear all layout of single data item\n */\n\n\nlistProto.clearItemLayouts = function () {\n  this._itemLayouts.length = 0;\n};\n/**\n * Get visual property of single data item\n * @param {number} idx\n * @param {string} key\n * @param {boolean} [ignoreParent=false]\n */\n\n\nlistProto.getItemVisual = function (idx, key, ignoreParent) {\n  var itemVisual = this._itemVisuals[idx];\n  var val = itemVisual && itemVisual[key];\n\n  if (val == null && !ignoreParent) {\n    // Use global visual property\n    return this.getVisual(key);\n  }\n\n  return val;\n};\n/**\n * Set visual property of single data item\n *\n * @param {number} idx\n * @param {string|Object} key\n * @param {*} [value]\n *\n * @example\n *  setItemVisual(0, 'color', color);\n *  setItemVisual(0, {\n *      'color': color\n *  });\n */\n\n\nlistProto.setItemVisual = function (idx, key, value) {\n  var itemVisual = this._itemVisuals[idx] || {};\n  var hasItemVisual = this.hasItemVisual;\n  this._itemVisuals[idx] = itemVisual;\n\n  if (isObject(key)) {\n    for (var name in key) {\n      if (key.hasOwnProperty(name)) {\n        itemVisual[name] = key[name];\n        hasItemVisual[name] = true;\n      }\n    }\n\n    return;\n  }\n\n  itemVisual[key] = value;\n  hasItemVisual[key] = true;\n};\n/**\n * Clear itemVisuals and list visual.\n */\n\n\nlistProto.clearAllVisual = function () {\n  this._visual = {};\n  this._itemVisuals = [];\n  this.hasItemVisual = {};\n};\n\nvar setItemDataAndSeriesIndex = function (child) {\n  child.seriesIndex = this.seriesIndex;\n  child.dataIndex = this.dataIndex;\n  child.dataType = this.dataType;\n};\n/**\n * Set graphic element relative to data. It can be set as null\n * @param {number} idx\n * @param {module:zrender/Element} [el]\n */\n\n\nlistProto.setItemGraphicEl = function (idx, el) {\n  var hostModel = this.hostModel;\n\n  if (el) {\n    // Add data index and series index for indexing the data by element\n    // Useful in tooltip\n    el.dataIndex = idx;\n    el.dataType = this.dataType;\n    el.seriesIndex = hostModel && hostModel.seriesIndex;\n\n    if (el.type === 'group') {\n      el.traverse(setItemDataAndSeriesIndex, el);\n    }\n  }\n\n  this._graphicEls[idx] = el;\n};\n/**\n * @param {number} idx\n * @return {module:zrender/Element}\n */\n\n\nlistProto.getItemGraphicEl = function (idx) {\n  return this._graphicEls[idx];\n};\n/**\n * @param {Function} cb\n * @param {*} context\n */\n\n\nlistProto.eachItemGraphicEl = function (cb, context) {\n  zrUtil.each(this._graphicEls, function (el, idx) {\n    if (el) {\n      cb && cb.call(context, el, idx);\n    }\n  });\n};\n/**\n * Shallow clone a new list except visual and layout properties, and graph elements.\n * New list only change the indices.\n */\n\n\nlistProto.cloneShallow = function (list) {\n  if (!list) {\n    var dimensionInfoList = zrUtil.map(this.dimensions, this.getDimensionInfo, this);\n    list = new List(dimensionInfoList, this.hostModel);\n  } // FIXME\n\n\n  list._storage = this._storage;\n  transferProperties(list, this); // Clone will not change the data extent and indices\n\n  if (this._indices) {\n    var Ctor = this._indices.constructor;\n    list._indices = new Ctor(this._indices);\n  } else {\n    list._indices = null;\n  }\n\n  list.getRawIndex = list._indices ? getRawIndexWithIndices : getRawIndexWithoutIndices;\n  return list;\n};\n/**\n * Wrap some method to add more feature\n * @param {string} methodName\n * @param {Function} injectFunction\n */\n\n\nlistProto.wrapMethod = function (methodName, injectFunction) {\n  var originalMethod = this[methodName];\n\n  if (typeof originalMethod !== 'function') {\n    return;\n  }\n\n  this.__wrappedMethods = this.__wrappedMethods || [];\n\n  this.__wrappedMethods.push(methodName);\n\n  this[methodName] = function () {\n    var res = originalMethod.apply(this, arguments);\n    return injectFunction.apply(this, [res].concat(zrUtil.slice(arguments)));\n  };\n}; // Methods that create a new list based on this list should be listed here.\n// Notice that those method should `RETURN` the new list.\n\n\nlistProto.TRANSFERABLE_METHODS = ['cloneShallow', 'downSample', 'map']; // Methods that change indices of this list should be listed here.\n\nlistProto.CHANGABLE_METHODS = ['filterSelf', 'selectRange'];\nvar _default = List;\nmodule.exports = _default;","var PathProxy = require(\"../core/PathProxy\");\n\nvar _vector = require(\"../core/vector\");\n\nvar v2ApplyTransform = _vector.applyTransform;\nvar CMD = PathProxy.CMD;\nvar points = [[], [], []];\nvar mathSqrt = Math.sqrt;\nvar mathAtan2 = Math.atan2;\n\nfunction _default(path, m) {\n  var data = path.data;\n  var cmd;\n  var nPoint;\n  var i;\n  var j;\n  var k;\n  var p;\n  var M = CMD.M;\n  var C = CMD.C;\n  var L = CMD.L;\n  var R = CMD.R;\n  var A = CMD.A;\n  var Q = CMD.Q;\n\n  for (i = 0, j = 0; i < data.length;) {\n    cmd = data[i++];\n    j = i;\n    nPoint = 0;\n\n    switch (cmd) {\n      case M:\n        nPoint = 1;\n        break;\n\n      case L:\n        nPoint = 1;\n        break;\n\n      case C:\n        nPoint = 3;\n        break;\n\n      case Q:\n        nPoint = 2;\n        break;\n\n      case A:\n        var x = m[4];\n        var y = m[5];\n        var sx = mathSqrt(m[0] * m[0] + m[1] * m[1]);\n        var sy = mathSqrt(m[2] * m[2] + m[3] * m[3]);\n        var angle = mathAtan2(-m[1] / sy, m[0] / sx); // cx\n\n        data[i] *= sx;\n        data[i++] += x; // cy\n\n        data[i] *= sy;\n        data[i++] += y; // Scale rx and ry\n        // FIXME Assume psi is 0 here\n\n        data[i++] *= sx;\n        data[i++] *= sy; // Start angle\n\n        data[i++] += angle; // end angle\n\n        data[i++] += angle; // FIXME psi\n\n        i += 2;\n        j = i;\n        break;\n\n      case R:\n        // x0, y0\n        p[0] = data[i++];\n        p[1] = data[i++];\n        v2ApplyTransform(p, p, m);\n        data[j++] = p[0];\n        data[j++] = p[1]; // x1, y1\n\n        p[0] += data[i++];\n        p[1] += data[i++];\n        v2ApplyTransform(p, p, m);\n        data[j++] = p[0];\n        data[j++] = p[1];\n    }\n\n    for (k = 0; k < nPoint; k++) {\n      var p = points[k];\n      p[0] = data[i++];\n      p[1] = data[i++];\n      v2ApplyTransform(p, p, m); // Write back\n\n      data[j++] = p[0];\n      data[j++] = p[1];\n    }\n  }\n}\n\nmodule.exports = _default;","var zrUtil = require(\"../core/util\");\n\nvar Style = require(\"./Style\");\n\nvar Element = require(\"../Element\");\n\nvar RectText = require(\"./mixin/RectText\");\n\n/**\n * 可绘制的图形基类\n * Base class of all displayable graphic objects\n * @module zrender/graphic/Displayable\n */\n\n/**\n * @alias module:zrender/graphic/Displayable\n * @extends module:zrender/Element\n * @extends module:zrender/graphic/mixin/RectText\n */\nfunction Displayable(opts) {\n  opts = opts || {};\n  Element.call(this, opts); // Extend properties\n\n  for (var name in opts) {\n    if (opts.hasOwnProperty(name) && name !== 'style') {\n      this[name] = opts[name];\n    }\n  }\n  /**\n   * @type {module:zrender/graphic/Style}\n   */\n\n\n  this.style = new Style(opts.style, this);\n  this._rect = null; // Shapes for cascade clipping.\n\n  this.__clipPaths = []; // FIXME Stateful must be mixined after style is setted\n  // Stateful.call(this, opts);\n}\n\nDisplayable.prototype = {\n  constructor: Displayable,\n  type: 'displayable',\n\n  /**\n   * Displayable 是否为脏，Painter 中会根据该标记判断是否需要是否需要重新绘制\n   * Dirty flag. From which painter will determine if this displayable object needs brush\n   * @name module:zrender/graphic/Displayable#__dirty\n   * @type {boolean}\n   */\n  __dirty: true,\n\n  /**\n   * 图形是否可见，为true时不绘制图形，但是仍能触发鼠标事件\n   * If ignore drawing of the displayable object. Mouse event will still be triggered\n   * @name module:/zrender/graphic/Displayable#invisible\n   * @type {boolean}\n   * @default false\n   */\n  invisible: false,\n\n  /**\n   * @name module:/zrender/graphic/Displayable#z\n   * @type {number}\n   * @default 0\n   */\n  z: 0,\n\n  /**\n   * @name module:/zrender/graphic/Displayable#z\n   * @type {number}\n   * @default 0\n   */\n  z2: 0,\n\n  /**\n   * z层level，决定绘画在哪层canvas中\n   * @name module:/zrender/graphic/Displayable#zlevel\n   * @type {number}\n   * @default 0\n   */\n  zlevel: 0,\n\n  /**\n   * 是否可拖拽\n   * @name module:/zrender/graphic/Displayable#draggable\n   * @type {boolean}\n   * @default false\n   */\n  draggable: false,\n\n  /**\n   * 是否正在拖拽\n   * @name module:/zrender/graphic/Displayable#draggable\n   * @type {boolean}\n   * @default false\n   */\n  dragging: false,\n\n  /**\n   * 是否相应鼠标事件\n   * @name module:/zrender/graphic/Displayable#silent\n   * @type {boolean}\n   * @default false\n   */\n  silent: false,\n\n  /**\n   * If enable culling\n   * @type {boolean}\n   * @default false\n   */\n  culling: false,\n\n  /**\n   * Mouse cursor when hovered\n   * @name module:/zrender/graphic/Displayable#cursor\n   * @type {string}\n   */\n  cursor: 'pointer',\n\n  /**\n   * If hover area is bounding rect\n   * @name module:/zrender/graphic/Displayable#rectHover\n   * @type {string}\n   */\n  rectHover: false,\n\n  /**\n   * Render the element progressively when the value >= 0,\n   * usefull for large data.\n   * @type {boolean}\n   */\n  progressive: false,\n\n  /**\n   * @type {boolean}\n   */\n  incremental: false,\n  // inplace is used with incremental\n  inplace: false,\n  beforeBrush: function (ctx) {},\n  afterBrush: function (ctx) {},\n\n  /**\n   * 图形绘制方法\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  // Interface\n  brush: function (ctx, prevEl) {},\n\n  /**\n   * 获取最小包围盒\n   * @return {module:zrender/core/BoundingRect}\n   */\n  // Interface\n  getBoundingRect: function () {},\n\n  /**\n   * 判断坐标 x, y 是否在图形上\n   * If displayable element contain coord x, y\n   * @param  {number} x\n   * @param  {number} y\n   * @return {boolean}\n   */\n  contain: function (x, y) {\n    return this.rectContain(x, y);\n  },\n\n  /**\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  traverse: function (cb, context) {\n    cb.call(context, this);\n  },\n\n  /**\n   * 判断坐标 x, y 是否在图形的包围盒上\n   * If bounding rect of element contain coord x, y\n   * @param  {number} x\n   * @param  {number} y\n   * @return {boolean}\n   */\n  rectContain: function (x, y) {\n    var coord = this.transformCoordToLocal(x, y);\n    var rect = this.getBoundingRect();\n    return rect.contain(coord[0], coord[1]);\n  },\n\n  /**\n   * 标记图形元素为脏，并且在下一帧重绘\n   * Mark displayable element dirty and refresh next frame\n   */\n  dirty: function () {\n    this.__dirty = true;\n    this._rect = null;\n    this.__zr && this.__zr.refresh();\n  },\n\n  /**\n   * 图形是否会触发事件\n   * If displayable object binded any event\n   * @return {boolean}\n   */\n  // TODO, 通过 bind 绑定的事件\n  // isSilent: function () {\n  //     return !(\n  //         this.hoverable || this.draggable\n  //         || this.onmousemove || this.onmouseover || this.onmouseout\n  //         || this.onmousedown || this.onmouseup || this.onclick\n  //         || this.ondragenter || this.ondragover || this.ondragleave\n  //         || this.ondrop\n  //     );\n  // },\n\n  /**\n   * Alias for animate('style')\n   * @param {boolean} loop\n   */\n  animateStyle: function (loop) {\n    return this.animate('style', loop);\n  },\n  attrKV: function (key, value) {\n    if (key !== 'style') {\n      Element.prototype.attrKV.call(this, key, value);\n    } else {\n      this.style.set(value);\n    }\n  },\n\n  /**\n   * @param {Object|string} key\n   * @param {*} value\n   */\n  setStyle: function (key, value) {\n    this.style.set(key, value);\n    this.dirty(false);\n    return this;\n  },\n\n  /**\n   * Use given style object\n   * @param  {Object} obj\n   */\n  useStyle: function (obj) {\n    this.style = new Style(obj, this);\n    this.dirty(false);\n    return this;\n  }\n};\nzrUtil.inherits(Displayable, Element);\nzrUtil.mixin(Displayable, RectText); // zrUtil.mixin(Displayable, Stateful);\n\nvar _default = Displayable;\nmodule.exports = _default;","var _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\nvar isString = _util.isString;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Note that it is too complicated to support 3d stack by value\n * (have to create two-dimension inverted index), so in 3d case\n * we just support that stacked by index.\n *\n * @param {module:echarts/model/Series} seriesModel\n * @param {Array.<string|Object>} dimensionInfoList The same as the input of <module:echarts/data/List>.\n *        The input dimensionInfoList will be modified.\n * @param {Object} [opt]\n * @param {boolean} [opt.stackedCoordDimension=''] Specify a coord dimension if needed.\n * @param {boolean} [opt.byIndex=false]\n * @return {Object} calculationInfo\n * {\n *     stackedDimension: string\n *     stackedByDimension: string\n *     isStackedByIndex: boolean\n *     stackedOverDimension: string\n *     stackResultDimension: string\n * }\n */\nfunction enableDataStack(seriesModel, dimensionInfoList, opt) {\n  opt = opt || {};\n  var byIndex = opt.byIndex;\n  var stackedCoordDimension = opt.stackedCoordDimension; // Compatibal: when `stack` is set as '', do not stack.\n\n  var mayStack = !!(seriesModel && seriesModel.get('stack'));\n  var stackedByDimInfo;\n  var stackedDimInfo;\n  var stackResultDimension;\n  var stackedOverDimension;\n  each(dimensionInfoList, function (dimensionInfo, index) {\n    if (isString(dimensionInfo)) {\n      dimensionInfoList[index] = dimensionInfo = {\n        name: dimensionInfo\n      };\n    }\n\n    if (mayStack && !dimensionInfo.isExtraCoord) {\n      // Find the first ordinal dimension as the stackedByDimInfo.\n      if (!byIndex && !stackedByDimInfo && dimensionInfo.ordinalMeta) {\n        stackedByDimInfo = dimensionInfo;\n      } // Find the first stackable dimension as the stackedDimInfo.\n\n\n      if (!stackedDimInfo && dimensionInfo.type !== 'ordinal' && dimensionInfo.type !== 'time' && (!stackedCoordDimension || stackedCoordDimension === dimensionInfo.coordDim)) {\n        stackedDimInfo = dimensionInfo;\n      }\n    }\n  });\n\n  if (stackedDimInfo && !byIndex && !stackedByDimInfo) {\n    // Compatible with previous design, value axis (time axis) only stack by index.\n    // It may make sense if the user provides elaborately constructed data.\n    byIndex = true;\n  } // Add stack dimension, they can be both calculated by coordinate system in `unionExtent`.\n  // That put stack logic in List is for using conveniently in echarts extensions, but it\n  // might not be a good way.\n\n\n  if (stackedDimInfo) {\n    // Use a weird name that not duplicated with other names.\n    stackResultDimension = '__\\0ecstackresult';\n    stackedOverDimension = '__\\0ecstackedover'; // Create inverted index to fast query index by value.\n\n    if (stackedByDimInfo) {\n      stackedByDimInfo.createInvertedIndices = true;\n    }\n\n    var stackedDimCoordDim = stackedDimInfo.coordDim;\n    var stackedDimType = stackedDimInfo.type;\n    var stackedDimCoordIndex = 0;\n    each(dimensionInfoList, function (dimensionInfo) {\n      if (dimensionInfo.coordDim === stackedDimCoordDim) {\n        stackedDimCoordIndex++;\n      }\n    });\n    dimensionInfoList.push({\n      name: stackResultDimension,\n      coordDim: stackedDimCoordDim,\n      coordDimIndex: stackedDimCoordIndex,\n      type: stackedDimType,\n      isExtraCoord: true,\n      isCalculationCoord: true\n    });\n    stackedDimCoordIndex++;\n    dimensionInfoList.push({\n      name: stackedOverDimension,\n      // This dimension contains stack base (generally, 0), so do not set it as\n      // `stackedDimCoordDim` to avoid extent calculation, consider log scale.\n      coordDim: stackedOverDimension,\n      coordDimIndex: stackedDimCoordIndex,\n      type: stackedDimType,\n      isExtraCoord: true,\n      isCalculationCoord: true\n    });\n  }\n\n  return {\n    stackedDimension: stackedDimInfo && stackedDimInfo.name,\n    stackedByDimension: stackedByDimInfo && stackedByDimInfo.name,\n    isStackedByIndex: byIndex,\n    stackedOverDimension: stackedOverDimension,\n    stackResultDimension: stackResultDimension\n  };\n}\n/**\n * @param {module:echarts/data/List} data\n * @param {string} stackedDim\n */\n\n\nfunction isDimensionStacked(data, stackedDim\n/*, stackedByDim*/\n) {\n  // Each single series only maps to one pair of axis. So we do not need to\n  // check stackByDim, whatever stacked by a dimension or stacked by index.\n  return !!stackedDim && stackedDim === data.getCalculationInfo('stackedDimension'); // && (\n  //     stackedByDim != null\n  //         ? stackedByDim === data.getCalculationInfo('stackedByDimension')\n  //         : data.getCalculationInfo('isStackedByIndex')\n  // );\n}\n/**\n * @param {module:echarts/data/List} data\n * @param {string} targetDim\n * @param {string} [stackedByDim] If not input this parameter, check whether\n *                                stacked by index.\n * @return {string} dimension\n */\n\n\nfunction getStackedDimension(data, targetDim) {\n  return isDimensionStacked(data, targetDim) ? data.getCalculationInfo('stackResultDimension') : targetDim;\n}\n\nexports.enableDataStack = enableDataStack;\nexports.isDimensionStacked = isDimensionStacked;\nexports.getStackedDimension = getStackedDimension;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar axisHelper = require(\"./axisHelper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = {\n  /**\n   * @param {boolean} origin\n   * @return {number|string} min value or 'dataMin' or null/undefined (means auto) or NaN\n   */\n  getMin: function (origin) {\n    var option = this.option;\n    var min = !origin && option.rangeStart != null ? option.rangeStart : option.min;\n\n    if (this.axis && min != null && min !== 'dataMin' && typeof min !== 'function' && !zrUtil.eqNaN(min)) {\n      min = this.axis.scale.parse(min);\n    }\n\n    return min;\n  },\n\n  /**\n   * @param {boolean} origin\n   * @return {number|string} max value or 'dataMax' or null/undefined (means auto) or NaN\n   */\n  getMax: function (origin) {\n    var option = this.option;\n    var max = !origin && option.rangeEnd != null ? option.rangeEnd : option.max;\n\n    if (this.axis && max != null && max !== 'dataMax' && typeof max !== 'function' && !zrUtil.eqNaN(max)) {\n      max = this.axis.scale.parse(max);\n    }\n\n    return max;\n  },\n\n  /**\n   * @return {boolean}\n   */\n  getNeedCrossZero: function () {\n    var option = this.option;\n    return option.rangeStart != null || option.rangeEnd != null ? false : !option.scale;\n  },\n\n  /**\n   * Should be implemented by each axis model if necessary.\n   * @return {module:echarts/model/Component} coordinate system model\n   */\n  getCoordSysModel: zrUtil.noop,\n\n  /**\n   * @param {number} rangeStart Can only be finite number or null/undefined or NaN.\n   * @param {number} rangeEnd Can only be finite number or null/undefined or NaN.\n   */\n  setRange: function (rangeStart, rangeEnd) {\n    this.option.rangeStart = rangeStart;\n    this.option.rangeEnd = rangeEnd;\n  },\n\n  /**\n   * Reset range\n   */\n  resetRange: function () {\n    // rangeStart and rangeEnd is readonly.\n    this.option.rangeStart = this.option.rangeEnd = null;\n  }\n};\nmodule.exports = _default;","var clazzUtil = require(\"../util/clazz\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * // Scale class management\n * @module echarts/scale/Scale\n */\n\n/**\n * @param {Object} [setting]\n */\nfunction Scale(setting) {\n  this._setting = setting || {};\n  /**\n   * Extent\n   * @type {Array.<number>}\n   * @protected\n   */\n\n  this._extent = [Infinity, -Infinity];\n  /**\n   * Step is calculated in adjustExtent\n   * @type {Array.<number>}\n   * @protected\n   */\n\n  this._interval = 0;\n  this.init && this.init.apply(this, arguments);\n}\n/**\n * Parse input val to valid inner number.\n * @param {*} val\n * @return {number}\n */\n\n\nScale.prototype.parse = function (val) {\n  // Notice: This would be a trap here, If the implementation\n  // of this method depends on extent, and this method is used\n  // before extent set (like in dataZoom), it would be wrong.\n  // Nevertheless, parse does not depend on extent generally.\n  return val;\n};\n\nScale.prototype.getSetting = function (name) {\n  return this._setting[name];\n};\n\nScale.prototype.contain = function (val) {\n  var extent = this._extent;\n  return val >= extent[0] && val <= extent[1];\n};\n/**\n * Normalize value to linear [0, 1], return 0.5 if extent span is 0\n * @param {number} val\n * @return {number}\n */\n\n\nScale.prototype.normalize = function (val) {\n  var extent = this._extent;\n\n  if (extent[1] === extent[0]) {\n    return 0.5;\n  }\n\n  return (val - extent[0]) / (extent[1] - extent[0]);\n};\n/**\n * Scale normalized value\n * @param {number} val\n * @return {number}\n */\n\n\nScale.prototype.scale = function (val) {\n  var extent = this._extent;\n  return val * (extent[1] - extent[0]) + extent[0];\n};\n/**\n * Set extent from data\n * @param {Array.<number>} other\n */\n\n\nScale.prototype.unionExtent = function (other) {\n  var extent = this._extent;\n  other[0] < extent[0] && (extent[0] = other[0]);\n  other[1] > extent[1] && (extent[1] = other[1]); // not setExtent because in log axis it may transformed to power\n  // this.setExtent(extent[0], extent[1]);\n};\n/**\n * Set extent from data\n * @param {module:echarts/data/List} data\n * @param {string} dim\n */\n\n\nScale.prototype.unionExtentFromData = function (data, dim) {\n  this.unionExtent(data.getApproximateExtent(dim));\n};\n/**\n * Get extent\n * @return {Array.<number>}\n */\n\n\nScale.prototype.getExtent = function () {\n  return this._extent.slice();\n};\n/**\n * Set extent\n * @param {number} start\n * @param {number} end\n */\n\n\nScale.prototype.setExtent = function (start, end) {\n  var thisExtent = this._extent;\n\n  if (!isNaN(start)) {\n    thisExtent[0] = start;\n  }\n\n  if (!isNaN(end)) {\n    thisExtent[1] = end;\n  }\n};\n/**\n * When axis extent depends on data and no data exists,\n * axis ticks should not be drawn, which is named 'blank'.\n */\n\n\nScale.prototype.isBlank = function () {\n  return this._isBlank;\n},\n/**\n * When axis extent depends on data and no data exists,\n * axis ticks should not be drawn, which is named 'blank'.\n */\nScale.prototype.setBlank = function (isBlank) {\n  this._isBlank = isBlank;\n};\n/**\n * @abstract\n * @param {*} tick\n * @return {string} label of the tick.\n */\n\nScale.prototype.getLabel = null;\nclazzUtil.enableClassExtend(Scale);\nclazzUtil.enableClassManagement(Scale, {\n  registerWhenExtend: true\n});\nvar _default = Scale;\nmodule.exports = _default;","var fixShadow = require(\"./helper/fixShadow\");\n\nvar STYLE_COMMON_PROPS = [['shadowBlur', 0], ['shadowOffsetX', 0], ['shadowOffsetY', 0], ['shadowColor', '#000'], ['lineCap', 'butt'], ['lineJoin', 'miter'], ['miterLimit', 10]]; // var SHADOW_PROPS = STYLE_COMMON_PROPS.slice(0, 4);\n// var LINE_PROPS = STYLE_COMMON_PROPS.slice(4);\n\nvar Style = function (opts, host) {\n  this.extendFrom(opts, false);\n  this.host = host;\n};\n\nfunction createLinearGradient(ctx, obj, rect) {\n  var x = obj.x == null ? 0 : obj.x;\n  var x2 = obj.x2 == null ? 1 : obj.x2;\n  var y = obj.y == null ? 0 : obj.y;\n  var y2 = obj.y2 == null ? 0 : obj.y2;\n\n  if (!obj.global) {\n    x = x * rect.width + rect.x;\n    x2 = x2 * rect.width + rect.x;\n    y = y * rect.height + rect.y;\n    y2 = y2 * rect.height + rect.y;\n  } // Fix NaN when rect is Infinity\n\n\n  x = isNaN(x) ? 0 : x;\n  x2 = isNaN(x2) ? 1 : x2;\n  y = isNaN(y) ? 0 : y;\n  y2 = isNaN(y2) ? 0 : y2;\n  var canvasGradient = ctx.createLinearGradient(x, y, x2, y2);\n  return canvasGradient;\n}\n\nfunction createRadialGradient(ctx, obj, rect) {\n  var width = rect.width;\n  var height = rect.height;\n  var min = Math.min(width, height);\n  var x = obj.x == null ? 0.5 : obj.x;\n  var y = obj.y == null ? 0.5 : obj.y;\n  var r = obj.r == null ? 0.5 : obj.r;\n\n  if (!obj.global) {\n    x = x * width + rect.x;\n    y = y * height + rect.y;\n    r = r * min;\n  }\n\n  var canvasGradient = ctx.createRadialGradient(x, y, 0, x, y, r);\n  return canvasGradient;\n}\n\nStyle.prototype = {\n  constructor: Style,\n\n  /**\n   * @type {module:zrender/graphic/Displayable}\n   */\n  host: null,\n\n  /**\n   * @type {string}\n   */\n  fill: '#000',\n\n  /**\n   * @type {string}\n   */\n  stroke: null,\n\n  /**\n   * @type {number}\n   */\n  opacity: 1,\n\n  /**\n   * @type {Array.<number>}\n   */\n  lineDash: null,\n\n  /**\n   * @type {number}\n   */\n  lineDashOffset: 0,\n\n  /**\n   * @type {number}\n   */\n  shadowBlur: 0,\n\n  /**\n   * @type {number}\n   */\n  shadowOffsetX: 0,\n\n  /**\n   * @type {number}\n   */\n  shadowOffsetY: 0,\n\n  /**\n   * @type {number}\n   */\n  lineWidth: 1,\n\n  /**\n   * If stroke ignore scale\n   * @type {Boolean}\n   */\n  strokeNoScale: false,\n  // Bounding rect text configuration\n  // Not affected by element transform\n\n  /**\n   * @type {string}\n   */\n  text: null,\n\n  /**\n   * If `fontSize` or `fontFamily` exists, `font` will be reset by\n   * `fontSize`, `fontStyle`, `fontWeight`, `fontFamily`.\n   * So do not visit it directly in upper application (like echarts),\n   * but use `contain/text#makeFont` instead.\n   * @type {string}\n   */\n  font: null,\n\n  /**\n   * The same as font. Use font please.\n   * @deprecated\n   * @type {string}\n   */\n  textFont: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * @type {string}\n   */\n  fontStyle: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * @type {string}\n   */\n  fontWeight: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * Should be 12 but not '12px'.\n   * @type {number}\n   */\n  fontSize: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * @type {string}\n   */\n  fontFamily: null,\n\n  /**\n   * Reserved for special functinality, like 'hr'.\n   * @type {string}\n   */\n  textTag: null,\n\n  /**\n   * @type {string}\n   */\n  textFill: '#000',\n\n  /**\n   * @type {string}\n   */\n  textStroke: null,\n\n  /**\n   * @type {number}\n   */\n  textWidth: null,\n\n  /**\n   * Only for textBackground.\n   * @type {number}\n   */\n  textHeight: null,\n\n  /**\n   * textStroke may be set as some color as a default\n   * value in upper applicaion, where the default value\n   * of textStrokeWidth should be 0 to make sure that\n   * user can choose to do not use text stroke.\n   * @type {number}\n   */\n  textStrokeWidth: 0,\n\n  /**\n   * @type {number}\n   */\n  textLineHeight: null,\n\n  /**\n   * 'inside', 'left', 'right', 'top', 'bottom'\n   * [x, y]\n   * Based on x, y of rect.\n   * @type {string|Array.<number>}\n   * @default 'inside'\n   */\n  textPosition: 'inside',\n\n  /**\n   * If not specified, use the boundingRect of a `displayable`.\n   * @type {Object}\n   */\n  textRect: null,\n\n  /**\n   * [x, y]\n   * @type {Array.<number>}\n   */\n  textOffset: null,\n\n  /**\n   * @type {string}\n   */\n  textAlign: null,\n\n  /**\n   * @type {string}\n   */\n  textVerticalAlign: null,\n\n  /**\n   * @type {number}\n   */\n  textDistance: 5,\n\n  /**\n   * @type {string}\n   */\n  textShadowColor: 'transparent',\n\n  /**\n   * @type {number}\n   */\n  textShadowBlur: 0,\n\n  /**\n   * @type {number}\n   */\n  textShadowOffsetX: 0,\n\n  /**\n   * @type {number}\n   */\n  textShadowOffsetY: 0,\n\n  /**\n   * @type {string}\n   */\n  textBoxShadowColor: 'transparent',\n\n  /**\n   * @type {number}\n   */\n  textBoxShadowBlur: 0,\n\n  /**\n   * @type {number}\n   */\n  textBoxShadowOffsetX: 0,\n\n  /**\n   * @type {number}\n   */\n  textBoxShadowOffsetY: 0,\n\n  /**\n   * Whether transform text.\n   * Only useful in Path and Image element\n   * @type {boolean}\n   */\n  transformText: false,\n\n  /**\n   * Text rotate around position of Path or Image\n   * Only useful in Path and Image element and transformText is false.\n   */\n  textRotation: 0,\n\n  /**\n   * Text origin of text rotation, like [10, 40].\n   * Based on x, y of rect.\n   * Useful in label rotation of circular symbol.\n   * By default, this origin is textPosition.\n   * Can be 'center'.\n   * @type {string|Array.<number>}\n   */\n  textOrigin: null,\n\n  /**\n   * @type {string}\n   */\n  textBackgroundColor: null,\n\n  /**\n   * @type {string}\n   */\n  textBorderColor: null,\n\n  /**\n   * @type {number}\n   */\n  textBorderWidth: 0,\n\n  /**\n   * @type {number}\n   */\n  textBorderRadius: 0,\n\n  /**\n   * Can be `2` or `[2, 4]` or `[2, 3, 4, 5]`\n   * @type {number|Array.<number>}\n   */\n  textPadding: null,\n\n  /**\n   * Text styles for rich text.\n   * @type {Object}\n   */\n  rich: null,\n\n  /**\n   * {outerWidth, outerHeight, ellipsis, placeholder}\n   * @type {Object}\n   */\n  truncate: null,\n\n  /**\n   * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n   * @type {string}\n   */\n  blend: null,\n\n  /**\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  bind: function (ctx, el, prevEl) {\n    var style = this;\n    var prevStyle = prevEl && prevEl.style;\n    var firstDraw = !prevStyle;\n\n    for (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n      var prop = STYLE_COMMON_PROPS[i];\n      var styleName = prop[0];\n\n      if (firstDraw || style[styleName] !== prevStyle[styleName]) {\n        // FIXME Invalid property value will cause style leak from previous element.\n        ctx[styleName] = fixShadow(ctx, styleName, style[styleName] || prop[1]);\n      }\n    }\n\n    if (firstDraw || style.fill !== prevStyle.fill) {\n      ctx.fillStyle = style.fill;\n    }\n\n    if (firstDraw || style.stroke !== prevStyle.stroke) {\n      ctx.strokeStyle = style.stroke;\n    }\n\n    if (firstDraw || style.opacity !== prevStyle.opacity) {\n      ctx.globalAlpha = style.opacity == null ? 1 : style.opacity;\n    }\n\n    if (firstDraw || style.blend !== prevStyle.blend) {\n      ctx.globalCompositeOperation = style.blend || 'source-over';\n    }\n\n    if (this.hasStroke()) {\n      var lineWidth = style.lineWidth;\n      ctx.lineWidth = lineWidth / (this.strokeNoScale && el && el.getLineScale ? el.getLineScale() : 1);\n    }\n  },\n  hasFill: function () {\n    var fill = this.fill;\n    return fill != null && fill !== 'none';\n  },\n  hasStroke: function () {\n    var stroke = this.stroke;\n    return stroke != null && stroke !== 'none' && this.lineWidth > 0;\n  },\n\n  /**\n   * Extend from other style\n   * @param {zrender/graphic/Style} otherStyle\n   * @param {boolean} overwrite true: overwrirte any way.\n   *                            false: overwrite only when !target.hasOwnProperty\n   *                            others: overwrite when property is not null/undefined.\n   */\n  extendFrom: function (otherStyle, overwrite) {\n    if (otherStyle) {\n      for (var name in otherStyle) {\n        if (otherStyle.hasOwnProperty(name) && (overwrite === true || (overwrite === false ? !this.hasOwnProperty(name) : otherStyle[name] != null))) {\n          this[name] = otherStyle[name];\n        }\n      }\n    }\n  },\n\n  /**\n   * Batch setting style with a given object\n   * @param {Object|string} obj\n   * @param {*} [obj]\n   */\n  set: function (obj, value) {\n    if (typeof obj === 'string') {\n      this[obj] = value;\n    } else {\n      this.extendFrom(obj, true);\n    }\n  },\n\n  /**\n   * Clone\n   * @return {zrender/graphic/Style} [description]\n   */\n  clone: function () {\n    var newStyle = new this.constructor();\n    newStyle.extendFrom(this, true);\n    return newStyle;\n  },\n  getGradient: function (ctx, obj, rect) {\n    var method = obj.type === 'radial' ? createRadialGradient : createLinearGradient;\n    var canvasGradient = method(ctx, obj, rect);\n    var colorStops = obj.colorStops;\n\n    for (var i = 0; i < colorStops.length; i++) {\n      canvasGradient.addColorStop(colorStops[i].offset, colorStops[i].color);\n    }\n\n    return canvasGradient;\n  }\n};\nvar styleProto = Style.prototype;\n\nfor (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n  var prop = STYLE_COMMON_PROPS[i];\n\n  if (!(prop[0] in styleProto)) {\n    styleProto[prop[0]] = prop[1];\n  }\n} // Provide for others\n\n\nStyle.getGradient = styleProto.getGradient;\nvar _default = Style;\nmodule.exports = _default;","var _config = require(\"./config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrender = require(\"zrender/lib/zrender\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar colorTool = require(\"zrender/lib/tool/color\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar timsort = require(\"zrender/lib/core/timsort\");\n\nvar Eventful = require(\"zrender/lib/mixin/Eventful\");\n\nvar GlobalModel = require(\"./model/Global\");\n\nvar ExtensionAPI = require(\"./ExtensionAPI\");\n\nvar CoordinateSystemManager = require(\"./CoordinateSystem\");\n\nvar OptionManager = require(\"./model/OptionManager\");\n\nvar backwardCompat = require(\"./preprocessor/backwardCompat\");\n\nvar dataStack = require(\"./processor/dataStack\");\n\nvar ComponentModel = require(\"./model/Component\");\n\nvar SeriesModel = require(\"./model/Series\");\n\nvar ComponentView = require(\"./view/Component\");\n\nvar ChartView = require(\"./view/Chart\");\n\nvar graphic = require(\"./util/graphic\");\n\nvar modelUtil = require(\"./util/model\");\n\nvar _throttle = require(\"./util/throttle\");\n\nvar throttle = _throttle.throttle;\n\nvar seriesColor = require(\"./visual/seriesColor\");\n\nvar aria = require(\"./visual/aria\");\n\nvar loadingDefault = require(\"./loading/default\");\n\nvar Scheduler = require(\"./stream/Scheduler\");\n\nvar lightTheme = require(\"./theme/light\");\n\nvar darkTheme = require(\"./theme/dark\");\n\nrequire(\"./component/dataset\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar assert = zrUtil.assert;\nvar each = zrUtil.each;\nvar isFunction = zrUtil.isFunction;\nvar isObject = zrUtil.isObject;\nvar parseClassType = ComponentModel.parseClassType;\nvar version = '4.1.0';\nvar dependencies = {\n  zrender: '4.0.4'\n};\nvar TEST_FRAME_REMAIN_TIME = 1;\nvar PRIORITY_PROCESSOR_FILTER = 1000;\nvar PRIORITY_PROCESSOR_STATISTIC = 5000;\nvar PRIORITY_VISUAL_LAYOUT = 1000;\nvar PRIORITY_VISUAL_GLOBAL = 2000;\nvar PRIORITY_VISUAL_CHART = 3000;\nvar PRIORITY_VISUAL_COMPONENT = 4000; // FIXME\n// necessary?\n\nvar PRIORITY_VISUAL_BRUSH = 5000;\nvar PRIORITY = {\n  PROCESSOR: {\n    FILTER: PRIORITY_PROCESSOR_FILTER,\n    STATISTIC: PRIORITY_PROCESSOR_STATISTIC\n  },\n  VISUAL: {\n    LAYOUT: PRIORITY_VISUAL_LAYOUT,\n    GLOBAL: PRIORITY_VISUAL_GLOBAL,\n    CHART: PRIORITY_VISUAL_CHART,\n    COMPONENT: PRIORITY_VISUAL_COMPONENT,\n    BRUSH: PRIORITY_VISUAL_BRUSH\n  }\n}; // Main process have three entries: `setOption`, `dispatchAction` and `resize`,\n// where they must not be invoked nestedly, except the only case: invoke\n// dispatchAction with updateMethod \"none\" in main process.\n// This flag is used to carry out this rule.\n// All events will be triggered out side main process (i.e. when !this[IN_MAIN_PROCESS]).\n\nvar IN_MAIN_PROCESS = '__flagInMainProcess';\nvar OPTION_UPDATED = '__optionUpdated';\nvar ACTION_REG = /^[a-zA-Z0-9_]+$/;\n\nfunction createRegisterEventWithLowercaseName(method) {\n  return function (eventName, handler, context) {\n    // Event name is all lowercase\n    eventName = eventName && eventName.toLowerCase();\n    Eventful.prototype[method].call(this, eventName, handler, context);\n  };\n}\n/**\n * @module echarts~MessageCenter\n */\n\n\nfunction MessageCenter() {\n  Eventful.call(this);\n}\n\nMessageCenter.prototype.on = createRegisterEventWithLowercaseName('on');\nMessageCenter.prototype.off = createRegisterEventWithLowercaseName('off');\nMessageCenter.prototype.one = createRegisterEventWithLowercaseName('one');\nzrUtil.mixin(MessageCenter, Eventful);\n/**\n * @module echarts~ECharts\n */\n\nfunction ECharts(dom, theme, opts) {\n  opts = opts || {}; // Get theme by name\n\n  if (typeof theme === 'string') {\n    theme = themeStorage[theme];\n  }\n  /**\n   * @type {string}\n   */\n\n\n  this.id;\n  /**\n   * Group id\n   * @type {string}\n   */\n\n  this.group;\n  /**\n   * @type {HTMLElement}\n   * @private\n   */\n\n  this._dom = dom;\n  var defaultRenderer = 'canvas';\n\n  /**\n   * @type {module:zrender/ZRender}\n   * @private\n   */\n  var zr = this._zr = zrender.init(dom, {\n    renderer: opts.renderer || defaultRenderer,\n    devicePixelRatio: opts.devicePixelRatio,\n    width: opts.width,\n    height: opts.height\n  });\n  /**\n   * Expect 60 pfs.\n   * @type {Function}\n   * @private\n   */\n\n  this._throttledZrFlush = throttle(zrUtil.bind(zr.flush, zr), 17);\n  var theme = zrUtil.clone(theme);\n  theme && backwardCompat(theme, true);\n  /**\n   * @type {Object}\n   * @private\n   */\n\n  this._theme = theme;\n  /**\n   * @type {Array.<module:echarts/view/Chart>}\n   * @private\n   */\n\n  this._chartsViews = [];\n  /**\n   * @type {Object.<string, module:echarts/view/Chart>}\n   * @private\n   */\n\n  this._chartsMap = {};\n  /**\n   * @type {Array.<module:echarts/view/Component>}\n   * @private\n   */\n\n  this._componentsViews = [];\n  /**\n   * @type {Object.<string, module:echarts/view/Component>}\n   * @private\n   */\n\n  this._componentsMap = {};\n  /**\n   * @type {module:echarts/CoordinateSystem}\n   * @private\n   */\n\n  this._coordSysMgr = new CoordinateSystemManager();\n  /**\n   * @type {module:echarts/ExtensionAPI}\n   * @private\n   */\n\n  var api = this._api = createExtensionAPI(this); // Sort on demand\n\n  function prioritySortFunc(a, b) {\n    return a.__prio - b.__prio;\n  }\n\n  timsort(visualFuncs, prioritySortFunc);\n  timsort(dataProcessorFuncs, prioritySortFunc);\n  /**\n   * @type {module:echarts/stream/Scheduler}\n   */\n\n  this._scheduler = new Scheduler(this, api, dataProcessorFuncs, visualFuncs);\n  Eventful.call(this);\n  /**\n   * @type {module:echarts~MessageCenter}\n   * @private\n   */\n\n  this._messageCenter = new MessageCenter(); // Init mouse events\n\n  this._initEvents(); // In case some people write `window.onresize = chart.resize`\n\n\n  this.resize = zrUtil.bind(this.resize, this); // Can't dispatch action during rendering procedure\n\n  this._pendingActions = [];\n  zr.animation.on('frame', this._onframe, this);\n  bindRenderedEvent(zr, this); // ECharts instance can be used as value.\n\n  zrUtil.setAsPrimitive(this);\n}\n\nvar echartsProto = ECharts.prototype;\n\nechartsProto._onframe = function () {\n  if (this._disposed) {\n    return;\n  }\n\n  var scheduler = this._scheduler; // Lazy update\n\n  if (this[OPTION_UPDATED]) {\n    var silent = this[OPTION_UPDATED].silent;\n    this[IN_MAIN_PROCESS] = true;\n    prepare(this);\n    updateMethods.update.call(this);\n    this[IN_MAIN_PROCESS] = false;\n    this[OPTION_UPDATED] = false;\n    flushPendingActions.call(this, silent);\n    triggerUpdatedEvent.call(this, silent);\n  } // Avoid do both lazy update and progress in one frame.\n  else if (scheduler.unfinished) {\n      // Stream progress.\n      var remainTime = TEST_FRAME_REMAIN_TIME;\n      var ecModel = this._model;\n      var api = this._api;\n      scheduler.unfinished = false;\n\n      do {\n        var startTime = +new Date();\n        scheduler.performSeriesTasks(ecModel); // Currently dataProcessorFuncs do not check threshold.\n\n        scheduler.performDataProcessorTasks(ecModel);\n        updateStreamModes(this, ecModel); // Do not update coordinate system here. Because that coord system update in\n        // each frame is not a good user experience. So we follow the rule that\n        // the extent of the coordinate system is determin in the first frame (the\n        // frame is executed immedietely after task reset.\n        // this._coordSysMgr.update(ecModel, api);\n        // console.log('--- ec frame visual ---', remainTime);\n\n        scheduler.performVisualTasks(ecModel);\n        renderSeries(this, this._model, api, 'remain');\n        remainTime -= +new Date() - startTime;\n      } while (remainTime > 0 && scheduler.unfinished); // Call flush explicitly for trigger finished event.\n\n\n      if (!scheduler.unfinished) {\n        this._zr.flush();\n      } // Else, zr flushing be ensue within the same frame,\n      // because zr flushing is after onframe event.\n\n    }\n};\n/**\n * @return {HTMLElement}\n */\n\n\nechartsProto.getDom = function () {\n  return this._dom;\n};\n/**\n * @return {module:zrender~ZRender}\n */\n\n\nechartsProto.getZr = function () {\n  return this._zr;\n};\n/**\n * Usage:\n * chart.setOption(option, notMerge, lazyUpdate);\n * chart.setOption(option, {\n *     notMerge: ...,\n *     lazyUpdate: ...,\n *     silent: ...\n * });\n *\n * @param {Object} option\n * @param {Object|boolean} [opts] opts or notMerge.\n * @param {boolean} [opts.notMerge=false]\n * @param {boolean} [opts.lazyUpdate=false] Useful when setOption frequently.\n */\n\n\nechartsProto.setOption = function (option, notMerge, lazyUpdate) {\n  var silent;\n\n  if (isObject(notMerge)) {\n    lazyUpdate = notMerge.lazyUpdate;\n    silent = notMerge.silent;\n    notMerge = notMerge.notMerge;\n  }\n\n  this[IN_MAIN_PROCESS] = true;\n\n  if (!this._model || notMerge) {\n    var optionManager = new OptionManager(this._api);\n    var theme = this._theme;\n    var ecModel = this._model = new GlobalModel(null, null, theme, optionManager);\n    ecModel.scheduler = this._scheduler;\n    ecModel.init(null, null, theme, optionManager);\n  }\n\n  this._model.setOption(option, optionPreprocessorFuncs);\n\n  if (lazyUpdate) {\n    this[OPTION_UPDATED] = {\n      silent: silent\n    };\n    this[IN_MAIN_PROCESS] = false;\n  } else {\n    prepare(this);\n    updateMethods.update.call(this); // Ensure zr refresh sychronously, and then pixel in canvas can be\n    // fetched after `setOption`.\n\n    this._zr.flush();\n\n    this[OPTION_UPDATED] = false;\n    this[IN_MAIN_PROCESS] = false;\n    flushPendingActions.call(this, silent);\n    triggerUpdatedEvent.call(this, silent);\n  }\n};\n/**\n * @DEPRECATED\n */\n\n\nechartsProto.setTheme = function () {\n  console.log('ECharts#setTheme() is DEPRECATED in ECharts 3.0');\n};\n/**\n * @return {module:echarts/model/Global}\n */\n\n\nechartsProto.getModel = function () {\n  return this._model;\n};\n/**\n * @return {Object}\n */\n\n\nechartsProto.getOption = function () {\n  return this._model && this._model.getOption();\n};\n/**\n * @return {number}\n */\n\n\nechartsProto.getWidth = function () {\n  return this._zr.getWidth();\n};\n/**\n * @return {number}\n */\n\n\nechartsProto.getHeight = function () {\n  return this._zr.getHeight();\n};\n/**\n * @return {number}\n */\n\n\nechartsProto.getDevicePixelRatio = function () {\n  return this._zr.painter.dpr || window.devicePixelRatio || 1;\n};\n/**\n * Get canvas which has all thing rendered\n * @param {Object} opts\n * @param {string} [opts.backgroundColor]\n * @return {string}\n */\n\n\nechartsProto.getRenderedCanvas = function (opts) {\n  if (!env.canvasSupported) {\n    return;\n  }\n\n  opts = opts || {};\n  opts.pixelRatio = opts.pixelRatio || 1;\n  opts.backgroundColor = opts.backgroundColor || this._model.get('backgroundColor');\n  var zr = this._zr; // var list = zr.storage.getDisplayList();\n  // Stop animations\n  // Never works before in init animation, so remove it.\n  // zrUtil.each(list, function (el) {\n  //     el.stopAnimation(true);\n  // });\n\n  return zr.painter.getRenderedCanvas(opts);\n};\n/**\n * Get svg data url\n * @return {string}\n */\n\n\nechartsProto.getSvgDataUrl = function () {\n  if (!env.svgSupported) {\n    return;\n  }\n\n  var zr = this._zr;\n  var list = zr.storage.getDisplayList(); // Stop animations\n\n  zrUtil.each(list, function (el) {\n    el.stopAnimation(true);\n  });\n  return zr.painter.pathToDataUrl();\n};\n/**\n * @return {string}\n * @param {Object} opts\n * @param {string} [opts.type='png']\n * @param {string} [opts.pixelRatio=1]\n * @param {string} [opts.backgroundColor]\n * @param {string} [opts.excludeComponents]\n */\n\n\nechartsProto.getDataURL = function (opts) {\n  opts = opts || {};\n  var excludeComponents = opts.excludeComponents;\n  var ecModel = this._model;\n  var excludesComponentViews = [];\n  var self = this;\n  each(excludeComponents, function (componentType) {\n    ecModel.eachComponent({\n      mainType: componentType\n    }, function (component) {\n      var view = self._componentsMap[component.__viewId];\n\n      if (!view.group.ignore) {\n        excludesComponentViews.push(view);\n        view.group.ignore = true;\n      }\n    });\n  });\n  var url = this._zr.painter.getType() === 'svg' ? this.getSvgDataUrl() : this.getRenderedCanvas(opts).toDataURL('image/' + (opts && opts.type || 'png'));\n  each(excludesComponentViews, function (view) {\n    view.group.ignore = false;\n  });\n  return url;\n};\n/**\n * @return {string}\n * @param {Object} opts\n * @param {string} [opts.type='png']\n * @param {string} [opts.pixelRatio=1]\n * @param {string} [opts.backgroundColor]\n */\n\n\nechartsProto.getConnectedDataURL = function (opts) {\n  if (!env.canvasSupported) {\n    return;\n  }\n\n  var groupId = this.group;\n  var mathMin = Math.min;\n  var mathMax = Math.max;\n  var MAX_NUMBER = Infinity;\n\n  if (connectedGroups[groupId]) {\n    var left = MAX_NUMBER;\n    var top = MAX_NUMBER;\n    var right = -MAX_NUMBER;\n    var bottom = -MAX_NUMBER;\n    var canvasList = [];\n    var dpr = opts && opts.pixelRatio || 1;\n    zrUtil.each(instances, function (chart, id) {\n      if (chart.group === groupId) {\n        var canvas = chart.getRenderedCanvas(zrUtil.clone(opts));\n        var boundingRect = chart.getDom().getBoundingClientRect();\n        left = mathMin(boundingRect.left, left);\n        top = mathMin(boundingRect.top, top);\n        right = mathMax(boundingRect.right, right);\n        bottom = mathMax(boundingRect.bottom, bottom);\n        canvasList.push({\n          dom: canvas,\n          left: boundingRect.left,\n          top: boundingRect.top\n        });\n      }\n    });\n    left *= dpr;\n    top *= dpr;\n    right *= dpr;\n    bottom *= dpr;\n    var width = right - left;\n    var height = bottom - top;\n    var targetCanvas = zrUtil.createCanvas();\n    targetCanvas.width = width;\n    targetCanvas.height = height;\n    var zr = zrender.init(targetCanvas);\n    each(canvasList, function (item) {\n      var img = new graphic.Image({\n        style: {\n          x: item.left * dpr - left,\n          y: item.top * dpr - top,\n          image: item.dom\n        }\n      });\n      zr.add(img);\n    });\n    zr.refreshImmediately();\n    return targetCanvas.toDataURL('image/' + (opts && opts.type || 'png'));\n  } else {\n    return this.getDataURL(opts);\n  }\n};\n/**\n * Convert from logical coordinate system to pixel coordinate system.\n * See CoordinateSystem#convertToPixel.\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            geoIndex / geoId, geoName,\n *            bmapIndex / bmapId / bmapName,\n *            xAxisIndex / xAxisId / xAxisName,\n *            yAxisIndex / yAxisId / yAxisName,\n *            gridIndex / gridId / gridName,\n *            ... (can be extended)\n *        }\n * @param {Array|number} value\n * @return {Array|number} result\n */\n\n\nechartsProto.convertToPixel = zrUtil.curry(doConvertPixel, 'convertToPixel');\n/**\n * Convert from pixel coordinate system to logical coordinate system.\n * See CoordinateSystem#convertFromPixel.\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            geoIndex / geoId / geoName,\n *            bmapIndex / bmapId / bmapName,\n *            xAxisIndex / xAxisId / xAxisName,\n *            yAxisIndex / yAxisId / yAxisName\n *            gridIndex / gridId / gridName,\n *            ... (can be extended)\n *        }\n * @param {Array|number} value\n * @return {Array|number} result\n */\n\nechartsProto.convertFromPixel = zrUtil.curry(doConvertPixel, 'convertFromPixel');\n\nfunction doConvertPixel(methodName, finder, value) {\n  var ecModel = this._model;\n\n  var coordSysList = this._coordSysMgr.getCoordinateSystems();\n\n  var result;\n  finder = modelUtil.parseFinder(ecModel, finder);\n\n  for (var i = 0; i < coordSysList.length; i++) {\n    var coordSys = coordSysList[i];\n\n    if (coordSys[methodName] && (result = coordSys[methodName](ecModel, finder, value)) != null) {\n      return result;\n    }\n  }\n}\n/**\n * Is the specified coordinate systems or components contain the given pixel point.\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            geoIndex / geoId / geoName,\n *            bmapIndex / bmapId / bmapName,\n *            xAxisIndex / xAxisId / xAxisName,\n *            yAxisIndex / yAxisId / yAxisName,\n *            gridIndex / gridId / gridName,\n *            ... (can be extended)\n *        }\n * @param {Array|number} value\n * @return {boolean} result\n */\n\n\nechartsProto.containPixel = function (finder, value) {\n  var ecModel = this._model;\n  var result;\n  finder = modelUtil.parseFinder(ecModel, finder);\n  zrUtil.each(finder, function (models, key) {\n    key.indexOf('Models') >= 0 && zrUtil.each(models, function (model) {\n      var coordSys = model.coordinateSystem;\n\n      if (coordSys && coordSys.containPoint) {\n        result |= !!coordSys.containPoint(value);\n      } else if (key === 'seriesModels') {\n        var view = this._chartsMap[model.__viewId];\n\n        if (view && view.containPoint) {\n          result |= view.containPoint(value, model);\n        } else {}\n      } else {}\n    }, this);\n  }, this);\n  return !!result;\n};\n/**\n * Get visual from series or data.\n * @param {string|Object} finder\n *        If string, e.g., 'series', means {seriesIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            dataIndex / dataIndexInside\n *        }\n *        If dataIndex is not specified, series visual will be fetched,\n *        but not data item visual.\n *        If all of seriesIndex, seriesId, seriesName are not specified,\n *        visual will be fetched from first series.\n * @param {string} visualType 'color', 'symbol', 'symbolSize'\n */\n\n\nechartsProto.getVisual = function (finder, visualType) {\n  var ecModel = this._model;\n  finder = modelUtil.parseFinder(ecModel, finder, {\n    defaultMainType: 'series'\n  });\n  var seriesModel = finder.seriesModel;\n  var data = seriesModel.getData();\n  var dataIndexInside = finder.hasOwnProperty('dataIndexInside') ? finder.dataIndexInside : finder.hasOwnProperty('dataIndex') ? data.indexOfRawIndex(finder.dataIndex) : null;\n  return dataIndexInside != null ? data.getItemVisual(dataIndexInside, visualType) : data.getVisual(visualType);\n};\n/**\n * Get view of corresponding component model\n * @param  {module:echarts/model/Component} componentModel\n * @return {module:echarts/view/Component}\n */\n\n\nechartsProto.getViewOfComponentModel = function (componentModel) {\n  return this._componentsMap[componentModel.__viewId];\n};\n/**\n * Get view of corresponding series model\n * @param  {module:echarts/model/Series} seriesModel\n * @return {module:echarts/view/Chart}\n */\n\n\nechartsProto.getViewOfSeriesModel = function (seriesModel) {\n  return this._chartsMap[seriesModel.__viewId];\n};\n\nvar updateMethods = {\n  prepareAndUpdate: function (payload) {\n    prepare(this);\n    updateMethods.update.call(this, payload);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  update: function (payload) {\n    // console.profile && console.profile('update');\n    var ecModel = this._model;\n    var api = this._api;\n    var zr = this._zr;\n    var coordSysMgr = this._coordSysMgr;\n    var scheduler = this._scheduler; // update before setOption\n\n    if (!ecModel) {\n      return;\n    }\n\n    scheduler.restoreData(ecModel, payload);\n    scheduler.performSeriesTasks(ecModel); // TODO\n    // Save total ecModel here for undo/redo (after restoring data and before processing data).\n    // Undo (restoration of total ecModel) can be carried out in 'action' or outside API call.\n    // Create new coordinate system each update\n    // In LineView may save the old coordinate system and use it to get the orignal point\n\n    coordSysMgr.create(ecModel, api);\n    scheduler.performDataProcessorTasks(ecModel, payload); // Current stream render is not supported in data process. So we can update\n    // stream modes after data processing, where the filtered data is used to\n    // deteming whether use progressive rendering.\n\n    updateStreamModes(this, ecModel); // We update stream modes before coordinate system updated, then the modes info\n    // can be fetched when coord sys updating (consider the barGrid extent fix). But\n    // the drawback is the full coord info can not be fetched. Fortunately this full\n    // coord is not requied in stream mode updater currently.\n\n    coordSysMgr.update(ecModel, api);\n    clearColorPalette(ecModel);\n    scheduler.performVisualTasks(ecModel, payload);\n    render(this, ecModel, api, payload); // Set background\n\n    var backgroundColor = ecModel.get('backgroundColor') || 'transparent'; // In IE8\n\n    if (!env.canvasSupported) {\n      var colorArr = colorTool.parse(backgroundColor);\n      backgroundColor = colorTool.stringify(colorArr, 'rgb');\n\n      if (colorArr[3] === 0) {\n        backgroundColor = 'transparent';\n      }\n    } else {\n      zr.setBackgroundColor(backgroundColor);\n    }\n\n    performPostUpdateFuncs(ecModel, api); // console.profile && console.profileEnd('update');\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateTransform: function (payload) {\n    var ecModel = this._model;\n    var ecIns = this;\n    var api = this._api; // update before setOption\n\n    if (!ecModel) {\n      return;\n    } // ChartView.markUpdateMethod(payload, 'updateTransform');\n\n\n    var componentDirtyList = [];\n    ecModel.eachComponent(function (componentType, componentModel) {\n      var componentView = ecIns.getViewOfComponentModel(componentModel);\n\n      if (componentView && componentView.__alive) {\n        if (componentView.updateTransform) {\n          var result = componentView.updateTransform(componentModel, ecModel, api, payload);\n          result && result.update && componentDirtyList.push(componentView);\n        } else {\n          componentDirtyList.push(componentView);\n        }\n      }\n    });\n    var seriesDirtyMap = zrUtil.createHashMap();\n    ecModel.eachSeries(function (seriesModel) {\n      var chartView = ecIns._chartsMap[seriesModel.__viewId];\n\n      if (chartView.updateTransform) {\n        var result = chartView.updateTransform(seriesModel, ecModel, api, payload);\n        result && result.update && seriesDirtyMap.set(seriesModel.uid, 1);\n      } else {\n        seriesDirtyMap.set(seriesModel.uid, 1);\n      }\n    });\n    clearColorPalette(ecModel); // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\n    // this._scheduler.performVisualTasks(ecModel, payload, 'layout', true);\n\n    this._scheduler.performVisualTasks(ecModel, payload, {\n      setDirty: true,\n      dirtyMap: seriesDirtyMap\n    }); // Currently, not call render of components. Geo render cost a lot.\n    // renderComponents(ecIns, ecModel, api, payload, componentDirtyList);\n\n\n    renderSeries(ecIns, ecModel, api, payload, seriesDirtyMap);\n    performPostUpdateFuncs(ecModel, this._api);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateView: function (payload) {\n    var ecModel = this._model; // update before setOption\n\n    if (!ecModel) {\n      return;\n    }\n\n    ChartView.markUpdateMethod(payload, 'updateView');\n    clearColorPalette(ecModel); // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\n\n    this._scheduler.performVisualTasks(ecModel, payload, {\n      setDirty: true\n    });\n\n    render(this, this._model, this._api, payload);\n    performPostUpdateFuncs(ecModel, this._api);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateVisual: function (payload) {\n    updateMethods.update.call(this, payload); // var ecModel = this._model;\n    // // update before setOption\n    // if (!ecModel) {\n    //     return;\n    // }\n    // ChartView.markUpdateMethod(payload, 'updateVisual');\n    // clearColorPalette(ecModel);\n    // // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\n    // this._scheduler.performVisualTasks(ecModel, payload, {visualType: 'visual', setDirty: true});\n    // render(this, this._model, this._api, payload);\n    // performPostUpdateFuncs(ecModel, this._api);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateLayout: function (payload) {\n    updateMethods.update.call(this, payload); // var ecModel = this._model;\n    // // update before setOption\n    // if (!ecModel) {\n    //     return;\n    // }\n    // ChartView.markUpdateMethod(payload, 'updateLayout');\n    // // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\n    // // this._scheduler.performVisualTasks(ecModel, payload, 'layout', true);\n    // this._scheduler.performVisualTasks(ecModel, payload, {setDirty: true});\n    // render(this, this._model, this._api, payload);\n    // performPostUpdateFuncs(ecModel, this._api);\n  }\n};\n\nfunction prepare(ecIns) {\n  var ecModel = ecIns._model;\n  var scheduler = ecIns._scheduler;\n  scheduler.restorePipelines(ecModel);\n  scheduler.prepareStageTasks();\n  prepareView(ecIns, 'component', ecModel, scheduler);\n  prepareView(ecIns, 'chart', ecModel, scheduler);\n  scheduler.plan();\n}\n/**\n * @private\n */\n\n\nfunction updateDirectly(ecIns, method, payload, mainType, subType) {\n  var ecModel = ecIns._model; // broadcast\n\n  if (!mainType) {\n    // FIXME\n    // Chart will not be update directly here, except set dirty.\n    // But there is no such scenario now.\n    each(ecIns._componentsViews.concat(ecIns._chartsViews), callView);\n    return;\n  }\n\n  var query = {};\n  query[mainType + 'Id'] = payload[mainType + 'Id'];\n  query[mainType + 'Index'] = payload[mainType + 'Index'];\n  query[mainType + 'Name'] = payload[mainType + 'Name'];\n  var condition = {\n    mainType: mainType,\n    query: query\n  };\n  subType && (condition.subType = subType); // subType may be '' by parseClassType;\n\n  var excludeSeriesId = payload.excludeSeriesId;\n\n  if (excludeSeriesId != null) {\n    excludeSeriesId = zrUtil.createHashMap(modelUtil.normalizeToArray(excludeSeriesId));\n  } // If dispatchAction before setOption, do nothing.\n\n\n  ecModel && ecModel.eachComponent(condition, function (model) {\n    if (!excludeSeriesId || excludeSeriesId.get(model.id) == null) {\n      callView(ecIns[mainType === 'series' ? '_chartsMap' : '_componentsMap'][model.__viewId]);\n    }\n  }, ecIns);\n\n  function callView(view) {\n    view && view.__alive && view[method] && view[method](view.__model, ecModel, ecIns._api, payload);\n  }\n}\n/**\n * Resize the chart\n * @param {Object} opts\n * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n * @param {boolean} [opts.silent=false]\n */\n\n\nechartsProto.resize = function (opts) {\n  this._zr.resize(opts);\n\n  var ecModel = this._model; // Resize loading effect\n\n  this._loadingFX && this._loadingFX.resize();\n\n  if (!ecModel) {\n    return;\n  }\n\n  var optionChanged = ecModel.resetOption('media');\n  var silent = opts && opts.silent;\n  this[IN_MAIN_PROCESS] = true;\n  optionChanged && prepare(this);\n  updateMethods.update.call(this);\n  this[IN_MAIN_PROCESS] = false;\n  flushPendingActions.call(this, silent);\n  triggerUpdatedEvent.call(this, silent);\n};\n\nfunction updateStreamModes(ecIns, ecModel) {\n  var chartsMap = ecIns._chartsMap;\n  var scheduler = ecIns._scheduler;\n  ecModel.eachSeries(function (seriesModel) {\n    scheduler.updateStreamModes(seriesModel, chartsMap[seriesModel.__viewId]);\n  });\n}\n/**\n * Show loading effect\n * @param  {string} [name='default']\n * @param  {Object} [cfg]\n */\n\n\nechartsProto.showLoading = function (name, cfg) {\n  if (isObject(name)) {\n    cfg = name;\n    name = '';\n  }\n\n  name = name || 'default';\n  this.hideLoading();\n\n  if (!loadingEffects[name]) {\n    return;\n  }\n\n  var el = loadingEffects[name](this._api, cfg);\n  var zr = this._zr;\n  this._loadingFX = el;\n  zr.add(el);\n};\n/**\n * Hide loading effect\n */\n\n\nechartsProto.hideLoading = function () {\n  this._loadingFX && this._zr.remove(this._loadingFX);\n  this._loadingFX = null;\n};\n/**\n * @param {Object} eventObj\n * @return {Object}\n */\n\n\nechartsProto.makeActionFromEvent = function (eventObj) {\n  var payload = zrUtil.extend({}, eventObj);\n  payload.type = eventActionMap[eventObj.type];\n  return payload;\n};\n/**\n * @pubilc\n * @param {Object} payload\n * @param {string} [payload.type] Action type\n * @param {Object|boolean} [opt] If pass boolean, means opt.silent\n * @param {boolean} [opt.silent=false] Whether trigger events.\n * @param {boolean} [opt.flush=undefined]\n *                  true: Flush immediately, and then pixel in canvas can be fetched\n *                      immediately. Caution: it might affect performance.\n *                  false: Not not flush.\n *                  undefined: Auto decide whether perform flush.\n */\n\n\nechartsProto.dispatchAction = function (payload, opt) {\n  if (!isObject(opt)) {\n    opt = {\n      silent: !!opt\n    };\n  }\n\n  if (!actions[payload.type]) {\n    return;\n  } // Avoid dispatch action before setOption. Especially in `connect`.\n\n\n  if (!this._model) {\n    return;\n  } // May dispatchAction in rendering procedure\n\n\n  if (this[IN_MAIN_PROCESS]) {\n    this._pendingActions.push(payload);\n\n    return;\n  }\n\n  doDispatchAction.call(this, payload, opt.silent);\n\n  if (opt.flush) {\n    this._zr.flush(true);\n  } else if (opt.flush !== false && env.browser.weChat) {\n    // In WeChat embeded browser, `requestAnimationFrame` and `setInterval`\n    // hang when sliding page (on touch event), which cause that zr does not\n    // refresh util user interaction finished, which is not expected.\n    // But `dispatchAction` may be called too frequently when pan on touch\n    // screen, which impacts performance if do not throttle them.\n    this._throttledZrFlush();\n  }\n\n  flushPendingActions.call(this, opt.silent);\n  triggerUpdatedEvent.call(this, opt.silent);\n};\n\nfunction doDispatchAction(payload, silent) {\n  var payloadType = payload.type;\n  var escapeConnect = payload.escapeConnect;\n  var actionWrap = actions[payloadType];\n  var actionInfo = actionWrap.actionInfo;\n  var cptType = (actionInfo.update || 'update').split(':');\n  var updateMethod = cptType.pop();\n  cptType = cptType[0] != null && parseClassType(cptType[0]);\n  this[IN_MAIN_PROCESS] = true;\n  var payloads = [payload];\n  var batched = false; // Batch action\n\n  if (payload.batch) {\n    batched = true;\n    payloads = zrUtil.map(payload.batch, function (item) {\n      item = zrUtil.defaults(zrUtil.extend({}, item), payload);\n      item.batch = null;\n      return item;\n    });\n  }\n\n  var eventObjBatch = [];\n  var eventObj;\n  var isHighDown = payloadType === 'highlight' || payloadType === 'downplay';\n  each(payloads, function (batchItem) {\n    // Action can specify the event by return it.\n    eventObj = actionWrap.action(batchItem, this._model, this._api); // Emit event outside\n\n    eventObj = eventObj || zrUtil.extend({}, batchItem); // Convert type to eventType\n\n    eventObj.type = actionInfo.event || eventObj.type;\n    eventObjBatch.push(eventObj); // light update does not perform data process, layout and visual.\n\n    if (isHighDown) {\n      // method, payload, mainType, subType\n      updateDirectly(this, updateMethod, batchItem, 'series');\n    } else if (cptType) {\n      updateDirectly(this, updateMethod, batchItem, cptType.main, cptType.sub);\n    }\n  }, this);\n\n  if (updateMethod !== 'none' && !isHighDown && !cptType) {\n    // Still dirty\n    if (this[OPTION_UPDATED]) {\n      // FIXME Pass payload ?\n      prepare(this);\n      updateMethods.update.call(this, payload);\n      this[OPTION_UPDATED] = false;\n    } else {\n      updateMethods[updateMethod].call(this, payload);\n    }\n  } // Follow the rule of action batch\n\n\n  if (batched) {\n    eventObj = {\n      type: actionInfo.event || payloadType,\n      escapeConnect: escapeConnect,\n      batch: eventObjBatch\n    };\n  } else {\n    eventObj = eventObjBatch[0];\n  }\n\n  this[IN_MAIN_PROCESS] = false;\n  !silent && this._messageCenter.trigger(eventObj.type, eventObj);\n}\n\nfunction flushPendingActions(silent) {\n  var pendingActions = this._pendingActions;\n\n  while (pendingActions.length) {\n    var payload = pendingActions.shift();\n    doDispatchAction.call(this, payload, silent);\n  }\n}\n\nfunction triggerUpdatedEvent(silent) {\n  !silent && this.trigger('updated');\n}\n/**\n * Event `rendered` is triggered when zr\n * rendered. It is useful for realtime\n * snapshot (reflect animation).\n *\n * Event `finished` is triggered when:\n * (1) zrender rendering finished.\n * (2) initial animation finished.\n * (3) progressive rendering finished.\n * (4) no pending action.\n * (5) no delayed setOption needs to be processed.\n */\n\n\nfunction bindRenderedEvent(zr, ecIns) {\n  zr.on('rendered', function () {\n    ecIns.trigger('rendered'); // The `finished` event should not be triggered repeatly,\n    // so it should only be triggered when rendering indeed happend\n    // in zrender. (Consider the case that dipatchAction is keep\n    // triggering when mouse move).\n\n    if ( // Although zr is dirty if initial animation is not finished\n    // and this checking is called on frame, we also check\n    // animation finished for robustness.\n    zr.animation.isFinished() && !ecIns[OPTION_UPDATED] && !ecIns._scheduler.unfinished && !ecIns._pendingActions.length) {\n      ecIns.trigger('finished');\n    }\n  });\n}\n/**\n * @param {Object} params\n * @param {number} params.seriesIndex\n * @param {Array|TypedArray} params.data\n */\n\n\nechartsProto.appendData = function (params) {\n  var seriesIndex = params.seriesIndex;\n  var ecModel = this.getModel();\n  var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n  seriesModel.appendData(params); // Note: `appendData` does not support that update extent of coordinate\n  // system, util some scenario require that. In the expected usage of\n  // `appendData`, the initial extent of coordinate system should better\n  // be fixed by axis `min`/`max` setting or initial data, otherwise if\n  // the extent changed while `appendData`, the location of the painted\n  // graphic elements have to be changed, which make the usage of\n  // `appendData` meaningless.\n\n  this._scheduler.unfinished = true;\n};\n/**\n * Register event\n * @method\n */\n\n\nechartsProto.on = createRegisterEventWithLowercaseName('on');\nechartsProto.off = createRegisterEventWithLowercaseName('off');\nechartsProto.one = createRegisterEventWithLowercaseName('one');\n/**\n * Prepare view instances of charts and components\n * @param  {module:echarts/model/Global} ecModel\n * @private\n */\n\nfunction prepareView(ecIns, type, ecModel, scheduler) {\n  var isComponent = type === 'component';\n  var viewList = isComponent ? ecIns._componentsViews : ecIns._chartsViews;\n  var viewMap = isComponent ? ecIns._componentsMap : ecIns._chartsMap;\n  var zr = ecIns._zr;\n  var api = ecIns._api;\n\n  for (var i = 0; i < viewList.length; i++) {\n    viewList[i].__alive = false;\n  }\n\n  isComponent ? ecModel.eachComponent(function (componentType, model) {\n    componentType !== 'series' && doPrepare(model);\n  }) : ecModel.eachSeries(doPrepare);\n\n  function doPrepare(model) {\n    // Consider: id same and type changed.\n    var viewId = '_ec_' + model.id + '_' + model.type;\n    var view = viewMap[viewId];\n\n    if (!view) {\n      var classType = parseClassType(model.type);\n      var Clazz = isComponent ? ComponentView.getClass(classType.main, classType.sub) : ChartView.getClass(classType.sub);\n      view = new Clazz();\n      view.init(ecModel, api);\n      viewMap[viewId] = view;\n      viewList.push(view);\n      zr.add(view.group);\n    }\n\n    model.__viewId = view.__id = viewId;\n    view.__alive = true;\n    view.__model = model;\n    view.group.__ecComponentInfo = {\n      mainType: model.mainType,\n      index: model.componentIndex\n    };\n    !isComponent && scheduler.prepareView(view, model, ecModel, api);\n  }\n\n  for (var i = 0; i < viewList.length;) {\n    var view = viewList[i];\n\n    if (!view.__alive) {\n      !isComponent && view.renderTask.dispose();\n      zr.remove(view.group);\n      view.dispose(ecModel, api);\n      viewList.splice(i, 1);\n      delete viewMap[view.__id];\n      view.__id = view.group.__ecComponentInfo = null;\n    } else {\n      i++;\n    }\n  }\n} // /**\n//  * Encode visual infomation from data after data processing\n//  *\n//  * @param {module:echarts/model/Global} ecModel\n//  * @param {object} layout\n//  * @param {boolean} [layoutFilter] `true`: only layout,\n//  *                                 `false`: only not layout,\n//  *                                 `null`/`undefined`: all.\n//  * @param {string} taskBaseTag\n//  * @private\n//  */\n// function startVisualEncoding(ecIns, ecModel, api, payload, layoutFilter) {\n//     each(visualFuncs, function (visual, index) {\n//         var isLayout = visual.isLayout;\n//         if (layoutFilter == null\n//             || (layoutFilter === false && !isLayout)\n//             || (layoutFilter === true && isLayout)\n//         ) {\n//             visual.func(ecModel, api, payload);\n//         }\n//     });\n// }\n\n\nfunction clearColorPalette(ecModel) {\n  ecModel.clearColorPalette();\n  ecModel.eachSeries(function (seriesModel) {\n    seriesModel.clearColorPalette();\n  });\n}\n\nfunction render(ecIns, ecModel, api, payload) {\n  renderComponents(ecIns, ecModel, api, payload);\n  each(ecIns._chartsViews, function (chart) {\n    chart.__alive = false;\n  });\n  renderSeries(ecIns, ecModel, api, payload); // Remove groups of unrendered charts\n\n  each(ecIns._chartsViews, function (chart) {\n    if (!chart.__alive) {\n      chart.remove(ecModel, api);\n    }\n  });\n}\n\nfunction renderComponents(ecIns, ecModel, api, payload, dirtyList) {\n  each(dirtyList || ecIns._componentsViews, function (componentView) {\n    var componentModel = componentView.__model;\n    componentView.render(componentModel, ecModel, api, payload);\n    updateZ(componentModel, componentView);\n  });\n}\n/**\n * Render each chart and component\n * @private\n */\n\n\nfunction renderSeries(ecIns, ecModel, api, payload, dirtyMap) {\n  // Render all charts\n  var scheduler = ecIns._scheduler;\n  var unfinished;\n  ecModel.eachSeries(function (seriesModel) {\n    var chartView = ecIns._chartsMap[seriesModel.__viewId];\n    chartView.__alive = true;\n    var renderTask = chartView.renderTask;\n    scheduler.updatePayload(renderTask, payload);\n\n    if (dirtyMap && dirtyMap.get(seriesModel.uid)) {\n      renderTask.dirty();\n    }\n\n    unfinished |= renderTask.perform(scheduler.getPerformArgs(renderTask));\n    chartView.group.silent = !!seriesModel.get('silent');\n    updateZ(seriesModel, chartView);\n    updateBlend(seriesModel, chartView);\n  });\n  scheduler.unfinished |= unfinished; // If use hover layer\n\n  updateHoverLayerStatus(ecIns._zr, ecModel); // Add aria\n\n  aria(ecIns._zr.dom, ecModel);\n}\n\nfunction performPostUpdateFuncs(ecModel, api) {\n  each(postUpdateFuncs, function (func) {\n    func(ecModel, api);\n  });\n}\n\nvar MOUSE_EVENT_NAMES = ['click', 'dblclick', 'mouseover', 'mouseout', 'mousemove', 'mousedown', 'mouseup', 'globalout', 'contextmenu'];\n/**\n * @private\n */\n\nechartsProto._initEvents = function () {\n  each(MOUSE_EVENT_NAMES, function (eveName) {\n    this._zr.on(eveName, function (e) {\n      var ecModel = this.getModel();\n      var el = e.target;\n      var params; // no e.target when 'globalout'.\n\n      if (eveName === 'globalout') {\n        params = {};\n      } else if (el && el.dataIndex != null) {\n        var dataModel = el.dataModel || ecModel.getSeriesByIndex(el.seriesIndex);\n        params = dataModel && dataModel.getDataParams(el.dataIndex, el.dataType) || {};\n      } // If element has custom eventData of components\n      else if (el && el.eventData) {\n          params = zrUtil.extend({}, el.eventData);\n        }\n\n      if (params) {\n        params.event = e;\n        params.type = eveName;\n        this.trigger(eveName, params);\n      }\n    }, this);\n  }, this);\n  each(eventActionMap, function (actionType, eventType) {\n    this._messageCenter.on(eventType, function (event) {\n      this.trigger(eventType, event);\n    }, this);\n  }, this);\n};\n/**\n * @return {boolean}\n */\n\n\nechartsProto.isDisposed = function () {\n  return this._disposed;\n};\n/**\n * Clear\n */\n\n\nechartsProto.clear = function () {\n  this.setOption({\n    series: []\n  }, true);\n};\n/**\n * Dispose instance\n */\n\n\nechartsProto.dispose = function () {\n  if (this._disposed) {\n    return;\n  }\n\n  this._disposed = true;\n  modelUtil.setAttribute(this.getDom(), DOM_ATTRIBUTE_KEY, '');\n  var api = this._api;\n  var ecModel = this._model;\n  each(this._componentsViews, function (component) {\n    component.dispose(ecModel, api);\n  });\n  each(this._chartsViews, function (chart) {\n    chart.dispose(ecModel, api);\n  }); // Dispose after all views disposed\n\n  this._zr.dispose();\n\n  delete instances[this.id];\n};\n\nzrUtil.mixin(ECharts, Eventful);\n\nfunction updateHoverLayerStatus(zr, ecModel) {\n  var storage = zr.storage;\n  var elCount = 0;\n  storage.traverse(function (el) {\n    if (!el.isGroup) {\n      elCount++;\n    }\n  });\n\n  if (elCount > ecModel.get('hoverLayerThreshold') && !env.node) {\n    storage.traverse(function (el) {\n      if (!el.isGroup) {\n        // Don't switch back.\n        el.useHoverLayer = true;\n      }\n    });\n  }\n}\n/**\n * Update chart progressive and blend.\n * @param {module:echarts/model/Series|module:echarts/model/Component} model\n * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n */\n\n\nfunction updateBlend(seriesModel, chartView) {\n  var blendMode = seriesModel.get('blendMode') || null;\n  chartView.group.traverse(function (el) {\n    // FIXME marker and other components\n    if (!el.isGroup) {\n      // Only set if blendMode is changed. In case element is incremental and don't wan't to rerender.\n      if (el.style.blend !== blendMode) {\n        el.setStyle('blend', blendMode);\n      }\n    }\n\n    if (el.eachPendingDisplayable) {\n      el.eachPendingDisplayable(function (displayable) {\n        displayable.setStyle('blend', blendMode);\n      });\n    }\n  });\n}\n/**\n * @param {module:echarts/model/Series|module:echarts/model/Component} model\n * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n */\n\n\nfunction updateZ(model, view) {\n  var z = model.get('z');\n  var zlevel = model.get('zlevel'); // Set z and zlevel\n\n  view.group.traverse(function (el) {\n    if (el.type !== 'group') {\n      z != null && (el.z = z);\n      zlevel != null && (el.zlevel = zlevel);\n    }\n  });\n}\n\nfunction createExtensionAPI(ecInstance) {\n  var coordSysMgr = ecInstance._coordSysMgr;\n  return zrUtil.extend(new ExtensionAPI(ecInstance), {\n    // Inject methods\n    getCoordinateSystems: zrUtil.bind(coordSysMgr.getCoordinateSystems, coordSysMgr),\n    getComponentByElement: function (el) {\n      while (el) {\n        var modelInfo = el.__ecComponentInfo;\n\n        if (modelInfo != null) {\n          return ecInstance._model.getComponent(modelInfo.mainType, modelInfo.index);\n        }\n\n        el = el.parent;\n      }\n    }\n  });\n}\n/**\n * @type {Object} key: actionType.\n * @inner\n */\n\n\nvar actions = {};\n/**\n * Map eventType to actionType\n * @type {Object}\n */\n\nvar eventActionMap = {};\n/**\n * Data processor functions of each stage\n * @type {Array.<Object.<string, Function>>}\n * @inner\n */\n\nvar dataProcessorFuncs = [];\n/**\n * @type {Array.<Function>}\n * @inner\n */\n\nvar optionPreprocessorFuncs = [];\n/**\n * @type {Array.<Function>}\n * @inner\n */\n\nvar postUpdateFuncs = [];\n/**\n * Visual encoding functions of each stage\n * @type {Array.<Object.<string, Function>>}\n */\n\nvar visualFuncs = [];\n/**\n * Theme storage\n * @type {Object.<key, Object>}\n */\n\nvar themeStorage = {};\n/**\n * Loading effects\n */\n\nvar loadingEffects = {};\nvar instances = {};\nvar connectedGroups = {};\nvar idBase = new Date() - 0;\nvar groupIdBase = new Date() - 0;\nvar DOM_ATTRIBUTE_KEY = '_echarts_instance_';\nvar mapDataStores = {};\n\nfunction enableConnect(chart) {\n  var STATUS_PENDING = 0;\n  var STATUS_UPDATING = 1;\n  var STATUS_UPDATED = 2;\n  var STATUS_KEY = '__connectUpdateStatus';\n\n  function updateConnectedChartsStatus(charts, status) {\n    for (var i = 0; i < charts.length; i++) {\n      var otherChart = charts[i];\n      otherChart[STATUS_KEY] = status;\n    }\n  }\n\n  each(eventActionMap, function (actionType, eventType) {\n    chart._messageCenter.on(eventType, function (event) {\n      if (connectedGroups[chart.group] && chart[STATUS_KEY] !== STATUS_PENDING) {\n        if (event && event.escapeConnect) {\n          return;\n        }\n\n        var action = chart.makeActionFromEvent(event);\n        var otherCharts = [];\n        each(instances, function (otherChart) {\n          if (otherChart !== chart && otherChart.group === chart.group) {\n            otherCharts.push(otherChart);\n          }\n        });\n        updateConnectedChartsStatus(otherCharts, STATUS_PENDING);\n        each(otherCharts, function (otherChart) {\n          if (otherChart[STATUS_KEY] !== STATUS_UPDATING) {\n            otherChart.dispatchAction(action);\n          }\n        });\n        updateConnectedChartsStatus(otherCharts, STATUS_UPDATED);\n      }\n    });\n  });\n}\n/**\n * @param {HTMLElement} dom\n * @param {Object} [theme]\n * @param {Object} opts\n * @param {number} [opts.devicePixelRatio] Use window.devicePixelRatio by default\n * @param {string} [opts.renderer] Currently only 'canvas' is supported.\n * @param {number} [opts.width] Use clientWidth of the input `dom` by default.\n *                              Can be 'auto' (the same as null/undefined)\n * @param {number} [opts.height] Use clientHeight of the input `dom` by default.\n *                               Can be 'auto' (the same as null/undefined)\n */\n\n\nfunction init(dom, theme, opts) {\n  var existInstance = getInstanceByDom(dom);\n\n  if (existInstance) {\n    return existInstance;\n  }\n\n  var chart = new ECharts(dom, theme, opts);\n  chart.id = 'ec_' + idBase++;\n  instances[chart.id] = chart;\n  modelUtil.setAttribute(dom, DOM_ATTRIBUTE_KEY, chart.id);\n  enableConnect(chart);\n  return chart;\n}\n/**\n * @return {string|Array.<module:echarts~ECharts>} groupId\n */\n\n\nfunction connect(groupId) {\n  // Is array of charts\n  if (zrUtil.isArray(groupId)) {\n    var charts = groupId;\n    groupId = null; // If any chart has group\n\n    each(charts, function (chart) {\n      if (chart.group != null) {\n        groupId = chart.group;\n      }\n    });\n    groupId = groupId || 'g_' + groupIdBase++;\n    each(charts, function (chart) {\n      chart.group = groupId;\n    });\n  }\n\n  connectedGroups[groupId] = true;\n  return groupId;\n}\n/**\n * @DEPRECATED\n * @return {string} groupId\n */\n\n\nfunction disConnect(groupId) {\n  connectedGroups[groupId] = false;\n}\n/**\n * @return {string} groupId\n */\n\n\nvar disconnect = disConnect;\n/**\n * Dispose a chart instance\n * @param  {module:echarts~ECharts|HTMLDomElement|string} chart\n */\n\nfunction dispose(chart) {\n  if (typeof chart === 'string') {\n    chart = instances[chart];\n  } else if (!(chart instanceof ECharts)) {\n    // Try to treat as dom\n    chart = getInstanceByDom(chart);\n  }\n\n  if (chart instanceof ECharts && !chart.isDisposed()) {\n    chart.dispose();\n  }\n}\n/**\n * @param  {HTMLElement} dom\n * @return {echarts~ECharts}\n */\n\n\nfunction getInstanceByDom(dom) {\n  return instances[modelUtil.getAttribute(dom, DOM_ATTRIBUTE_KEY)];\n}\n/**\n * @param {string} key\n * @return {echarts~ECharts}\n */\n\n\nfunction getInstanceById(key) {\n  return instances[key];\n}\n/**\n * Register theme\n */\n\n\nfunction registerTheme(name, theme) {\n  themeStorage[name] = theme;\n}\n/**\n * Register option preprocessor\n * @param {Function} preprocessorFunc\n */\n\n\nfunction registerPreprocessor(preprocessorFunc) {\n  optionPreprocessorFuncs.push(preprocessorFunc);\n}\n/**\n * @param {number} [priority=1000]\n * @param {Object|Function} processor\n */\n\n\nfunction registerProcessor(priority, processor) {\n  normalizeRegister(dataProcessorFuncs, priority, processor, PRIORITY_PROCESSOR_FILTER);\n}\n/**\n * Register postUpdater\n * @param {Function} postUpdateFunc\n */\n\n\nfunction registerPostUpdate(postUpdateFunc) {\n  postUpdateFuncs.push(postUpdateFunc);\n}\n/**\n * Usage:\n * registerAction('someAction', 'someEvent', function () { ... });\n * registerAction('someAction', function () { ... });\n * registerAction(\n *     {type: 'someAction', event: 'someEvent', update: 'updateView'},\n *     function () { ... }\n * );\n *\n * @param {(string|Object)} actionInfo\n * @param {string} actionInfo.type\n * @param {string} [actionInfo.event]\n * @param {string} [actionInfo.update]\n * @param {string} [eventName]\n * @param {Function} action\n */\n\n\nfunction registerAction(actionInfo, eventName, action) {\n  if (typeof eventName === 'function') {\n    action = eventName;\n    eventName = '';\n  }\n\n  var actionType = isObject(actionInfo) ? actionInfo.type : [actionInfo, actionInfo = {\n    event: eventName\n  }][0]; // Event name is all lowercase\n\n  actionInfo.event = (actionInfo.event || actionType).toLowerCase();\n  eventName = actionInfo.event; // Validate action type and event name.\n\n  assert(ACTION_REG.test(actionType) && ACTION_REG.test(eventName));\n\n  if (!actions[actionType]) {\n    actions[actionType] = {\n      action: action,\n      actionInfo: actionInfo\n    };\n  }\n\n  eventActionMap[eventName] = actionType;\n}\n/**\n * @param {string} type\n * @param {*} CoordinateSystem\n */\n\n\nfunction registerCoordinateSystem(type, CoordinateSystem) {\n  CoordinateSystemManager.register(type, CoordinateSystem);\n}\n/**\n * Get dimensions of specified coordinate system.\n * @param {string} type\n * @return {Array.<string|Object>}\n */\n\n\nfunction getCoordinateSystemDimensions(type) {\n  var coordSysCreator = CoordinateSystemManager.get(type);\n\n  if (coordSysCreator) {\n    return coordSysCreator.getDimensionsInfo ? coordSysCreator.getDimensionsInfo() : coordSysCreator.dimensions.slice();\n  }\n}\n/**\n * Layout is a special stage of visual encoding\n * Most visual encoding like color are common for different chart\n * But each chart has it's own layout algorithm\n *\n * @param {number} [priority=1000]\n * @param {Function} layoutTask\n */\n\n\nfunction registerLayout(priority, layoutTask) {\n  normalizeRegister(visualFuncs, priority, layoutTask, PRIORITY_VISUAL_LAYOUT, 'layout');\n}\n/**\n * @param {number} [priority=3000]\n * @param {module:echarts/stream/Task} visualTask\n */\n\n\nfunction registerVisual(priority, visualTask) {\n  normalizeRegister(visualFuncs, priority, visualTask, PRIORITY_VISUAL_CHART, 'visual');\n}\n/**\n * @param {Object|Function} fn: {seriesType, createOnAllSeries, performRawSeries, reset}\n */\n\n\nfunction normalizeRegister(targetList, priority, fn, defaultPriority, visualType) {\n  if (isFunction(priority) || isObject(priority)) {\n    fn = priority;\n    priority = defaultPriority;\n  }\n\n  var stageHandler = Scheduler.wrapStageHandler(fn, visualType);\n  stageHandler.__prio = priority;\n  stageHandler.__raw = fn;\n  targetList.push(stageHandler);\n  return stageHandler;\n}\n/**\n * @param {string} name\n */\n\n\nfunction registerLoading(name, loadingFx) {\n  loadingEffects[name] = loadingFx;\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendComponentModel(opts\n/*, superClass*/\n) {\n  // var Clazz = ComponentModel;\n  // if (superClass) {\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n  // }\n  return ComponentModel.extend(opts);\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendComponentView(opts\n/*, superClass*/\n) {\n  // var Clazz = ComponentView;\n  // if (superClass) {\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ComponentView.getClass(classType.main, classType.sub, true);\n  // }\n  return ComponentView.extend(opts);\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendSeriesModel(opts\n/*, superClass*/\n) {\n  // var Clazz = SeriesModel;\n  // if (superClass) {\n  //     superClass = 'series.' + superClass.replace('series.', '');\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n  // }\n  return SeriesModel.extend(opts);\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendChartView(opts\n/*, superClass*/\n) {\n  // var Clazz = ChartView;\n  // if (superClass) {\n  //     superClass = superClass.replace('series.', '');\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ChartView.getClass(classType.main, true);\n  // }\n  return ChartView.extend(opts);\n}\n/**\n * ZRender need a canvas context to do measureText.\n * But in node environment canvas may be created by node-canvas.\n * So we need to specify how to create a canvas instead of using document.createElement('canvas')\n *\n * Be careful of using it in the browser.\n *\n * @param {Function} creator\n * @example\n *     var Canvas = require('canvas');\n *     var echarts = require('echarts');\n *     echarts.setCanvasCreator(function () {\n *         // Small size is enough.\n *         return new Canvas(32, 32);\n *     });\n */\n\n\nfunction setCanvasCreator(creator) {\n  zrUtil.$override('createCanvas', creator);\n}\n/**\n * @param {string} mapName\n * @param {Object|string} geoJson\n * @param {Object} [specialAreas]\n *\n * @example\n *     $.get('USA.json', function (geoJson) {\n *         echarts.registerMap('USA', geoJson);\n *         // Or\n *         echarts.registerMap('USA', {\n *             geoJson: geoJson,\n *             specialAreas: {}\n *         })\n *     });\n */\n\n\nfunction registerMap(mapName, geoJson, specialAreas) {\n  if (geoJson.geoJson && !geoJson.features) {\n    specialAreas = geoJson.specialAreas;\n    geoJson = geoJson.geoJson;\n  }\n\n  if (typeof geoJson === 'string') {\n    geoJson = typeof JSON !== 'undefined' && JSON.parse ? JSON.parse(geoJson) : new Function('return (' + geoJson + ');')();\n  }\n\n  mapDataStores[mapName] = {\n    geoJson: geoJson,\n    specialAreas: specialAreas\n  };\n}\n/**\n * @param {string} mapName\n * @return {Object}\n */\n\n\nfunction getMap(mapName) {\n  return mapDataStores[mapName];\n}\n\nregisterVisual(PRIORITY_VISUAL_GLOBAL, seriesColor);\nregisterPreprocessor(backwardCompat);\nregisterProcessor(PRIORITY_PROCESSOR_STATISTIC, dataStack);\nregisterLoading('default', loadingDefault); // Default actions\n\nregisterAction({\n  type: 'highlight',\n  event: 'highlight',\n  update: 'highlight'\n}, zrUtil.noop);\nregisterAction({\n  type: 'downplay',\n  event: 'downplay',\n  update: 'downplay'\n}, zrUtil.noop); // Default theme\n\nregisterTheme('light', lightTheme);\nregisterTheme('dark', darkTheme); // For backward compatibility, where the namespace `dataTool` will\n// be mounted on `echarts` is the extension `dataTool` is imported.\n\nvar dataTool = {};\nexports.version = version;\nexports.dependencies = dependencies;\nexports.PRIORITY = PRIORITY;\nexports.init = init;\nexports.connect = connect;\nexports.disConnect = disConnect;\nexports.disconnect = disconnect;\nexports.dispose = dispose;\nexports.getInstanceByDom = getInstanceByDom;\nexports.getInstanceById = getInstanceById;\nexports.registerTheme = registerTheme;\nexports.registerPreprocessor = registerPreprocessor;\nexports.registerProcessor = registerProcessor;\nexports.registerPostUpdate = registerPostUpdate;\nexports.registerAction = registerAction;\nexports.registerCoordinateSystem = registerCoordinateSystem;\nexports.getCoordinateSystemDimensions = getCoordinateSystemDimensions;\nexports.registerLayout = registerLayout;\nexports.registerVisual = registerVisual;\nexports.registerLoading = registerLoading;\nexports.extendComponentModel = extendComponentModel;\nexports.extendComponentView = extendComponentView;\nexports.extendSeriesModel = extendSeriesModel;\nexports.extendChartView = extendChartView;\nexports.setCanvasCreator = setCanvasCreator;\nexports.registerMap = registerMap;\nexports.getMap = getMap;\nexports.dataTool = dataTool;\nvar ___ec_export = require(\"./export\");\n(function () {\n    for (var key in ___ec_export) {\n        if (___ec_export.hasOwnProperty(key)) {\n            exports[key] = ___ec_export[key];\n        }\n    }\n})();","var _config = require(\"./config\");\n\nvar devicePixelRatio = _config.devicePixelRatio;\n\nvar util = require(\"./core/util\");\n\nvar log = require(\"./core/log\");\n\nvar BoundingRect = require(\"./core/BoundingRect\");\n\nvar timsort = require(\"./core/timsort\");\n\nvar Layer = require(\"./Layer\");\n\nvar requestAnimationFrame = require(\"./animation/requestAnimationFrame\");\n\nvar Image = require(\"./graphic/Image\");\n\nvar env = require(\"./core/env\");\n\nvar HOVER_LAYER_ZLEVEL = 1e5;\nvar CANVAS_ZLEVEL = 314159;\nvar EL_AFTER_INCREMENTAL_INC = 0.01;\nvar INCREMENTAL_INC = 0.001;\n\nfunction parseInt10(val) {\n  return parseInt(val, 10);\n}\n\nfunction isLayerValid(layer) {\n  if (!layer) {\n    return false;\n  }\n\n  if (layer.__builtin__) {\n    return true;\n  }\n\n  if (typeof layer.resize !== 'function' || typeof layer.refresh !== 'function') {\n    return false;\n  }\n\n  return true;\n}\n\nvar tmpRect = new BoundingRect(0, 0, 0, 0);\nvar viewRect = new BoundingRect(0, 0, 0, 0);\n\nfunction isDisplayableCulled(el, width, height) {\n  tmpRect.copy(el.getBoundingRect());\n\n  if (el.transform) {\n    tmpRect.applyTransform(el.transform);\n  }\n\n  viewRect.width = width;\n  viewRect.height = height;\n  return !tmpRect.intersect(viewRect);\n}\n\nfunction isClipPathChanged(clipPaths, prevClipPaths) {\n  if (clipPaths == prevClipPaths) {\n    // Can both be null or undefined\n    return false;\n  }\n\n  if (!clipPaths || !prevClipPaths || clipPaths.length !== prevClipPaths.length) {\n    return true;\n  }\n\n  for (var i = 0; i < clipPaths.length; i++) {\n    if (clipPaths[i] !== prevClipPaths[i]) {\n      return true;\n    }\n  }\n}\n\nfunction doClip(clipPaths, ctx) {\n  for (var i = 0; i < clipPaths.length; i++) {\n    var clipPath = clipPaths[i];\n    clipPath.setTransform(ctx);\n    ctx.beginPath();\n    clipPath.buildPath(ctx, clipPath.shape);\n    ctx.clip(); // Transform back\n\n    clipPath.restoreTransform(ctx);\n  }\n}\n\nfunction createRoot(width, height) {\n  var domRoot = document.createElement('div'); // domRoot.onselectstart = returnFalse; // 避免页面选中的尴尬\n\n  domRoot.style.cssText = ['position:relative', 'overflow:hidden', 'width:' + width + 'px', 'height:' + height + 'px', 'padding:0', 'margin:0', 'border-width:0'].join(';') + ';';\n  return domRoot;\n}\n/**\n * @alias module:zrender/Painter\n * @constructor\n * @param {HTMLElement} root 绘图容器\n * @param {module:zrender/Storage} storage\n * @param {Object} opts\n */\n\n\nvar Painter = function (root, storage, opts) {\n  this.type = 'canvas'; // In node environment using node-canvas\n\n  var singleCanvas = !root.nodeName // In node ?\n  || root.nodeName.toUpperCase() === 'CANVAS';\n  this._opts = opts = util.extend({}, opts || {});\n  /**\n   * @type {number}\n   */\n\n  this.dpr = opts.devicePixelRatio || devicePixelRatio;\n  /**\n   * @type {boolean}\n   * @private\n   */\n\n  this._singleCanvas = singleCanvas;\n  /**\n   * 绘图容器\n   * @type {HTMLElement}\n   */\n\n  this.root = root;\n  var rootStyle = root.style;\n\n  if (rootStyle) {\n    rootStyle['-webkit-tap-highlight-color'] = 'transparent';\n    rootStyle['-webkit-user-select'] = rootStyle['user-select'] = rootStyle['-webkit-touch-callout'] = 'none';\n    root.innerHTML = '';\n  }\n  /**\n   * @type {module:zrender/Storage}\n   */\n\n\n  this.storage = storage;\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n\n  var zlevelList = this._zlevelList = [];\n  /**\n   * @type {Object.<string, module:zrender/Layer>}\n   * @private\n   */\n\n  var layers = this._layers = {};\n  /**\n   * @type {Object.<string, Object>}\n   * @private\n   */\n\n  this._layerConfig = {};\n  /**\n   * zrender will do compositing when root is a canvas and have multiple zlevels.\n   */\n\n  this._needsManuallyCompositing = false;\n\n  if (!singleCanvas) {\n    this._width = this._getSize(0);\n    this._height = this._getSize(1);\n    var domRoot = this._domRoot = createRoot(this._width, this._height);\n    root.appendChild(domRoot);\n  } else {\n    var width = root.width;\n    var height = root.height;\n\n    if (opts.width != null) {\n      width = opts.width;\n    }\n\n    if (opts.height != null) {\n      height = opts.height;\n    }\n\n    this.dpr = opts.devicePixelRatio || 1; // Use canvas width and height directly\n\n    root.width = width * this.dpr;\n    root.height = height * this.dpr;\n    this._width = width;\n    this._height = height; // Create layer if only one given canvas\n    // Device can be specified to create a high dpi image.\n\n    var mainLayer = new Layer(root, this, this.dpr);\n    mainLayer.__builtin__ = true;\n    mainLayer.initContext(); // FIXME Use canvas width and height\n    // mainLayer.resize(width, height);\n\n    layers[CANVAS_ZLEVEL] = mainLayer;\n    mainLayer.zlevel = CANVAS_ZLEVEL; // Not use common zlevel.\n\n    zlevelList.push(CANVAS_ZLEVEL);\n    this._domRoot = root;\n  }\n  /**\n   * @type {module:zrender/Layer}\n   * @private\n   */\n\n\n  this._hoverlayer = null;\n  this._hoverElements = [];\n};\n\nPainter.prototype = {\n  constructor: Painter,\n  getType: function () {\n    return 'canvas';\n  },\n\n  /**\n   * If painter use a single canvas\n   * @return {boolean}\n   */\n  isSingleCanvas: function () {\n    return this._singleCanvas;\n  },\n\n  /**\n   * @return {HTMLDivElement}\n   */\n  getViewportRoot: function () {\n    return this._domRoot;\n  },\n  getViewportRootOffset: function () {\n    var viewportRoot = this.getViewportRoot();\n\n    if (viewportRoot) {\n      return {\n        offsetLeft: viewportRoot.offsetLeft || 0,\n        offsetTop: viewportRoot.offsetTop || 0\n      };\n    }\n  },\n\n  /**\n   * 刷新\n   * @param {boolean} [paintAll=false] 强制绘制所有displayable\n   */\n  refresh: function (paintAll) {\n    var list = this.storage.getDisplayList(true);\n    var zlevelList = this._zlevelList;\n    this._redrawId = Math.random();\n\n    this._paintList(list, paintAll, this._redrawId); // Paint custum layers\n\n\n    for (var i = 0; i < zlevelList.length; i++) {\n      var z = zlevelList[i];\n      var layer = this._layers[z];\n\n      if (!layer.__builtin__ && layer.refresh) {\n        var clearColor = i === 0 ? this._backgroundColor : null;\n        layer.refresh(clearColor);\n      }\n    }\n\n    this.refreshHover();\n    return this;\n  },\n  addHover: function (el, hoverStyle) {\n    if (el.__hoverMir) {\n      return;\n    }\n\n    var elMirror = new el.constructor({\n      style: el.style,\n      shape: el.shape\n    });\n    elMirror.__from = el;\n    el.__hoverMir = elMirror;\n    elMirror.setStyle(hoverStyle);\n\n    this._hoverElements.push(elMirror);\n  },\n  removeHover: function (el) {\n    var elMirror = el.__hoverMir;\n    var hoverElements = this._hoverElements;\n    var idx = util.indexOf(hoverElements, elMirror);\n\n    if (idx >= 0) {\n      hoverElements.splice(idx, 1);\n    }\n\n    el.__hoverMir = null;\n  },\n  clearHover: function (el) {\n    var hoverElements = this._hoverElements;\n\n    for (var i = 0; i < hoverElements.length; i++) {\n      var from = hoverElements[i].__from;\n\n      if (from) {\n        from.__hoverMir = null;\n      }\n    }\n\n    hoverElements.length = 0;\n  },\n  refreshHover: function () {\n    var hoverElements = this._hoverElements;\n    var len = hoverElements.length;\n    var hoverLayer = this._hoverlayer;\n    hoverLayer && hoverLayer.clear();\n\n    if (!len) {\n      return;\n    }\n\n    timsort(hoverElements, this.storage.displayableSortFunc); // Use a extream large zlevel\n    // FIXME?\n\n    if (!hoverLayer) {\n      hoverLayer = this._hoverlayer = this.getLayer(HOVER_LAYER_ZLEVEL);\n    }\n\n    var scope = {};\n    hoverLayer.ctx.save();\n\n    for (var i = 0; i < len;) {\n      var el = hoverElements[i];\n      var originalEl = el.__from; // Original el is removed\n      // PENDING\n\n      if (!(originalEl && originalEl.__zr)) {\n        hoverElements.splice(i, 1);\n        originalEl.__hoverMir = null;\n        len--;\n        continue;\n      }\n\n      i++; // Use transform\n      // FIXME style and shape ?\n\n      if (!originalEl.invisible) {\n        el.transform = originalEl.transform;\n        el.invTransform = originalEl.invTransform;\n        el.__clipPaths = originalEl.__clipPaths; // el.\n\n        this._doPaintEl(el, hoverLayer, true, scope);\n      }\n    }\n\n    hoverLayer.ctx.restore();\n  },\n  getHoverLayer: function () {\n    return this.getLayer(HOVER_LAYER_ZLEVEL);\n  },\n  _paintList: function (list, paintAll, redrawId) {\n    if (this._redrawId !== redrawId) {\n      return;\n    }\n\n    paintAll = paintAll || false;\n\n    this._updateLayerStatus(list);\n\n    var finished = this._doPaintList(list, paintAll);\n\n    if (this._needsManuallyCompositing) {\n      this._compositeManually();\n    }\n\n    if (!finished) {\n      var self = this;\n      requestAnimationFrame(function () {\n        self._paintList(list, paintAll, redrawId);\n      });\n    }\n  },\n  _compositeManually: function () {\n    var ctx = this.getLayer(CANVAS_ZLEVEL).ctx;\n    var width = this._domRoot.width;\n    var height = this._domRoot.height;\n    ctx.clearRect(0, 0, width, height); // PENDING, If only builtin layer?\n\n    this.eachBuiltinLayer(function (layer) {\n      if (layer.virtual) {\n        ctx.drawImage(layer.dom, 0, 0, width, height);\n      }\n    });\n  },\n  _doPaintList: function (list, paintAll) {\n    var layerList = [];\n\n    for (var zi = 0; zi < this._zlevelList.length; zi++) {\n      var zlevel = this._zlevelList[zi];\n      var layer = this._layers[zlevel];\n\n      if (layer.__builtin__ && layer !== this._hoverlayer && (layer.__dirty || paintAll)) {\n        layerList.push(layer);\n      }\n    }\n\n    var finished = true;\n\n    for (var k = 0; k < layerList.length; k++) {\n      var layer = layerList[k];\n      var ctx = layer.ctx;\n      var scope = {};\n      ctx.save();\n      var start = paintAll ? layer.__startIndex : layer.__drawIndex;\n      var useTimer = !paintAll && layer.incremental && Date.now;\n      var startTime = useTimer && Date.now();\n      var clearColor = layer.zlevel === this._zlevelList[0] ? this._backgroundColor : null; // All elements in this layer are cleared.\n\n      if (layer.__startIndex === layer.__endIndex) {\n        layer.clear(false, clearColor);\n      } else if (start === layer.__startIndex) {\n        var firstEl = list[start];\n\n        if (!firstEl.incremental || !firstEl.notClear || paintAll) {\n          layer.clear(false, clearColor);\n        }\n      }\n\n      if (start === -1) {\n        console.error('For some unknown reason. drawIndex is -1');\n        start = layer.__startIndex;\n      }\n\n      for (var i = start; i < layer.__endIndex; i++) {\n        var el = list[i];\n\n        this._doPaintEl(el, layer, paintAll, scope);\n\n        el.__dirty = false;\n\n        if (useTimer) {\n          // Date.now can be executed in 13,025,305 ops/second.\n          var dTime = Date.now() - startTime; // Give 15 millisecond to draw.\n          // The rest elements will be drawn in the next frame.\n\n          if (dTime > 15) {\n            break;\n          }\n        }\n      }\n\n      layer.__drawIndex = i;\n\n      if (layer.__drawIndex < layer.__endIndex) {\n        finished = false;\n      }\n\n      if (scope.prevElClipPaths) {\n        // Needs restore the state. If last drawn element is in the clipping area.\n        ctx.restore();\n      }\n\n      ctx.restore();\n    }\n\n    if (env.wxa) {\n      // Flush for weixin application\n      util.each(this._layers, function (layer) {\n        if (layer && layer.ctx && layer.ctx.draw) {\n          layer.ctx.draw();\n        }\n      });\n    }\n\n    return finished;\n  },\n  _doPaintEl: function (el, currentLayer, forcePaint, scope) {\n    var ctx = currentLayer.ctx;\n    var m = el.transform;\n\n    if ((currentLayer.__dirty || forcePaint) && // Ignore invisible element\n    !el.invisible // Ignore transparent element\n    && el.style.opacity !== 0 // Ignore scale 0 element, in some environment like node-canvas\n    // Draw a scale 0 element can cause all following draw wrong\n    // And setTransform with scale 0 will cause set back transform failed.\n    && !(m && !m[0] && !m[3]) // Ignore culled element\n    && !(el.culling && isDisplayableCulled(el, this._width, this._height))) {\n      var clipPaths = el.__clipPaths; // Optimize when clipping on group with several elements\n\n      if (!scope.prevElClipPaths || isClipPathChanged(clipPaths, scope.prevElClipPaths)) {\n        // If has previous clipping state, restore from it\n        if (scope.prevElClipPaths) {\n          currentLayer.ctx.restore();\n          scope.prevElClipPaths = null; // Reset prevEl since context has been restored\n\n          scope.prevEl = null;\n        } // New clipping state\n\n\n        if (clipPaths) {\n          ctx.save();\n          doClip(clipPaths, ctx);\n          scope.prevElClipPaths = clipPaths;\n        }\n      }\n\n      el.beforeBrush && el.beforeBrush(ctx);\n      el.brush(ctx, scope.prevEl || null);\n      scope.prevEl = el;\n      el.afterBrush && el.afterBrush(ctx);\n    }\n  },\n\n  /**\n   * 获取 zlevel 所在层，如果不存在则会创建一个新的层\n   * @param {number} zlevel\n   * @param {boolean} virtual Virtual layer will not be inserted into dom.\n   * @return {module:zrender/Layer}\n   */\n  getLayer: function (zlevel, virtual) {\n    if (this._singleCanvas && !this._needsManuallyCompositing) {\n      zlevel = CANVAS_ZLEVEL;\n    }\n\n    var layer = this._layers[zlevel];\n\n    if (!layer) {\n      // Create a new layer\n      layer = new Layer('zr_' + zlevel, this, this.dpr);\n      layer.zlevel = zlevel;\n      layer.__builtin__ = true;\n\n      if (this._layerConfig[zlevel]) {\n        util.merge(layer, this._layerConfig[zlevel], true);\n      }\n\n      if (virtual) {\n        layer.virtual = virtual;\n      }\n\n      this.insertLayer(zlevel, layer); // Context is created after dom inserted to document\n      // Or excanvas will get 0px clientWidth and clientHeight\n\n      layer.initContext();\n    }\n\n    return layer;\n  },\n  insertLayer: function (zlevel, layer) {\n    var layersMap = this._layers;\n    var zlevelList = this._zlevelList;\n    var len = zlevelList.length;\n    var prevLayer = null;\n    var i = -1;\n    var domRoot = this._domRoot;\n\n    if (layersMap[zlevel]) {\n      log('ZLevel ' + zlevel + ' has been used already');\n      return;\n    } // Check if is a valid layer\n\n\n    if (!isLayerValid(layer)) {\n      log('Layer of zlevel ' + zlevel + ' is not valid');\n      return;\n    }\n\n    if (len > 0 && zlevel > zlevelList[0]) {\n      for (i = 0; i < len - 1; i++) {\n        if (zlevelList[i] < zlevel && zlevelList[i + 1] > zlevel) {\n          break;\n        }\n      }\n\n      prevLayer = layersMap[zlevelList[i]];\n    }\n\n    zlevelList.splice(i + 1, 0, zlevel);\n    layersMap[zlevel] = layer; // Vitual layer will not directly show on the screen.\n    // (It can be a WebGL layer and assigned to a ZImage element)\n    // But it still under management of zrender.\n\n    if (!layer.virtual) {\n      if (prevLayer) {\n        var prevDom = prevLayer.dom;\n\n        if (prevDom.nextSibling) {\n          domRoot.insertBefore(layer.dom, prevDom.nextSibling);\n        } else {\n          domRoot.appendChild(layer.dom);\n        }\n      } else {\n        if (domRoot.firstChild) {\n          domRoot.insertBefore(layer.dom, domRoot.firstChild);\n        } else {\n          domRoot.appendChild(layer.dom);\n        }\n      }\n    }\n  },\n  // Iterate each layer\n  eachLayer: function (cb, context) {\n    var zlevelList = this._zlevelList;\n    var z;\n    var i;\n\n    for (i = 0; i < zlevelList.length; i++) {\n      z = zlevelList[i];\n      cb.call(context, this._layers[z], z);\n    }\n  },\n  // Iterate each buildin layer\n  eachBuiltinLayer: function (cb, context) {\n    var zlevelList = this._zlevelList;\n    var layer;\n    var z;\n    var i;\n\n    for (i = 0; i < zlevelList.length; i++) {\n      z = zlevelList[i];\n      layer = this._layers[z];\n\n      if (layer.__builtin__) {\n        cb.call(context, layer, z);\n      }\n    }\n  },\n  // Iterate each other layer except buildin layer\n  eachOtherLayer: function (cb, context) {\n    var zlevelList = this._zlevelList;\n    var layer;\n    var z;\n    var i;\n\n    for (i = 0; i < zlevelList.length; i++) {\n      z = zlevelList[i];\n      layer = this._layers[z];\n\n      if (!layer.__builtin__) {\n        cb.call(context, layer, z);\n      }\n    }\n  },\n\n  /**\n   * 获取所有已创建的层\n   * @param {Array.<module:zrender/Layer>} [prevLayer]\n   */\n  getLayers: function () {\n    return this._layers;\n  },\n  _updateLayerStatus: function (list) {\n    this.eachBuiltinLayer(function (layer, z) {\n      layer.__dirty = layer.__used = false;\n    });\n\n    function updatePrevLayer(idx) {\n      if (prevLayer) {\n        if (prevLayer.__endIndex !== idx) {\n          prevLayer.__dirty = true;\n        }\n\n        prevLayer.__endIndex = idx;\n      }\n    }\n\n    if (this._singleCanvas) {\n      for (var i = 1; i < list.length; i++) {\n        var el = list[i];\n\n        if (el.zlevel !== list[i - 1].zlevel || el.incremental) {\n          this._needsManuallyCompositing = true;\n          break;\n        }\n      }\n    }\n\n    var prevLayer = null;\n    var incrementalLayerCount = 0;\n\n    for (var i = 0; i < list.length; i++) {\n      var el = list[i];\n      var zlevel = el.zlevel;\n      var layer; // PENDING If change one incremental element style ?\n      // TODO Where there are non-incremental elements between incremental elements.\n\n      if (el.incremental) {\n        layer = this.getLayer(zlevel + INCREMENTAL_INC, this._needsManuallyCompositing);\n        layer.incremental = true;\n        incrementalLayerCount = 1;\n      } else {\n        layer = this.getLayer(zlevel + (incrementalLayerCount > 0 ? EL_AFTER_INCREMENTAL_INC : 0), this._needsManuallyCompositing);\n      }\n\n      if (!layer.__builtin__) {\n        log('ZLevel ' + zlevel + ' has been used by unkown layer ' + layer.id);\n      }\n\n      if (layer !== prevLayer) {\n        layer.__used = true;\n\n        if (layer.__startIndex !== i) {\n          layer.__dirty = true;\n        }\n\n        layer.__startIndex = i;\n\n        if (!layer.incremental) {\n          layer.__drawIndex = i;\n        } else {\n          // Mark layer draw index needs to update.\n          layer.__drawIndex = -1;\n        }\n\n        updatePrevLayer(i);\n        prevLayer = layer;\n      }\n\n      if (el.__dirty) {\n        layer.__dirty = true;\n\n        if (layer.incremental && layer.__drawIndex < 0) {\n          // Start draw from the first dirty element.\n          layer.__drawIndex = i;\n        }\n      }\n    }\n\n    updatePrevLayer(i);\n    this.eachBuiltinLayer(function (layer, z) {\n      // Used in last frame but not in this frame. Needs clear\n      if (!layer.__used && layer.getElementCount() > 0) {\n        layer.__dirty = true;\n        layer.__startIndex = layer.__endIndex = layer.__drawIndex = 0;\n      } // For incremental layer. In case start index changed and no elements are dirty.\n\n\n      if (layer.__dirty && layer.__drawIndex < 0) {\n        layer.__drawIndex = layer.__startIndex;\n      }\n    });\n  },\n\n  /**\n   * 清除hover层外所有内容\n   */\n  clear: function () {\n    this.eachBuiltinLayer(this._clearLayer);\n    return this;\n  },\n  _clearLayer: function (layer) {\n    layer.clear();\n  },\n  setBackgroundColor: function (backgroundColor) {\n    this._backgroundColor = backgroundColor;\n  },\n\n  /**\n   * 修改指定zlevel的绘制参数\n   *\n   * @param {string} zlevel\n   * @param {Object} config 配置对象\n   * @param {string} [config.clearColor=0] 每次清空画布的颜色\n   * @param {string} [config.motionBlur=false] 是否开启动态模糊\n   * @param {number} [config.lastFrameAlpha=0.7]\n   *                 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n   */\n  configLayer: function (zlevel, config) {\n    if (config) {\n      var layerConfig = this._layerConfig;\n\n      if (!layerConfig[zlevel]) {\n        layerConfig[zlevel] = config;\n      } else {\n        util.merge(layerConfig[zlevel], config, true);\n      }\n\n      for (var i = 0; i < this._zlevelList.length; i++) {\n        var _zlevel = this._zlevelList[i];\n\n        if (_zlevel === zlevel || _zlevel === zlevel + EL_AFTER_INCREMENTAL_INC) {\n          var layer = this._layers[_zlevel];\n          util.merge(layer, layerConfig[zlevel], true);\n        }\n      }\n    }\n  },\n\n  /**\n   * 删除指定层\n   * @param {number} zlevel 层所在的zlevel\n   */\n  delLayer: function (zlevel) {\n    var layers = this._layers;\n    var zlevelList = this._zlevelList;\n    var layer = layers[zlevel];\n\n    if (!layer) {\n      return;\n    }\n\n    layer.dom.parentNode.removeChild(layer.dom);\n    delete layers[zlevel];\n    zlevelList.splice(util.indexOf(zlevelList, zlevel), 1);\n  },\n\n  /**\n   * 区域大小变化后重绘\n   */\n  resize: function (width, height) {\n    if (!this._domRoot.style) {\n      // Maybe in node or worker\n      if (width == null || height == null) {\n        return;\n      }\n\n      this._width = width;\n      this._height = height;\n      this.getLayer(CANVAS_ZLEVEL).resize(width, height);\n    } else {\n      var domRoot = this._domRoot; // FIXME Why ?\n\n      domRoot.style.display = 'none'; // Save input w/h\n\n      var opts = this._opts;\n      width != null && (opts.width = width);\n      height != null && (opts.height = height);\n      width = this._getSize(0);\n      height = this._getSize(1);\n      domRoot.style.display = ''; // 优化没有实际改变的resize\n\n      if (this._width != width || height != this._height) {\n        domRoot.style.width = width + 'px';\n        domRoot.style.height = height + 'px';\n\n        for (var id in this._layers) {\n          if (this._layers.hasOwnProperty(id)) {\n            this._layers[id].resize(width, height);\n          }\n        }\n\n        util.each(this._progressiveLayers, function (layer) {\n          layer.resize(width, height);\n        });\n        this.refresh(true);\n      }\n\n      this._width = width;\n      this._height = height;\n    }\n\n    return this;\n  },\n\n  /**\n   * 清除单独的一个层\n   * @param {number} zlevel\n   */\n  clearLayer: function (zlevel) {\n    var layer = this._layers[zlevel];\n\n    if (layer) {\n      layer.clear();\n    }\n  },\n\n  /**\n   * 释放\n   */\n  dispose: function () {\n    this.root.innerHTML = '';\n    this.root = this.storage = this._domRoot = this._layers = null;\n  },\n\n  /**\n   * Get canvas which has all thing rendered\n   * @param {Object} opts\n   * @param {string} [opts.backgroundColor]\n   * @param {number} [opts.pixelRatio]\n   */\n  getRenderedCanvas: function (opts) {\n    opts = opts || {};\n\n    if (this._singleCanvas && !this._compositeManually) {\n      return this._layers[CANVAS_ZLEVEL].dom;\n    }\n\n    var imageLayer = new Layer('image', this, opts.pixelRatio || this.dpr);\n    imageLayer.initContext();\n    imageLayer.clear(false, opts.backgroundColor || this._backgroundColor);\n\n    if (opts.pixelRatio <= this.dpr) {\n      this.refresh();\n      var width = imageLayer.dom.width;\n      var height = imageLayer.dom.height;\n      var ctx = imageLayer.ctx;\n      this.eachLayer(function (layer) {\n        if (layer.__builtin__) {\n          ctx.drawImage(layer.dom, 0, 0, width, height);\n        } else if (layer.renderToCanvas) {\n          imageLayer.ctx.save();\n          layer.renderToCanvas(imageLayer.ctx);\n          imageLayer.ctx.restore();\n        }\n      });\n    } else {\n      // PENDING, echarts-gl and incremental rendering.\n      var scope = {};\n      var displayList = this.storage.getDisplayList(true);\n\n      for (var i = 0; i < displayList.length; i++) {\n        var el = displayList[i];\n\n        this._doPaintEl(el, imageLayer, true, scope);\n      }\n    }\n\n    return imageLayer.dom;\n  },\n\n  /**\n   * 获取绘图区域宽度\n   */\n  getWidth: function () {\n    return this._width;\n  },\n\n  /**\n   * 获取绘图区域高度\n   */\n  getHeight: function () {\n    return this._height;\n  },\n  _getSize: function (whIdx) {\n    var opts = this._opts;\n    var wh = ['width', 'height'][whIdx];\n    var cwh = ['clientWidth', 'clientHeight'][whIdx];\n    var plt = ['paddingLeft', 'paddingTop'][whIdx];\n    var prb = ['paddingRight', 'paddingBottom'][whIdx];\n\n    if (opts[wh] != null && opts[wh] !== 'auto') {\n      return parseFloat(opts[wh]);\n    }\n\n    var root = this.root; // IE8 does not support getComputedStyle, but it use VML.\n\n    var stl = document.defaultView.getComputedStyle(root);\n    return (root[cwh] || parseInt10(stl[wh]) || parseInt10(root.style[wh])) - (parseInt10(stl[plt]) || 0) - (parseInt10(stl[prb]) || 0) | 0;\n  },\n  pathToImage: function (path, dpr) {\n    dpr = dpr || this.dpr;\n    var canvas = document.createElement('canvas');\n    var ctx = canvas.getContext('2d');\n    var rect = path.getBoundingRect();\n    var style = path.style;\n    var shadowBlurSize = style.shadowBlur * dpr;\n    var shadowOffsetX = style.shadowOffsetX * dpr;\n    var shadowOffsetY = style.shadowOffsetY * dpr;\n    var lineWidth = style.hasStroke() ? style.lineWidth : 0;\n    var leftMargin = Math.max(lineWidth / 2, -shadowOffsetX + shadowBlurSize);\n    var rightMargin = Math.max(lineWidth / 2, shadowOffsetX + shadowBlurSize);\n    var topMargin = Math.max(lineWidth / 2, -shadowOffsetY + shadowBlurSize);\n    var bottomMargin = Math.max(lineWidth / 2, shadowOffsetY + shadowBlurSize);\n    var width = rect.width + leftMargin + rightMargin;\n    var height = rect.height + topMargin + bottomMargin;\n    canvas.width = width * dpr;\n    canvas.height = height * dpr;\n    ctx.scale(dpr, dpr);\n    ctx.clearRect(0, 0, width, height);\n    ctx.dpr = dpr;\n    var pathTransform = {\n      position: path.position,\n      rotation: path.rotation,\n      scale: path.scale\n    };\n    path.position = [leftMargin - rect.x, topMargin - rect.y];\n    path.rotation = 0;\n    path.scale = [1, 1];\n    path.updateTransform();\n\n    if (path) {\n      path.brush(ctx);\n    }\n\n    var ImageShape = Image;\n    var imgShape = new ImageShape({\n      style: {\n        x: 0,\n        y: 0,\n        image: canvas\n      }\n    });\n\n    if (pathTransform.position != null) {\n      imgShape.position = path.position = pathTransform.position;\n    }\n\n    if (pathTransform.rotation != null) {\n      imgShape.rotation = path.rotation = pathTransform.rotation;\n    }\n\n    if (pathTransform.scale != null) {\n      imgShape.scale = path.scale = pathTransform.scale;\n    }\n\n    return imgShape;\n  }\n};\nvar _default = Painter;\nmodule.exports = _default;","var textHelper = require(\"../helper/text\");\n\nvar BoundingRect = require(\"../../core/BoundingRect\");\n\n/**\n * Mixin for drawing text in a element bounding rect\n * @module zrender/mixin/RectText\n */\nvar tmpRect = new BoundingRect();\n\nvar RectText = function () {};\n\nRectText.prototype = {\n  constructor: RectText,\n\n  /**\n   * Draw text in a rect with specified position.\n   * @param  {CanvasRenderingContext2D} ctx\n   * @param  {Object} rect Displayable rect\n   */\n  drawRectText: function (ctx, rect) {\n    var style = this.style;\n    rect = style.textRect || rect; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true);\n    var text = style.text; // Convert to string\n\n    text != null && (text += '');\n\n    if (!textHelper.needDrawText(text, style)) {\n      return;\n    } // FIXME\n\n\n    ctx.save(); // Transform rect to view space\n\n    var transform = this.transform;\n\n    if (!style.transformText) {\n      if (transform) {\n        tmpRect.copy(rect);\n        tmpRect.applyTransform(transform);\n        rect = tmpRect;\n      }\n    } else {\n      this.setTransform(ctx);\n    } // transformText and textRotation can not be used at the same time.\n\n\n    textHelper.renderText(this, ctx, text, style, rect);\n    ctx.restore();\n  }\n};\nvar _default = RectText;\nmodule.exports = _default;","var guid = require(\"./core/guid\");\n\nvar Eventful = require(\"./mixin/Eventful\");\n\nvar Transformable = require(\"./mixin/Transformable\");\n\nvar Animatable = require(\"./mixin/Animatable\");\n\nvar zrUtil = require(\"./core/util\");\n\n/**\n * @alias module:zrender/Element\n * @constructor\n * @extends {module:zrender/mixin/Animatable}\n * @extends {module:zrender/mixin/Transformable}\n * @extends {module:zrender/mixin/Eventful}\n */\nvar Element = function (opts) {\n  // jshint ignore:line\n  Transformable.call(this, opts);\n  Eventful.call(this, opts);\n  Animatable.call(this, opts);\n  /**\n   * 画布元素ID\n   * @type {string}\n   */\n\n  this.id = opts.id || guid();\n};\n\nElement.prototype = {\n  /**\n   * 元素类型\n   * Element type\n   * @type {string}\n   */\n  type: 'element',\n\n  /**\n   * 元素名字\n   * Element name\n   * @type {string}\n   */\n  name: '',\n\n  /**\n   * ZRender 实例对象，会在 element 添加到 zrender 实例中后自动赋值\n   * ZRender instance will be assigned when element is associated with zrender\n   * @name module:/zrender/Element#__zr\n   * @type {module:zrender/ZRender}\n   */\n  __zr: null,\n\n  /**\n   * 图形是否忽略，为true时忽略图形的绘制以及事件触发\n   * If ignore drawing and events of the element object\n   * @name module:/zrender/Element#ignore\n   * @type {boolean}\n   * @default false\n   */\n  ignore: false,\n\n  /**\n   * 用于裁剪的路径(shape)，所有 Group 内的路径在绘制时都会被这个路径裁剪\n   * 该路径会继承被裁减对象的变换\n   * @type {module:zrender/graphic/Path}\n   * @see http://www.w3.org/TR/2dcontext/#clipping-region\n   * @readOnly\n   */\n  clipPath: null,\n\n  /**\n   * 是否是 Group\n   * @type {boolean}\n   */\n  isGroup: false,\n\n  /**\n   * Drift element\n   * @param  {number} dx dx on the global space\n   * @param  {number} dy dy on the global space\n   */\n  drift: function (dx, dy) {\n    switch (this.draggable) {\n      case 'horizontal':\n        dy = 0;\n        break;\n\n      case 'vertical':\n        dx = 0;\n        break;\n    }\n\n    var m = this.transform;\n\n    if (!m) {\n      m = this.transform = [1, 0, 0, 1, 0, 0];\n    }\n\n    m[4] += dx;\n    m[5] += dy;\n    this.decomposeTransform();\n    this.dirty(false);\n  },\n\n  /**\n   * Hook before update\n   */\n  beforeUpdate: function () {},\n\n  /**\n   * Hook after update\n   */\n  afterUpdate: function () {},\n\n  /**\n   * Update each frame\n   */\n  update: function () {\n    this.updateTransform();\n  },\n\n  /**\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  traverse: function (cb, context) {},\n\n  /**\n   * @protected\n   */\n  attrKV: function (key, value) {\n    if (key === 'position' || key === 'scale' || key === 'origin') {\n      // Copy the array\n      if (value) {\n        var target = this[key];\n\n        if (!target) {\n          target = this[key] = [];\n        }\n\n        target[0] = value[0];\n        target[1] = value[1];\n      }\n    } else {\n      this[key] = value;\n    }\n  },\n\n  /**\n   * Hide the element\n   */\n  hide: function () {\n    this.ignore = true;\n    this.__zr && this.__zr.refresh();\n  },\n\n  /**\n   * Show the element\n   */\n  show: function () {\n    this.ignore = false;\n    this.__zr && this.__zr.refresh();\n  },\n\n  /**\n   * @param {string|Object} key\n   * @param {*} value\n   */\n  attr: function (key, value) {\n    if (typeof key === 'string') {\n      this.attrKV(key, value);\n    } else if (zrUtil.isObject(key)) {\n      for (var name in key) {\n        if (key.hasOwnProperty(name)) {\n          this.attrKV(name, key[name]);\n        }\n      }\n    }\n\n    this.dirty(false);\n    return this;\n  },\n\n  /**\n   * @param {module:zrender/graphic/Path} clipPath\n   */\n  setClipPath: function (clipPath) {\n    var zr = this.__zr;\n\n    if (zr) {\n      clipPath.addSelfToZr(zr);\n    } // Remove previous clip path\n\n\n    if (this.clipPath && this.clipPath !== clipPath) {\n      this.removeClipPath();\n    }\n\n    this.clipPath = clipPath;\n    clipPath.__zr = zr;\n    clipPath.__clipTarget = this;\n    this.dirty(false);\n  },\n\n  /**\n   */\n  removeClipPath: function () {\n    var clipPath = this.clipPath;\n\n    if (clipPath) {\n      if (clipPath.__zr) {\n        clipPath.removeSelfFromZr(clipPath.__zr);\n      }\n\n      clipPath.__zr = null;\n      clipPath.__clipTarget = null;\n      this.clipPath = null;\n      this.dirty(false);\n    }\n  },\n\n  /**\n   * Add self from zrender instance.\n   * Not recursively because it will be invoked when element added to storage.\n   * @param {module:zrender/ZRender} zr\n   */\n  addSelfToZr: function (zr) {\n    this.__zr = zr; // 添加动画\n\n    var animators = this.animators;\n\n    if (animators) {\n      for (var i = 0; i < animators.length; i++) {\n        zr.animation.addAnimator(animators[i]);\n      }\n    }\n\n    if (this.clipPath) {\n      this.clipPath.addSelfToZr(zr);\n    }\n  },\n\n  /**\n   * Remove self from zrender instance.\n   * Not recursively because it will be invoked when element added to storage.\n   * @param {module:zrender/ZRender} zr\n   */\n  removeSelfFromZr: function (zr) {\n    this.__zr = null; // 移除动画\n\n    var animators = this.animators;\n\n    if (animators) {\n      for (var i = 0; i < animators.length; i++) {\n        zr.animation.removeAnimator(animators[i]);\n      }\n    }\n\n    if (this.clipPath) {\n      this.clipPath.removeSelfFromZr(zr);\n    }\n  }\n};\nzrUtil.mixin(Element, Animatable);\nzrUtil.mixin(Element, Transformable);\nzrUtil.mixin(Element, Eventful);\nvar _default = Element;\nmodule.exports = _default;","var textContain = require(\"zrender/lib/contain/text\");\n\nvar graphicUtil = require(\"../../util/graphic\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar PATH_COLOR = ['textStyle', 'color'];\nvar _default = {\n  /**\n   * Get color property or get color from option.textStyle.color\n   * @param {boolean} [isEmphasis]\n   * @return {string}\n   */\n  getTextColor: function (isEmphasis) {\n    var ecModel = this.ecModel;\n    return this.getShallow('color') || (!isEmphasis && ecModel ? ecModel.get(PATH_COLOR) : null);\n  },\n\n  /**\n   * Create font string from fontStyle, fontWeight, fontSize, fontFamily\n   * @return {string}\n   */\n  getFont: function () {\n    return graphicUtil.getFont({\n      fontStyle: this.getShallow('fontStyle'),\n      fontWeight: this.getShallow('fontWeight'),\n      fontSize: this.getShallow('fontSize'),\n      fontFamily: this.getShallow('fontFamily')\n    }, this.ecModel);\n  },\n  getTextRect: function (text) {\n    return textContain.getBoundingRect(text, this.getFont(), this.getShallow('align'), this.getShallow('verticalAlign') || this.getShallow('baseline'), this.getShallow('padding'), this.getShallow('rich'), this.getShallow('truncateText'));\n  }\n};\nmodule.exports = _default;","var Pattern = function (image, repeat) {\n  // Should do nothing more in this constructor. Because gradient can be\n  // declard by `color: {image: ...}`, where this constructor will not be called.\n  this.image = image;\n  this.repeat = repeat; // Can be cloned\n\n  this.type = 'pattern';\n};\n\nPattern.prototype.getCanvasPattern = function (ctx) {\n  return ctx.createPattern(this.image, this.repeat || 'repeat');\n};\n\nvar _default = Pattern;\nmodule.exports = _default;","var util = require(\"./core/util\");\n\nvar env = require(\"./core/env\");\n\nvar Group = require(\"./container/Group\");\n\nvar timsort = require(\"./core/timsort\");\n\n// Use timsort because in most case elements are partially sorted\n// https://jsfiddle.net/pissang/jr4x7mdm/8/\nfunction shapeCompareFunc(a, b) {\n  if (a.zlevel === b.zlevel) {\n    if (a.z === b.z) {\n      // if (a.z2 === b.z2) {\n      //     // FIXME Slow has renderidx compare\n      //     // http://stackoverflow.com/questions/20883421/sorting-in-javascript-should-every-compare-function-have-a-return-0-statement\n      //     // https://github.com/v8/v8/blob/47cce544a31ed5577ffe2963f67acb4144ee0232/src/js/array.js#L1012\n      //     return a.__renderidx - b.__renderidx;\n      // }\n      return a.z2 - b.z2;\n    }\n\n    return a.z - b.z;\n  }\n\n  return a.zlevel - b.zlevel;\n}\n/**\n * 内容仓库 (M)\n * @alias module:zrender/Storage\n * @constructor\n */\n\n\nvar Storage = function () {\n  // jshint ignore:line\n  this._roots = [];\n  this._displayList = [];\n  this._displayListLen = 0;\n};\n\nStorage.prototype = {\n  constructor: Storage,\n\n  /**\n   * @param  {Function} cb\n   *\n   */\n  traverse: function (cb, context) {\n    for (var i = 0; i < this._roots.length; i++) {\n      this._roots[i].traverse(cb, context);\n    }\n  },\n\n  /**\n   * 返回所有图形的绘制队列\n   * @param {boolean} [update=false] 是否在返回前更新该数组\n   * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组, 在 update 为 true 的时候有效\n   *\n   * 详见{@link module:zrender/graphic/Displayable.prototype.updateDisplayList}\n   * @return {Array.<module:zrender/graphic/Displayable>}\n   */\n  getDisplayList: function (update, includeIgnore) {\n    includeIgnore = includeIgnore || false;\n\n    if (update) {\n      this.updateDisplayList(includeIgnore);\n    }\n\n    return this._displayList;\n  },\n\n  /**\n   * 更新图形的绘制队列。\n   * 每次绘制前都会调用，该方法会先深度优先遍历整个树，更新所有Group和Shape的变换并且把所有可见的Shape保存到数组中，\n   * 最后根据绘制的优先级（zlevel > z > 插入顺序）排序得到绘制队列\n   * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组\n   */\n  updateDisplayList: function (includeIgnore) {\n    this._displayListLen = 0;\n    var roots = this._roots;\n    var displayList = this._displayList;\n\n    for (var i = 0, len = roots.length; i < len; i++) {\n      this._updateAndAddDisplayable(roots[i], null, includeIgnore);\n    }\n\n    displayList.length = this._displayListLen;\n    env.canvasSupported && timsort(displayList, shapeCompareFunc);\n  },\n  _updateAndAddDisplayable: function (el, clipPaths, includeIgnore) {\n    if (el.ignore && !includeIgnore) {\n      return;\n    }\n\n    el.beforeUpdate();\n\n    if (el.__dirty) {\n      el.update();\n    }\n\n    el.afterUpdate();\n    var userSetClipPath = el.clipPath;\n\n    if (userSetClipPath) {\n      // FIXME 效率影响\n      if (clipPaths) {\n        clipPaths = clipPaths.slice();\n      } else {\n        clipPaths = [];\n      }\n\n      var currentClipPath = userSetClipPath;\n      var parentClipPath = el; // Recursively add clip path\n\n      while (currentClipPath) {\n        // clipPath 的变换是基于使用这个 clipPath 的元素\n        currentClipPath.parent = parentClipPath;\n        currentClipPath.updateTransform();\n        clipPaths.push(currentClipPath);\n        parentClipPath = currentClipPath;\n        currentClipPath = currentClipPath.clipPath;\n      }\n    }\n\n    if (el.isGroup) {\n      var children = el._children;\n\n      for (var i = 0; i < children.length; i++) {\n        var child = children[i]; // Force to mark as dirty if group is dirty\n        // FIXME __dirtyPath ?\n\n        if (el.__dirty) {\n          child.__dirty = true;\n        }\n\n        this._updateAndAddDisplayable(child, clipPaths, includeIgnore);\n      } // Mark group clean here\n\n\n      el.__dirty = false;\n    } else {\n      el.__clipPaths = clipPaths;\n      this._displayList[this._displayListLen++] = el;\n    }\n  },\n\n  /**\n   * 添加图形(Shape)或者组(Group)到根节点\n   * @param {module:zrender/Element} el\n   */\n  addRoot: function (el) {\n    if (el.__storage === this) {\n      return;\n    }\n\n    if (el instanceof Group) {\n      el.addChildrenToStorage(this);\n    }\n\n    this.addToStorage(el);\n\n    this._roots.push(el);\n  },\n\n  /**\n   * 删除指定的图形(Shape)或者组(Group)\n   * @param {string|Array.<string>} [el] 如果为空清空整个Storage\n   */\n  delRoot: function (el) {\n    if (el == null) {\n      // 不指定el清空\n      for (var i = 0; i < this._roots.length; i++) {\n        var root = this._roots[i];\n\n        if (root instanceof Group) {\n          root.delChildrenFromStorage(this);\n        }\n      }\n\n      this._roots = [];\n      this._displayList = [];\n      this._displayListLen = 0;\n      return;\n    }\n\n    if (el instanceof Array) {\n      for (var i = 0, l = el.length; i < l; i++) {\n        this.delRoot(el[i]);\n      }\n\n      return;\n    }\n\n    var idx = util.indexOf(this._roots, el);\n\n    if (idx >= 0) {\n      this.delFromStorage(el);\n\n      this._roots.splice(idx, 1);\n\n      if (el instanceof Group) {\n        el.delChildrenFromStorage(this);\n      }\n    }\n  },\n  addToStorage: function (el) {\n    if (el) {\n      el.__storage = this;\n      el.dirty(false);\n    }\n\n    return this;\n  },\n  delFromStorage: function (el) {\n    if (el) {\n      el.__storage = null;\n    }\n\n    return this;\n  },\n\n  /**\n   * 清空并且释放Storage\n   */\n  dispose: function () {\n    this._renderList = this._roots = null;\n  },\n  displayableSortFunc: shapeCompareFunc\n};\nvar _default = Storage;\nmodule.exports = _default;","var completeDimensions = require(\"./completeDimensions\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Substitute `completeDimensions`.\n * `completeDimensions` is to be deprecated.\n */\n\n/**\n * @param {module:echarts/data/Source|module:echarts/data/List} source or data.\n * @param {Object|Array} [opt]\n * @param {Array.<string|Object>} [opt.coordDimensions=[]]\n * @param {number} [opt.dimensionsCount]\n * @param {string} [opt.generateCoord]\n * @param {string} [opt.generateCoordCount]\n * @param {Array.<string|Object>} [opt.dimensionsDefine=source.dimensionsDefine] Overwrite source define.\n * @param {Object|HashMap} [opt.encodeDefine=source.encodeDefine] Overwrite source define.\n * @return {Array.<Object>} dimensionsInfo\n */\nfunction _default(source, opt) {\n  opt = opt || {};\n  return completeDimensions(opt.coordDimensions || [], source, {\n    dimsDef: opt.dimensionsDefine || source.dimensionsDefine,\n    encodeDef: opt.encodeDefine || source.encodeDefine,\n    dimCount: opt.dimensionsCount,\n    generateCoord: opt.generateCoord,\n    generateCoordCount: opt.generateCoordCount\n  });\n}\n\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _listComponent = require(\"../helper/listComponent\");\n\nvar makeBackground = _listComponent.makeBackground;\n\nvar layoutUtil = require(\"../../util/layout\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar curry = zrUtil.curry;\nvar each = zrUtil.each;\nvar Group = graphic.Group;\n\nvar _default = echarts.extendComponentView({\n  type: 'legend.plain',\n  newlineDisabled: false,\n\n  /**\n   * @override\n   */\n  init: function () {\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n    this.group.add(this._contentGroup = new Group());\n    /**\n     * @private\n     * @type {module:zrender/Element}\n     */\n\n    this._backgroundEl;\n  },\n\n  /**\n   * @protected\n   */\n  getContentGroup: function () {\n    return this._contentGroup;\n  },\n\n  /**\n   * @override\n   */\n  render: function (legendModel, ecModel, api) {\n    this.resetInner();\n\n    if (!legendModel.get('show', true)) {\n      return;\n    }\n\n    var itemAlign = legendModel.get('align');\n\n    if (!itemAlign || itemAlign === 'auto') {\n      itemAlign = legendModel.get('left') === 'right' && legendModel.get('orient') === 'vertical' ? 'right' : 'left';\n    }\n\n    this.renderInner(itemAlign, legendModel, ecModel, api); // Perform layout.\n\n    var positionInfo = legendModel.getBoxLayoutParams();\n    var viewportSize = {\n      width: api.getWidth(),\n      height: api.getHeight()\n    };\n    var padding = legendModel.get('padding');\n    var maxSize = layoutUtil.getLayoutRect(positionInfo, viewportSize, padding);\n    var mainRect = this.layoutInner(legendModel, itemAlign, maxSize); // Place mainGroup, based on the calculated `mainRect`.\n\n    var layoutRect = layoutUtil.getLayoutRect(zrUtil.defaults({\n      width: mainRect.width,\n      height: mainRect.height\n    }, positionInfo), viewportSize, padding);\n    this.group.attr('position', [layoutRect.x - mainRect.x, layoutRect.y - mainRect.y]); // Render background after group is layout.\n\n    this.group.add(this._backgroundEl = makeBackground(mainRect, legendModel));\n  },\n\n  /**\n   * @protected\n   */\n  resetInner: function () {\n    this.getContentGroup().removeAll();\n    this._backgroundEl && this.group.remove(this._backgroundEl);\n  },\n\n  /**\n   * @protected\n   */\n  renderInner: function (itemAlign, legendModel, ecModel, api) {\n    var contentGroup = this.getContentGroup();\n    var legendDrawnMap = zrUtil.createHashMap();\n    var selectMode = legendModel.get('selectedMode');\n    var excludeSeriesId = [];\n    ecModel.eachRawSeries(function (seriesModel) {\n      !seriesModel.get('legendHoverLink') && excludeSeriesId.push(seriesModel.id);\n    });\n    each(legendModel.getData(), function (itemModel, dataIndex) {\n      var name = itemModel.get('name'); // Use empty string or \\n as a newline string\n\n      if (!this.newlineDisabled && (name === '' || name === '\\n')) {\n        contentGroup.add(new Group({\n          newline: true\n        }));\n        return;\n      } // Representitive series.\n\n\n      var seriesModel = ecModel.getSeriesByName(name)[0];\n\n      if (legendDrawnMap.get(name)) {\n        // Have been drawed\n        return;\n      } // Series legend\n\n\n      if (seriesModel) {\n        var data = seriesModel.getData();\n        var color = data.getVisual('color'); // If color is a callback function\n\n        if (typeof color === 'function') {\n          // Use the first data\n          color = color(seriesModel.getDataParams(0));\n        } // Using rect symbol defaultly\n\n\n        var legendSymbolType = data.getVisual('legendSymbol') || 'roundRect';\n        var symbolType = data.getVisual('symbol');\n\n        var itemGroup = this._createItem(name, dataIndex, itemModel, legendModel, legendSymbolType, symbolType, itemAlign, color, selectMode);\n\n        itemGroup.on('click', curry(dispatchSelectAction, name, api)).on('mouseover', curry(dispatchHighlightAction, seriesModel, null, api, excludeSeriesId)).on('mouseout', curry(dispatchDownplayAction, seriesModel, null, api, excludeSeriesId));\n        legendDrawnMap.set(name, true);\n      } else {\n        // Data legend of pie, funnel\n        ecModel.eachRawSeries(function (seriesModel) {\n          // In case multiple series has same data name\n          if (legendDrawnMap.get(name)) {\n            return;\n          }\n\n          if (seriesModel.legendDataProvider) {\n            var data = seriesModel.legendDataProvider();\n            var idx = data.indexOfName(name);\n\n            if (idx < 0) {\n              return;\n            }\n\n            var color = data.getItemVisual(idx, 'color');\n            var legendSymbolType = 'roundRect';\n\n            var itemGroup = this._createItem(name, dataIndex, itemModel, legendModel, legendSymbolType, null, itemAlign, color, selectMode); // FIXME: consider different series has items with the same name.\n\n\n            itemGroup.on('click', curry(dispatchSelectAction, name, api)) // FIXME Should not specify the series name\n            .on('mouseover', curry(dispatchHighlightAction, seriesModel, name, api, excludeSeriesId)).on('mouseout', curry(dispatchDownplayAction, seriesModel, name, api, excludeSeriesId));\n            legendDrawnMap.set(name, true);\n          }\n        }, this);\n      }\n    }, this);\n  },\n  _createItem: function (name, dataIndex, itemModel, legendModel, legendSymbolType, symbolType, itemAlign, color, selectMode) {\n    var itemWidth = legendModel.get('itemWidth');\n    var itemHeight = legendModel.get('itemHeight');\n    var inactiveColor = legendModel.get('inactiveColor');\n    var symbolKeepAspect = legendModel.get('symbolKeepAspect');\n    var isSelected = legendModel.isSelected(name);\n    var itemGroup = new Group();\n    var textStyleModel = itemModel.getModel('textStyle');\n    var itemIcon = itemModel.get('icon');\n    var tooltipModel = itemModel.getModel('tooltip');\n    var legendGlobalTooltipModel = tooltipModel.parentModel; // Use user given icon first\n\n    legendSymbolType = itemIcon || legendSymbolType;\n    itemGroup.add(createSymbol(legendSymbolType, 0, 0, itemWidth, itemHeight, isSelected ? color : inactiveColor, // symbolKeepAspect default true for legend\n    symbolKeepAspect == null ? true : symbolKeepAspect)); // Compose symbols\n    // PENDING\n\n    if (!itemIcon && symbolType // At least show one symbol, can't be all none\n    && (symbolType !== legendSymbolType || symbolType == 'none')) {\n      var size = itemHeight * 0.8;\n\n      if (symbolType === 'none') {\n        symbolType = 'circle';\n      } // Put symbol in the center\n\n\n      itemGroup.add(createSymbol(symbolType, (itemWidth - size) / 2, (itemHeight - size) / 2, size, size, isSelected ? color : inactiveColor, // symbolKeepAspect default true for legend\n      symbolKeepAspect == null ? true : symbolKeepAspect));\n    }\n\n    var textX = itemAlign === 'left' ? itemWidth + 5 : -5;\n    var textAlign = itemAlign;\n    var formatter = legendModel.get('formatter');\n    var content = name;\n\n    if (typeof formatter === 'string' && formatter) {\n      content = formatter.replace('{name}', name != null ? name : '');\n    } else if (typeof formatter === 'function') {\n      content = formatter(name);\n    }\n\n    itemGroup.add(new graphic.Text({\n      style: graphic.setTextStyle({}, textStyleModel, {\n        text: content,\n        x: textX,\n        y: itemHeight / 2,\n        textFill: isSelected ? textStyleModel.getTextColor() : inactiveColor,\n        textAlign: textAlign,\n        textVerticalAlign: 'middle'\n      })\n    })); // Add a invisible rect to increase the area of mouse hover\n\n    var hitRect = new graphic.Rect({\n      shape: itemGroup.getBoundingRect(),\n      invisible: true,\n      tooltip: tooltipModel.get('show') ? zrUtil.extend({\n        content: name,\n        // Defaul formatter\n        formatter: legendGlobalTooltipModel.get('formatter', true) || function () {\n          return name;\n        },\n        formatterParams: {\n          componentType: 'legend',\n          legendIndex: legendModel.componentIndex,\n          name: name,\n          $vars: ['name']\n        }\n      }, tooltipModel.option) : null\n    });\n    itemGroup.add(hitRect);\n    itemGroup.eachChild(function (child) {\n      child.silent = true;\n    });\n    hitRect.silent = !selectMode;\n    this.getContentGroup().add(itemGroup);\n    graphic.setHoverStyle(itemGroup);\n    itemGroup.__legendDataIndex = dataIndex;\n    return itemGroup;\n  },\n\n  /**\n   * @protected\n   */\n  layoutInner: function (legendModel, itemAlign, maxSize) {\n    var contentGroup = this.getContentGroup(); // Place items in contentGroup.\n\n    layoutUtil.box(legendModel.get('orient'), contentGroup, legendModel.get('itemGap'), maxSize.width, maxSize.height);\n    var contentRect = contentGroup.getBoundingRect();\n    contentGroup.attr('position', [-contentRect.x, -contentRect.y]);\n    return this.group.getBoundingRect();\n  }\n});\n\nfunction dispatchSelectAction(name, api) {\n  api.dispatchAction({\n    type: 'legendToggleSelect',\n    name: name\n  });\n}\n\nfunction dispatchHighlightAction(seriesModel, dataName, api, excludeSeriesId) {\n  // If element hover will move to a hoverLayer.\n  var el = api.getZr().storage.getDisplayList()[0];\n\n  if (!(el && el.useHoverLayer)) {\n    api.dispatchAction({\n      type: 'highlight',\n      seriesName: seriesModel.name,\n      name: dataName,\n      excludeSeriesId: excludeSeriesId\n    });\n  }\n}\n\nfunction dispatchDownplayAction(seriesModel, dataName, api, excludeSeriesId) {\n  // If element hover will move to a hoverLayer.\n  var el = api.getZr().storage.getDisplayList()[0];\n\n  if (!(el && el.useHoverLayer)) {\n    api.dispatchAction({\n      type: 'downplay',\n      seriesName: seriesModel.name,\n      name: dataName,\n      excludeSeriesId: excludeSeriesId\n    });\n  }\n}\n\nmodule.exports = _default;","var ArrayCtor = typeof Float32Array === 'undefined' ? Array : Float32Array;\n/**\n * 创建一个向量\n * @param {number} [x=0]\n * @param {number} [y=0]\n * @return {Vector2}\n */\n\nfunction create(x, y) {\n  var out = new ArrayCtor(2);\n\n  if (x == null) {\n    x = 0;\n  }\n\n  if (y == null) {\n    y = 0;\n  }\n\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\n * 复制向量数据\n * @param {Vector2} out\n * @param {Vector2} v\n * @return {Vector2}\n */\n\n\nfunction copy(out, v) {\n  out[0] = v[0];\n  out[1] = v[1];\n  return out;\n}\n/**\n * 克隆一个向量\n * @param {Vector2} v\n * @return {Vector2}\n */\n\n\nfunction clone(v) {\n  var out = new ArrayCtor(2);\n  out[0] = v[0];\n  out[1] = v[1];\n  return out;\n}\n/**\n * 设置向量的两个项\n * @param {Vector2} out\n * @param {number} a\n * @param {number} b\n * @return {Vector2} 结果\n */\n\n\nfunction set(out, a, b) {\n  out[0] = a;\n  out[1] = b;\n  return out;\n}\n/**\n * 向量相加\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\n\nfunction add(out, v1, v2) {\n  out[0] = v1[0] + v2[0];\n  out[1] = v1[1] + v2[1];\n  return out;\n}\n/**\n * 向量缩放后相加\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @param {number} a\n */\n\n\nfunction scaleAndAdd(out, v1, v2, a) {\n  out[0] = v1[0] + v2[0] * a;\n  out[1] = v1[1] + v2[1] * a;\n  return out;\n}\n/**\n * 向量相减\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\n\nfunction sub(out, v1, v2) {\n  out[0] = v1[0] - v2[0];\n  out[1] = v1[1] - v2[1];\n  return out;\n}\n/**\n * 向量长度\n * @param {Vector2} v\n * @return {number}\n */\n\n\nfunction len(v) {\n  return Math.sqrt(lenSquare(v));\n}\n\nvar length = len; // jshint ignore:line\n\n/**\n * 向量长度平方\n * @param {Vector2} v\n * @return {number}\n */\n\nfunction lenSquare(v) {\n  return v[0] * v[0] + v[1] * v[1];\n}\n\nvar lengthSquare = lenSquare;\n/**\n * 向量乘法\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\nfunction mul(out, v1, v2) {\n  out[0] = v1[0] * v2[0];\n  out[1] = v1[1] * v2[1];\n  return out;\n}\n/**\n * 向量除法\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\n\nfunction div(out, v1, v2) {\n  out[0] = v1[0] / v2[0];\n  out[1] = v1[1] / v2[1];\n  return out;\n}\n/**\n * 向量点乘\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @return {number}\n */\n\n\nfunction dot(v1, v2) {\n  return v1[0] * v2[0] + v1[1] * v2[1];\n}\n/**\n * 向量缩放\n * @param {Vector2} out\n * @param {Vector2} v\n * @param {number} s\n */\n\n\nfunction scale(out, v, s) {\n  out[0] = v[0] * s;\n  out[1] = v[1] * s;\n  return out;\n}\n/**\n * 向量归一化\n * @param {Vector2} out\n * @param {Vector2} v\n */\n\n\nfunction normalize(out, v) {\n  var d = len(v);\n\n  if (d === 0) {\n    out[0] = 0;\n    out[1] = 0;\n  } else {\n    out[0] = v[0] / d;\n    out[1] = v[1] / d;\n  }\n\n  return out;\n}\n/**\n * 计算向量间距离\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @return {number}\n */\n\n\nfunction distance(v1, v2) {\n  return Math.sqrt((v1[0] - v2[0]) * (v1[0] - v2[0]) + (v1[1] - v2[1]) * (v1[1] - v2[1]));\n}\n\nvar dist = distance;\n/**\n * 向量距离平方\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @return {number}\n */\n\nfunction distanceSquare(v1, v2) {\n  return (v1[0] - v2[0]) * (v1[0] - v2[0]) + (v1[1] - v2[1]) * (v1[1] - v2[1]);\n}\n\nvar distSquare = distanceSquare;\n/**\n * 求负向量\n * @param {Vector2} out\n * @param {Vector2} v\n */\n\nfunction negate(out, v) {\n  out[0] = -v[0];\n  out[1] = -v[1];\n  return out;\n}\n/**\n * 插值两个点\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @param {number} t\n */\n\n\nfunction lerp(out, v1, v2, t) {\n  out[0] = v1[0] + t * (v2[0] - v1[0]);\n  out[1] = v1[1] + t * (v2[1] - v1[1]);\n  return out;\n}\n/**\n * 矩阵左乘向量\n * @param {Vector2} out\n * @param {Vector2} v\n * @param {Vector2} m\n */\n\n\nfunction applyTransform(out, v, m) {\n  var x = v[0];\n  var y = v[1];\n  out[0] = m[0] * x + m[2] * y + m[4];\n  out[1] = m[1] * x + m[3] * y + m[5];\n  return out;\n}\n/**\n * 求两个向量最小值\n * @param  {Vector2} out\n * @param  {Vector2} v1\n * @param  {Vector2} v2\n */\n\n\nfunction min(out, v1, v2) {\n  out[0] = Math.min(v1[0], v2[0]);\n  out[1] = Math.min(v1[1], v2[1]);\n  return out;\n}\n/**\n * 求两个向量最大值\n * @param  {Vector2} out\n * @param  {Vector2} v1\n * @param  {Vector2} v2\n */\n\n\nfunction max(out, v1, v2) {\n  out[0] = Math.max(v1[0], v2[0]);\n  out[1] = Math.max(v1[1], v2[1]);\n  return out;\n}\n\nexports.create = create;\nexports.copy = copy;\nexports.clone = clone;\nexports.set = set;\nexports.add = add;\nexports.scaleAndAdd = scaleAndAdd;\nexports.sub = sub;\nexports.len = len;\nexports.length = length;\nexports.lenSquare = lenSquare;\nexports.lengthSquare = lengthSquare;\nexports.mul = mul;\nexports.div = div;\nexports.dot = dot;\nexports.scale = scale;\nexports.normalize = normalize;\nexports.distance = distance;\nexports.dist = dist;\nexports.distanceSquare = distanceSquare;\nexports.distSquare = distSquare;\nexports.negate = negate;\nexports.lerp = lerp;\nexports.applyTransform = applyTransform;\nexports.min = min;\nexports.max = max;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _model = require(\"../../util/model\");\n\nvar makeInner = _model.makeInner;\n\nvar modelHelper = require(\"./modelHelper\");\n\nvar findPointFromSeries = require(\"./findPointFromSeries\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar each = zrUtil.each;\nvar curry = zrUtil.curry;\nvar inner = makeInner();\n/**\n * Basic logic: check all axis, if they do not demand show/highlight,\n * then hide/downplay them.\n *\n * @param {Object} coordSysAxesInfo\n * @param {Object} payload\n * @param {string} [payload.currTrigger] 'click' | 'mousemove' | 'leave'\n * @param {Array.<number>} [payload.x] x and y, which are mandatory, specify a point to\n *              trigger axisPointer and tooltip.\n * @param {Array.<number>} [payload.y] x and y, which are mandatory, specify a point to\n *              trigger axisPointer and tooltip.\n * @param {Object} [payload.seriesIndex] finder, optional, restrict target axes.\n * @param {Object} [payload.dataIndex] finder, restrict target axes.\n * @param {Object} [payload.axesInfo] finder, restrict target axes.\n *        [{\n *          axisDim: 'x'|'y'|'angle'|...,\n *          axisIndex: ...,\n *          value: ...\n *        }, ...]\n * @param {Function} [payload.dispatchAction]\n * @param {Object} [payload.tooltipOption]\n * @param {Object|Array.<number>|Function} [payload.position] Tooltip position,\n *        which can be specified in dispatchAction\n * @param {module:echarts/model/Global} ecModel\n * @param {module:echarts/ExtensionAPI} api\n * @return {Object} content of event obj for echarts.connect.\n */\n\nfunction _default(payload, ecModel, api) {\n  var currTrigger = payload.currTrigger;\n  var point = [payload.x, payload.y];\n  var finder = payload;\n  var dispatchAction = payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n  var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo; // Pending\n  // See #6121. But we are not able to reproduce it yet.\n\n  if (!coordSysAxesInfo) {\n    return;\n  }\n\n  if (illegalPoint(point)) {\n    // Used in the default behavior of `connection`: use the sample seriesIndex\n    // and dataIndex. And also used in the tooltipView trigger.\n    point = findPointFromSeries({\n      seriesIndex: finder.seriesIndex,\n      // Do not use dataIndexInside from other ec instance.\n      // FIXME: auto detect it?\n      dataIndex: finder.dataIndex\n    }, ecModel).point;\n  }\n\n  var isIllegalPoint = illegalPoint(point); // Axis and value can be specified when calling dispatchAction({type: 'updateAxisPointer'}).\n  // Notice: In this case, it is difficult to get the `point` (which is necessary to show\n  // tooltip, so if point is not given, we just use the point found by sample seriesIndex\n  // and dataIndex.\n\n  var inputAxesInfo = finder.axesInfo;\n  var axesInfo = coordSysAxesInfo.axesInfo;\n  var shouldHide = currTrigger === 'leave' || illegalPoint(point);\n  var outputFinder = {};\n  var showValueMap = {};\n  var dataByCoordSys = {\n    list: [],\n    map: {}\n  };\n  var updaters = {\n    showPointer: curry(showPointer, showValueMap),\n    showTooltip: curry(showTooltip, dataByCoordSys)\n  }; // Process for triggered axes.\n\n  each(coordSysAxesInfo.coordSysMap, function (coordSys, coordSysKey) {\n    // If a point given, it must be contained by the coordinate system.\n    var coordSysContainsPoint = isIllegalPoint || coordSys.containPoint(point);\n    each(coordSysAxesInfo.coordSysAxesInfo[coordSysKey], function (axisInfo, key) {\n      var axis = axisInfo.axis;\n      var inputAxisInfo = findInputAxisInfo(inputAxesInfo, axisInfo); // If no inputAxesInfo, no axis is restricted.\n\n      if (!shouldHide && coordSysContainsPoint && (!inputAxesInfo || inputAxisInfo)) {\n        var val = inputAxisInfo && inputAxisInfo.value;\n\n        if (val == null && !isIllegalPoint) {\n          val = axis.pointToData(point);\n        }\n\n        val != null && processOnAxis(axisInfo, val, updaters, false, outputFinder);\n      }\n    });\n  }); // Process for linked axes.\n\n  var linkTriggers = {};\n  each(axesInfo, function (tarAxisInfo, tarKey) {\n    var linkGroup = tarAxisInfo.linkGroup; // If axis has been triggered in the previous stage, it should not be triggered by link.\n\n    if (linkGroup && !showValueMap[tarKey]) {\n      each(linkGroup.axesInfo, function (srcAxisInfo, srcKey) {\n        var srcValItem = showValueMap[srcKey]; // If srcValItem exist, source axis is triggered, so link to target axis.\n\n        if (srcAxisInfo !== tarAxisInfo && srcValItem) {\n          var val = srcValItem.value;\n          linkGroup.mapper && (val = tarAxisInfo.axis.scale.parse(linkGroup.mapper(val, makeMapperParam(srcAxisInfo), makeMapperParam(tarAxisInfo))));\n          linkTriggers[tarAxisInfo.key] = val;\n        }\n      });\n    }\n  });\n  each(linkTriggers, function (val, tarKey) {\n    processOnAxis(axesInfo[tarKey], val, updaters, true, outputFinder);\n  });\n  updateModelActually(showValueMap, axesInfo, outputFinder);\n  dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction);\n  dispatchHighDownActually(axesInfo, dispatchAction, api);\n  return outputFinder;\n}\n\nfunction processOnAxis(axisInfo, newValue, updaters, dontSnap, outputFinder) {\n  var axis = axisInfo.axis;\n\n  if (axis.scale.isBlank() || !axis.containData(newValue)) {\n    return;\n  }\n\n  if (!axisInfo.involveSeries) {\n    updaters.showPointer(axisInfo, newValue);\n    return;\n  } // Heavy calculation. So put it after axis.containData checking.\n\n\n  var payloadInfo = buildPayloadsBySeries(newValue, axisInfo);\n  var payloadBatch = payloadInfo.payloadBatch;\n  var snapToValue = payloadInfo.snapToValue; // Fill content of event obj for echarts.connect.\n  // By defualt use the first involved series data as a sample to connect.\n\n  if (payloadBatch[0] && outputFinder.seriesIndex == null) {\n    zrUtil.extend(outputFinder, payloadBatch[0]);\n  } // If no linkSource input, this process is for collecting link\n  // target, where snap should not be accepted.\n\n\n  if (!dontSnap && axisInfo.snap) {\n    if (axis.containData(snapToValue) && snapToValue != null) {\n      newValue = snapToValue;\n    }\n  }\n\n  updaters.showPointer(axisInfo, newValue, payloadBatch, outputFinder); // Tooltip should always be snapToValue, otherwise there will be\n  // incorrect \"axis value ~ series value\" mapping displayed in tooltip.\n\n  updaters.showTooltip(axisInfo, payloadInfo, snapToValue);\n}\n\nfunction buildPayloadsBySeries(value, axisInfo) {\n  var axis = axisInfo.axis;\n  var dim = axis.dim;\n  var snapToValue = value;\n  var payloadBatch = [];\n  var minDist = Number.MAX_VALUE;\n  var minDiff = -1;\n  each(axisInfo.seriesModels, function (series, idx) {\n    var dataDim = series.getData().mapDimension(dim, true);\n    var seriesNestestValue;\n    var dataIndices;\n\n    if (series.getAxisTooltipData) {\n      var result = series.getAxisTooltipData(dataDim, value, axis);\n      dataIndices = result.dataIndices;\n      seriesNestestValue = result.nestestValue;\n    } else {\n      dataIndices = series.getData().indicesOfNearest(dataDim[0], value, // Add a threshold to avoid find the wrong dataIndex\n      // when data length is not same.\n      // false,\n      axis.type === 'category' ? 0.5 : null);\n\n      if (!dataIndices.length) {\n        return;\n      }\n\n      seriesNestestValue = series.getData().get(dataDim[0], dataIndices[0]);\n    }\n\n    if (seriesNestestValue == null || !isFinite(seriesNestestValue)) {\n      return;\n    }\n\n    var diff = value - seriesNestestValue;\n    var dist = Math.abs(diff); // Consider category case\n\n    if (dist <= minDist) {\n      if (dist < minDist || diff >= 0 && minDiff < 0) {\n        minDist = dist;\n        minDiff = diff;\n        snapToValue = seriesNestestValue;\n        payloadBatch.length = 0;\n      }\n\n      each(dataIndices, function (dataIndex) {\n        payloadBatch.push({\n          seriesIndex: series.seriesIndex,\n          dataIndexInside: dataIndex,\n          dataIndex: series.getData().getRawIndex(dataIndex)\n        });\n      });\n    }\n  });\n  return {\n    payloadBatch: payloadBatch,\n    snapToValue: snapToValue\n  };\n}\n\nfunction showPointer(showValueMap, axisInfo, value, payloadBatch) {\n  showValueMap[axisInfo.key] = {\n    value: value,\n    payloadBatch: payloadBatch\n  };\n}\n\nfunction showTooltip(dataByCoordSys, axisInfo, payloadInfo, value) {\n  var payloadBatch = payloadInfo.payloadBatch;\n  var axis = axisInfo.axis;\n  var axisModel = axis.model;\n  var axisPointerModel = axisInfo.axisPointerModel; // If no data, do not create anything in dataByCoordSys,\n  // whose length will be used to judge whether dispatch action.\n\n  if (!axisInfo.triggerTooltip || !payloadBatch.length) {\n    return;\n  }\n\n  var coordSysModel = axisInfo.coordSys.model;\n  var coordSysKey = modelHelper.makeKey(coordSysModel);\n  var coordSysItem = dataByCoordSys.map[coordSysKey];\n\n  if (!coordSysItem) {\n    coordSysItem = dataByCoordSys.map[coordSysKey] = {\n      coordSysId: coordSysModel.id,\n      coordSysIndex: coordSysModel.componentIndex,\n      coordSysType: coordSysModel.type,\n      coordSysMainType: coordSysModel.mainType,\n      dataByAxis: []\n    };\n    dataByCoordSys.list.push(coordSysItem);\n  }\n\n  coordSysItem.dataByAxis.push({\n    axisDim: axis.dim,\n    axisIndex: axisModel.componentIndex,\n    axisType: axisModel.type,\n    axisId: axisModel.id,\n    value: value,\n    // Caustion: viewHelper.getValueLabel is actually on \"view stage\", which\n    // depends that all models have been updated. So it should not be performed\n    // here. Considering axisPointerModel used here is volatile, which is hard\n    // to be retrieve in TooltipView, we prepare parameters here.\n    valueLabelOpt: {\n      precision: axisPointerModel.get('label.precision'),\n      formatter: axisPointerModel.get('label.formatter')\n    },\n    seriesDataIndices: payloadBatch.slice()\n  });\n}\n\nfunction updateModelActually(showValueMap, axesInfo, outputFinder) {\n  var outputAxesInfo = outputFinder.axesInfo = []; // Basic logic: If no 'show' required, 'hide' this axisPointer.\n\n  each(axesInfo, function (axisInfo, key) {\n    var option = axisInfo.axisPointerModel.option;\n    var valItem = showValueMap[key];\n\n    if (valItem) {\n      !axisInfo.useHandle && (option.status = 'show');\n      option.value = valItem.value; // For label formatter param and highlight.\n\n      option.seriesDataIndices = (valItem.payloadBatch || []).slice();\n    } // When always show (e.g., handle used), remain\n    // original value and status.\n    else {\n        // If hide, value still need to be set, consider\n        // click legend to toggle axis blank.\n        !axisInfo.useHandle && (option.status = 'hide');\n      } // If status is 'hide', should be no info in payload.\n\n\n    option.status === 'show' && outputAxesInfo.push({\n      axisDim: axisInfo.axis.dim,\n      axisIndex: axisInfo.axis.model.componentIndex,\n      value: option.value\n    });\n  });\n}\n\nfunction dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction) {\n  // Basic logic: If no showTip required, hideTip will be dispatched.\n  if (illegalPoint(point) || !dataByCoordSys.list.length) {\n    dispatchAction({\n      type: 'hideTip'\n    });\n    return;\n  } // In most case only one axis (or event one series is used). It is\n  // convinient to fetch payload.seriesIndex and payload.dataIndex\n  // dirtectly. So put the first seriesIndex and dataIndex of the first\n  // axis on the payload.\n\n\n  var sampleItem = ((dataByCoordSys.list[0].dataByAxis[0] || {}).seriesDataIndices || [])[0] || {};\n  dispatchAction({\n    type: 'showTip',\n    escapeConnect: true,\n    x: point[0],\n    y: point[1],\n    tooltipOption: payload.tooltipOption,\n    position: payload.position,\n    dataIndexInside: sampleItem.dataIndexInside,\n    dataIndex: sampleItem.dataIndex,\n    seriesIndex: sampleItem.seriesIndex,\n    dataByCoordSys: dataByCoordSys.list\n  });\n}\n\nfunction dispatchHighDownActually(axesInfo, dispatchAction, api) {\n  // FIXME\n  // highlight status modification shoule be a stage of main process?\n  // (Consider confilct (e.g., legend and axisPointer) and setOption)\n  var zr = api.getZr();\n  var highDownKey = 'axisPointerLastHighlights';\n  var lastHighlights = inner(zr)[highDownKey] || {};\n  var newHighlights = inner(zr)[highDownKey] = {}; // Update highlight/downplay status according to axisPointer model.\n  // Build hash map and remove duplicate incidentally.\n\n  each(axesInfo, function (axisInfo, key) {\n    var option = axisInfo.axisPointerModel.option;\n    option.status === 'show' && each(option.seriesDataIndices, function (batchItem) {\n      var key = batchItem.seriesIndex + ' | ' + batchItem.dataIndex;\n      newHighlights[key] = batchItem;\n    });\n  }); // Diff.\n\n  var toHighlight = [];\n  var toDownplay = [];\n  zrUtil.each(lastHighlights, function (batchItem, key) {\n    !newHighlights[key] && toDownplay.push(batchItem);\n  });\n  zrUtil.each(newHighlights, function (batchItem, key) {\n    !lastHighlights[key] && toHighlight.push(batchItem);\n  });\n  toDownplay.length && api.dispatchAction({\n    type: 'downplay',\n    escapeConnect: true,\n    batch: toDownplay\n  });\n  toHighlight.length && api.dispatchAction({\n    type: 'highlight',\n    escapeConnect: true,\n    batch: toHighlight\n  });\n}\n\nfunction findInputAxisInfo(inputAxesInfo, axisInfo) {\n  for (var i = 0; i < (inputAxesInfo || []).length; i++) {\n    var inputAxisInfo = inputAxesInfo[i];\n\n    if (axisInfo.axis.dim === inputAxisInfo.axisDim && axisInfo.axis.model.componentIndex === inputAxisInfo.axisIndex) {\n      return inputAxisInfo;\n    }\n  }\n}\n\nfunction makeMapperParam(axisInfo) {\n  var axisModel = axisInfo.axis.model;\n  var item = {};\n  var dim = item.axisDim = axisInfo.axis.dim;\n  item.axisIndex = item[dim + 'AxisIndex'] = axisModel.componentIndex;\n  item.axisName = item[dim + 'AxisName'] = axisModel.name;\n  item.axisId = item[dim + 'AxisId'] = axisModel.id;\n  return item;\n}\n\nfunction illegalPoint(point) {\n  return !point || point[0] == null || isNaN(point[0]) || point[1] == null || isNaN(point[1]);\n}\n\nmodule.exports = _default;","// Simple LRU cache use doubly linked list\n// @module zrender/core/LRU\n\n/**\n * Simple double linked list. Compared with array, it has O(1) remove operation.\n * @constructor\n */\nvar LinkedList = function () {\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n  this.head = null;\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n\n  this.tail = null;\n  this._len = 0;\n};\n\nvar linkedListProto = LinkedList.prototype;\n/**\n * Insert a new value at the tail\n * @param  {} val\n * @return {module:zrender/core/LRU~Entry}\n */\n\nlinkedListProto.insert = function (val) {\n  var entry = new Entry(val);\n  this.insertEntry(entry);\n  return entry;\n};\n/**\n * Insert an entry at the tail\n * @param  {module:zrender/core/LRU~Entry} entry\n */\n\n\nlinkedListProto.insertEntry = function (entry) {\n  if (!this.head) {\n    this.head = this.tail = entry;\n  } else {\n    this.tail.next = entry;\n    entry.prev = this.tail;\n    entry.next = null;\n    this.tail = entry;\n  }\n\n  this._len++;\n};\n/**\n * Remove entry.\n * @param  {module:zrender/core/LRU~Entry} entry\n */\n\n\nlinkedListProto.remove = function (entry) {\n  var prev = entry.prev;\n  var next = entry.next;\n\n  if (prev) {\n    prev.next = next;\n  } else {\n    // Is head\n    this.head = next;\n  }\n\n  if (next) {\n    next.prev = prev;\n  } else {\n    // Is tail\n    this.tail = prev;\n  }\n\n  entry.next = entry.prev = null;\n  this._len--;\n};\n/**\n * @return {number}\n */\n\n\nlinkedListProto.len = function () {\n  return this._len;\n};\n/**\n * Clear list\n */\n\n\nlinkedListProto.clear = function () {\n  this.head = this.tail = null;\n  this._len = 0;\n};\n/**\n * @constructor\n * @param {} val\n */\n\n\nvar Entry = function (val) {\n  /**\n   * @type {}\n   */\n  this.value = val;\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n\n  this.next;\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n\n  this.prev;\n};\n/**\n * LRU Cache\n * @constructor\n * @alias module:zrender/core/LRU\n */\n\n\nvar LRU = function (maxSize) {\n  this._list = new LinkedList();\n  this._map = {};\n  this._maxSize = maxSize || 10;\n  this._lastRemovedEntry = null;\n};\n\nvar LRUProto = LRU.prototype;\n/**\n * @param  {string} key\n * @param  {} value\n * @return {} Removed value\n */\n\nLRUProto.put = function (key, value) {\n  var list = this._list;\n  var map = this._map;\n  var removed = null;\n\n  if (map[key] == null) {\n    var len = list.len(); // Reuse last removed entry\n\n    var entry = this._lastRemovedEntry;\n\n    if (len >= this._maxSize && len > 0) {\n      // Remove the least recently used\n      var leastUsedEntry = list.head;\n      list.remove(leastUsedEntry);\n      delete map[leastUsedEntry.key];\n      removed = leastUsedEntry.value;\n      this._lastRemovedEntry = leastUsedEntry;\n    }\n\n    if (entry) {\n      entry.value = value;\n    } else {\n      entry = new Entry(value);\n    }\n\n    entry.key = key;\n    list.insertEntry(entry);\n    map[key] = entry;\n  }\n\n  return removed;\n};\n/**\n * @param  {string} key\n * @return {}\n */\n\n\nLRUProto.get = function (key) {\n  var entry = this._map[key];\n  var list = this._list;\n\n  if (entry != null) {\n    // Put the latest used entry in the tail\n    if (entry !== list.tail) {\n      list.remove(entry);\n      list.insertEntry(entry);\n    }\n\n    return entry.value;\n  }\n};\n/**\n * Clear the cache\n */\n\n\nLRUProto.clear = function () {\n  this._list.clear();\n\n  this._map = {};\n};\n\nvar _default = LRU;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../../util/model\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar each = zrUtil.each;\nvar isObject = zrUtil.isObject;\nvar POSSIBLE_STYLES = ['areaStyle', 'lineStyle', 'nodeStyle', 'linkStyle', 'chordStyle', 'label', 'labelLine'];\n\nfunction compatEC2ItemStyle(opt) {\n  var itemStyleOpt = opt && opt.itemStyle;\n\n  if (!itemStyleOpt) {\n    return;\n  }\n\n  for (var i = 0, len = POSSIBLE_STYLES.length; i < len; i++) {\n    var styleName = POSSIBLE_STYLES[i];\n    var normalItemStyleOpt = itemStyleOpt.normal;\n    var emphasisItemStyleOpt = itemStyleOpt.emphasis;\n\n    if (normalItemStyleOpt && normalItemStyleOpt[styleName]) {\n      opt[styleName] = opt[styleName] || {};\n\n      if (!opt[styleName].normal) {\n        opt[styleName].normal = normalItemStyleOpt[styleName];\n      } else {\n        zrUtil.merge(opt[styleName].normal, normalItemStyleOpt[styleName]);\n      }\n\n      normalItemStyleOpt[styleName] = null;\n    }\n\n    if (emphasisItemStyleOpt && emphasisItemStyleOpt[styleName]) {\n      opt[styleName] = opt[styleName] || {};\n\n      if (!opt[styleName].emphasis) {\n        opt[styleName].emphasis = emphasisItemStyleOpt[styleName];\n      } else {\n        zrUtil.merge(opt[styleName].emphasis, emphasisItemStyleOpt[styleName]);\n      }\n\n      emphasisItemStyleOpt[styleName] = null;\n    }\n  }\n}\n\nfunction convertNormalEmphasis(opt, optType, useExtend) {\n  if (opt && opt[optType] && (opt[optType].normal || opt[optType].emphasis)) {\n    var normalOpt = opt[optType].normal;\n    var emphasisOpt = opt[optType].emphasis;\n\n    if (normalOpt) {\n      // Timeline controlStyle has other properties besides normal and emphasis\n      if (useExtend) {\n        opt[optType].normal = opt[optType].emphasis = null;\n        zrUtil.defaults(opt[optType], normalOpt);\n      } else {\n        opt[optType] = normalOpt;\n      }\n    }\n\n    if (emphasisOpt) {\n      opt.emphasis = opt.emphasis || {};\n      opt.emphasis[optType] = emphasisOpt;\n    }\n  }\n}\n\nfunction removeEC3NormalStatus(opt) {\n  convertNormalEmphasis(opt, 'itemStyle');\n  convertNormalEmphasis(opt, 'lineStyle');\n  convertNormalEmphasis(opt, 'areaStyle');\n  convertNormalEmphasis(opt, 'label');\n  convertNormalEmphasis(opt, 'labelLine'); // treemap\n\n  convertNormalEmphasis(opt, 'upperLabel'); // graph\n\n  convertNormalEmphasis(opt, 'edgeLabel');\n}\n\nfunction compatTextStyle(opt, propName) {\n  // Check whether is not object (string\\null\\undefined ...)\n  var labelOptSingle = isObject(opt) && opt[propName];\n  var textStyle = isObject(labelOptSingle) && labelOptSingle.textStyle;\n\n  if (textStyle) {\n    for (var i = 0, len = modelUtil.TEXT_STYLE_OPTIONS.length; i < len; i++) {\n      var propName = modelUtil.TEXT_STYLE_OPTIONS[i];\n\n      if (textStyle.hasOwnProperty(propName)) {\n        labelOptSingle[propName] = textStyle[propName];\n      }\n    }\n  }\n}\n\nfunction compatEC3CommonStyles(opt) {\n  if (opt) {\n    removeEC3NormalStatus(opt);\n    compatTextStyle(opt, 'label');\n    opt.emphasis && compatTextStyle(opt.emphasis, 'label');\n  }\n}\n\nfunction processSeries(seriesOpt) {\n  if (!isObject(seriesOpt)) {\n    return;\n  }\n\n  compatEC2ItemStyle(seriesOpt);\n  removeEC3NormalStatus(seriesOpt);\n  compatTextStyle(seriesOpt, 'label'); // treemap\n\n  compatTextStyle(seriesOpt, 'upperLabel'); // graph\n\n  compatTextStyle(seriesOpt, 'edgeLabel');\n\n  if (seriesOpt.emphasis) {\n    compatTextStyle(seriesOpt.emphasis, 'label'); // treemap\n\n    compatTextStyle(seriesOpt.emphasis, 'upperLabel'); // graph\n\n    compatTextStyle(seriesOpt.emphasis, 'edgeLabel');\n  }\n\n  var markPoint = seriesOpt.markPoint;\n\n  if (markPoint) {\n    compatEC2ItemStyle(markPoint);\n    compatEC3CommonStyles(markPoint);\n  }\n\n  var markLine = seriesOpt.markLine;\n\n  if (markLine) {\n    compatEC2ItemStyle(markLine);\n    compatEC3CommonStyles(markLine);\n  }\n\n  var markArea = seriesOpt.markArea;\n\n  if (markArea) {\n    compatEC3CommonStyles(markArea);\n  }\n\n  var data = seriesOpt.data; // Break with ec3: if `setOption` again, there may be no `type` in option,\n  // then the backward compat based on option type will not be performed.\n\n  if (seriesOpt.type === 'graph') {\n    data = data || seriesOpt.nodes;\n    var edgeData = seriesOpt.links || seriesOpt.edges;\n\n    if (edgeData && !zrUtil.isTypedArray(edgeData)) {\n      for (var i = 0; i < edgeData.length; i++) {\n        compatEC3CommonStyles(edgeData[i]);\n      }\n    }\n\n    zrUtil.each(seriesOpt.categories, function (opt) {\n      removeEC3NormalStatus(opt);\n    });\n  }\n\n  if (data && !zrUtil.isTypedArray(data)) {\n    for (var i = 0; i < data.length; i++) {\n      compatEC3CommonStyles(data[i]);\n    }\n  } // mark point data\n\n\n  var markPoint = seriesOpt.markPoint;\n\n  if (markPoint && markPoint.data) {\n    var mpData = markPoint.data;\n\n    for (var i = 0; i < mpData.length; i++) {\n      compatEC3CommonStyles(mpData[i]);\n    }\n  } // mark line data\n\n\n  var markLine = seriesOpt.markLine;\n\n  if (markLine && markLine.data) {\n    var mlData = markLine.data;\n\n    for (var i = 0; i < mlData.length; i++) {\n      if (zrUtil.isArray(mlData[i])) {\n        compatEC3CommonStyles(mlData[i][0]);\n        compatEC3CommonStyles(mlData[i][1]);\n      } else {\n        compatEC3CommonStyles(mlData[i]);\n      }\n    }\n  } // Series\n\n\n  if (seriesOpt.type === 'gauge') {\n    compatTextStyle(seriesOpt, 'axisLabel');\n    compatTextStyle(seriesOpt, 'title');\n    compatTextStyle(seriesOpt, 'detail');\n  } else if (seriesOpt.type === 'treemap') {\n    convertNormalEmphasis(seriesOpt.breadcrumb, 'itemStyle');\n    zrUtil.each(seriesOpt.levels, function (opt) {\n      removeEC3NormalStatus(opt);\n    });\n  } else if (seriesOpt.type === 'tree') {\n    removeEC3NormalStatus(seriesOpt.leaves);\n  } // sunburst starts from ec4, so it does not need to compat levels.\n\n}\n\nfunction toArr(o) {\n  return zrUtil.isArray(o) ? o : o ? [o] : [];\n}\n\nfunction toObj(o) {\n  return (zrUtil.isArray(o) ? o[0] : o) || {};\n}\n\nfunction _default(option, isTheme) {\n  each(toArr(option.series), function (seriesOpt) {\n    isObject(seriesOpt) && processSeries(seriesOpt);\n  });\n  var axes = ['xAxis', 'yAxis', 'radiusAxis', 'angleAxis', 'singleAxis', 'parallelAxis', 'radar'];\n  isTheme && axes.push('valueAxis', 'categoryAxis', 'logAxis', 'timeAxis');\n  each(axes, function (axisName) {\n    each(toArr(option[axisName]), function (axisOpt) {\n      if (axisOpt) {\n        compatTextStyle(axisOpt, 'axisLabel');\n        compatTextStyle(axisOpt.axisPointer, 'label');\n      }\n    });\n  });\n  each(toArr(option.parallel), function (parallelOpt) {\n    var parallelAxisDefault = parallelOpt && parallelOpt.parallelAxisDefault;\n    compatTextStyle(parallelAxisDefault, 'axisLabel');\n    compatTextStyle(parallelAxisDefault && parallelAxisDefault.axisPointer, 'label');\n  });\n  each(toArr(option.calendar), function (calendarOpt) {\n    convertNormalEmphasis(calendarOpt, 'itemStyle');\n    compatTextStyle(calendarOpt, 'dayLabel');\n    compatTextStyle(calendarOpt, 'monthLabel');\n    compatTextStyle(calendarOpt, 'yearLabel');\n  }); // radar.name.textStyle\n\n  each(toArr(option.radar), function (radarOpt) {\n    compatTextStyle(radarOpt, 'name');\n  });\n  each(toArr(option.geo), function (geoOpt) {\n    if (isObject(geoOpt)) {\n      compatEC3CommonStyles(geoOpt);\n      each(toArr(geoOpt.regions), function (regionObj) {\n        compatEC3CommonStyles(regionObj);\n      });\n    }\n  });\n  each(toArr(option.timeline), function (timelineOpt) {\n    compatEC3CommonStyles(timelineOpt);\n    convertNormalEmphasis(timelineOpt, 'label');\n    convertNormalEmphasis(timelineOpt, 'itemStyle');\n    convertNormalEmphasis(timelineOpt, 'controlStyle', true);\n    var data = timelineOpt.data;\n    zrUtil.isArray(data) && zrUtil.each(data, function (item) {\n      if (zrUtil.isObject(item)) {\n        convertNormalEmphasis(item, 'label');\n        convertNormalEmphasis(item, 'itemStyle');\n      }\n    });\n  });\n  each(toArr(option.toolbox), function (toolboxOpt) {\n    convertNormalEmphasis(toolboxOpt, 'iconStyle');\n    each(toolboxOpt.feature, function (featureOpt) {\n      convertNormalEmphasis(featureOpt, 'iconStyle');\n    });\n  });\n  compatTextStyle(toObj(option.axisPointer), 'label');\n  compatTextStyle(toObj(option.tooltip).axisPointer, 'label');\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"../../model/Model\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar each = zrUtil.each;\nvar curry = zrUtil.curry; // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n// allAxesInfo should be updated when setOption performed.\n\nfunction collect(ecModel, api) {\n  var result = {\n    /**\n     * key: makeKey(axis.model)\n     * value: {\n     *      axis,\n     *      coordSys,\n     *      axisPointerModel,\n     *      triggerTooltip,\n     *      involveSeries,\n     *      snap,\n     *      seriesModels,\n     *      seriesDataCount\n     * }\n     */\n    axesInfo: {},\n    seriesInvolved: false,\n\n    /**\n     * key: makeKey(coordSys.model)\n     * value: Object: key makeKey(axis.model), value: axisInfo\n     */\n    coordSysAxesInfo: {},\n    coordSysMap: {}\n  };\n  collectAxesInfo(result, ecModel, api); // Check seriesInvolved for performance, in case too many series in some chart.\n\n  result.seriesInvolved && collectSeriesInfo(result, ecModel);\n  return result;\n}\n\nfunction collectAxesInfo(result, ecModel, api) {\n  var globalTooltipModel = ecModel.getComponent('tooltip');\n  var globalAxisPointerModel = ecModel.getComponent('axisPointer'); // links can only be set on global.\n\n  var linksOption = globalAxisPointerModel.get('link', true) || [];\n  var linkGroups = []; // Collect axes info.\n\n  each(api.getCoordinateSystems(), function (coordSys) {\n    // Some coordinate system do not support axes, like geo.\n    if (!coordSys.axisPointerEnabled) {\n      return;\n    }\n\n    var coordSysKey = makeKey(coordSys.model);\n    var axesInfoInCoordSys = result.coordSysAxesInfo[coordSysKey] = {};\n    result.coordSysMap[coordSysKey] = coordSys; // Set tooltip (like 'cross') is a convienent way to show axisPointer\n    // for user. So we enable seting tooltip on coordSys model.\n\n    var coordSysModel = coordSys.model;\n    var baseTooltipModel = coordSysModel.getModel('tooltip', globalTooltipModel);\n    each(coordSys.getAxes(), curry(saveTooltipAxisInfo, false, null)); // If axis tooltip used, choose tooltip axis for each coordSys.\n    // Notice this case: coordSys is `grid` but not `cartesian2D` here.\n\n    if (coordSys.getTooltipAxes && globalTooltipModel // If tooltip.showContent is set as false, tooltip will not\n    // show but axisPointer will show as normal.\n    && baseTooltipModel.get('show')) {\n      // Compatible with previous logic. But series.tooltip.trigger: 'axis'\n      // or series.data[n].tooltip.trigger: 'axis' are not support any more.\n      var triggerAxis = baseTooltipModel.get('trigger') === 'axis';\n      var cross = baseTooltipModel.get('axisPointer.type') === 'cross';\n      var tooltipAxes = coordSys.getTooltipAxes(baseTooltipModel.get('axisPointer.axis'));\n\n      if (triggerAxis || cross) {\n        each(tooltipAxes.baseAxes, curry(saveTooltipAxisInfo, cross ? 'cross' : true, triggerAxis));\n      }\n\n      if (cross) {\n        each(tooltipAxes.otherAxes, curry(saveTooltipAxisInfo, 'cross', false));\n      }\n    } // fromTooltip: true | false | 'cross'\n    // triggerTooltip: true | false | null\n\n\n    function saveTooltipAxisInfo(fromTooltip, triggerTooltip, axis) {\n      var axisPointerModel = axis.model.getModel('axisPointer', globalAxisPointerModel);\n      var axisPointerShow = axisPointerModel.get('show');\n\n      if (!axisPointerShow || axisPointerShow === 'auto' && !fromTooltip && !isHandleTrigger(axisPointerModel)) {\n        return;\n      }\n\n      if (triggerTooltip == null) {\n        triggerTooltip = axisPointerModel.get('triggerTooltip');\n      }\n\n      axisPointerModel = fromTooltip ? makeAxisPointerModel(axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip) : axisPointerModel;\n      var snap = axisPointerModel.get('snap');\n      var key = makeKey(axis.model);\n      var involveSeries = triggerTooltip || snap || axis.type === 'category'; // If result.axesInfo[key] exist, override it (tooltip has higher priority).\n\n      var axisInfo = result.axesInfo[key] = {\n        key: key,\n        axis: axis,\n        coordSys: coordSys,\n        axisPointerModel: axisPointerModel,\n        triggerTooltip: triggerTooltip,\n        involveSeries: involveSeries,\n        snap: snap,\n        useHandle: isHandleTrigger(axisPointerModel),\n        seriesModels: []\n      };\n      axesInfoInCoordSys[key] = axisInfo;\n      result.seriesInvolved |= involveSeries;\n      var groupIndex = getLinkGroupIndex(linksOption, axis);\n\n      if (groupIndex != null) {\n        var linkGroup = linkGroups[groupIndex] || (linkGroups[groupIndex] = {\n          axesInfo: {}\n        });\n        linkGroup.axesInfo[key] = axisInfo;\n        linkGroup.mapper = linksOption[groupIndex].mapper;\n        axisInfo.linkGroup = linkGroup;\n      }\n    }\n  });\n}\n\nfunction makeAxisPointerModel(axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip) {\n  var tooltipAxisPointerModel = baseTooltipModel.getModel('axisPointer');\n  var volatileOption = {};\n  each(['type', 'snap', 'lineStyle', 'shadowStyle', 'label', 'animation', 'animationDurationUpdate', 'animationEasingUpdate', 'z'], function (field) {\n    volatileOption[field] = zrUtil.clone(tooltipAxisPointerModel.get(field));\n  }); // category axis do not auto snap, otherwise some tick that do not\n  // has value can not be hovered. value/time/log axis default snap if\n  // triggered from tooltip and trigger tooltip.\n\n  volatileOption.snap = axis.type !== 'category' && !!triggerTooltip; // Compatibel with previous behavior, tooltip axis do not show label by default.\n  // Only these properties can be overrided from tooltip to axisPointer.\n\n  if (tooltipAxisPointerModel.get('type') === 'cross') {\n    volatileOption.type = 'line';\n  }\n\n  var labelOption = volatileOption.label || (volatileOption.label = {}); // Follow the convention, do not show label when triggered by tooltip by default.\n\n  labelOption.show == null && (labelOption.show = false);\n\n  if (fromTooltip === 'cross') {\n    // When 'cross', both axes show labels.\n    var tooltipAxisPointerLabelShow = tooltipAxisPointerModel.get('label.show');\n    labelOption.show = tooltipAxisPointerLabelShow != null ? tooltipAxisPointerLabelShow : true; // If triggerTooltip, this is a base axis, which should better not use cross style\n    // (cross style is dashed by default)\n\n    if (!triggerTooltip) {\n      var crossStyle = volatileOption.lineStyle = tooltipAxisPointerModel.get('crossStyle');\n      crossStyle && zrUtil.defaults(labelOption, crossStyle.textStyle);\n    }\n  }\n\n  return axis.model.getModel('axisPointer', new Model(volatileOption, globalAxisPointerModel, ecModel));\n}\n\nfunction collectSeriesInfo(result, ecModel) {\n  // Prepare data for axis trigger\n  ecModel.eachSeries(function (seriesModel) {\n    // Notice this case: this coordSys is `cartesian2D` but not `grid`.\n    var coordSys = seriesModel.coordinateSystem;\n    var seriesTooltipTrigger = seriesModel.get('tooltip.trigger', true);\n    var seriesTooltipShow = seriesModel.get('tooltip.show', true);\n\n    if (!coordSys || seriesTooltipTrigger === 'none' || seriesTooltipTrigger === false || seriesTooltipTrigger === 'item' || seriesTooltipShow === false || seriesModel.get('axisPointer.show', true) === false) {\n      return;\n    }\n\n    each(result.coordSysAxesInfo[makeKey(coordSys.model)], function (axisInfo) {\n      var axis = axisInfo.axis;\n\n      if (coordSys.getAxis(axis.dim) === axis) {\n        axisInfo.seriesModels.push(seriesModel);\n        axisInfo.seriesDataCount == null && (axisInfo.seriesDataCount = 0);\n        axisInfo.seriesDataCount += seriesModel.getData().count();\n      }\n    });\n  }, this);\n}\n/**\n * For example:\n * {\n *     axisPointer: {\n *         links: [{\n *             xAxisIndex: [2, 4],\n *             yAxisIndex: 'all'\n *         }, {\n *             xAxisId: ['a5', 'a7'],\n *             xAxisName: 'xxx'\n *         }]\n *     }\n * }\n */\n\n\nfunction getLinkGroupIndex(linksOption, axis) {\n  var axisModel = axis.model;\n  var dim = axis.dim;\n\n  for (var i = 0; i < linksOption.length; i++) {\n    var linkOption = linksOption[i] || {};\n\n    if (checkPropInLink(linkOption[dim + 'AxisId'], axisModel.id) || checkPropInLink(linkOption[dim + 'AxisIndex'], axisModel.componentIndex) || checkPropInLink(linkOption[dim + 'AxisName'], axisModel.name)) {\n      return i;\n    }\n  }\n}\n\nfunction checkPropInLink(linkPropValue, axisPropValue) {\n  return linkPropValue === 'all' || zrUtil.isArray(linkPropValue) && zrUtil.indexOf(linkPropValue, axisPropValue) >= 0 || linkPropValue === axisPropValue;\n}\n\nfunction fixValue(axisModel) {\n  var axisInfo = getAxisInfo(axisModel);\n\n  if (!axisInfo) {\n    return;\n  }\n\n  var axisPointerModel = axisInfo.axisPointerModel;\n  var scale = axisInfo.axis.scale;\n  var option = axisPointerModel.option;\n  var status = axisPointerModel.get('status');\n  var value = axisPointerModel.get('value'); // Parse init value for category and time axis.\n\n  if (value != null) {\n    value = scale.parse(value);\n  }\n\n  var useHandle = isHandleTrigger(axisPointerModel); // If `handle` used, `axisPointer` will always be displayed, so value\n  // and status should be initialized.\n\n  if (status == null) {\n    option.status = useHandle ? 'show' : 'hide';\n  }\n\n  var extent = scale.getExtent().slice();\n  extent[0] > extent[1] && extent.reverse();\n\n  if ( // Pick a value on axis when initializing.\n  value == null // If both `handle` and `dataZoom` are used, value may be out of axis extent,\n  // where we should re-pick a value to keep `handle` displaying normally.\n  || value > extent[1]) {\n    // Make handle displayed on the end of the axis when init, which looks better.\n    value = extent[1];\n  }\n\n  if (value < extent[0]) {\n    value = extent[0];\n  }\n\n  option.value = value;\n\n  if (useHandle) {\n    option.status = axisInfo.axis.scale.isBlank() ? 'hide' : 'show';\n  }\n}\n\nfunction getAxisInfo(axisModel) {\n  var coordSysAxesInfo = (axisModel.ecModel.getComponent('axisPointer') || {}).coordSysAxesInfo;\n  return coordSysAxesInfo && coordSysAxesInfo.axesInfo[makeKey(axisModel)];\n}\n\nfunction getAxisPointerModel(axisModel) {\n  var axisInfo = getAxisInfo(axisModel);\n  return axisInfo && axisInfo.axisPointerModel;\n}\n\nfunction isHandleTrigger(axisPointerModel) {\n  return !!axisPointerModel.get('handle.show');\n}\n/**\n * @param {module:echarts/model/Model} model\n * @return {string} unique key\n */\n\n\nfunction makeKey(model) {\n  return model.type + '||' + model.id;\n}\n\nexports.collect = collect;\nexports.fixValue = fixValue;\nexports.getAxisInfo = getAxisInfo;\nexports.getAxisPointerModel = getAxisPointerModel;\nexports.makeKey = makeKey;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// TODO Parse shadow style\n// TODO Only shallow path support\nfunction _default(properties) {\n  // Normalize\n  for (var i = 0; i < properties.length; i++) {\n    if (!properties[i][1]) {\n      properties[i][1] = properties[i][0];\n    }\n  }\n\n  return function (model, excludes, includes) {\n    var style = {};\n\n    for (var i = 0; i < properties.length; i++) {\n      var propName = properties[i][1];\n\n      if (excludes && zrUtil.indexOf(excludes, propName) >= 0 || includes && zrUtil.indexOf(includes, propName) < 0) {\n        continue;\n      }\n\n      var val = model.getShallow(propName);\n\n      if (val != null) {\n        style[properties[i][0]] = val;\n      }\n    }\n\n    return style;\n  };\n}\n\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nrequire(\"./legend/LegendModel\");\n\nrequire(\"./legend/legendAction\");\n\nrequire(\"./legend/LegendView\");\n\nvar legendFilter = require(\"./legend/legendFilter\");\n\nvar Component = require(\"../model/Component\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Do not contain scrollable legend, for sake of file size.\n// Series Filter\necharts.registerProcessor(legendFilter);\nComponent.registerSubTypeDefaulter('legend', function () {\n  // Default 'plain' when no type specified.\n  return 'plain';\n});","var _util = require(\"zrender/lib/core/util\");\n\nvar assert = _util.assert;\nvar isArray = _util.isArray;\n\nvar _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {Object} define\n * @return See the return of `createTask`.\n */\nfunction createTask(define) {\n  return new Task(define);\n}\n/**\n * @constructor\n * @param {Object} define\n * @param {Function} define.reset Custom reset\n * @param {Function} [define.plan] Returns 'reset' indicate reset immediately.\n * @param {Function} [define.count] count is used to determin data task.\n * @param {Function} [define.onDirty] count is used to determin data task.\n */\n\n\nfunction Task(define) {\n  define = define || {};\n  this._reset = define.reset;\n  this._plan = define.plan;\n  this._count = define.count;\n  this._onDirty = define.onDirty;\n  this._dirty = true; // Context must be specified implicitly, to\n  // avoid miss update context when model changed.\n\n  this.context;\n}\n\nvar taskProto = Task.prototype;\n/**\n * @param {Object} performArgs\n * @param {number} [performArgs.step] Specified step.\n * @param {number} [performArgs.skip] Skip customer perform call.\n * @param {number} [performArgs.modBy] Sampling window size.\n * @param {number} [performArgs.modDataCount] Sampling count.\n */\n\ntaskProto.perform = function (performArgs) {\n  var upTask = this._upstream;\n  var skip = performArgs && performArgs.skip; // TODO some refactor.\n  // Pull data. Must pull data each time, because context.data\n  // may be updated by Series.setData.\n\n  if (this._dirty && upTask) {\n    var context = this.context;\n    context.data = context.outputData = upTask.context.outputData;\n  }\n\n  if (this.__pipeline) {\n    this.__pipeline.currentTask = this;\n  }\n\n  var planResult;\n\n  if (this._plan && !skip) {\n    planResult = this._plan(this.context);\n  } // Support sharding by mod, which changes the render sequence and makes the rendered graphic\n  // elements uniformed distributed when progress, especially when moving or zooming.\n\n\n  var lastModBy = normalizeModBy(this._modBy);\n  var lastModDataCount = this._modDataCount || 0;\n  var modBy = normalizeModBy(performArgs && performArgs.modBy);\n  var modDataCount = performArgs && performArgs.modDataCount || 0;\n\n  if (lastModBy !== modBy || lastModDataCount !== modDataCount) {\n    planResult = 'reset';\n  }\n\n  function normalizeModBy(val) {\n    !(val >= 1) && (val = 1); // jshint ignore:line\n\n    return val;\n  }\n\n  var forceFirstProgress;\n\n  if (this._dirty || planResult === 'reset') {\n    this._dirty = false;\n    forceFirstProgress = reset(this, skip);\n  }\n\n  this._modBy = modBy;\n  this._modDataCount = modDataCount;\n  var step = performArgs && performArgs.step;\n\n  if (upTask) {\n    this._dueEnd = upTask._outputDueEnd;\n  } // DataTask or overallTask\n  else {\n      this._dueEnd = this._count ? this._count(this.context) : Infinity;\n    } // Note: Stubs, that its host overall task let it has progress, has progress.\n  // If no progress, pass index from upstream to downstream each time plan called.\n\n\n  if (this._progress) {\n    var start = this._dueIndex;\n    var end = Math.min(step != null ? this._dueIndex + step : Infinity, this._dueEnd);\n\n    if (!skip && (forceFirstProgress || start < end)) {\n      var progress = this._progress;\n\n      if (isArray(progress)) {\n        for (var i = 0; i < progress.length; i++) {\n          doProgress(this, progress[i], start, end, modBy, modDataCount);\n        }\n      } else {\n        doProgress(this, progress, start, end, modBy, modDataCount);\n      }\n    }\n\n    this._dueIndex = end; // If no `outputDueEnd`, assume that output data and\n    // input data is the same, so use `dueIndex` as `outputDueEnd`.\n\n    var outputDueEnd = this._settedOutputEnd != null ? this._settedOutputEnd : end;\n    this._outputDueEnd = outputDueEnd;\n  } else {\n    // (1) Some overall task has no progress.\n    // (2) Stubs, that its host overall task do not let it has progress, has no progress.\n    // This should always be performed so it can be passed to downstream.\n    this._dueIndex = this._outputDueEnd = this._settedOutputEnd != null ? this._settedOutputEnd : this._dueEnd;\n  }\n\n  return this.unfinished();\n};\n\nvar iterator = function () {\n  var end;\n  var current;\n  var modBy;\n  var modDataCount;\n  var winCount;\n  var it = {\n    reset: function (s, e, sStep, sCount) {\n      current = s;\n      end = e;\n      modBy = sStep;\n      modDataCount = sCount;\n      winCount = Math.ceil(modDataCount / modBy);\n      it.next = modBy > 1 && modDataCount > 0 ? modNext : sequentialNext;\n    }\n  };\n  return it;\n\n  function sequentialNext() {\n    return current < end ? current++ : null;\n  }\n\n  function modNext() {\n    var dataIndex = current % winCount * modBy + Math.ceil(current / winCount);\n    var result = current >= end ? null : dataIndex < modDataCount ? dataIndex // If modDataCount is smaller than data.count() (consider `appendData` case),\n    // Use normal linear rendering mode.\n    : current;\n    current++;\n    return result;\n  }\n}();\n\ntaskProto.dirty = function () {\n  this._dirty = true;\n  this._onDirty && this._onDirty(this.context);\n};\n\nfunction doProgress(taskIns, progress, start, end, modBy, modDataCount) {\n  iterator.reset(start, end, modBy, modDataCount);\n  taskIns._callingProgress = progress;\n\n  taskIns._callingProgress({\n    start: start,\n    end: end,\n    count: end - start,\n    next: iterator.next\n  }, taskIns.context);\n}\n\nfunction reset(taskIns, skip) {\n  taskIns._dueIndex = taskIns._outputDueEnd = taskIns._dueEnd = 0;\n  taskIns._settedOutputEnd = null;\n  var progress;\n  var forceFirstProgress;\n\n  if (!skip && taskIns._reset) {\n    progress = taskIns._reset(taskIns.context);\n\n    if (progress && progress.progress) {\n      forceFirstProgress = progress.forceFirstProgress;\n      progress = progress.progress;\n    } // To simplify no progress checking, array must has item.\n\n\n    if (isArray(progress) && !progress.length) {\n      progress = null;\n    }\n  }\n\n  taskIns._progress = progress;\n  taskIns._modBy = taskIns._modDataCount = null;\n  var downstream = taskIns._downstream;\n  downstream && downstream.dirty();\n  return forceFirstProgress;\n}\n/**\n * @return {boolean}\n */\n\n\ntaskProto.unfinished = function () {\n  return this._progress && this._dueIndex < this._dueEnd;\n};\n/**\n * @param {Object} downTask The downstream task.\n * @return {Object} The downstream task.\n */\n\n\ntaskProto.pipe = function (downTask) {\n  // If already downstream, do not dirty downTask.\n  if (this._downstream !== downTask || this._dirty) {\n    this._downstream = downTask;\n    downTask._upstream = this;\n    downTask.dirty();\n  }\n};\n\ntaskProto.dispose = function () {\n  if (this._disposed) {\n    return;\n  }\n\n  this._upstream && (this._upstream._downstream = null);\n  this._downstream && (this._downstream._upstream = null);\n  this._dirty = false;\n  this._disposed = true;\n};\n\ntaskProto.getUpstream = function () {\n  return this._upstream;\n};\n\ntaskProto.getDownstream = function () {\n  return this._downstream;\n};\n\ntaskProto.setOutputEnd = function (end) {\n  // This only happend in dataTask, dataZoom, map, currently.\n  // where dataZoom do not set end each time, but only set\n  // when reset. So we should record the setted end, in case\n  // that the stub of dataZoom perform again and earse the\n  // setted end by upstream.\n  this._outputDueEnd = this._settedOutputEnd = end;\n}; ///////////////////////////////////////////////////////////\n// For stream debug (Should be commented out after used!)\n// Usage: printTask(this, 'begin');\n// Usage: printTask(this, null, {someExtraProp});\n// function printTask(task, prefix, extra) {\n//     window.ecTaskUID == null && (window.ecTaskUID = 0);\n//     task.uidDebug == null && (task.uidDebug = `task_${window.ecTaskUID++}`);\n//     task.agent && task.agent.uidDebug == null && (task.agent.uidDebug = `task_${window.ecTaskUID++}`);\n//     var props = [];\n//     if (task.__pipeline) {\n//         var val = `${task.__idxInPipeline}/${task.__pipeline.tail.__idxInPipeline} ${task.agent ? '(stub)' : ''}`;\n//         props.push({text: 'idx', value: val});\n//     } else {\n//         var stubCount = 0;\n//         task.agentStubMap.each(() => stubCount++);\n//         props.push({text: 'idx', value: `overall (stubs: ${stubCount})`});\n//     }\n//     props.push({text: 'uid', value: task.uidDebug});\n//     if (task.__pipeline) {\n//         props.push({text: 'pid', value: task.__pipeline.id});\n//         task.agent && props.push(\n//             {text: 'stubFor', value: task.agent.uidDebug}\n//         );\n//     }\n//     props.push(\n//         {text: 'dirty', value: task._dirty},\n//         {text: 'dueIndex', value: task._dueIndex},\n//         {text: 'dueEnd', value: task._dueEnd},\n//         {text: 'outputDueEnd', value: task._outputDueEnd}\n//     );\n//     if (extra) {\n//         Object.keys(extra).forEach(key => {\n//             props.push({text: key, value: extra[key]});\n//         });\n//     }\n//     var args = ['color: blue'];\n//     var msg = `%c[${prefix || 'T'}] %c` + props.map(item => (\n//         args.push('color: black', 'color: red'),\n//         `${item.text}: %c${item.value}`\n//     )).join('%c, ');\n//     console.log.apply(console, [msg].concat(args));\n//     // console.log(this);\n// }\n\n\nexports.createTask = createTask;","var vec2 = require(\"./vector\");\n\nvar curve = require(\"./curve\");\n\n/**\n * @author Yi Shen(https://github.com/pissang)\n */\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathSin = Math.sin;\nvar mathCos = Math.cos;\nvar PI2 = Math.PI * 2;\nvar start = vec2.create();\nvar end = vec2.create();\nvar extremity = vec2.create();\n/**\n * 从顶点数组中计算出最小包围盒，写入`min`和`max`中\n * @module zrender/core/bbox\n * @param {Array<Object>} points 顶点数组\n * @param {number} min\n * @param {number} max\n */\n\nfunction fromPoints(points, min, max) {\n  if (points.length === 0) {\n    return;\n  }\n\n  var p = points[0];\n  var left = p[0];\n  var right = p[0];\n  var top = p[1];\n  var bottom = p[1];\n  var i;\n\n  for (i = 1; i < points.length; i++) {\n    p = points[i];\n    left = mathMin(left, p[0]);\n    right = mathMax(right, p[0]);\n    top = mathMin(top, p[1]);\n    bottom = mathMax(bottom, p[1]);\n  }\n\n  min[0] = left;\n  min[1] = top;\n  max[0] = right;\n  max[1] = bottom;\n}\n/**\n * @memberOf module:zrender/core/bbox\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\n\nfunction fromLine(x0, y0, x1, y1, min, max) {\n  min[0] = mathMin(x0, x1);\n  min[1] = mathMin(y0, y1);\n  max[0] = mathMax(x0, x1);\n  max[1] = mathMax(y0, y1);\n}\n\nvar xDim = [];\nvar yDim = [];\n/**\n * 从三阶贝塞尔曲线(p0, p1, p2, p3)中计算出最小包围盒，写入`min`和`max`中\n * @memberOf module:zrender/core/bbox\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {number} x3\n * @param {number} y3\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\nfunction fromCubic(x0, y0, x1, y1, x2, y2, x3, y3, min, max) {\n  var cubicExtrema = curve.cubicExtrema;\n  var cubicAt = curve.cubicAt;\n  var i;\n  var n = cubicExtrema(x0, x1, x2, x3, xDim);\n  min[0] = Infinity;\n  min[1] = Infinity;\n  max[0] = -Infinity;\n  max[1] = -Infinity;\n\n  for (i = 0; i < n; i++) {\n    var x = cubicAt(x0, x1, x2, x3, xDim[i]);\n    min[0] = mathMin(x, min[0]);\n    max[0] = mathMax(x, max[0]);\n  }\n\n  n = cubicExtrema(y0, y1, y2, y3, yDim);\n\n  for (i = 0; i < n; i++) {\n    var y = cubicAt(y0, y1, y2, y3, yDim[i]);\n    min[1] = mathMin(y, min[1]);\n    max[1] = mathMax(y, max[1]);\n  }\n\n  min[0] = mathMin(x0, min[0]);\n  max[0] = mathMax(x0, max[0]);\n  min[0] = mathMin(x3, min[0]);\n  max[0] = mathMax(x3, max[0]);\n  min[1] = mathMin(y0, min[1]);\n  max[1] = mathMax(y0, max[1]);\n  min[1] = mathMin(y3, min[1]);\n  max[1] = mathMax(y3, max[1]);\n}\n/**\n * 从二阶贝塞尔曲线(p0, p1, p2)中计算出最小包围盒，写入`min`和`max`中\n * @memberOf module:zrender/core/bbox\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\n\nfunction fromQuadratic(x0, y0, x1, y1, x2, y2, min, max) {\n  var quadraticExtremum = curve.quadraticExtremum;\n  var quadraticAt = curve.quadraticAt; // Find extremities, where derivative in x dim or y dim is zero\n\n  var tx = mathMax(mathMin(quadraticExtremum(x0, x1, x2), 1), 0);\n  var ty = mathMax(mathMin(quadraticExtremum(y0, y1, y2), 1), 0);\n  var x = quadraticAt(x0, x1, x2, tx);\n  var y = quadraticAt(y0, y1, y2, ty);\n  min[0] = mathMin(x0, x2, x);\n  min[1] = mathMin(y0, y2, y);\n  max[0] = mathMax(x0, x2, x);\n  max[1] = mathMax(y0, y2, y);\n}\n/**\n * 从圆弧中计算出最小包围盒，写入`min`和`max`中\n * @method\n * @memberOf module:zrender/core/bbox\n * @param {number} x\n * @param {number} y\n * @param {number} rx\n * @param {number} ry\n * @param {number} startAngle\n * @param {number} endAngle\n * @param {number} anticlockwise\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\n\nfunction fromArc(x, y, rx, ry, startAngle, endAngle, anticlockwise, min, max) {\n  var vec2Min = vec2.min;\n  var vec2Max = vec2.max;\n  var diff = Math.abs(startAngle - endAngle);\n\n  if (diff % PI2 < 1e-4 && diff > 1e-4) {\n    // Is a circle\n    min[0] = x - rx;\n    min[1] = y - ry;\n    max[0] = x + rx;\n    max[1] = y + ry;\n    return;\n  }\n\n  start[0] = mathCos(startAngle) * rx + x;\n  start[1] = mathSin(startAngle) * ry + y;\n  end[0] = mathCos(endAngle) * rx + x;\n  end[1] = mathSin(endAngle) * ry + y;\n  vec2Min(min, start, end);\n  vec2Max(max, start, end); // Thresh to [0, Math.PI * 2]\n\n  startAngle = startAngle % PI2;\n\n  if (startAngle < 0) {\n    startAngle = startAngle + PI2;\n  }\n\n  endAngle = endAngle % PI2;\n\n  if (endAngle < 0) {\n    endAngle = endAngle + PI2;\n  }\n\n  if (startAngle > endAngle && !anticlockwise) {\n    endAngle += PI2;\n  } else if (startAngle < endAngle && anticlockwise) {\n    startAngle += PI2;\n  }\n\n  if (anticlockwise) {\n    var tmp = endAngle;\n    endAngle = startAngle;\n    startAngle = tmp;\n  } // var number = 0;\n  // var step = (anticlockwise ? -Math.PI : Math.PI) / 2;\n\n\n  for (var angle = 0; angle < endAngle; angle += Math.PI / 2) {\n    if (angle > startAngle) {\n      extremity[0] = mathCos(angle) * rx + x;\n      extremity[1] = mathSin(angle) * ry + y;\n      vec2Min(min, extremity, min);\n      vec2Max(max, extremity, max);\n    }\n  }\n}\n\nexports.fromPoints = fromPoints;\nexports.fromLine = fromLine;\nexports.fromCubic = fromCubic;\nexports.fromQuadratic = fromQuadratic;\nexports.fromArc = fromArc;","function windingLine(x0, y0, x1, y1, x, y) {\n  if (y > y0 && y > y1 || y < y0 && y < y1) {\n    return 0;\n  } // Ignore horizontal line\n\n\n  if (y1 === y0) {\n    return 0;\n  }\n\n  var dir = y1 < y0 ? 1 : -1;\n  var t = (y - y0) / (y1 - y0); // Avoid winding error when intersection point is the connect point of two line of polygon\n\n  if (t === 1 || t === 0) {\n    dir = y1 < y0 ? 0.5 : -0.5;\n  }\n\n  var x_ = t * (x1 - x0) + x0; // If (x, y) on the line, considered as \"contain\".\n\n  return x_ === x ? Infinity : x_ > x ? dir : 0;\n}\n\nmodule.exports = windingLine;","var _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\nvar map = _util.map;\nvar isArray = _util.isArray;\nvar isFunction = _util.isFunction;\nvar createHashMap = _util.createHashMap;\nvar noop = _util.noop;\n\nvar _task = require(\"./task\");\n\nvar createTask = _task.createTask;\n\nvar _component = require(\"../util/component\");\n\nvar getUID = _component.getUID;\n\nvar GlobalModel = require(\"../model/Global\");\n\nvar ExtensionAPI = require(\"../ExtensionAPI\");\n\nvar _model = require(\"../util/model\");\n\nvar normalizeToArray = _model.normalizeToArray;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @module echarts/stream/Scheduler\n */\n\n/**\n * @constructor\n */\nfunction Scheduler(ecInstance, api, dataProcessorHandlers, visualHandlers) {\n  this.ecInstance = ecInstance;\n  this.api = api;\n  this.unfinished; // Fix current processors in case that in some rear cases that\n  // processors might be registered after echarts instance created.\n  // Register processors incrementally for a echarts instance is\n  // not supported by this stream architecture.\n\n  var dataProcessorHandlers = this._dataProcessorHandlers = dataProcessorHandlers.slice();\n  var visualHandlers = this._visualHandlers = visualHandlers.slice();\n  this._allHandlers = dataProcessorHandlers.concat(visualHandlers);\n  /**\n   * @private\n   * @type {\n   *     [handlerUID: string]: {\n   *         seriesTaskMap?: {\n   *             [seriesUID: string]: Task\n   *         },\n   *         overallTask?: Task\n   *     }\n   * }\n   */\n\n  this._stageTaskMap = createHashMap();\n}\n\nvar proto = Scheduler.prototype;\n/**\n * @param {module:echarts/model/Global} ecModel\n * @param {Object} payload\n */\n\nproto.restoreData = function (ecModel, payload) {\n  // TODO: Only restroe needed series and components, but not all components.\n  // Currently `restoreData` of all of the series and component will be called.\n  // But some independent components like `title`, `legend`, `graphic`, `toolbox`,\n  // `tooltip`, `axisPointer`, etc, do not need series refresh when `setOption`,\n  // and some components like coordinate system, axes, dataZoom, visualMap only\n  // need their target series refresh.\n  // (1) If we are implementing this feature some day, we should consider these cases:\n  // if a data processor depends on a component (e.g., dataZoomProcessor depends\n  // on the settings of `dataZoom`), it should be re-performed if the component\n  // is modified by `setOption`.\n  // (2) If a processor depends on sevral series, speicified by its `getTargetSeries`,\n  // it should be re-performed when the result array of `getTargetSeries` changed.\n  // We use `dependencies` to cover these issues.\n  // (3) How to update target series when coordinate system related components modified.\n  // TODO: simply the dirty mechanism? Check whether only the case here can set tasks dirty,\n  // and this case all of the tasks will be set as dirty.\n  ecModel.restoreData(payload); // Theoretically an overall task not only depends on each of its target series, but also\n  // depends on all of the series.\n  // The overall task is not in pipeline, and `ecModel.restoreData` only set pipeline tasks\n  // dirty. If `getTargetSeries` of an overall task returns nothing, we should also ensure\n  // that the overall task is set as dirty and to be performed, otherwise it probably cause\n  // state chaos. So we have to set dirty of all of the overall tasks manually, otherwise it\n  // probably cause state chaos (consider `dataZoomProcessor`).\n\n  this._stageTaskMap.each(function (taskRecord) {\n    var overallTask = taskRecord.overallTask;\n    overallTask && overallTask.dirty();\n  });\n}; // If seriesModel provided, incremental threshold is check by series data.\n\n\nproto.getPerformArgs = function (task, isBlock) {\n  // For overall task\n  if (!task.__pipeline) {\n    return;\n  }\n\n  var pipeline = this._pipelineMap.get(task.__pipeline.id);\n\n  var pCtx = pipeline.context;\n  var incremental = !isBlock && pipeline.progressiveEnabled && (!pCtx || pCtx.progressiveRender) && task.__idxInPipeline > pipeline.blockIndex;\n  var step = incremental ? pipeline.step : null;\n  var modDataCount = pCtx && pCtx.modDataCount;\n  var modBy = modDataCount != null ? Math.ceil(modDataCount / step) : null;\n  return {\n    step: step,\n    modBy: modBy,\n    modDataCount: modDataCount\n  };\n};\n\nproto.getPipeline = function (pipelineId) {\n  return this._pipelineMap.get(pipelineId);\n};\n/**\n * Current, progressive rendering starts from visual and layout.\n * Always detect render mode in the same stage, avoiding that incorrect\n * detection caused by data filtering.\n * Caution:\n * `updateStreamModes` use `seriesModel.getData()`.\n */\n\n\nproto.updateStreamModes = function (seriesModel, view) {\n  var pipeline = this._pipelineMap.get(seriesModel.uid);\n\n  var data = seriesModel.getData();\n  var dataLen = data.count(); // `progressiveRender` means that can render progressively in each\n  // animation frame. Note that some types of series do not provide\n  // `view.incrementalPrepareRender` but support `chart.appendData`. We\n  // use the term `incremental` but not `progressive` to describe the\n  // case that `chart.appendData`.\n\n  var progressiveRender = pipeline.progressiveEnabled && view.incrementalPrepareRender && dataLen >= pipeline.threshold;\n  var large = seriesModel.get('large') && dataLen >= seriesModel.get('largeThreshold'); // TODO: modDataCount should not updated if `appendData`, otherwise cause whole repaint.\n  // see `test/candlestick-large3.html`\n\n  var modDataCount = seriesModel.get('progressiveChunkMode') === 'mod' ? dataLen : null;\n  seriesModel.pipelineContext = pipeline.context = {\n    progressiveRender: progressiveRender,\n    modDataCount: modDataCount,\n    large: large\n  };\n};\n\nproto.restorePipelines = function (ecModel) {\n  var scheduler = this;\n  var pipelineMap = scheduler._pipelineMap = createHashMap();\n  ecModel.eachSeries(function (seriesModel) {\n    var progressive = seriesModel.getProgressive();\n    var pipelineId = seriesModel.uid;\n    pipelineMap.set(pipelineId, {\n      id: pipelineId,\n      head: null,\n      tail: null,\n      threshold: seriesModel.getProgressiveThreshold(),\n      progressiveEnabled: progressive && !(seriesModel.preventIncremental && seriesModel.preventIncremental()),\n      blockIndex: -1,\n      step: Math.round(progressive || 700),\n      count: 0\n    });\n    pipe(scheduler, seriesModel, seriesModel.dataTask);\n  });\n};\n\nproto.prepareStageTasks = function () {\n  var stageTaskMap = this._stageTaskMap;\n  var ecModel = this.ecInstance.getModel();\n  var api = this.api;\n  each(this._allHandlers, function (handler) {\n    var record = stageTaskMap.get(handler.uid) || stageTaskMap.set(handler.uid, []);\n    handler.reset && createSeriesStageTask(this, handler, record, ecModel, api);\n    handler.overallReset && createOverallStageTask(this, handler, record, ecModel, api);\n  }, this);\n};\n\nproto.prepareView = function (view, model, ecModel, api) {\n  var renderTask = view.renderTask;\n  var context = renderTask.context;\n  context.model = model;\n  context.ecModel = ecModel;\n  context.api = api;\n  renderTask.__block = !view.incrementalPrepareRender;\n  pipe(this, model, renderTask);\n};\n\nproto.performDataProcessorTasks = function (ecModel, payload) {\n  // If we do not use `block` here, it should be considered when to update modes.\n  performStageTasks(this, this._dataProcessorHandlers, ecModel, payload, {\n    block: true\n  });\n}; // opt\n// opt.visualType: 'visual' or 'layout'\n// opt.setDirty\n\n\nproto.performVisualTasks = function (ecModel, payload, opt) {\n  performStageTasks(this, this._visualHandlers, ecModel, payload, opt);\n};\n\nfunction performStageTasks(scheduler, stageHandlers, ecModel, payload, opt) {\n  opt = opt || {};\n  var unfinished;\n  each(stageHandlers, function (stageHandler, idx) {\n    if (opt.visualType && opt.visualType !== stageHandler.visualType) {\n      return;\n    }\n\n    var stageHandlerRecord = scheduler._stageTaskMap.get(stageHandler.uid);\n\n    var seriesTaskMap = stageHandlerRecord.seriesTaskMap;\n    var overallTask = stageHandlerRecord.overallTask;\n\n    if (overallTask) {\n      var overallNeedDirty;\n      var agentStubMap = overallTask.agentStubMap;\n      agentStubMap.each(function (stub) {\n        if (needSetDirty(opt, stub)) {\n          stub.dirty();\n          overallNeedDirty = true;\n        }\n      });\n      overallNeedDirty && overallTask.dirty();\n      updatePayload(overallTask, payload);\n      var performArgs = scheduler.getPerformArgs(overallTask, opt.block); // Execute stubs firstly, which may set the overall task dirty,\n      // then execute the overall task. And stub will call seriesModel.setData,\n      // which ensures that in the overallTask seriesModel.getData() will not\n      // return incorrect data.\n\n      agentStubMap.each(function (stub) {\n        stub.perform(performArgs);\n      });\n      unfinished |= overallTask.perform(performArgs);\n    } else if (seriesTaskMap) {\n      seriesTaskMap.each(function (task, pipelineId) {\n        if (needSetDirty(opt, task)) {\n          task.dirty();\n        }\n\n        var performArgs = scheduler.getPerformArgs(task, opt.block);\n        performArgs.skip = !stageHandler.performRawSeries && ecModel.isSeriesFiltered(task.context.model);\n        updatePayload(task, payload);\n        unfinished |= task.perform(performArgs);\n      });\n    }\n  });\n\n  function needSetDirty(opt, task) {\n    return opt.setDirty && (!opt.dirtyMap || opt.dirtyMap.get(task.__pipeline.id));\n  }\n\n  scheduler.unfinished |= unfinished;\n}\n\nproto.performSeriesTasks = function (ecModel) {\n  var unfinished;\n  ecModel.eachSeries(function (seriesModel) {\n    // Progress to the end for dataInit and dataRestore.\n    unfinished |= seriesModel.dataTask.perform();\n  });\n  this.unfinished |= unfinished;\n};\n\nproto.plan = function () {\n  // Travel pipelines, check block.\n  this._pipelineMap.each(function (pipeline) {\n    var task = pipeline.tail;\n\n    do {\n      if (task.__block) {\n        pipeline.blockIndex = task.__idxInPipeline;\n        break;\n      }\n\n      task = task.getUpstream();\n    } while (task);\n  });\n};\n\nvar updatePayload = proto.updatePayload = function (task, payload) {\n  payload !== 'remain' && (task.context.payload = payload);\n};\n\nfunction createSeriesStageTask(scheduler, stageHandler, stageHandlerRecord, ecModel, api) {\n  var seriesTaskMap = stageHandlerRecord.seriesTaskMap || (stageHandlerRecord.seriesTaskMap = createHashMap());\n  var seriesType = stageHandler.seriesType;\n  var getTargetSeries = stageHandler.getTargetSeries; // If a stageHandler should cover all series, `createOnAllSeries` should be declared mandatorily,\n  // to avoid some typo or abuse. Otherwise if an extension do not specify a `seriesType`,\n  // it works but it may cause other irrelevant charts blocked.\n\n  if (stageHandler.createOnAllSeries) {\n    ecModel.eachRawSeries(create);\n  } else if (seriesType) {\n    ecModel.eachRawSeriesByType(seriesType, create);\n  } else if (getTargetSeries) {\n    getTargetSeries(ecModel, api).each(create);\n  }\n\n  function create(seriesModel) {\n    var pipelineId = seriesModel.uid; // Init tasks for each seriesModel only once.\n    // Reuse original task instance.\n\n    var task = seriesTaskMap.get(pipelineId) || seriesTaskMap.set(pipelineId, createTask({\n      plan: seriesTaskPlan,\n      reset: seriesTaskReset,\n      count: seriesTaskCount\n    }));\n    task.context = {\n      model: seriesModel,\n      ecModel: ecModel,\n      api: api,\n      useClearVisual: stageHandler.isVisual && !stageHandler.isLayout,\n      plan: stageHandler.plan,\n      reset: stageHandler.reset,\n      scheduler: scheduler\n    };\n    pipe(scheduler, seriesModel, task);\n  } // Clear unused series tasks.\n\n\n  var pipelineMap = scheduler._pipelineMap;\n  seriesTaskMap.each(function (task, pipelineId) {\n    if (!pipelineMap.get(pipelineId)) {\n      task.dispose();\n      seriesTaskMap.removeKey(pipelineId);\n    }\n  });\n}\n\nfunction createOverallStageTask(scheduler, stageHandler, stageHandlerRecord, ecModel, api) {\n  var overallTask = stageHandlerRecord.overallTask = stageHandlerRecord.overallTask // For overall task, the function only be called on reset stage.\n  || createTask({\n    reset: overallTaskReset\n  });\n  overallTask.context = {\n    ecModel: ecModel,\n    api: api,\n    overallReset: stageHandler.overallReset,\n    scheduler: scheduler\n  }; // Reuse orignal stubs.\n\n  var agentStubMap = overallTask.agentStubMap = overallTask.agentStubMap || createHashMap();\n  var seriesType = stageHandler.seriesType;\n  var getTargetSeries = stageHandler.getTargetSeries;\n  var overallProgress = true;\n  var modifyOutputEnd = stageHandler.modifyOutputEnd; // An overall task with seriesType detected or has `getTargetSeries`, we add\n  // stub in each pipelines, it will set the overall task dirty when the pipeline\n  // progress. Moreover, to avoid call the overall task each frame (too frequent),\n  // we set the pipeline block.\n\n  if (seriesType) {\n    ecModel.eachRawSeriesByType(seriesType, createStub);\n  } else if (getTargetSeries) {\n    getTargetSeries(ecModel, api).each(createStub);\n  } // Otherwise, (usually it is legancy case), the overall task will only be\n  // executed when upstream dirty. Otherwise the progressive rendering of all\n  // pipelines will be disabled unexpectedly. But it still needs stubs to receive\n  // dirty info from upsteam.\n  else {\n      overallProgress = false;\n      each(ecModel.getSeries(), createStub);\n    }\n\n  function createStub(seriesModel) {\n    var pipelineId = seriesModel.uid;\n    var stub = agentStubMap.get(pipelineId);\n\n    if (!stub) {\n      stub = agentStubMap.set(pipelineId, createTask({\n        reset: stubReset,\n        onDirty: stubOnDirty\n      })); // When the result of `getTargetSeries` changed, the overallTask\n      // should be set as dirty and re-performed.\n\n      overallTask.dirty();\n    }\n\n    stub.context = {\n      model: seriesModel,\n      overallProgress: overallProgress,\n      modifyOutputEnd: modifyOutputEnd\n    };\n    stub.agent = overallTask;\n    stub.__block = overallProgress;\n    pipe(scheduler, seriesModel, stub);\n  } // Clear unused stubs.\n\n\n  var pipelineMap = scheduler._pipelineMap;\n  agentStubMap.each(function (stub, pipelineId) {\n    if (!pipelineMap.get(pipelineId)) {\n      stub.dispose(); // When the result of `getTargetSeries` changed, the overallTask\n      // should be set as dirty and re-performed.\n\n      overallTask.dirty();\n      agentStubMap.removeKey(pipelineId);\n    }\n  });\n}\n\nfunction overallTaskReset(context) {\n  context.overallReset(context.ecModel, context.api, context.payload);\n}\n\nfunction stubReset(context, upstreamContext) {\n  return context.overallProgress && stubProgress;\n}\n\nfunction stubProgress() {\n  this.agent.dirty();\n  this.getDownstream().dirty();\n}\n\nfunction stubOnDirty() {\n  this.agent && this.agent.dirty();\n}\n\nfunction seriesTaskPlan(context) {\n  return context.plan && context.plan(context.model, context.ecModel, context.api, context.payload);\n}\n\nfunction seriesTaskReset(context) {\n  if (context.useClearVisual) {\n    context.data.clearAllVisual();\n  }\n\n  var resetDefines = context.resetDefines = normalizeToArray(context.reset(context.model, context.ecModel, context.api, context.payload));\n  return resetDefines.length > 1 ? map(resetDefines, function (v, idx) {\n    return makeSeriesTaskProgress(idx);\n  }) : singleSeriesTaskProgress;\n}\n\nvar singleSeriesTaskProgress = makeSeriesTaskProgress(0);\n\nfunction makeSeriesTaskProgress(resetDefineIdx) {\n  return function (params, context) {\n    var data = context.data;\n    var resetDefine = context.resetDefines[resetDefineIdx];\n\n    if (resetDefine && resetDefine.dataEach) {\n      for (var i = params.start; i < params.end; i++) {\n        resetDefine.dataEach(data, i);\n      }\n    } else if (resetDefine && resetDefine.progress) {\n      resetDefine.progress(params, data);\n    }\n  };\n}\n\nfunction seriesTaskCount(context) {\n  return context.data.count();\n}\n\nfunction pipe(scheduler, seriesModel, task) {\n  var pipelineId = seriesModel.uid;\n\n  var pipeline = scheduler._pipelineMap.get(pipelineId);\n\n  !pipeline.head && (pipeline.head = task);\n  pipeline.tail && pipeline.tail.pipe(task);\n  pipeline.tail = task;\n  task.__idxInPipeline = pipeline.count++;\n  task.__pipeline = pipeline;\n}\n\nScheduler.wrapStageHandler = function (stageHandler, visualType) {\n  if (isFunction(stageHandler)) {\n    stageHandler = {\n      overallReset: stageHandler,\n      seriesType: detectSeriseType(stageHandler)\n    };\n  }\n\n  stageHandler.uid = getUID('stageHandler');\n  visualType && (stageHandler.visualType = visualType);\n  return stageHandler;\n};\n/**\n * Only some legacy stage handlers (usually in echarts extensions) are pure function.\n * To ensure that they can work normally, they should work in block mode, that is,\n * they should not be started util the previous tasks finished. So they cause the\n * progressive rendering disabled. We try to detect the series type, to narrow down\n * the block range to only the series type they concern, but not all series.\n */\n\n\nfunction detectSeriseType(legacyFunc) {\n  seriesType = null;\n\n  try {\n    // Assume there is no async when calling `eachSeriesByType`.\n    legacyFunc(ecModelMock, apiMock);\n  } catch (e) {}\n\n  return seriesType;\n}\n\nvar ecModelMock = {};\nvar apiMock = {};\nvar seriesType;\nmockMethods(ecModelMock, GlobalModel);\nmockMethods(apiMock, ExtensionAPI);\n\necModelMock.eachSeriesByType = ecModelMock.eachRawSeriesByType = function (type) {\n  seriesType = type;\n};\n\necModelMock.eachComponent = function (cond) {\n  if (cond.mainType === 'series' && cond.subType) {\n    seriesType = cond.subType;\n  }\n};\n\nfunction mockMethods(target, Clz) {\n  for (var name in Clz.prototype) {\n    // Do not use hasOwnProperty\n    target[name] = noop;\n  }\n}\n\nvar _default = Scheduler;\nmodule.exports = _default;","var easingFuncs = require(\"./easing\");\n\n/**\n * 动画主控制器\n * @config target 动画对象，可以是数组，如果是数组的话会批量分发onframe等事件\n * @config life(1000) 动画时长\n * @config delay(0) 动画延迟时间\n * @config loop(true)\n * @config gap(0) 循环的间隔时间\n * @config onframe\n * @config easing(optional)\n * @config ondestroy(optional)\n * @config onrestart(optional)\n *\n * TODO pause\n */\nfunction Clip(options) {\n  this._target = options.target; // 生命周期\n\n  this._life = options.life || 1000; // 延时\n\n  this._delay = options.delay || 0; // 开始时间\n  // this._startTime = new Date().getTime() + this._delay;// 单位毫秒\n\n  this._initialized = false; // 是否循环\n\n  this.loop = options.loop == null ? false : options.loop;\n  this.gap = options.gap || 0;\n  this.easing = options.easing || 'Linear';\n  this.onframe = options.onframe;\n  this.ondestroy = options.ondestroy;\n  this.onrestart = options.onrestart;\n  this._pausedTime = 0;\n  this._paused = false;\n}\n\nClip.prototype = {\n  constructor: Clip,\n  step: function (globalTime, deltaTime) {\n    // Set startTime on first step, or _startTime may has milleseconds different between clips\n    // PENDING\n    if (!this._initialized) {\n      this._startTime = globalTime + this._delay;\n      this._initialized = true;\n    }\n\n    if (this._paused) {\n      this._pausedTime += deltaTime;\n      return;\n    }\n\n    var percent = (globalTime - this._startTime - this._pausedTime) / this._life; // 还没开始\n\n    if (percent < 0) {\n      return;\n    }\n\n    percent = Math.min(percent, 1);\n    var easing = this.easing;\n    var easingFunc = typeof easing == 'string' ? easingFuncs[easing] : easing;\n    var schedule = typeof easingFunc === 'function' ? easingFunc(percent) : percent;\n    this.fire('frame', schedule); // 结束\n\n    if (percent == 1) {\n      if (this.loop) {\n        this.restart(globalTime); // 重新开始周期\n        // 抛出而不是直接调用事件直到 stage.update 后再统一调用这些事件\n\n        return 'restart';\n      } // 动画完成将这个控制器标识为待删除\n      // 在Animation.update中进行批量删除\n\n\n      this._needsRemove = true;\n      return 'destroy';\n    }\n\n    return null;\n  },\n  restart: function (globalTime) {\n    var remainder = (globalTime - this._startTime - this._pausedTime) % this._life;\n    this._startTime = globalTime - remainder + this.gap;\n    this._pausedTime = 0;\n    this._needsRemove = false;\n  },\n  fire: function (eventType, arg) {\n    eventType = 'on' + eventType;\n\n    if (this[eventType]) {\n      this[eventType](this._target, arg);\n    }\n  },\n  pause: function () {\n    this._paused = true;\n  },\n  resume: function () {\n    this._paused = false;\n  }\n};\nvar _default = Clip;\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = {\n  getBoxLayoutParams: function () {\n    return {\n      left: this.get('left'),\n      top: this.get('top'),\n      right: this.get('right'),\n      bottom: this.get('bottom'),\n      width: this.get('width'),\n      height: this.get('height')\n    };\n  }\n};\nmodule.exports = _default;","var _util = require(\"../../core/util\");\n\nvar retrieve2 = _util.retrieve2;\nvar retrieve3 = _util.retrieve3;\nvar each = _util.each;\nvar normalizeCssArray = _util.normalizeCssArray;\nvar isString = _util.isString;\nvar isObject = _util.isObject;\n\nvar textContain = require(\"../../contain/text\");\n\nvar roundRectHelper = require(\"./roundRect\");\n\nvar imageHelper = require(\"./image\");\n\nvar fixShadow = require(\"./fixShadow\");\n\n// TODO: Have not support 'start', 'end' yet.\nvar VALID_TEXT_ALIGN = {\n  left: 1,\n  right: 1,\n  center: 1\n};\nvar VALID_TEXT_VERTICAL_ALIGN = {\n  top: 1,\n  bottom: 1,\n  middle: 1\n};\n/**\n * @param {module:zrender/graphic/Style} style\n * @return {module:zrender/graphic/Style} The input style.\n */\n\nfunction normalizeTextStyle(style) {\n  normalizeStyle(style);\n  each(style.rich, normalizeStyle);\n  return style;\n}\n\nfunction normalizeStyle(style) {\n  if (style) {\n    style.font = textContain.makeFont(style);\n    var textAlign = style.textAlign;\n    textAlign === 'middle' && (textAlign = 'center');\n    style.textAlign = textAlign == null || VALID_TEXT_ALIGN[textAlign] ? textAlign : 'left'; // Compatible with textBaseline.\n\n    var textVerticalAlign = style.textVerticalAlign || style.textBaseline;\n    textVerticalAlign === 'center' && (textVerticalAlign = 'middle');\n    style.textVerticalAlign = textVerticalAlign == null || VALID_TEXT_VERTICAL_ALIGN[textVerticalAlign] ? textVerticalAlign : 'top';\n    var textPadding = style.textPadding;\n\n    if (textPadding) {\n      style.textPadding = normalizeCssArray(style.textPadding);\n    }\n  }\n}\n/**\n * @param {CanvasRenderingContext2D} ctx\n * @param {string} text\n * @param {module:zrender/graphic/Style} style\n * @param {Object|boolean} [rect] {x, y, width, height}\n *                  If set false, rect text is not used.\n */\n\n\nfunction renderText(hostEl, ctx, text, style, rect) {\n  style.rich ? renderRichText(hostEl, ctx, text, style, rect) : renderPlainText(hostEl, ctx, text, style, rect);\n}\n\nfunction renderPlainText(hostEl, ctx, text, style, rect) {\n  var font = setCtx(ctx, 'font', style.font || textContain.DEFAULT_FONT);\n  var textPadding = style.textPadding;\n  var contentBlock = hostEl.__textCotentBlock;\n\n  if (!contentBlock || hostEl.__dirty) {\n    contentBlock = hostEl.__textCotentBlock = textContain.parsePlainText(text, font, textPadding, style.truncate);\n  }\n\n  var outerHeight = contentBlock.outerHeight;\n  var textLines = contentBlock.lines;\n  var lineHeight = contentBlock.lineHeight;\n  var boxPos = getBoxPosition(outerHeight, style, rect);\n  var baseX = boxPos.baseX;\n  var baseY = boxPos.baseY;\n  var textAlign = boxPos.textAlign;\n  var textVerticalAlign = boxPos.textVerticalAlign; // Origin of textRotation should be the base point of text drawing.\n\n  applyTextRotation(ctx, style, rect, baseX, baseY);\n  var boxY = textContain.adjustTextY(baseY, outerHeight, textVerticalAlign);\n  var textX = baseX;\n  var textY = boxY;\n  var needDrawBg = needDrawBackground(style);\n\n  if (needDrawBg || textPadding) {\n    // Consider performance, do not call getTextWidth util necessary.\n    var textWidth = textContain.getWidth(text, font);\n    var outerWidth = textWidth;\n    textPadding && (outerWidth += textPadding[1] + textPadding[3]);\n    var boxX = textContain.adjustTextX(baseX, outerWidth, textAlign);\n    needDrawBg && drawBackground(hostEl, ctx, style, boxX, boxY, outerWidth, outerHeight);\n\n    if (textPadding) {\n      textX = getTextXForPadding(baseX, textAlign, textPadding);\n      textY += textPadding[0];\n    }\n  }\n\n  setCtx(ctx, 'textAlign', textAlign || 'left'); // Force baseline to be \"middle\". Otherwise, if using \"top\", the\n  // text will offset downward a little bit in font \"Microsoft YaHei\".\n\n  setCtx(ctx, 'textBaseline', 'middle'); // Always set shadowBlur and shadowOffset to avoid leak from displayable.\n\n  setCtx(ctx, 'shadowBlur', style.textShadowBlur || 0);\n  setCtx(ctx, 'shadowColor', style.textShadowColor || 'transparent');\n  setCtx(ctx, 'shadowOffsetX', style.textShadowOffsetX || 0);\n  setCtx(ctx, 'shadowOffsetY', style.textShadowOffsetY || 0); // `textBaseline` is set as 'middle'.\n\n  textY += lineHeight / 2;\n  var textStrokeWidth = style.textStrokeWidth;\n  var textStroke = getStroke(style.textStroke, textStrokeWidth);\n  var textFill = getFill(style.textFill);\n\n  if (textStroke) {\n    setCtx(ctx, 'lineWidth', textStrokeWidth);\n    setCtx(ctx, 'strokeStyle', textStroke);\n  }\n\n  if (textFill) {\n    setCtx(ctx, 'fillStyle', textFill);\n  }\n\n  for (var i = 0; i < textLines.length; i++) {\n    // Fill after stroke so the outline will not cover the main part.\n    textStroke && ctx.strokeText(textLines[i], textX, textY);\n    textFill && ctx.fillText(textLines[i], textX, textY);\n    textY += lineHeight;\n  }\n}\n\nfunction renderRichText(hostEl, ctx, text, style, rect) {\n  var contentBlock = hostEl.__textCotentBlock;\n\n  if (!contentBlock || hostEl.__dirty) {\n    contentBlock = hostEl.__textCotentBlock = textContain.parseRichText(text, style);\n  }\n\n  drawRichText(hostEl, ctx, contentBlock, style, rect);\n}\n\nfunction drawRichText(hostEl, ctx, contentBlock, style, rect) {\n  var contentWidth = contentBlock.width;\n  var outerWidth = contentBlock.outerWidth;\n  var outerHeight = contentBlock.outerHeight;\n  var textPadding = style.textPadding;\n  var boxPos = getBoxPosition(outerHeight, style, rect);\n  var baseX = boxPos.baseX;\n  var baseY = boxPos.baseY;\n  var textAlign = boxPos.textAlign;\n  var textVerticalAlign = boxPos.textVerticalAlign; // Origin of textRotation should be the base point of text drawing.\n\n  applyTextRotation(ctx, style, rect, baseX, baseY);\n  var boxX = textContain.adjustTextX(baseX, outerWidth, textAlign);\n  var boxY = textContain.adjustTextY(baseY, outerHeight, textVerticalAlign);\n  var xLeft = boxX;\n  var lineTop = boxY;\n\n  if (textPadding) {\n    xLeft += textPadding[3];\n    lineTop += textPadding[0];\n  }\n\n  var xRight = xLeft + contentWidth;\n  needDrawBackground(style) && drawBackground(hostEl, ctx, style, boxX, boxY, outerWidth, outerHeight);\n\n  for (var i = 0; i < contentBlock.lines.length; i++) {\n    var line = contentBlock.lines[i];\n    var tokens = line.tokens;\n    var tokenCount = tokens.length;\n    var lineHeight = line.lineHeight;\n    var usedWidth = line.width;\n    var leftIndex = 0;\n    var lineXLeft = xLeft;\n    var lineXRight = xRight;\n    var rightIndex = tokenCount - 1;\n    var token;\n\n    while (leftIndex < tokenCount && (token = tokens[leftIndex], !token.textAlign || token.textAlign === 'left')) {\n      placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXLeft, 'left');\n      usedWidth -= token.width;\n      lineXLeft += token.width;\n      leftIndex++;\n    }\n\n    while (rightIndex >= 0 && (token = tokens[rightIndex], token.textAlign === 'right')) {\n      placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXRight, 'right');\n      usedWidth -= token.width;\n      lineXRight -= token.width;\n      rightIndex--;\n    } // The other tokens are placed as textAlign 'center' if there is enough space.\n\n\n    lineXLeft += (contentWidth - (lineXLeft - xLeft) - (xRight - lineXRight) - usedWidth) / 2;\n\n    while (leftIndex <= rightIndex) {\n      token = tokens[leftIndex]; // Consider width specified by user, use 'center' rather than 'left'.\n\n      placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXLeft + token.width / 2, 'center');\n      lineXLeft += token.width;\n      leftIndex++;\n    }\n\n    lineTop += lineHeight;\n  }\n}\n\nfunction applyTextRotation(ctx, style, rect, x, y) {\n  // textRotation only apply in RectText.\n  if (rect && style.textRotation) {\n    var origin = style.textOrigin;\n\n    if (origin === 'center') {\n      x = rect.width / 2 + rect.x;\n      y = rect.height / 2 + rect.y;\n    } else if (origin) {\n      x = origin[0] + rect.x;\n      y = origin[1] + rect.y;\n    }\n\n    ctx.translate(x, y); // Positive: anticlockwise\n\n    ctx.rotate(-style.textRotation);\n    ctx.translate(-x, -y);\n  }\n}\n\nfunction placeToken(hostEl, ctx, token, style, lineHeight, lineTop, x, textAlign) {\n  var tokenStyle = style.rich[token.styleName] || {}; // 'ctx.textBaseline' is always set as 'middle', for sake of\n  // the bias of \"Microsoft YaHei\".\n\n  var textVerticalAlign = token.textVerticalAlign;\n  var y = lineTop + lineHeight / 2;\n\n  if (textVerticalAlign === 'top') {\n    y = lineTop + token.height / 2;\n  } else if (textVerticalAlign === 'bottom') {\n    y = lineTop + lineHeight - token.height / 2;\n  }\n\n  !token.isLineHolder && needDrawBackground(tokenStyle) && drawBackground(hostEl, ctx, tokenStyle, textAlign === 'right' ? x - token.width : textAlign === 'center' ? x - token.width / 2 : x, y - token.height / 2, token.width, token.height);\n  var textPadding = token.textPadding;\n\n  if (textPadding) {\n    x = getTextXForPadding(x, textAlign, textPadding);\n    y -= token.height / 2 - textPadding[2] - token.textHeight / 2;\n  }\n\n  setCtx(ctx, 'shadowBlur', retrieve3(tokenStyle.textShadowBlur, style.textShadowBlur, 0));\n  setCtx(ctx, 'shadowColor', tokenStyle.textShadowColor || style.textShadowColor || 'transparent');\n  setCtx(ctx, 'shadowOffsetX', retrieve3(tokenStyle.textShadowOffsetX, style.textShadowOffsetX, 0));\n  setCtx(ctx, 'shadowOffsetY', retrieve3(tokenStyle.textShadowOffsetY, style.textShadowOffsetY, 0));\n  setCtx(ctx, 'textAlign', textAlign); // Force baseline to be \"middle\". Otherwise, if using \"top\", the\n  // text will offset downward a little bit in font \"Microsoft YaHei\".\n\n  setCtx(ctx, 'textBaseline', 'middle');\n  setCtx(ctx, 'font', token.font || textContain.DEFAULT_FONT);\n  var textStroke = getStroke(tokenStyle.textStroke || style.textStroke, textStrokeWidth);\n  var textFill = getFill(tokenStyle.textFill || style.textFill);\n  var textStrokeWidth = retrieve2(tokenStyle.textStrokeWidth, style.textStrokeWidth); // Fill after stroke so the outline will not cover the main part.\n\n  if (textStroke) {\n    setCtx(ctx, 'lineWidth', textStrokeWidth);\n    setCtx(ctx, 'strokeStyle', textStroke);\n    ctx.strokeText(token.text, x, y);\n  }\n\n  if (textFill) {\n    setCtx(ctx, 'fillStyle', textFill);\n    ctx.fillText(token.text, x, y);\n  }\n}\n\nfunction needDrawBackground(style) {\n  return style.textBackgroundColor || style.textBorderWidth && style.textBorderColor;\n} // style: {textBackgroundColor, textBorderWidth, textBorderColor, textBorderRadius}\n// shape: {x, y, width, height}\n\n\nfunction drawBackground(hostEl, ctx, style, x, y, width, height) {\n  var textBackgroundColor = style.textBackgroundColor;\n  var textBorderWidth = style.textBorderWidth;\n  var textBorderColor = style.textBorderColor;\n  var isPlainBg = isString(textBackgroundColor);\n  setCtx(ctx, 'shadowBlur', style.textBoxShadowBlur || 0);\n  setCtx(ctx, 'shadowColor', style.textBoxShadowColor || 'transparent');\n  setCtx(ctx, 'shadowOffsetX', style.textBoxShadowOffsetX || 0);\n  setCtx(ctx, 'shadowOffsetY', style.textBoxShadowOffsetY || 0);\n\n  if (isPlainBg || textBorderWidth && textBorderColor) {\n    ctx.beginPath();\n    var textBorderRadius = style.textBorderRadius;\n\n    if (!textBorderRadius) {\n      ctx.rect(x, y, width, height);\n    } else {\n      roundRectHelper.buildPath(ctx, {\n        x: x,\n        y: y,\n        width: width,\n        height: height,\n        r: textBorderRadius\n      });\n    }\n\n    ctx.closePath();\n  }\n\n  if (isPlainBg) {\n    setCtx(ctx, 'fillStyle', textBackgroundColor);\n    ctx.fill();\n  } else if (isObject(textBackgroundColor)) {\n    var image = textBackgroundColor.image;\n    image = imageHelper.createOrUpdateImage(image, null, hostEl, onBgImageLoaded, textBackgroundColor);\n\n    if (image && imageHelper.isImageReady(image)) {\n      ctx.drawImage(image, x, y, width, height);\n    }\n  }\n\n  if (textBorderWidth && textBorderColor) {\n    setCtx(ctx, 'lineWidth', textBorderWidth);\n    setCtx(ctx, 'strokeStyle', textBorderColor);\n    ctx.stroke();\n  }\n}\n\nfunction onBgImageLoaded(image, textBackgroundColor) {\n  // Replace image, so that `contain/text.js#parseRichText`\n  // will get correct result in next tick.\n  textBackgroundColor.image = image;\n}\n\nfunction getBoxPosition(blockHeiht, style, rect) {\n  var baseX = style.x || 0;\n  var baseY = style.y || 0;\n  var textAlign = style.textAlign;\n  var textVerticalAlign = style.textVerticalAlign; // Text position represented by coord\n\n  if (rect) {\n    var textPosition = style.textPosition;\n\n    if (textPosition instanceof Array) {\n      // Percent\n      baseX = rect.x + parsePercent(textPosition[0], rect.width);\n      baseY = rect.y + parsePercent(textPosition[1], rect.height);\n    } else {\n      var res = textContain.adjustTextPositionOnRect(textPosition, rect, style.textDistance);\n      baseX = res.x;\n      baseY = res.y; // Default align and baseline when has textPosition\n\n      textAlign = textAlign || res.textAlign;\n      textVerticalAlign = textVerticalAlign || res.textVerticalAlign;\n    } // textOffset is only support in RectText, otherwise\n    // we have to adjust boundingRect for textOffset.\n\n\n    var textOffset = style.textOffset;\n\n    if (textOffset) {\n      baseX += textOffset[0];\n      baseY += textOffset[1];\n    }\n  }\n\n  return {\n    baseX: baseX,\n    baseY: baseY,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n\nfunction setCtx(ctx, prop, value) {\n  ctx[prop] = fixShadow(ctx, prop, value);\n  return ctx[prop];\n}\n/**\n * @param {string} [stroke] If specified, do not check style.textStroke.\n * @param {string} [lineWidth] If specified, do not check style.textStroke.\n * @param {number} style\n */\n\n\nfunction getStroke(stroke, lineWidth) {\n  return stroke == null || lineWidth <= 0 || stroke === 'transparent' || stroke === 'none' ? null // TODO pattern and gradient?\n  : stroke.image || stroke.colorStops ? '#000' : stroke;\n}\n\nfunction getFill(fill) {\n  return fill == null || fill === 'none' ? null // TODO pattern and gradient?\n  : fill.image || fill.colorStops ? '#000' : fill;\n}\n\nfunction parsePercent(value, maxValue) {\n  if (typeof value === 'string') {\n    if (value.lastIndexOf('%') >= 0) {\n      return parseFloat(value) / 100 * maxValue;\n    }\n\n    return parseFloat(value);\n  }\n\n  return value;\n}\n\nfunction getTextXForPadding(x, textAlign, textPadding) {\n  return textAlign === 'right' ? x - textPadding[1] : textAlign === 'center' ? x + textPadding[3] / 2 - textPadding[1] / 2 : x + textPadding[3];\n}\n/**\n * @param {string} text\n * @param {module:zrender/Style} style\n * @return {boolean}\n */\n\n\nfunction needDrawText(text, style) {\n  return text != null && (text || style.textBackgroundColor || style.textBorderWidth && style.textBorderColor || style.textPadding);\n}\n\nexports.normalizeTextStyle = normalizeTextStyle;\nexports.renderText = renderText;\nexports.getStroke = getStroke;\nexports.getFill = getFill;\nexports.needDrawText = needDrawText;"],"sourceRoot":""}