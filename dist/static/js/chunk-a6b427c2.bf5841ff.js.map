{"version":3,"sources":["webpack:///./node_modules/_echarts@4.1.0@echarts/lib/chart/pie/PieView.js","webpack:///./node_modules/_echarts@4.1.0@echarts/lib/chart/helper/createListSimply.js","webpack:///./node_modules/_echarts@4.1.0@echarts/lib/processor/dataFilter.js","webpack:///./node_modules/_echarts@4.1.0@echarts/lib/action/createDataSelectAction.js","webpack:///./node_modules/_echarts@4.1.0@echarts/lib/visual/dataColor.js","webpack:///./node_modules/_echarts@4.1.0@echarts/lib/component/helper/selectableMixin.js","webpack:///./node_modules/_echarts@4.1.0@echarts/lib/chart/pie/labelLayout.js","webpack:///./node_modules/_echarts@4.1.0@echarts/lib/chart/pie.js","webpack:///./node_modules/_echarts@4.1.0@echarts/lib/chart/pie/PieSeries.js","webpack:///./node_modules/_echarts@4.1.0@echarts/lib/chart/pie/pieLayout.js"],"names":["zrUtil","__webpack_require__","graphic","ChartView","updateDataSelected","uid","seriesModel","hasAnimation","api","data","getData","dataIndex","this","name","getName","selectedOffset","get","dispatchAction","type","from","seriesId","id","each","idx","toggleItemSelected","getItemGraphicEl","getItemLayout","isSelected","el","layout","midAngle","startAngle","endAngle","dx","Math","cos","dy","sin","offset","position","animate","when","start","attr","PiePiece","Group","call","sector","Sector","z2","polyline","Polyline","text","Text","onEmphasis","ignore","hoverIgnore","onNormal","normalIgnore","add","updateData","on","piePieceProto","prototype","firstCreate","childAt","hostModel","itemModel","getItemModel","sectorShape","extend","label","setShape","animationType","getShallow","shape","r","r0","initProps","updateProps","visualColor","getItemVisual","useStyle","defaults","lineJoin","fill","getModel","getItemStyle","hoverStyle","cursorStyle","stopAnimation","animateTo","off","isAnimationEnabled","_updateLabel","setHoverStyle","labelLine","labelText","labelLayout","points","linePoints","x","y","style","rotation","origin","labelModel","labelHoverModel","labelLineModel","labelLineHoverModel","setLabelStyle","labelFetcher","labelDataIndex","defaultText","autoColor","useInsideStyle","inside","textAlign","textVerticalAlign","verticalAlign","opacity","setStyle","stroke","getLineStyle","smooth","inherits","PieView","init","sectorGroup","_sectorGroup","render","ecModel","payload","oldData","_data","group","isFirstRender","onSectorClick","curry","selectedMode","diff","piePiece","eachChild","child","setItemGraphicEl","update","newIdx","oldIdx","remove","execute","count","max","getWidth","getHeight","removeClipPath","bind","setClipPath","_createClipPath","cx","cy","clockwise","dispose","cb","clipPath","PI","containPoint","point","itemLayout","radius","sqrt","_default","module","exports","createDimensions","List","_util","isArray","opt","nameList","coordDimensions","source","getSource","dimensionsInfo","list","initData","seriesType","reset","legendModels","findComponents","mainType","length","filterSelf","i","echarts","actionInfos","actionInfo","registerAction","selected","eachComponent","subType","query","method","createHashMap","getTargetSeries","paletteScope","seiresModelMap","eachSeriesByType","__paletteScope","set","dataAll","getRawData","idxMap","rawIdx","getRawIndex","filteredIdx","singleDataColor","setItemVisual","color","getColorFromPalette","updateSelectedMap","targetList","_targetList","slice","_selectTargetMap","reduce","targetMap","target","select","unSelect","toggleSelected","textContain","adjustSingleSide","dir","viewWidth","viewHeight","shiftDown","end","delta","j","height","shiftUp","changeX","isDownList","lastDeltaX","Number","MAX_VALUE","l","deltaY","abs","len","length2","len2","deltaX","sort","a","b","lastY","upList","downList","push","avoidOverlap","labelLayoutList","leftList","rightList","dist","hasLabelRotate","textX","textY","labelPosition","labelLineLen","labelLineLen2","isLabelInside","x1","y1","x2","y2","x3","y3","font","getFont","labelRotate","getFormattedLabel","textRect","getBoundingRect","createDataSelectAction","dataColor","pieLayout","dataFilter","event","registerVisual","registerLayout","registerProcessor","createListSimply","modelUtil","_number","getPercentWithPrecision","dataSelectableMixin","_dataProvider","retrieveRawAttr","PieSeries","extendSeriesModel","option","superApply","arguments","legendDataProvider","_createSelectableList","_defaultLabelLine","mergeOption","newOption","superCall","getInitialData","valueDim","mapDimension","value","getDataParams","params","valueList","percent","$vars","defaultEmphasis","labelLineNormalOpt","labelLineEmphasisOpt","emphasis","show","defaultOption","zlevel","z","legendHoverLink","hoverAnimation","center","minAngle","hoverOffset","avoidLabelOverlap","percentPrecision","stillShowZeroSum","rotate","lineStyle","width","itemStyle","borderWidth","animationEasing","mixin","parsePercent","linearMap","PI2","RADIAN","size","min","validDataCount","isNaN","sum","getSum","unitRadian","roseType","extent","getDataExtent","restAngle","valueSumLargerThanMinAngle","currentAngle","angle","setItemLayout","NaN"],"mappings":"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","file":"static/js/chunk-a6b427c2.bf5841ff.js","sourcesContent":["var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar ChartView = require(\"../../view/Chart\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {module:echarts/model/Series} seriesModel\n * @param {boolean} hasAnimation\n * @inner\n */\nfunction updateDataSelected(uid, seriesModel, hasAnimation, api) {\n  var data = seriesModel.getData();\n  var dataIndex = this.dataIndex;\n  var name = data.getName(dataIndex);\n  var selectedOffset = seriesModel.get('selectedOffset');\n  api.dispatchAction({\n    type: 'pieToggleSelect',\n    from: uid,\n    name: name,\n    seriesId: seriesModel.id\n  });\n  data.each(function (idx) {\n    toggleItemSelected(data.getItemGraphicEl(idx), data.getItemLayout(idx), seriesModel.isSelected(data.getName(idx)), selectedOffset, hasAnimation);\n  });\n}\n/**\n * @param {module:zrender/graphic/Sector} el\n * @param {Object} layout\n * @param {boolean} isSelected\n * @param {number} selectedOffset\n * @param {boolean} hasAnimation\n * @inner\n */\n\n\nfunction toggleItemSelected(el, layout, isSelected, selectedOffset, hasAnimation) {\n  var midAngle = (layout.startAngle + layout.endAngle) / 2;\n  var dx = Math.cos(midAngle);\n  var dy = Math.sin(midAngle);\n  var offset = isSelected ? selectedOffset : 0;\n  var position = [dx * offset, dy * offset];\n  hasAnimation // animateTo will stop revious animation like update transition\n  ? el.animate().when(200, {\n    position: position\n  }).start('bounceOut') : el.attr('position', position);\n}\n/**\n * Piece of pie including Sector, Label, LabelLine\n * @constructor\n * @extends {module:zrender/graphic/Group}\n */\n\n\nfunction PiePiece(data, idx) {\n  graphic.Group.call(this);\n  var sector = new graphic.Sector({\n    z2: 2\n  });\n  var polyline = new graphic.Polyline();\n  var text = new graphic.Text();\n  this.add(sector);\n  this.add(polyline);\n  this.add(text);\n  this.updateData(data, idx, true); // Hover to change label and labelLine\n\n  function onEmphasis() {\n    polyline.ignore = polyline.hoverIgnore;\n    text.ignore = text.hoverIgnore;\n  }\n\n  function onNormal() {\n    polyline.ignore = polyline.normalIgnore;\n    text.ignore = text.normalIgnore;\n  }\n\n  this.on('emphasis', onEmphasis).on('normal', onNormal).on('mouseover', onEmphasis).on('mouseout', onNormal);\n}\n\nvar piePieceProto = PiePiece.prototype;\n\npiePieceProto.updateData = function (data, idx, firstCreate) {\n  var sector = this.childAt(0);\n  var seriesModel = data.hostModel;\n  var itemModel = data.getItemModel(idx);\n  var layout = data.getItemLayout(idx);\n  var sectorShape = zrUtil.extend({}, layout);\n  sectorShape.label = null;\n\n  if (firstCreate) {\n    sector.setShape(sectorShape);\n    var animationType = seriesModel.getShallow('animationType');\n\n    if (animationType === 'scale') {\n      sector.shape.r = layout.r0;\n      graphic.initProps(sector, {\n        shape: {\n          r: layout.r\n        }\n      }, seriesModel, idx);\n    } // Expansion\n    else {\n        sector.shape.endAngle = layout.startAngle;\n        graphic.updateProps(sector, {\n          shape: {\n            endAngle: layout.endAngle\n          }\n        }, seriesModel, idx);\n      }\n  } else {\n    graphic.updateProps(sector, {\n      shape: sectorShape\n    }, seriesModel, idx);\n  } // Update common style\n\n\n  var visualColor = data.getItemVisual(idx, 'color');\n  sector.useStyle(zrUtil.defaults({\n    lineJoin: 'bevel',\n    fill: visualColor\n  }, itemModel.getModel('itemStyle').getItemStyle()));\n  sector.hoverStyle = itemModel.getModel('emphasis.itemStyle').getItemStyle();\n  var cursorStyle = itemModel.getShallow('cursor');\n  cursorStyle && sector.attr('cursor', cursorStyle); // Toggle selected\n\n  toggleItemSelected(this, data.getItemLayout(idx), seriesModel.isSelected(null, idx), seriesModel.get('selectedOffset'), seriesModel.get('animation'));\n\n  function onEmphasis() {\n    // Sector may has animation of updating data. Force to move to the last frame\n    // Or it may stopped on the wrong shape\n    sector.stopAnimation(true);\n    sector.animateTo({\n      shape: {\n        r: layout.r + seriesModel.get('hoverOffset')\n      }\n    }, 300, 'elasticOut');\n  }\n\n  function onNormal() {\n    sector.stopAnimation(true);\n    sector.animateTo({\n      shape: {\n        r: layout.r\n      }\n    }, 300, 'elasticOut');\n  }\n\n  sector.off('mouseover').off('mouseout').off('emphasis').off('normal');\n\n  if (itemModel.get('hoverAnimation') && seriesModel.isAnimationEnabled()) {\n    sector.on('mouseover', onEmphasis).on('mouseout', onNormal).on('emphasis', onEmphasis).on('normal', onNormal);\n  }\n\n  this._updateLabel(data, idx);\n\n  graphic.setHoverStyle(this);\n};\n\npiePieceProto._updateLabel = function (data, idx) {\n  var labelLine = this.childAt(1);\n  var labelText = this.childAt(2);\n  var seriesModel = data.hostModel;\n  var itemModel = data.getItemModel(idx);\n  var layout = data.getItemLayout(idx);\n  var labelLayout = layout.label;\n  var visualColor = data.getItemVisual(idx, 'color');\n  graphic.updateProps(labelLine, {\n    shape: {\n      points: labelLayout.linePoints || [[labelLayout.x, labelLayout.y], [labelLayout.x, labelLayout.y], [labelLayout.x, labelLayout.y]]\n    }\n  }, seriesModel, idx);\n  graphic.updateProps(labelText, {\n    style: {\n      x: labelLayout.x,\n      y: labelLayout.y\n    }\n  }, seriesModel, idx);\n  labelText.attr({\n    rotation: labelLayout.rotation,\n    origin: [labelLayout.x, labelLayout.y],\n    z2: 10\n  });\n  var labelModel = itemModel.getModel('label');\n  var labelHoverModel = itemModel.getModel('emphasis.label');\n  var labelLineModel = itemModel.getModel('labelLine');\n  var labelLineHoverModel = itemModel.getModel('emphasis.labelLine');\n  var visualColor = data.getItemVisual(idx, 'color');\n  graphic.setLabelStyle(labelText.style, labelText.hoverStyle = {}, labelModel, labelHoverModel, {\n    labelFetcher: data.hostModel,\n    labelDataIndex: idx,\n    defaultText: data.getName(idx),\n    autoColor: visualColor,\n    useInsideStyle: !!labelLayout.inside\n  }, {\n    textAlign: labelLayout.textAlign,\n    textVerticalAlign: labelLayout.verticalAlign,\n    opacity: data.getItemVisual(idx, 'opacity')\n  });\n  labelText.ignore = labelText.normalIgnore = !labelModel.get('show');\n  labelText.hoverIgnore = !labelHoverModel.get('show');\n  labelLine.ignore = labelLine.normalIgnore = !labelLineModel.get('show');\n  labelLine.hoverIgnore = !labelLineHoverModel.get('show'); // Default use item visual color\n\n  labelLine.setStyle({\n    stroke: visualColor,\n    opacity: data.getItemVisual(idx, 'opacity')\n  });\n  labelLine.setStyle(labelLineModel.getModel('lineStyle').getLineStyle());\n  labelLine.hoverStyle = labelLineHoverModel.getModel('lineStyle').getLineStyle();\n  var smooth = labelLineModel.get('smooth');\n\n  if (smooth && smooth === true) {\n    smooth = 0.4;\n  }\n\n  labelLine.setShape({\n    smooth: smooth\n  });\n};\n\nzrUtil.inherits(PiePiece, graphic.Group); // Pie view\n\nvar PieView = ChartView.extend({\n  type: 'pie',\n  init: function () {\n    var sectorGroup = new graphic.Group();\n    this._sectorGroup = sectorGroup;\n  },\n  render: function (seriesModel, ecModel, api, payload) {\n    if (payload && payload.from === this.uid) {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var group = this.group;\n    var hasAnimation = ecModel.get('animation');\n    var isFirstRender = !oldData;\n    var animationType = seriesModel.get('animationType');\n    var onSectorClick = zrUtil.curry(updateDataSelected, this.uid, seriesModel, hasAnimation, api);\n    var selectedMode = seriesModel.get('selectedMode');\n    data.diff(oldData).add(function (idx) {\n      var piePiece = new PiePiece(data, idx); // Default expansion animation\n\n      if (isFirstRender && animationType !== 'scale') {\n        piePiece.eachChild(function (child) {\n          child.stopAnimation(true);\n        });\n      }\n\n      selectedMode && piePiece.on('click', onSectorClick);\n      data.setItemGraphicEl(idx, piePiece);\n      group.add(piePiece);\n    }).update(function (newIdx, oldIdx) {\n      var piePiece = oldData.getItemGraphicEl(oldIdx);\n      piePiece.updateData(data, newIdx);\n      piePiece.off('click');\n      selectedMode && piePiece.on('click', onSectorClick);\n      group.add(piePiece);\n      data.setItemGraphicEl(newIdx, piePiece);\n    }).remove(function (idx) {\n      var piePiece = oldData.getItemGraphicEl(idx);\n      group.remove(piePiece);\n    }).execute();\n\n    if (hasAnimation && isFirstRender && data.count() > 0 // Default expansion animation\n    && animationType !== 'scale') {\n      var shape = data.getItemLayout(0);\n      var r = Math.max(api.getWidth(), api.getHeight()) / 2;\n      var removeClipPath = zrUtil.bind(group.removeClipPath, group);\n      group.setClipPath(this._createClipPath(shape.cx, shape.cy, r, shape.startAngle, shape.clockwise, removeClipPath, seriesModel));\n    }\n\n    this._data = data;\n  },\n  dispose: function () {},\n  _createClipPath: function (cx, cy, r, startAngle, clockwise, cb, seriesModel) {\n    var clipPath = new graphic.Sector({\n      shape: {\n        cx: cx,\n        cy: cy,\n        r0: 0,\n        r: r,\n        startAngle: startAngle,\n        endAngle: startAngle,\n        clockwise: clockwise\n      }\n    });\n    graphic.initProps(clipPath, {\n      shape: {\n        endAngle: startAngle + (clockwise ? 1 : -1) * Math.PI * 2\n      }\n    }, seriesModel, cb);\n    return clipPath;\n  },\n\n  /**\n   * @implement\n   */\n  containPoint: function (point, seriesModel) {\n    var data = seriesModel.getData();\n    var itemLayout = data.getItemLayout(0);\n\n    if (itemLayout) {\n      var dx = point[0] - itemLayout.cx;\n      var dy = point[1] - itemLayout.cy;\n      var radius = Math.sqrt(dx * dx + dy * dy);\n      return radius <= itemLayout.r && radius >= itemLayout.r0;\n    }\n  }\n});\nvar _default = PieView;\nmodule.exports = _default;","var createDimensions = require(\"../../data/helper/createDimensions\");\n\nvar List = require(\"../../data/List\");\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar extend = _util.extend;\nvar isArray = _util.isArray;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * [Usage]:\n * (1)\n * createListSimply(seriesModel, ['value']);\n * (2)\n * createListSimply(seriesModel, {\n *     coordDimensions: ['value'],\n *     dimensionsCount: 5\n * });\n *\n * @param {module:echarts/model/Series} seriesModel\n * @param {Object|Array.<string|Object>} opt opt or coordDimensions\n *        The options in opt, see `echarts/data/helper/createDimensions`\n * @param {Array.<string>} [nameList]\n * @return {module:echarts/data/List}\n */\nfunction _default(seriesModel, opt, nameList) {\n  opt = isArray(opt) && {\n    coordDimensions: opt\n  } || extend({}, opt);\n  var source = seriesModel.getSource();\n  var dimensionsInfo = createDimensions(source, opt);\n  var list = new List(dimensionsInfo, seriesModel);\n  list.initData(source, nameList);\n  return list;\n}\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(seriesType) {\n  return {\n    seriesType: seriesType,\n    reset: function (seriesModel, ecModel) {\n      var legendModels = ecModel.findComponents({\n        mainType: 'legend'\n      });\n\n      if (!legendModels || !legendModels.length) {\n        return;\n      }\n\n      var data = seriesModel.getData();\n      data.filterSelf(function (idx) {\n        var name = data.getName(idx); // If in any legend component the status is not selected.\n\n        for (var i = 0; i < legendModels.length; i++) {\n          if (!legendModels[i].isSelected(name)) {\n            return false;\n          }\n        }\n\n        return true;\n      });\n    }\n  };\n}\n\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(seriesType, actionInfos) {\n  zrUtil.each(actionInfos, function (actionInfo) {\n    actionInfo.update = 'updateView';\n    /**\n     * @payload\n     * @property {string} seriesName\n     * @property {string} name\n     */\n\n    echarts.registerAction(actionInfo, function (payload, ecModel) {\n      var selected = {};\n      ecModel.eachComponent({\n        mainType: 'series',\n        subType: seriesType,\n        query: payload\n      }, function (seriesModel) {\n        if (seriesModel[actionInfo.method]) {\n          seriesModel[actionInfo.method](payload.name, payload.dataIndex);\n        }\n\n        var data = seriesModel.getData(); // Create selected map\n\n        data.each(function (idx) {\n          var name = data.getName(idx);\n          selected[name] = seriesModel.isSelected(name) || false;\n        });\n      });\n      return {\n        name: payload.name,\n        selected: selected\n      };\n    });\n  });\n}\n\nmodule.exports = _default;","var _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Pick color from palette for each data item.\n// Applicable for charts that require applying color palette\n// in data level (like pie, funnel, chord).\nfunction _default(seriesType) {\n  return {\n    getTargetSeries: function (ecModel) {\n      // Pie and funnel may use diferrent scope\n      var paletteScope = {};\n      var seiresModelMap = createHashMap();\n      ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n        seriesModel.__paletteScope = paletteScope;\n        seiresModelMap.set(seriesModel.uid, seriesModel);\n      });\n      return seiresModelMap;\n    },\n    reset: function (seriesModel, ecModel) {\n      var dataAll = seriesModel.getRawData();\n      var idxMap = {};\n      var data = seriesModel.getData();\n      data.each(function (idx) {\n        var rawIdx = data.getRawIndex(idx);\n        idxMap[rawIdx] = idx;\n      });\n      dataAll.each(function (rawIdx) {\n        var filteredIdx = idxMap[rawIdx]; // If series.itemStyle.normal.color is a function. itemVisual may be encoded\n\n        var singleDataColor = filteredIdx != null && data.getItemVisual(filteredIdx, 'color', true);\n\n        if (!singleDataColor) {\n          // FIXME Performance\n          var itemModel = dataAll.getItemModel(rawIdx);\n          var color = itemModel.get('itemStyle.color') || seriesModel.getColorFromPalette(dataAll.getName(rawIdx) || rawIdx + '', seriesModel.__paletteScope, dataAll.count()); // Legend may use the visual info in data before processed\n\n          dataAll.setItemVisual(rawIdx, 'color', color); // Data is not filtered\n\n          if (filteredIdx != null) {\n            data.setItemVisual(filteredIdx, 'color', color);\n          }\n        } else {\n          // Set data all color for legend\n          dataAll.setItemVisual(rawIdx, 'color', singleDataColor);\n        }\n      });\n    }\n  };\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Data selectable mixin for chart series.\n * To eanble data select, option of series must have `selectedMode`.\n * And each data item will use `selected` to toggle itself selected status\n */\nvar _default = {\n  /**\n   * @param {Array.<Object>} targetList [{name, value, selected}, ...]\n   *        If targetList is an array, it should like [{name: ..., value: ...}, ...].\n   *        If targetList is a \"List\", it must have coordDim: 'value' dimension and name.\n   */\n  updateSelectedMap: function (targetList) {\n    this._targetList = zrUtil.isArray(targetList) ? targetList.slice() : [];\n    this._selectTargetMap = zrUtil.reduce(targetList || [], function (targetMap, target) {\n      targetMap.set(target.name, target);\n      return targetMap;\n    }, zrUtil.createHashMap());\n  },\n\n  /**\n   * Either name or id should be passed as input here.\n   * If both of them are defined, id is used.\n   *\n   * @param {string|undefined} name name of data\n   * @param {number|undefined} id dataIndex of data\n   */\n  // PENGING If selectedMode is null ?\n  select: function (name, id) {\n    var target = id != null ? this._targetList[id] : this._selectTargetMap.get(name);\n    var selectedMode = this.get('selectedMode');\n\n    if (selectedMode === 'single') {\n      this._selectTargetMap.each(function (target) {\n        target.selected = false;\n      });\n    }\n\n    target && (target.selected = true);\n  },\n\n  /**\n   * Either name or id should be passed as input here.\n   * If both of them are defined, id is used.\n   *\n   * @param {string|undefined} name name of data\n   * @param {number|undefined} id dataIndex of data\n   */\n  unSelect: function (name, id) {\n    var target = id != null ? this._targetList[id] : this._selectTargetMap.get(name); // var selectedMode = this.get('selectedMode');\n    // selectedMode !== 'single' && target && (target.selected = false);\n\n    target && (target.selected = false);\n  },\n\n  /**\n   * Either name or id should be passed as input here.\n   * If both of them are defined, id is used.\n   *\n   * @param {string|undefined} name name of data\n   * @param {number|undefined} id dataIndex of data\n   */\n  toggleSelected: function (name, id) {\n    var target = id != null ? this._targetList[id] : this._selectTargetMap.get(name);\n\n    if (target != null) {\n      this[target.selected ? 'unSelect' : 'select'](name, id);\n      return target.selected;\n    }\n  },\n\n  /**\n   * Either name or id should be passed as input here.\n   * If both of them are defined, id is used.\n   *\n   * @param {string|undefined} name name of data\n   * @param {number|undefined} id dataIndex of data\n   */\n  isSelected: function (name, id) {\n    var target = id != null ? this._targetList[id] : this._selectTargetMap.get(name);\n    return target && target.selected;\n  }\n};\nmodule.exports = _default;","var textContain = require(\"zrender/lib/contain/text\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// FIXME emphasis label position is not same with normal label position\nfunction adjustSingleSide(list, cx, cy, r, dir, viewWidth, viewHeight) {\n  list.sort(function (a, b) {\n    return a.y - b.y;\n  }); // 压\n\n  function shiftDown(start, end, delta, dir) {\n    for (var j = start; j < end; j++) {\n      list[j].y += delta;\n\n      if (j > start && j + 1 < end && list[j + 1].y > list[j].y + list[j].height) {\n        shiftUp(j, delta / 2);\n        return;\n      }\n    }\n\n    shiftUp(end - 1, delta / 2);\n  } // 弹\n\n\n  function shiftUp(end, delta) {\n    for (var j = end; j >= 0; j--) {\n      list[j].y -= delta;\n\n      if (j > 0 && list[j].y > list[j - 1].y + list[j - 1].height) {\n        break;\n      }\n    }\n  }\n\n  function changeX(list, isDownList, cx, cy, r, dir) {\n    var lastDeltaX = dir > 0 ? isDownList // 右侧\n    ? Number.MAX_VALUE // 下\n    : 0 // 上\n    : isDownList // 左侧\n    ? Number.MAX_VALUE // 下\n    : 0; // 上\n\n    for (var i = 0, l = list.length; i < l; i++) {\n      // Not change x for center label\n      if (list[i].position === 'center') {\n        continue;\n      }\n\n      var deltaY = Math.abs(list[i].y - cy);\n      var length = list[i].len;\n      var length2 = list[i].len2;\n      var deltaX = deltaY < r + length ? Math.sqrt((r + length + length2) * (r + length + length2) - deltaY * deltaY) : Math.abs(list[i].x - cx);\n\n      if (isDownList && deltaX >= lastDeltaX) {\n        // 右下，左下\n        deltaX = lastDeltaX - 10;\n      }\n\n      if (!isDownList && deltaX <= lastDeltaX) {\n        // 右上，左上\n        deltaX = lastDeltaX + 10;\n      }\n\n      list[i].x = cx + deltaX * dir;\n      lastDeltaX = deltaX;\n    }\n  }\n\n  var lastY = 0;\n  var delta;\n  var len = list.length;\n  var upList = [];\n  var downList = [];\n\n  for (var i = 0; i < len; i++) {\n    delta = list[i].y - lastY;\n\n    if (delta < 0) {\n      shiftDown(i, len, -delta, dir);\n    }\n\n    lastY = list[i].y + list[i].height;\n  }\n\n  if (viewHeight - lastY < 0) {\n    shiftUp(len - 1, lastY - viewHeight);\n  }\n\n  for (var i = 0; i < len; i++) {\n    if (list[i].y >= cy) {\n      downList.push(list[i]);\n    } else {\n      upList.push(list[i]);\n    }\n  }\n\n  changeX(upList, false, cx, cy, r, dir);\n  changeX(downList, true, cx, cy, r, dir);\n}\n\nfunction avoidOverlap(labelLayoutList, cx, cy, r, viewWidth, viewHeight) {\n  var leftList = [];\n  var rightList = [];\n\n  for (var i = 0; i < labelLayoutList.length; i++) {\n    if (labelLayoutList[i].x < cx) {\n      leftList.push(labelLayoutList[i]);\n    } else {\n      rightList.push(labelLayoutList[i]);\n    }\n  }\n\n  adjustSingleSide(rightList, cx, cy, r, 1, viewWidth, viewHeight);\n  adjustSingleSide(leftList, cx, cy, r, -1, viewWidth, viewHeight);\n\n  for (var i = 0; i < labelLayoutList.length; i++) {\n    var linePoints = labelLayoutList[i].linePoints;\n\n    if (linePoints) {\n      var dist = linePoints[1][0] - linePoints[2][0];\n\n      if (labelLayoutList[i].x < cx) {\n        linePoints[2][0] = labelLayoutList[i].x + 3;\n      } else {\n        linePoints[2][0] = labelLayoutList[i].x - 3;\n      }\n\n      linePoints[1][1] = linePoints[2][1] = labelLayoutList[i].y;\n      linePoints[1][0] = linePoints[2][0] + dist;\n    }\n  }\n}\n\nfunction _default(seriesModel, r, viewWidth, viewHeight) {\n  var data = seriesModel.getData();\n  var labelLayoutList = [];\n  var cx;\n  var cy;\n  var hasLabelRotate = false;\n  data.each(function (idx) {\n    var layout = data.getItemLayout(idx);\n    var itemModel = data.getItemModel(idx);\n    var labelModel = itemModel.getModel('label'); // Use position in normal or emphasis\n\n    var labelPosition = labelModel.get('position') || itemModel.get('emphasis.label.position');\n    var labelLineModel = itemModel.getModel('labelLine');\n    var labelLineLen = labelLineModel.get('length');\n    var labelLineLen2 = labelLineModel.get('length2');\n    var midAngle = (layout.startAngle + layout.endAngle) / 2;\n    var dx = Math.cos(midAngle);\n    var dy = Math.sin(midAngle);\n    var textX;\n    var textY;\n    var linePoints;\n    var textAlign;\n    cx = layout.cx;\n    cy = layout.cy;\n    var isLabelInside = labelPosition === 'inside' || labelPosition === 'inner';\n\n    if (labelPosition === 'center') {\n      textX = layout.cx;\n      textY = layout.cy;\n      textAlign = 'center';\n    } else {\n      var x1 = (isLabelInside ? (layout.r + layout.r0) / 2 * dx : layout.r * dx) + cx;\n      var y1 = (isLabelInside ? (layout.r + layout.r0) / 2 * dy : layout.r * dy) + cy;\n      textX = x1 + dx * 3;\n      textY = y1 + dy * 3;\n\n      if (!isLabelInside) {\n        // For roseType\n        var x2 = x1 + dx * (labelLineLen + r - layout.r);\n        var y2 = y1 + dy * (labelLineLen + r - layout.r);\n        var x3 = x2 + (dx < 0 ? -1 : 1) * labelLineLen2;\n        var y3 = y2;\n        textX = x3 + (dx < 0 ? -5 : 5);\n        textY = y3;\n        linePoints = [[x1, y1], [x2, y2], [x3, y3]];\n      }\n\n      textAlign = isLabelInside ? 'center' : dx > 0 ? 'left' : 'right';\n    }\n\n    var font = labelModel.getFont();\n    var labelRotate = labelModel.get('rotate') ? dx < 0 ? -midAngle + Math.PI : -midAngle : 0;\n    var text = seriesModel.getFormattedLabel(idx, 'normal') || data.getName(idx);\n    var textRect = textContain.getBoundingRect(text, font, textAlign, 'top');\n    hasLabelRotate = !!labelRotate;\n    layout.label = {\n      x: textX,\n      y: textY,\n      position: labelPosition,\n      height: textRect.height,\n      len: labelLineLen,\n      len2: labelLineLen2,\n      linePoints: linePoints,\n      textAlign: textAlign,\n      verticalAlign: 'middle',\n      rotation: labelRotate,\n      inside: isLabelInside\n    }; // Not layout the inside label\n\n    if (!isLabelInside) {\n      labelLayoutList.push(layout.label);\n    }\n  });\n\n  if (!hasLabelRotate && seriesModel.get('avoidLabelOverlap')) {\n    avoidOverlap(labelLayoutList, cx, cy, r, viewWidth, viewHeight);\n  }\n}\n\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nrequire(\"./pie/PieSeries\");\n\nrequire(\"./pie/PieView\");\n\nvar createDataSelectAction = require(\"../action/createDataSelectAction\");\n\nvar dataColor = require(\"../visual/dataColor\");\n\nvar pieLayout = require(\"./pie/pieLayout\");\n\nvar dataFilter = require(\"../processor/dataFilter\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\ncreateDataSelectAction('pie', [{\n  type: 'pieToggleSelect',\n  event: 'pieselectchanged',\n  method: 'toggleSelected'\n}, {\n  type: 'pieSelect',\n  event: 'pieselected',\n  method: 'select'\n}, {\n  type: 'pieUnSelect',\n  event: 'pieunselected',\n  method: 'unSelect'\n}]);\necharts.registerVisual(dataColor('pie'));\necharts.registerLayout(zrUtil.curry(pieLayout, 'pie'));\necharts.registerProcessor(dataFilter('pie'));","var echarts = require(\"../../echarts\");\n\nvar createListSimply = require(\"../helper/createListSimply\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar _number = require(\"../../util/number\");\n\nvar getPercentWithPrecision = _number.getPercentWithPrecision;\n\nvar dataSelectableMixin = require(\"../../component/helper/selectableMixin\");\n\nvar _dataProvider = require(\"../../data/helper/dataProvider\");\n\nvar retrieveRawAttr = _dataProvider.retrieveRawAttr;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar PieSeries = echarts.extendSeriesModel({\n  type: 'series.pie',\n  // Overwrite\n  init: function (option) {\n    PieSeries.superApply(this, 'init', arguments); // Enable legend selection for each data item\n    // Use a function instead of direct access because data reference may changed\n\n    this.legendDataProvider = function () {\n      return this.getRawData();\n    };\n\n    this.updateSelectedMap(this._createSelectableList());\n\n    this._defaultLabelLine(option);\n  },\n  // Overwrite\n  mergeOption: function (newOption) {\n    PieSeries.superCall(this, 'mergeOption', newOption);\n    this.updateSelectedMap(this._createSelectableList());\n  },\n  getInitialData: function (option, ecModel) {\n    return createListSimply(this, ['value']);\n  },\n  _createSelectableList: function () {\n    var data = this.getRawData();\n    var valueDim = data.mapDimension('value');\n    var targetList = [];\n\n    for (var i = 0, len = data.count(); i < len; i++) {\n      targetList.push({\n        name: data.getName(i),\n        value: data.get(valueDim, i),\n        selected: retrieveRawAttr(data, i, 'selected')\n      });\n    }\n\n    return targetList;\n  },\n  // Overwrite\n  getDataParams: function (dataIndex) {\n    var data = this.getData();\n    var params = PieSeries.superCall(this, 'getDataParams', dataIndex); // FIXME toFixed?\n\n    var valueList = [];\n    data.each(data.mapDimension('value'), function (value) {\n      valueList.push(value);\n    });\n    params.percent = getPercentWithPrecision(valueList, dataIndex, data.hostModel.get('percentPrecision'));\n    params.$vars.push('percent');\n    return params;\n  },\n  _defaultLabelLine: function (option) {\n    // Extend labelLine emphasis\n    modelUtil.defaultEmphasis(option, 'labelLine', ['show']);\n    var labelLineNormalOpt = option.labelLine;\n    var labelLineEmphasisOpt = option.emphasis.labelLine; // Not show label line if `label.normal.show = false`\n\n    labelLineNormalOpt.show = labelLineNormalOpt.show && option.label.show;\n    labelLineEmphasisOpt.show = labelLineEmphasisOpt.show && option.emphasis.label.show;\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    legendHoverLink: true,\n    hoverAnimation: true,\n    // 默认全局居中\n    center: ['50%', '50%'],\n    radius: [0, '75%'],\n    // 默认顺时针\n    clockwise: true,\n    startAngle: 90,\n    // 最小角度改为0\n    minAngle: 0,\n    // 选中时扇区偏移量\n    selectedOffset: 10,\n    // 高亮扇区偏移量\n    hoverOffset: 10,\n    // If use strategy to avoid label overlapping\n    avoidLabelOverlap: true,\n    // 选择模式，默认关闭，可选single，multiple\n    // selectedMode: false,\n    // 南丁格尔玫瑰图模式，'radius'（半径） | 'area'（面积）\n    // roseType: null,\n    percentPrecision: 2,\n    // If still show when all data zero.\n    stillShowZeroSum: true,\n    // cursor: null,\n    label: {\n      // If rotate around circle\n      rotate: false,\n      show: true,\n      // 'outer', 'inside', 'center'\n      position: 'outer' // formatter: 标签文本格式器，同Tooltip.formatter，不支持异步回调\n      // 默认使用全局文本样式，详见TEXTSTYLE\n      // distance: 当position为inner时有效，为label位置到圆心的距离与圆半径(环状图为内外半径和)的比例系数\n\n    },\n    // Enabled when label.normal.position is 'outer'\n    labelLine: {\n      show: true,\n      // 引导线两段中的第一段长度\n      length: 15,\n      // 引导线两段中的第二段长度\n      length2: 15,\n      smooth: false,\n      lineStyle: {\n        // color: 各异,\n        width: 1,\n        type: 'solid'\n      }\n    },\n    itemStyle: {\n      borderWidth: 1\n    },\n    // Animation type canbe expansion, scale\n    animationType: 'expansion',\n    animationEasing: 'cubicOut'\n  }\n});\nzrUtil.mixin(PieSeries, dataSelectableMixin);\nvar _default = PieSeries;\nmodule.exports = _default;","var _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\nvar linearMap = _number.linearMap;\n\nvar labelLayout = require(\"./labelLayout\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar PI2 = Math.PI * 2;\nvar RADIAN = Math.PI / 180;\n\nfunction _default(seriesType, ecModel, api, payload) {\n  ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n    var data = seriesModel.getData();\n    var valueDim = data.mapDimension('value');\n    var center = seriesModel.get('center');\n    var radius = seriesModel.get('radius');\n\n    if (!zrUtil.isArray(radius)) {\n      radius = [0, radius];\n    }\n\n    if (!zrUtil.isArray(center)) {\n      center = [center, center];\n    }\n\n    var width = api.getWidth();\n    var height = api.getHeight();\n    var size = Math.min(width, height);\n    var cx = parsePercent(center[0], width);\n    var cy = parsePercent(center[1], height);\n    var r0 = parsePercent(radius[0], size / 2);\n    var r = parsePercent(radius[1], size / 2);\n    var startAngle = -seriesModel.get('startAngle') * RADIAN;\n    var minAngle = seriesModel.get('minAngle') * RADIAN;\n    var validDataCount = 0;\n    data.each(valueDim, function (value) {\n      !isNaN(value) && validDataCount++;\n    });\n    var sum = data.getSum(valueDim); // Sum may be 0\n\n    var unitRadian = Math.PI / (sum || validDataCount) * 2;\n    var clockwise = seriesModel.get('clockwise');\n    var roseType = seriesModel.get('roseType');\n    var stillShowZeroSum = seriesModel.get('stillShowZeroSum'); // [0...max]\n\n    var extent = data.getDataExtent(valueDim);\n    extent[0] = 0; // In the case some sector angle is smaller than minAngle\n\n    var restAngle = PI2;\n    var valueSumLargerThanMinAngle = 0;\n    var currentAngle = startAngle;\n    var dir = clockwise ? 1 : -1;\n    data.each(valueDim, function (value, idx) {\n      var angle;\n\n      if (isNaN(value)) {\n        data.setItemLayout(idx, {\n          angle: NaN,\n          startAngle: NaN,\n          endAngle: NaN,\n          clockwise: clockwise,\n          cx: cx,\n          cy: cy,\n          r0: r0,\n          r: roseType ? NaN : r\n        });\n        return;\n      } // FIXME 兼容 2.0 但是 roseType 是 area 的时候才是这样？\n\n\n      if (roseType !== 'area') {\n        angle = sum === 0 && stillShowZeroSum ? unitRadian : value * unitRadian;\n      } else {\n        angle = PI2 / validDataCount;\n      }\n\n      if (angle < minAngle) {\n        angle = minAngle;\n        restAngle -= minAngle;\n      } else {\n        valueSumLargerThanMinAngle += value;\n      }\n\n      var endAngle = currentAngle + dir * angle;\n      data.setItemLayout(idx, {\n        angle: angle,\n        startAngle: currentAngle,\n        endAngle: endAngle,\n        clockwise: clockwise,\n        cx: cx,\n        cy: cy,\n        r0: r0,\n        r: roseType ? linearMap(value, extent, [r0, r]) : r\n      });\n      currentAngle = endAngle;\n    }); // Some sector is constrained by minAngle\n    // Rest sectors needs recalculate angle\n\n    if (restAngle < PI2 && validDataCount) {\n      // Average the angle if rest angle is not enough after all angles is\n      // Constrained by minAngle\n      if (restAngle <= 1e-3) {\n        var angle = PI2 / validDataCount;\n        data.each(valueDim, function (value, idx) {\n          if (!isNaN(value)) {\n            var layout = data.getItemLayout(idx);\n            layout.angle = angle;\n            layout.startAngle = startAngle + dir * idx * angle;\n            layout.endAngle = startAngle + dir * (idx + 1) * angle;\n          }\n        });\n      } else {\n        unitRadian = restAngle / valueSumLargerThanMinAngle;\n        currentAngle = startAngle;\n        data.each(valueDim, function (value, idx) {\n          if (!isNaN(value)) {\n            var layout = data.getItemLayout(idx);\n            var angle = layout.angle === minAngle ? minAngle : value * unitRadian;\n            layout.startAngle = currentAngle;\n            layout.endAngle = currentAngle + dir * angle;\n            currentAngle += dir * angle;\n          }\n        });\n      }\n    }\n\n    labelLayout(seriesModel, r, width, height);\n  });\n}\n\nmodule.exports = _default;"],"sourceRoot":""}