{"version":3,"sources":["webpack:///./node_modules/_echarts@4.1.0@echarts/lib/component/dataZoom/AxisProxy.js","webpack:///./node_modules/_echarts@4.1.0@echarts/lib/component/toolbox/ToolboxModel.js","webpack:///./node_modules/_echarts@4.1.0@echarts/lib/component/dataZoom/typeDefaulter.js","webpack:///./node_modules/_echarts@4.1.0@echarts/lib/component/toolbox/ToolboxView.js","webpack:///./node_modules/_echarts@4.1.0@echarts/lib/component/dataZoom/dataZoomAction.js","webpack:///./node_modules/_echarts@4.1.0@echarts/lib/component/helper/BrushController.js","webpack:///./node_modules/_echarts@4.1.0@echarts/lib/component/helper/interactionMutex.js","webpack:///./node_modules/_echarts@4.1.0@echarts/lib/component/toolbox/featureManager.js","webpack:///./node_modules/_echarts@4.1.0@echarts/lib/component/dataZoom/history.js","webpack:///./node_modules/_echarts@4.1.0@echarts/lib/component/helper/brushHelper.js","webpack:///./node_modules/_echarts@4.1.0@echarts/lib/component/dataZoom/SelectZoomModel.js","webpack:///./node_modules/_echarts@4.1.0@echarts/lib/component/dataZoom/SelectZoomView.js","webpack:///./node_modules/_echarts@4.1.0@echarts/lib/component/toolbox/feature/SaveAsImage.js","webpack:///./node_modules/_echarts@4.1.0@echarts/lib/component/toolbox.js","webpack:///./node_modules/_echarts@4.1.0@echarts/lib/component/dataZoomSelect.js","webpack:///./node_modules/_echarts@4.1.0@echarts/lib/component/helper/cursorHelper.js","webpack:///./node_modules/_echarts@4.1.0@echarts/lib/component/toolbox/feature/MagicType.js","webpack:///./node_modules/_echarts@4.1.0@echarts/lib/component/dataZoom/dataZoomProcessor.js","webpack:///./node_modules/_echarts@4.1.0@echarts/lib/component/helper/sliderMove.js","webpack:///./node_modules/_echarts@4.1.0@echarts/lib/component/dataZoom/DataZoomModel.js","webpack:///./node_modules/_echarts@4.1.0@echarts/lib/component/toolbox/feature/DataView.js","webpack:///./src/2demo/blocks/normal-toggle-chart/NormalToggleChart.vue?7f62","webpack:///./node_modules/_echarts@4.1.0@echarts/lib/component/helper/BrushTargetManager.js","webpack:///./node_modules/_echarts@4.1.0@echarts/lib/component/dataZoom/helper.js","webpack:///./node_modules/_echarts@4.1.0@echarts/lib/component/toolbox/feature/Restore.js","webpack:///./node_modules/_echarts@4.1.0@echarts/lib/component/toolbox/feature/DataZoom.js","webpack:///./src/2demo/blocks/normal-toggle-chart/NormalToggleChart.vue?4a3b","webpack:///src/2demo/blocks/normal-toggle-chart/NormalToggleChart.vue","webpack:///./src/2demo/blocks/normal-toggle-chart/NormalToggleChart.vue?fae4","webpack:///./src/2demo/blocks/normal-toggle-chart/NormalToggleChart.vue","webpack:///./node_modules/_echarts@4.1.0@echarts/lib/component/dataZoom/DataZoomView.js"],"names":["zrUtil","__webpack_require__","numberUtil","helper","each","asc","AxisProxy","dimName","axisIndex","dataZoomModel","ecModel","this","_dimName","_axisIndex","_valueWindow","_percentWindow","_dataExtent","_minMaxSpan","_dataZoomModel","calculateDataExtent","axisProxy","axisDim","seriesModels","dataExtent","Infinity","seriesModel","seriesData","getData","mapDimension","dim","seriesExtent","getApproximateExtent","NaN","fixExtentByAxis","axisModel","getAxisModel","min","getMin","isCategoryAxis","get","axisDataLen","getCategories","length","max","getMax","setAxisModel","isRestore","percentWindow","valueWindow","precision","getPixelPrecision","Math","useOrigin","setRange","toFixed","setMinMaxSpan","minMaxSpan","minMax","valueSpan","axis","scale","parse","linearMap","prototype","constructor","hostedBy","getDataValueWindow","slice","getDataPercentWindow","getTargetSeriesModels","eachSeries","isCoordSupported","queryComponents","mainType","index","id","componentIndex","push","getComponent","getOtherAxisModel","otherAxisDim","coordSysIndexName","foundOtherAxisModel","isCartesian","eachComponent","otherAxisModel","getMinMaxSpan","clone","calculateDataWindow","opt","rangePropMode","getRangePropMode","percentExtent","start","end","prop","idx","boundValue","boundPercent","reset","targetSeries","dataWindow","option","restore","filterData","api","filterMode","dataDims","filterSelf","dataIndex","leftOut","rightOut","hasValue","i","value","thisHasValue","isNaN","thisLeftOut","thisRightOut","setData","map","isInWindow","range","selectRange","setApproximateExtent","_default","module","exports","echarts","featureManager","ToolboxModel","extendComponentModel","type","layoutMode","ignoreSize","optionUpdated","superApply","arguments","feature","featureOpt","featureName","Feature","merge","defaultOption","show","z","zlevel","orient","left","top","backgroundColor","borderColor","borderRadius","borderWidth","padding","itemSize","itemGap","showTitle","iconStyle","color","emphasis","Component","registerSubTypeDefaulter","textContain","graphic","Model","DataDiffer","listComponentHelper","extendComponentView","render","toolboxModel","payload","group","removeAll","featureOpts","features","_features","featureNames","name","_featureNames","add","processFeature","update","remove","curry","execute","layout","makeBackground","getBoundingRect","eachChild","icon","titleText","__title","hoverStyle","rect","makeFont","offsetX","position","offsetY","needPutOnTop","height","getHeight","textPosition","topOffset","width","getWidth","textAlign","newIndex","oldIndex","oldName","featureModel","isUserFeatureName","model","onclick","unusable","createIconPaths","setIconStatus","iconName","status","iconPaths","iconStatus","trigger","dispose","iconStyleModel","getModel","iconStyleEmphasisModel","icons","getIcons","titles","title","iconStr","path","createIcon","x","y","setStyle","getItemStyle","setHoverStyle","on","text","textFill","fill","stroke","bind","updateView","indexOf","registerAction","linkedNodesFinder","createLinkedNodesFinder","eachAxisDim","dimNames","effectedModels","query","apply","nodes","setRawRange","startValue","endValue","_config","__DEV__","Eventful","interactionMutex","mathMin","mathMax","mathPow","pow","COVER_Z","UNSELECT_THRESHOLD","MIN_RESIZE_LINE_WIDTH","MUTEX_RESOURCE_KEY","DIRECTION_MAP","w","e","n","s","CURSOR_MAP","ne","sw","nw","se","DEFAULT_BRUSH_OPT","brushStyle","lineWidth","transformable","brushMode","removeOnClick","baseUID","BrushController","zr","call","_zr","Group","_brushType","_brushOption","_panels","_track","_dragging","_covers","_creatingCover","_creatingPanel","_enableGlobalPan","_uid","_handlers","mouseHandlers","handler","eventName","doEnableBrush","controller","brushOption","take","brushType","doDisableBrush","release","off","createCover","cover","coverRenderers","__brushOption","updateZ","endCreating","creatingCover","coverRenderer","getCoverRenderer","updateCoverShape","traverse","el","z2","updateCoverAfterCreation","updateCommon","getPanelByPoint","localCursorPoint","panel","panels","transform","_transform","pn","isTargetByCursor","getPanelByCover","panelId","clearCovers","covers","originalLength","areas","isEnd","shouldShowCover","track","p2","p1","dx","dy","dist","getTrackEnds","tail","createBaseRectCover","doDrift","edgeNames","Rect","style","makeStyle","silent","draggable","cursor","drift","ondragend","opacity","invisible","updateBaseRect","localRange","handleSize","xa","ya","x2","y2","x2a","y2a","widtha","heighta","updateRectShape","mainEl","childAt","useStyle","attr","childOfName","globalDir","getGlobalDirection","h","setShape","pointsToRect","clipByPanel","defaults","strokeNoScale","formatRectRange","getTransform","localDirection","split","reverse","join","inverseMap","right","bottom","transformDirection","driftRect","toRectRange","fromRectRange","rectRange","localDelta","toLocalDelta","namePart","ind","driftPolygon","point","thisGroup","localD","transformCoordToLocal","localZero","data","clipPath","points","xmin","ymin","xmax","ymax","resetCursor","currPanel","contain","setCursorStyle","preventDefault","rawE","event","mainShapeContain","updateCoverByMouse","eventParams","thisBrushOption","determineBrushType","coverBrushOption","getCreatingRange","defaultBrushType","enableBrush","setPanels","panelOpts","mount","enableGlobalPan","rotation","getLocalTransform","eachCover","cb","context","updateCovers","brushOptionList","tmpIdPrefix","oldCovers","newCovers","oldGetKey","getKey","addOrUpdate","newBrushOption","unmount","mixin","mousedown","handleDragEnd","target","mousemove","mouseup","lineX","getLineRenderer","lineY","localTrack","ends","polygon","Polyline","Polygon","xyIndex","otherExtent","getLinearBrushOtherExtent","ATTR","resourceKey","userKey","store","getStore","uKey","isTaken","register","ctor","newSnapshot","giveStore","batchItem","dataZoomId","snapshot","subType","percentRange","getPercentRange","pop","head","clear","count","BoundingRect","_cursorHelper","onIrrelevantElement","graphicUtil","makeRectPanelClipPath","normalizeRect","localPoints","clipPointsByRect","makeLinearBrushOtherExtent","specifiedXYIndex","brushWidth","base","makeRectIsTargetByCursor","targetModel","create","DataZoomModel","extend","DataZoomView","env","lang","saveAsImageLang","toolbox","saveAsImage","SaveAsImage","excludeComponents","pixelRatio","canvasSupported","proto","$a","document","createElement","download","url","getConnectedDataURL","href","MouseEvent","browser","ie","edge","window","navigator","msSaveOrOpenBlob","bstr","atob","u8arr","Uint8Array","charCodeAt","blob","Blob","html","tab","open","write","evt","view","bubbles","cancelable","dispatchEvent","IRRELEVANT_EXCLUDES","axisPointer","tooltip","brush","targetCoordSysModel","getComponentByElement","topTarget","coordSys","coordinateSystem","magicTypeLang","magicType","MagicType","line","bar","stack","tiled","seriesIndex","availableIcons","seriesOptGenreator","seriesType","seriesId","markPoint","markLine","radioTypes","newOption","series","generateNewSeriesTypes","newSeriesOpt","categoryAxis","getAxesByScale","axisType","boundaryGap","radio","item","dispatchAction","currentType","mergeOption","_util","createHashMap","registerProcessor","getTargetSeries","seriesModelMap","eachTargetAxis","getAxisProxy","set","uid","modifyOutputEnd","overallReset","findRepresentativeAxisProxy","valueRange","delta","handleEnds","extent","handleIndex","minSpan","maxSpan","restrict","extentSpan","abs","originalDistSign","getSpanSign","extentMinSpan","realExtent","sign","currDistSign","span","modelUtil","dependencies","xAxisIndex","yAxisIndex","throttle","minValueSpan","maxValueSpan","rangeMode","init","parentModel","_dataIntervalByAxis","_dataInfo","_axisProxies","textStyleModel","_autoThrottle","_rangePropMode","rawOption","retrieveRaw","mergeDefaultAndTheme","doInit","thisOption","realtime","_setDefaultThrottle","updateRangeUse","names","_resetTarget","_giveAxisProxies","axisProxies","dependentModels","__dzAxisProxy","autoMode","_judgeAutoMode","axisIndexName","normalizeToArray","_autoSetAxisIndex","_autoSetOrient","hasIndexSpecified","autoAxisIndex","singleAxis","singleAxisModel","singleAxisIndex","axisIndices","axisModels","len","_isSeriesHasAllAxesTypeOf","axisId","is","seriesAxisIndex","hasOwnProperty","globalOption","animation","animationDurationUpdate","getFirstTargetAxisModel","firstAxisModel","indices","callback","ignoreUpdateRangeUsg","getValueRange","axisDimName","key","ret","rangeModeInOption","percentSpecified","valueSpecified","eventTool","dataViewLang","dataView","BLOCK_SPLITER","Array","ITEM_SPLITER","groupSeries","seriesGroupByCategoryAxis","otherSeries","meta","eachRawSeries","baseAxis","getBaseAxis","valueAxis","getOtherAxis","other","assembleSeriesWithCategoryAxis","tables","valueAxisDim","headers","concat","columns","getRawData","mapArray","val","lines","items","j","assembleOtherSeries","vals","dimensions","argLen","getName","getContentFromModel","result","filter","str","replace","trim","isTSVFormat","block","firstLine","itemSplitRegex","RegExp","parseTSVContents","tsv","tsvLines","shift","categories","header","parseListContents","seriesName","hasName","parseContents","blockMetaList","blocks","blockMeta","axisKey","DataView","_dom","tryMergeDataOption","newData","originalData","newVal","original","isObject","isArray","readOnly","optionToContent","contentToOption","textColor","textareaColor","textareaBorderColor","buttonColor","buttonTextColor","container","getDom","removeChild","root","cssText","innerHTML","viewMain","textarea","htmlOrDom","getOption","isDom","appendChild","buttonContainer","buttonStyle","closeButton","refreshButton","self","close","addEventListener","Error","keyCode","which","selectionStart","selectionEnd","substring","stop","clientHeight","newSeriesOptList","seriesOpt","getSeriesByName","_node_modules_mini_css_extract_plugin_0_4_4_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_1_0_0_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_15_4_2_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_2_1_6_postcss_loader_lib_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_1_2_2_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_15_4_2_vue_loader_lib_index_js_vue_loader_options_NormalToggleChart_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_0_4_4_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_1_0_0_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_15_4_2_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_2_1_6_postcss_loader_lib_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_1_2_2_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_15_4_2_vue_loader_lib_index_js_vue_loader_options_NormalToggleChart_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0___default","brushHelper","COORD_CONVERTS","INCLUDE_FINDER_MAIN_TYPES","BrushTargetManager","targetInfoList","_targetInfoList","info","foundCpts","parseFinder","targetInfoBuilders","builder","include","formatMinMax","includeMainTypes","setOutputRanges","matchOutputRanges","area","coordRange","coordRanges","coordConvert","__rangeOffset","offset","diffProcessor","values","xyMinMax","targetInfo","findTargetInfo","coordSyses","setInputRanges","rangeOffset","getScales","makePanelOpts","getDefaultBrushType","getPanelRect","coordSysModel","controlSeries","areaPanelId","targetInfoMatchers","grid","xAxisModels","yAxisModels","gridModels","gridModelMap","xAxesHas","yAxesHas","gridModel","cartesians","getCartesians","cartesian","getAxis","panelRectBuilder","xAxisDeclared","yAxisDeclared","geo","geoModels","geoModel","xAxisModel","yAxisModel","getRect","applyTransform","axisConvert","to","rangeOrCoordRange","xminymin","xmaxymax","p","axisNameIndex","coordToData","toLocalCoord","toGlobalCoord","dataToCoord","axisDiffProcessor","refer","scales","xyMinMaxCurr","xyMinMaxOrigin","sizeCurr","getSize","sizeOrigin","formatUtil","AXIS_DIMS","COORDS","coordType","createNameEach","attrs","capitalNames","capitalFirst","capitalAttrs","nameObj","capital","forEachNode","forEachEdgeType","edgeIdGetter","sourceNode","existsLink","records","edgeType","absorb","processSingleNode","node","isNodeAbsorded","isLinked","hasLink","edgeId","history","restoreLang","Restore","from","resetOption","sliderMove","dataZoomLang","dataZoom","DATA_ZOOM_ID_BASE","DataZoom","_brushController","getZr","_onBrush","_isZoomActive","zoom","back","updateZoomBtnStatus","updateBackBtnStatus","handlers","nextActive","dataZoomSelectActive","_dispatchZoomAction","retrieveAxisSetting","setting","zoomActive","brushTargetManager","setBatch","findDataZoom","getExtent","found","dzModel","has","batch","registerPreprocessor","dataZoomOpts","toolboxOpt","dataZoomOpt","addForAxis","axisName","axisIndicesName","givenAxisIndices","forEachComponent","axisOpt","newOpt","$fromToolbox","opts","_vm","_h","$createElement","_c","_self","staticClass","chartData","staticRenderFns","NormalToggleChartvue_type_script_lang_js_","components","VeLine","line_default","a","VeBar","bar_default","initIndex","rows","日期","访问用户","normal_toggle_chart_NormalToggleChartvue_type_script_lang_js_","component","Object","componentNormalizer","options","__file","__webpack_exports__","ComponentView","getTargetCoordInfo","coordSysLists","save","coordModel","coordIndex","getCoordSysModel"],"mappings":"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","file":"static/js/chunk-0690482a.141c9d74.js","sourcesContent":["var zrUtil = require(\"zrender/lib/core/util\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar helper = require(\"./helper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar each = zrUtil.each;\nvar asc = numberUtil.asc;\n/**\n * Operate single axis.\n * One axis can only operated by one axis operator.\n * Different dataZoomModels may be defined to operate the same axis.\n * (i.e. 'inside' data zoom and 'slider' data zoom components)\n * So dataZoomModels share one axisProxy in that case.\n *\n * @class\n */\n\nvar AxisProxy = function (dimName, axisIndex, dataZoomModel, ecModel) {\n  /**\n   * @private\n   * @type {string}\n   */\n  this._dimName = dimName;\n  /**\n   * @private\n   */\n\n  this._axisIndex = axisIndex;\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._valueWindow;\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._percentWindow;\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._dataExtent;\n  /**\n   * {minSpan, maxSpan, minValueSpan, maxValueSpan}\n   * @private\n   * @type {Object}\n   */\n\n  this._minMaxSpan;\n  /**\n   * @readOnly\n   * @type {module: echarts/model/Global}\n   */\n\n  this.ecModel = ecModel;\n  /**\n   * @private\n   * @type {module: echarts/component/dataZoom/DataZoomModel}\n   */\n\n  this._dataZoomModel = dataZoomModel; // /**\n  //  * @readOnly\n  //  * @private\n  //  */\n  // this.hasSeriesStacked;\n};\n\nAxisProxy.prototype = {\n  constructor: AxisProxy,\n\n  /**\n   * Whether the axisProxy is hosted by dataZoomModel.\n   *\n   * @public\n   * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n   * @return {boolean}\n   */\n  hostedBy: function (dataZoomModel) {\n    return this._dataZoomModel === dataZoomModel;\n  },\n\n  /**\n   * @return {Array.<number>} Value can only be NaN or finite value.\n   */\n  getDataValueWindow: function () {\n    return this._valueWindow.slice();\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getDataPercentWindow: function () {\n    return this._percentWindow.slice();\n  },\n\n  /**\n   * @public\n   * @param {number} axisIndex\n   * @return {Array} seriesModels\n   */\n  getTargetSeriesModels: function () {\n    var seriesModels = [];\n    var ecModel = this.ecModel;\n    ecModel.eachSeries(function (seriesModel) {\n      if (helper.isCoordSupported(seriesModel.get('coordinateSystem'))) {\n        var dimName = this._dimName;\n        var axisModel = ecModel.queryComponents({\n          mainType: dimName + 'Axis',\n          index: seriesModel.get(dimName + 'AxisIndex'),\n          id: seriesModel.get(dimName + 'AxisId')\n        })[0];\n\n        if (this._axisIndex === (axisModel && axisModel.componentIndex)) {\n          seriesModels.push(seriesModel);\n        }\n      }\n    }, this);\n    return seriesModels;\n  },\n  getAxisModel: function () {\n    return this.ecModel.getComponent(this._dimName + 'Axis', this._axisIndex);\n  },\n  getOtherAxisModel: function () {\n    var axisDim = this._dimName;\n    var ecModel = this.ecModel;\n    var axisModel = this.getAxisModel();\n    var isCartesian = axisDim === 'x' || axisDim === 'y';\n    var otherAxisDim;\n    var coordSysIndexName;\n\n    if (isCartesian) {\n      coordSysIndexName = 'gridIndex';\n      otherAxisDim = axisDim === 'x' ? 'y' : 'x';\n    } else {\n      coordSysIndexName = 'polarIndex';\n      otherAxisDim = axisDim === 'angle' ? 'radius' : 'angle';\n    }\n\n    var foundOtherAxisModel;\n    ecModel.eachComponent(otherAxisDim + 'Axis', function (otherAxisModel) {\n      if ((otherAxisModel.get(coordSysIndexName) || 0) === (axisModel.get(coordSysIndexName) || 0)) {\n        foundOtherAxisModel = otherAxisModel;\n      }\n    });\n    return foundOtherAxisModel;\n  },\n  getMinMaxSpan: function () {\n    return zrUtil.clone(this._minMaxSpan);\n  },\n\n  /**\n   * Only calculate by given range and this._dataExtent, do not change anything.\n   *\n   * @param {Object} opt\n   * @param {number} [opt.start]\n   * @param {number} [opt.end]\n   * @param {number} [opt.startValue]\n   * @param {number} [opt.endValue]\n   */\n  calculateDataWindow: function (opt) {\n    var dataExtent = this._dataExtent;\n    var axisModel = this.getAxisModel();\n    var scale = axisModel.axis.scale;\n\n    var rangePropMode = this._dataZoomModel.getRangePropMode();\n\n    var percentExtent = [0, 100];\n    var percentWindow = [opt.start, opt.end];\n    var valueWindow = [];\n    each(['startValue', 'endValue'], function (prop) {\n      valueWindow.push(opt[prop] != null ? scale.parse(opt[prop]) : null);\n    }); // Normalize bound.\n\n    each([0, 1], function (idx) {\n      var boundValue = valueWindow[idx];\n      var boundPercent = percentWindow[idx]; // Notice: dataZoom is based either on `percentProp` ('start', 'end') or\n      // on `valueProp` ('startValue', 'endValue'). The former one is suitable\n      // for cases that a dataZoom component controls multiple axes with different\n      // unit or extent, and the latter one is suitable for accurate zoom by pixel\n      // (e.g., in dataZoomSelect). `valueProp` can be calculated from `percentProp`,\n      // but it is awkward that `percentProp` can not be obtained from `valueProp`\n      // accurately (because all of values that are overflow the `dataExtent` will\n      // be calculated to percent '100%'). So we have to use\n      // `dataZoom.getRangePropMode()` to mark which prop is used.\n      // `rangePropMode` is updated only when setOption or dispatchAction, otherwise\n      // it remains its original value.\n\n      if (rangePropMode[idx] === 'percent') {\n        if (boundPercent == null) {\n          boundPercent = percentExtent[idx];\n        } // Use scale.parse to math round for category or time axis.\n\n\n        boundValue = scale.parse(numberUtil.linearMap(boundPercent, percentExtent, dataExtent, true));\n      } else {\n        // Calculating `percent` from `value` may be not accurate, because\n        // This calculation can not be inversed, because all of values that\n        // are overflow the `dataExtent` will be calculated to percent '100%'\n        boundPercent = numberUtil.linearMap(boundValue, dataExtent, percentExtent, true);\n      } // valueWindow[idx] = round(boundValue);\n      // percentWindow[idx] = round(boundPercent);\n\n\n      valueWindow[idx] = boundValue;\n      percentWindow[idx] = boundPercent;\n    });\n    return {\n      valueWindow: asc(valueWindow),\n      percentWindow: asc(percentWindow)\n    };\n  },\n\n  /**\n   * Notice: reset should not be called before series.restoreData() called,\n   * so it is recommanded to be called in \"process stage\" but not \"model init\n   * stage\".\n   *\n   * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n   */\n  reset: function (dataZoomModel) {\n    if (dataZoomModel !== this._dataZoomModel) {\n      return;\n    }\n\n    var targetSeries = this.getTargetSeriesModels(); // Culculate data window and data extent, and record them.\n\n    this._dataExtent = calculateDataExtent(this, this._dimName, targetSeries); // this.hasSeriesStacked = false;\n    // each(targetSeries, function (series) {\n    // var data = series.getData();\n    // var dataDim = data.mapDimension(this._dimName);\n    // var stackedDimension = data.getCalculationInfo('stackedDimension');\n    // if (stackedDimension && stackedDimension === dataDim) {\n    // this.hasSeriesStacked = true;\n    // }\n    // }, this);\n\n    var dataWindow = this.calculateDataWindow(dataZoomModel.option);\n    this._valueWindow = dataWindow.valueWindow;\n    this._percentWindow = dataWindow.percentWindow;\n    setMinMaxSpan(this); // Update axis setting then.\n\n    setAxisModel(this);\n  },\n\n  /**\n   * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n   */\n  restore: function (dataZoomModel) {\n    if (dataZoomModel !== this._dataZoomModel) {\n      return;\n    }\n\n    this._valueWindow = this._percentWindow = null;\n    setAxisModel(this, true);\n  },\n\n  /**\n   * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n   */\n  filterData: function (dataZoomModel, api) {\n    if (dataZoomModel !== this._dataZoomModel) {\n      return;\n    }\n\n    var axisDim = this._dimName;\n    var seriesModels = this.getTargetSeriesModels();\n    var filterMode = dataZoomModel.get('filterMode');\n    var valueWindow = this._valueWindow;\n\n    if (filterMode === 'none') {\n      return;\n    } // FIXME\n    // Toolbox may has dataZoom injected. And if there are stacked bar chart\n    // with NaN data, NaN will be filtered and stack will be wrong.\n    // So we need to force the mode to be set empty.\n    // In fect, it is not a big deal that do not support filterMode-'filter'\n    // when using toolbox#dataZoom, utill tooltip#dataZoom support \"single axis\n    // selection\" some day, which might need \"adapt to data extent on the\n    // otherAxis\", which is disabled by filterMode-'empty'.\n    // But currently, stack has been fixed to based on value but not index,\n    // so this is not an issue any more.\n    // var otherAxisModel = this.getOtherAxisModel();\n    // if (dataZoomModel.get('$fromToolbox')\n    //     && otherAxisModel\n    //     && otherAxisModel.hasSeriesStacked\n    // ) {\n    //     filterMode = 'empty';\n    // }\n    // TODO\n    // filterMode 'weakFilter' and 'empty' is not optimized for huge data yet.\n    // Process series data\n\n\n    each(seriesModels, function (seriesModel) {\n      var seriesData = seriesModel.getData();\n      var dataDims = seriesData.mapDimension(axisDim, true);\n\n      if (filterMode === 'weakFilter') {\n        seriesData.filterSelf(function (dataIndex) {\n          var leftOut;\n          var rightOut;\n          var hasValue;\n\n          for (var i = 0; i < dataDims.length; i++) {\n            var value = seriesData.get(dataDims[i], dataIndex);\n            var thisHasValue = !isNaN(value);\n            var thisLeftOut = value < valueWindow[0];\n            var thisRightOut = value > valueWindow[1];\n\n            if (thisHasValue && !thisLeftOut && !thisRightOut) {\n              return true;\n            }\n\n            thisHasValue && (hasValue = true);\n            thisLeftOut && (leftOut = true);\n            thisRightOut && (rightOut = true);\n          } // If both left out and right out, do not filter.\n\n\n          return hasValue && leftOut && rightOut;\n        });\n      } else {\n        each(dataDims, function (dim) {\n          if (filterMode === 'empty') {\n            seriesModel.setData(seriesData.map(dim, function (value) {\n              return !isInWindow(value) ? NaN : value;\n            }));\n          } else {\n            var range = {};\n            range[dim] = valueWindow; // console.time('select');\n\n            seriesData.selectRange(range); // console.timeEnd('select');\n          }\n        });\n      }\n\n      each(dataDims, function (dim) {\n        seriesData.setApproximateExtent(valueWindow, dim);\n      });\n    });\n\n    function isInWindow(value) {\n      return value >= valueWindow[0] && value <= valueWindow[1];\n    }\n  }\n};\n\nfunction calculateDataExtent(axisProxy, axisDim, seriesModels) {\n  var dataExtent = [Infinity, -Infinity];\n  each(seriesModels, function (seriesModel) {\n    var seriesData = seriesModel.getData();\n\n    if (seriesData) {\n      each(seriesData.mapDimension(axisDim, true), function (dim) {\n        var seriesExtent = seriesData.getApproximateExtent(dim);\n        seriesExtent[0] < dataExtent[0] && (dataExtent[0] = seriesExtent[0]);\n        seriesExtent[1] > dataExtent[1] && (dataExtent[1] = seriesExtent[1]);\n      });\n    }\n  });\n\n  if (dataExtent[1] < dataExtent[0]) {\n    dataExtent = [NaN, NaN];\n  } // It is important to get \"consistent\" extent when more then one axes is\n  // controlled by a `dataZoom`, otherwise those axes will not be synchronized\n  // when zooming. But it is difficult to know what is \"consistent\", considering\n  // axes have different type or even different meanings (For example, two\n  // time axes are used to compare data of the same date in different years).\n  // So basically dataZoom just obtains extent by series.data (in category axis\n  // extent can be obtained from axis.data).\n  // Nevertheless, user can set min/max/scale on axes to make extent of axes\n  // consistent.\n\n\n  fixExtentByAxis(axisProxy, dataExtent);\n  return dataExtent;\n}\n\nfunction fixExtentByAxis(axisProxy, dataExtent) {\n  var axisModel = axisProxy.getAxisModel();\n  var min = axisModel.getMin(true); // For category axis, if min/max/scale are not set, extent is determined\n  // by axis.data by default.\n\n  var isCategoryAxis = axisModel.get('type') === 'category';\n  var axisDataLen = isCategoryAxis && axisModel.getCategories().length;\n\n  if (min != null && min !== 'dataMin' && typeof min !== 'function') {\n    dataExtent[0] = min;\n  } else if (isCategoryAxis) {\n    dataExtent[0] = axisDataLen > 0 ? 0 : NaN;\n  }\n\n  var max = axisModel.getMax(true);\n\n  if (max != null && max !== 'dataMax' && typeof max !== 'function') {\n    dataExtent[1] = max;\n  } else if (isCategoryAxis) {\n    dataExtent[1] = axisDataLen > 0 ? axisDataLen - 1 : NaN;\n  }\n\n  if (!axisModel.get('scale', true)) {\n    dataExtent[0] > 0 && (dataExtent[0] = 0);\n    dataExtent[1] < 0 && (dataExtent[1] = 0);\n  } // For value axis, if min/max/scale are not set, we just use the extent obtained\n  // by series data, which may be a little different from the extent calculated by\n  // `axisHelper.getScaleExtent`. But the different just affects the experience a\n  // little when zooming. So it will not be fixed until some users require it strongly.\n\n\n  return dataExtent;\n}\n\nfunction setAxisModel(axisProxy, isRestore) {\n  var axisModel = axisProxy.getAxisModel();\n  var percentWindow = axisProxy._percentWindow;\n  var valueWindow = axisProxy._valueWindow;\n\n  if (!percentWindow) {\n    return;\n  } // [0, 500]: arbitrary value, guess axis extent.\n\n\n  var precision = numberUtil.getPixelPrecision(valueWindow, [0, 500]);\n  precision = Math.min(precision, 20); // isRestore or isFull\n\n  var useOrigin = isRestore || percentWindow[0] === 0 && percentWindow[1] === 100;\n  axisModel.setRange(useOrigin ? null : +valueWindow[0].toFixed(precision), useOrigin ? null : +valueWindow[1].toFixed(precision));\n}\n\nfunction setMinMaxSpan(axisProxy) {\n  var minMaxSpan = axisProxy._minMaxSpan = {};\n  var dataZoomModel = axisProxy._dataZoomModel;\n  each(['min', 'max'], function (minMax) {\n    minMaxSpan[minMax + 'Span'] = dataZoomModel.get(minMax + 'Span'); // minValueSpan and maxValueSpan has higher priority than minSpan and maxSpan\n\n    var valueSpan = dataZoomModel.get(minMax + 'ValueSpan');\n\n    if (valueSpan != null) {\n      minMaxSpan[minMax + 'ValueSpan'] = valueSpan;\n      valueSpan = axisProxy.getAxisModel().axis.scale.parse(valueSpan);\n\n      if (valueSpan != null) {\n        var dataExtent = axisProxy._dataExtent;\n        minMaxSpan[minMax + 'Span'] = numberUtil.linearMap(dataExtent[0] + valueSpan, dataExtent, [0, 100], true);\n      }\n    }\n  });\n}\n\nvar _default = AxisProxy;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar featureManager = require(\"./featureManager\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar ToolboxModel = echarts.extendComponentModel({\n  type: 'toolbox',\n  layoutMode: {\n    type: 'box',\n    ignoreSize: true\n  },\n  optionUpdated: function () {\n    ToolboxModel.superApply(this, 'optionUpdated', arguments);\n    zrUtil.each(this.option.feature, function (featureOpt, featureName) {\n      var Feature = featureManager.get(featureName);\n      Feature && zrUtil.merge(featureOpt, Feature.defaultOption);\n    });\n  },\n  defaultOption: {\n    show: true,\n    z: 6,\n    zlevel: 0,\n    orient: 'horizontal',\n    left: 'right',\n    top: 'top',\n    // right\n    // bottom\n    backgroundColor: 'transparent',\n    borderColor: '#ccc',\n    borderRadius: 0,\n    borderWidth: 0,\n    padding: 5,\n    itemSize: 15,\n    itemGap: 8,\n    showTitle: true,\n    iconStyle: {\n      borderColor: '#666',\n      color: 'none'\n    },\n    emphasis: {\n      iconStyle: {\n        borderColor: '#3E98C5'\n      } // textStyle: {},\n      // feature\n\n    }\n  }\n});\nvar _default = ToolboxModel;\nmodule.exports = _default;","var Component = require(\"../../model/Component\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nComponent.registerSubTypeDefaulter('dataZoom', function () {\n  // Default 'slider' when no type specified.\n  return 'slider';\n});","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar textContain = require(\"zrender/lib/contain/text\");\n\nvar featureManager = require(\"./featureManager\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar Model = require(\"../../model/Model\");\n\nvar DataDiffer = require(\"../../data/DataDiffer\");\n\nvar listComponentHelper = require(\"../helper/listComponent\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = echarts.extendComponentView({\n  type: 'toolbox',\n  render: function (toolboxModel, ecModel, api, payload) {\n    var group = this.group;\n    group.removeAll();\n\n    if (!toolboxModel.get('show')) {\n      return;\n    }\n\n    var itemSize = +toolboxModel.get('itemSize');\n    var featureOpts = toolboxModel.get('feature') || {};\n    var features = this._features || (this._features = {});\n    var featureNames = [];\n    zrUtil.each(featureOpts, function (opt, name) {\n      featureNames.push(name);\n    });\n    new DataDiffer(this._featureNames || [], featureNames).add(processFeature).update(processFeature).remove(zrUtil.curry(processFeature, null)).execute(); // Keep for diff.\n\n    this._featureNames = featureNames;\n\n    function processFeature(newIndex, oldIndex) {\n      var featureName = featureNames[newIndex];\n      var oldName = featureNames[oldIndex];\n      var featureOpt = featureOpts[featureName];\n      var featureModel = new Model(featureOpt, toolboxModel, toolboxModel.ecModel);\n      var feature;\n\n      if (featureName && !oldName) {\n        // Create\n        if (isUserFeatureName(featureName)) {\n          feature = {\n            model: featureModel,\n            onclick: featureModel.option.onclick,\n            featureName: featureName\n          };\n        } else {\n          var Feature = featureManager.get(featureName);\n\n          if (!Feature) {\n            return;\n          }\n\n          feature = new Feature(featureModel, ecModel, api);\n        }\n\n        features[featureName] = feature;\n      } else {\n        feature = features[oldName]; // If feature does not exsit.\n\n        if (!feature) {\n          return;\n        }\n\n        feature.model = featureModel;\n        feature.ecModel = ecModel;\n        feature.api = api;\n      }\n\n      if (!featureName && oldName) {\n        feature.dispose && feature.dispose(ecModel, api);\n        return;\n      }\n\n      if (!featureModel.get('show') || feature.unusable) {\n        feature.remove && feature.remove(ecModel, api);\n        return;\n      }\n\n      createIconPaths(featureModel, feature, featureName);\n\n      featureModel.setIconStatus = function (iconName, status) {\n        var option = this.option;\n        var iconPaths = this.iconPaths;\n        option.iconStatus = option.iconStatus || {};\n        option.iconStatus[iconName] = status; // FIXME\n\n        iconPaths[iconName] && iconPaths[iconName].trigger(status);\n      };\n\n      if (feature.render) {\n        feature.render(featureModel, ecModel, api, payload);\n      }\n    }\n\n    function createIconPaths(featureModel, feature, featureName) {\n      var iconStyleModel = featureModel.getModel('iconStyle');\n      var iconStyleEmphasisModel = featureModel.getModel('emphasis.iconStyle'); // If one feature has mutiple icon. they are orginaized as\n      // {\n      //     icon: {\n      //         foo: '',\n      //         bar: ''\n      //     },\n      //     title: {\n      //         foo: '',\n      //         bar: ''\n      //     }\n      // }\n\n      var icons = feature.getIcons ? feature.getIcons() : featureModel.get('icon');\n      var titles = featureModel.get('title') || {};\n\n      if (typeof icons === 'string') {\n        var icon = icons;\n        var title = titles;\n        icons = {};\n        titles = {};\n        icons[featureName] = icon;\n        titles[featureName] = title;\n      }\n\n      var iconPaths = featureModel.iconPaths = {};\n      zrUtil.each(icons, function (iconStr, iconName) {\n        var path = graphic.createIcon(iconStr, {}, {\n          x: -itemSize / 2,\n          y: -itemSize / 2,\n          width: itemSize,\n          height: itemSize\n        });\n        path.setStyle(iconStyleModel.getItemStyle());\n        path.hoverStyle = iconStyleEmphasisModel.getItemStyle();\n        graphic.setHoverStyle(path);\n\n        if (toolboxModel.get('showTitle')) {\n          path.__title = titles[iconName];\n          path.on('mouseover', function () {\n            // Should not reuse above hoverStyle, which might be modified.\n            var hoverStyle = iconStyleEmphasisModel.getItemStyle();\n            path.setStyle({\n              text: titles[iconName],\n              textPosition: hoverStyle.textPosition || 'bottom',\n              textFill: hoverStyle.fill || hoverStyle.stroke || '#000',\n              textAlign: hoverStyle.textAlign || 'center'\n            });\n          }).on('mouseout', function () {\n            path.setStyle({\n              textFill: null\n            });\n          });\n        }\n\n        path.trigger(featureModel.get('iconStatus.' + iconName) || 'normal');\n        group.add(path);\n        path.on('click', zrUtil.bind(feature.onclick, feature, ecModel, api, iconName));\n        iconPaths[iconName] = path;\n      });\n    }\n\n    listComponentHelper.layout(group, toolboxModel, api); // Render background after group is layout\n    // FIXME\n\n    group.add(listComponentHelper.makeBackground(group.getBoundingRect(), toolboxModel)); // Adjust icon title positions to avoid them out of screen\n\n    group.eachChild(function (icon) {\n      var titleText = icon.__title;\n      var hoverStyle = icon.hoverStyle; // May be background element\n\n      if (hoverStyle && titleText) {\n        var rect = textContain.getBoundingRect(titleText, textContain.makeFont(hoverStyle));\n        var offsetX = icon.position[0] + group.position[0];\n        var offsetY = icon.position[1] + group.position[1] + itemSize;\n        var needPutOnTop = false;\n\n        if (offsetY + rect.height > api.getHeight()) {\n          hoverStyle.textPosition = 'top';\n          needPutOnTop = true;\n        }\n\n        var topOffset = needPutOnTop ? -5 - rect.height : itemSize + 8;\n\n        if (offsetX + rect.width / 2 > api.getWidth()) {\n          hoverStyle.textPosition = ['100%', topOffset];\n          hoverStyle.textAlign = 'right';\n        } else if (offsetX - rect.width / 2 < 0) {\n          hoverStyle.textPosition = [0, topOffset];\n          hoverStyle.textAlign = 'left';\n        }\n      }\n    });\n  },\n  updateView: function (toolboxModel, ecModel, api, payload) {\n    zrUtil.each(this._features, function (feature) {\n      feature.updateView && feature.updateView(feature.model, ecModel, api, payload);\n    });\n  },\n  // updateLayout: function (toolboxModel, ecModel, api, payload) {\n  //     zrUtil.each(this._features, function (feature) {\n  //         feature.updateLayout && feature.updateLayout(feature.model, ecModel, api, payload);\n  //     });\n  // },\n  remove: function (ecModel, api) {\n    zrUtil.each(this._features, function (feature) {\n      feature.remove && feature.remove(ecModel, api);\n    });\n    this.group.removeAll();\n  },\n  dispose: function (ecModel, api) {\n    zrUtil.each(this._features, function (feature) {\n      feature.dispose && feature.dispose(ecModel, api);\n    });\n  }\n});\n\nfunction isUserFeatureName(featureName) {\n  return featureName.indexOf('my') === 0;\n}\n\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar helper = require(\"./helper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerAction('dataZoom', function (payload, ecModel) {\n  var linkedNodesFinder = helper.createLinkedNodesFinder(zrUtil.bind(ecModel.eachComponent, ecModel, 'dataZoom'), helper.eachAxisDim, function (model, dimNames) {\n    return model.get(dimNames.axisIndex);\n  });\n  var effectedModels = [];\n  ecModel.eachComponent({\n    mainType: 'dataZoom',\n    query: payload\n  }, function (model, index) {\n    effectedModels.push.apply(effectedModels, linkedNodesFinder(model).nodes);\n  });\n  zrUtil.each(effectedModels, function (dataZoomModel, index) {\n    dataZoomModel.setRawRange({\n      start: payload.start,\n      end: payload.end,\n      startValue: payload.startValue,\n      endValue: payload.endValue\n    });\n  });\n});","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Eventful = require(\"zrender/lib/mixin/Eventful\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar interactionMutex = require(\"./interactionMutex\");\n\nvar DataDiffer = require(\"../../data/DataDiffer\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar curry = zrUtil.curry;\nvar each = zrUtil.each;\nvar map = zrUtil.map;\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathPow = Math.pow;\nvar COVER_Z = 10000;\nvar UNSELECT_THRESHOLD = 6;\nvar MIN_RESIZE_LINE_WIDTH = 6;\nvar MUTEX_RESOURCE_KEY = 'globalPan';\nvar DIRECTION_MAP = {\n  w: [0, 0],\n  e: [0, 1],\n  n: [1, 0],\n  s: [1, 1]\n};\nvar CURSOR_MAP = {\n  w: 'ew',\n  e: 'ew',\n  n: 'ns',\n  s: 'ns',\n  ne: 'nesw',\n  sw: 'nesw',\n  nw: 'nwse',\n  se: 'nwse'\n};\nvar DEFAULT_BRUSH_OPT = {\n  brushStyle: {\n    lineWidth: 2,\n    stroke: 'rgba(0,0,0,0.3)',\n    fill: 'rgba(0,0,0,0.1)'\n  },\n  transformable: true,\n  brushMode: 'single',\n  removeOnClick: false\n};\nvar baseUID = 0;\n/**\n * @alias module:echarts/component/helper/BrushController\n * @constructor\n * @mixin {module:zrender/mixin/Eventful}\n * @event module:echarts/component/helper/BrushController#brush\n *        params:\n *            areas: Array.<Array>, coord relates to container group,\n *                                    If no container specified, to global.\n *            opt {\n *                isEnd: boolean,\n *                removeOnClick: boolean\n *            }\n *\n * @param {module:zrender/zrender~ZRender} zr\n */\n\nfunction BrushController(zr) {\n  Eventful.call(this);\n  /**\n   * @type {module:zrender/zrender~ZRender}\n   * @private\n   */\n\n  this._zr = zr;\n  /**\n   * @type {module:zrender/container/Group}\n   * @readOnly\n   */\n\n  this.group = new graphic.Group();\n  /**\n   * Only for drawing (after enabledBrush).\n   *     'line', 'rect', 'polygon' or false\n   *     If passing false/null/undefined, disable brush.\n   *     If passing 'auto', determined by panel.defaultBrushType\n   * @private\n   * @type {string}\n   */\n\n  this._brushType;\n  /**\n   * Only for drawing (after enabledBrush).\n   *\n   * @private\n   * @type {Object}\n   */\n\n  this._brushOption;\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._panels;\n  /**\n   * @private\n   * @type {Array.<nubmer>}\n   */\n\n  this._track = [];\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._dragging;\n  /**\n   * @private\n   * @type {Array}\n   */\n\n  this._covers = [];\n  /**\n   * @private\n   * @type {moudule:zrender/container/Group}\n   */\n\n  this._creatingCover;\n  /**\n   * `true` means global panel\n   * @private\n   * @type {module:zrender/container/Group|boolean}\n   */\n\n  this._creatingPanel;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._enableGlobalPan;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this._uid = 'brushController_' + baseUID++;\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._handlers = {};\n  each(mouseHandlers, function (handler, eventName) {\n    this._handlers[eventName] = zrUtil.bind(handler, this);\n  }, this);\n}\n\nBrushController.prototype = {\n  constructor: BrushController,\n\n  /**\n   * If set to null/undefined/false, select disabled.\n   * @param {Object} brushOption\n   * @param {string|boolean} brushOption.brushType 'line', 'rect', 'polygon' or false\n   *                          If passing false/null/undefined, disable brush.\n   *                          If passing 'auto', determined by panel.defaultBrushType.\n   *                              ('auto' can not be used in global panel)\n   * @param {number} [brushOption.brushMode='single'] 'single' or 'multiple'\n   * @param {boolean} [brushOption.transformable=true]\n   * @param {boolean} [brushOption.removeOnClick=false]\n   * @param {Object} [brushOption.brushStyle]\n   * @param {number} [brushOption.brushStyle.width]\n   * @param {number} [brushOption.brushStyle.lineWidth]\n   * @param {string} [brushOption.brushStyle.stroke]\n   * @param {string} [brushOption.brushStyle.fill]\n   * @param {number} [brushOption.z]\n   */\n  enableBrush: function (brushOption) {\n    this._brushType && doDisableBrush(this);\n    brushOption.brushType && doEnableBrush(this, brushOption);\n    return this;\n  },\n\n  /**\n   * @param {Array.<Object>} panelOpts If not pass, it is global brush.\n   *        Each items: {\n   *            panelId, // mandatory.\n   *            clipPath, // mandatory. function.\n   *            isTargetByCursor, // mandatory. function.\n   *            defaultBrushType, // optional, only used when brushType is 'auto'.\n   *            getLinearBrushOtherExtent, // optional. function.\n   *        }\n   */\n  setPanels: function (panelOpts) {\n    if (panelOpts && panelOpts.length) {\n      var panels = this._panels = {};\n      zrUtil.each(panelOpts, function (panelOpts) {\n        panels[panelOpts.panelId] = zrUtil.clone(panelOpts);\n      });\n    } else {\n      this._panels = null;\n    }\n\n    return this;\n  },\n\n  /**\n   * @param {Object} [opt]\n   * @return {boolean} [opt.enableGlobalPan=false]\n   */\n  mount: function (opt) {\n    opt = opt || {};\n    this._enableGlobalPan = opt.enableGlobalPan;\n    var thisGroup = this.group;\n\n    this._zr.add(thisGroup);\n\n    thisGroup.attr({\n      position: opt.position || [0, 0],\n      rotation: opt.rotation || 0,\n      scale: opt.scale || [1, 1]\n    });\n    this._transform = thisGroup.getLocalTransform();\n    return this;\n  },\n  eachCover: function (cb, context) {\n    each(this._covers, cb, context);\n  },\n\n  /**\n   * Update covers.\n   * @param {Array.<Object>} brushOptionList Like:\n   *        [\n   *            {id: 'xx', brushType: 'line', range: [23, 44], brushStyle, transformable},\n   *            {id: 'yy', brushType: 'rect', range: [[23, 44], [23, 54]]},\n   *            ...\n   *        ]\n   *        `brushType` is required in each cover info. (can not be 'auto')\n   *        `id` is not mandatory.\n   *        `brushStyle`, `transformable` is not mandatory, use DEFAULT_BRUSH_OPT by default.\n   *        If brushOptionList is null/undefined, all covers removed.\n   */\n  updateCovers: function (brushOptionList) {\n    brushOptionList = zrUtil.map(brushOptionList, function (brushOption) {\n      return zrUtil.merge(zrUtil.clone(DEFAULT_BRUSH_OPT), brushOption, true);\n    });\n    var tmpIdPrefix = '\\0-brush-index-';\n    var oldCovers = this._covers;\n    var newCovers = this._covers = [];\n    var controller = this;\n    var creatingCover = this._creatingCover;\n    new DataDiffer(oldCovers, brushOptionList, oldGetKey, getKey).add(addOrUpdate).update(addOrUpdate).remove(remove).execute();\n    return this;\n\n    function getKey(brushOption, index) {\n      return (brushOption.id != null ? brushOption.id : tmpIdPrefix + index) + '-' + brushOption.brushType;\n    }\n\n    function oldGetKey(cover, index) {\n      return getKey(cover.__brushOption, index);\n    }\n\n    function addOrUpdate(newIndex, oldIndex) {\n      var newBrushOption = brushOptionList[newIndex]; // Consider setOption in event listener of brushSelect,\n      // where updating cover when creating should be forbiden.\n\n      if (oldIndex != null && oldCovers[oldIndex] === creatingCover) {\n        newCovers[newIndex] = oldCovers[oldIndex];\n      } else {\n        var cover = newCovers[newIndex] = oldIndex != null ? (oldCovers[oldIndex].__brushOption = newBrushOption, oldCovers[oldIndex]) : endCreating(controller, createCover(controller, newBrushOption));\n        updateCoverAfterCreation(controller, cover);\n      }\n    }\n\n    function remove(oldIndex) {\n      if (oldCovers[oldIndex] !== creatingCover) {\n        controller.group.remove(oldCovers[oldIndex]);\n      }\n    }\n  },\n  unmount: function () {\n    this.enableBrush(false); // container may 'removeAll' outside.\n\n    clearCovers(this);\n\n    this._zr.remove(this.group);\n\n    return this;\n  },\n  dispose: function () {\n    this.unmount();\n    this.off();\n  }\n};\nzrUtil.mixin(BrushController, Eventful);\n\nfunction doEnableBrush(controller, brushOption) {\n  var zr = controller._zr; // Consider roam, which takes globalPan too.\n\n  if (!controller._enableGlobalPan) {\n    interactionMutex.take(zr, MUTEX_RESOURCE_KEY, controller._uid);\n  }\n\n  each(controller._handlers, function (handler, eventName) {\n    zr.on(eventName, handler);\n  });\n  controller._brushType = brushOption.brushType;\n  controller._brushOption = zrUtil.merge(zrUtil.clone(DEFAULT_BRUSH_OPT), brushOption, true);\n}\n\nfunction doDisableBrush(controller) {\n  var zr = controller._zr;\n  interactionMutex.release(zr, MUTEX_RESOURCE_KEY, controller._uid);\n  each(controller._handlers, function (handler, eventName) {\n    zr.off(eventName, handler);\n  });\n  controller._brushType = controller._brushOption = null;\n}\n\nfunction createCover(controller, brushOption) {\n  var cover = coverRenderers[brushOption.brushType].createCover(controller, brushOption);\n  cover.__brushOption = brushOption;\n  updateZ(cover, brushOption);\n  controller.group.add(cover);\n  return cover;\n}\n\nfunction endCreating(controller, creatingCover) {\n  var coverRenderer = getCoverRenderer(creatingCover);\n\n  if (coverRenderer.endCreating) {\n    coverRenderer.endCreating(controller, creatingCover);\n    updateZ(creatingCover, creatingCover.__brushOption);\n  }\n\n  return creatingCover;\n}\n\nfunction updateCoverShape(controller, cover) {\n  var brushOption = cover.__brushOption;\n  getCoverRenderer(cover).updateCoverShape(controller, cover, brushOption.range, brushOption);\n}\n\nfunction updateZ(cover, brushOption) {\n  var z = brushOption.z;\n  z == null && (z = COVER_Z);\n  cover.traverse(function (el) {\n    el.z = z;\n    el.z2 = z; // Consider in given container.\n  });\n}\n\nfunction updateCoverAfterCreation(controller, cover) {\n  getCoverRenderer(cover).updateCommon(controller, cover);\n  updateCoverShape(controller, cover);\n}\n\nfunction getCoverRenderer(cover) {\n  return coverRenderers[cover.__brushOption.brushType];\n} // return target panel or `true` (means global panel)\n\n\nfunction getPanelByPoint(controller, e, localCursorPoint) {\n  var panels = controller._panels;\n\n  if (!panels) {\n    return true; // Global panel\n  }\n\n  var panel;\n  var transform = controller._transform;\n  each(panels, function (pn) {\n    pn.isTargetByCursor(e, localCursorPoint, transform) && (panel = pn);\n  });\n  return panel;\n} // Return a panel or true\n\n\nfunction getPanelByCover(controller, cover) {\n  var panels = controller._panels;\n\n  if (!panels) {\n    return true; // Global panel\n  }\n\n  var panelId = cover.__brushOption.panelId; // User may give cover without coord sys info,\n  // which is then treated as global panel.\n\n  return panelId != null ? panels[panelId] : true;\n}\n\nfunction clearCovers(controller) {\n  var covers = controller._covers;\n  var originalLength = covers.length;\n  each(covers, function (cover) {\n    controller.group.remove(cover);\n  }, controller);\n  covers.length = 0;\n  return !!originalLength;\n}\n\nfunction trigger(controller, opt) {\n  var areas = map(controller._covers, function (cover) {\n    var brushOption = cover.__brushOption;\n    var range = zrUtil.clone(brushOption.range);\n    return {\n      brushType: brushOption.brushType,\n      panelId: brushOption.panelId,\n      range: range\n    };\n  });\n  controller.trigger('brush', areas, {\n    isEnd: !!opt.isEnd,\n    removeOnClick: !!opt.removeOnClick\n  });\n}\n\nfunction shouldShowCover(controller) {\n  var track = controller._track;\n\n  if (!track.length) {\n    return false;\n  }\n\n  var p2 = track[track.length - 1];\n  var p1 = track[0];\n  var dx = p2[0] - p1[0];\n  var dy = p2[1] - p1[1];\n  var dist = mathPow(dx * dx + dy * dy, 0.5);\n  return dist > UNSELECT_THRESHOLD;\n}\n\nfunction getTrackEnds(track) {\n  var tail = track.length - 1;\n  tail < 0 && (tail = 0);\n  return [track[0], track[tail]];\n}\n\nfunction createBaseRectCover(doDrift, controller, brushOption, edgeNames) {\n  var cover = new graphic.Group();\n  cover.add(new graphic.Rect({\n    name: 'main',\n    style: makeStyle(brushOption),\n    silent: true,\n    draggable: true,\n    cursor: 'move',\n    drift: curry(doDrift, controller, cover, 'nswe'),\n    ondragend: curry(trigger, controller, {\n      isEnd: true\n    })\n  }));\n  each(edgeNames, function (name) {\n    cover.add(new graphic.Rect({\n      name: name,\n      style: {\n        opacity: 0\n      },\n      draggable: true,\n      silent: true,\n      invisible: true,\n      drift: curry(doDrift, controller, cover, name),\n      ondragend: curry(trigger, controller, {\n        isEnd: true\n      })\n    }));\n  });\n  return cover;\n}\n\nfunction updateBaseRect(controller, cover, localRange, brushOption) {\n  var lineWidth = brushOption.brushStyle.lineWidth || 0;\n  var handleSize = mathMax(lineWidth, MIN_RESIZE_LINE_WIDTH);\n  var x = localRange[0][0];\n  var y = localRange[1][0];\n  var xa = x - lineWidth / 2;\n  var ya = y - lineWidth / 2;\n  var x2 = localRange[0][1];\n  var y2 = localRange[1][1];\n  var x2a = x2 - handleSize + lineWidth / 2;\n  var y2a = y2 - handleSize + lineWidth / 2;\n  var width = x2 - x;\n  var height = y2 - y;\n  var widtha = width + lineWidth;\n  var heighta = height + lineWidth;\n  updateRectShape(controller, cover, 'main', x, y, width, height);\n\n  if (brushOption.transformable) {\n    updateRectShape(controller, cover, 'w', xa, ya, handleSize, heighta);\n    updateRectShape(controller, cover, 'e', x2a, ya, handleSize, heighta);\n    updateRectShape(controller, cover, 'n', xa, ya, widtha, handleSize);\n    updateRectShape(controller, cover, 's', xa, y2a, widtha, handleSize);\n    updateRectShape(controller, cover, 'nw', xa, ya, handleSize, handleSize);\n    updateRectShape(controller, cover, 'ne', x2a, ya, handleSize, handleSize);\n    updateRectShape(controller, cover, 'sw', xa, y2a, handleSize, handleSize);\n    updateRectShape(controller, cover, 'se', x2a, y2a, handleSize, handleSize);\n  }\n}\n\nfunction updateCommon(controller, cover) {\n  var brushOption = cover.__brushOption;\n  var transformable = brushOption.transformable;\n  var mainEl = cover.childAt(0);\n  mainEl.useStyle(makeStyle(brushOption));\n  mainEl.attr({\n    silent: !transformable,\n    cursor: transformable ? 'move' : 'default'\n  });\n  each(['w', 'e', 'n', 's', 'se', 'sw', 'ne', 'nw'], function (name) {\n    var el = cover.childOfName(name);\n    var globalDir = getGlobalDirection(controller, name);\n    el && el.attr({\n      silent: !transformable,\n      invisible: !transformable,\n      cursor: transformable ? CURSOR_MAP[globalDir] + '-resize' : null\n    });\n  });\n}\n\nfunction updateRectShape(controller, cover, name, x, y, w, h) {\n  var el = cover.childOfName(name);\n  el && el.setShape(pointsToRect(clipByPanel(controller, cover, [[x, y], [x + w, y + h]])));\n}\n\nfunction makeStyle(brushOption) {\n  return zrUtil.defaults({\n    strokeNoScale: true\n  }, brushOption.brushStyle);\n}\n\nfunction formatRectRange(x, y, x2, y2) {\n  var min = [mathMin(x, x2), mathMin(y, y2)];\n  var max = [mathMax(x, x2), mathMax(y, y2)];\n  return [[min[0], max[0]], // x range\n  [min[1], max[1]] // y range\n  ];\n}\n\nfunction getTransform(controller) {\n  return graphic.getTransform(controller.group);\n}\n\nfunction getGlobalDirection(controller, localDirection) {\n  if (localDirection.length > 1) {\n    localDirection = localDirection.split('');\n    var globalDir = [getGlobalDirection(controller, localDirection[0]), getGlobalDirection(controller, localDirection[1])];\n    (globalDir[0] === 'e' || globalDir[0] === 'w') && globalDir.reverse();\n    return globalDir.join('');\n  } else {\n    var map = {\n      w: 'left',\n      e: 'right',\n      n: 'top',\n      s: 'bottom'\n    };\n    var inverseMap = {\n      left: 'w',\n      right: 'e',\n      top: 'n',\n      bottom: 's'\n    };\n    var globalDir = graphic.transformDirection(map[localDirection], getTransform(controller));\n    return inverseMap[globalDir];\n  }\n}\n\nfunction driftRect(toRectRange, fromRectRange, controller, cover, name, dx, dy, e) {\n  var brushOption = cover.__brushOption;\n  var rectRange = toRectRange(brushOption.range);\n  var localDelta = toLocalDelta(controller, dx, dy);\n  each(name.split(''), function (namePart) {\n    var ind = DIRECTION_MAP[namePart];\n    rectRange[ind[0]][ind[1]] += localDelta[ind[0]];\n  });\n  brushOption.range = fromRectRange(formatRectRange(rectRange[0][0], rectRange[1][0], rectRange[0][1], rectRange[1][1]));\n  updateCoverAfterCreation(controller, cover);\n  trigger(controller, {\n    isEnd: false\n  });\n}\n\nfunction driftPolygon(controller, cover, dx, dy, e) {\n  var range = cover.__brushOption.range;\n  var localDelta = toLocalDelta(controller, dx, dy);\n  each(range, function (point) {\n    point[0] += localDelta[0];\n    point[1] += localDelta[1];\n  });\n  updateCoverAfterCreation(controller, cover);\n  trigger(controller, {\n    isEnd: false\n  });\n}\n\nfunction toLocalDelta(controller, dx, dy) {\n  var thisGroup = controller.group;\n  var localD = thisGroup.transformCoordToLocal(dx, dy);\n  var localZero = thisGroup.transformCoordToLocal(0, 0);\n  return [localD[0] - localZero[0], localD[1] - localZero[1]];\n}\n\nfunction clipByPanel(controller, cover, data) {\n  var panel = getPanelByCover(controller, cover);\n  return panel && panel !== true ? panel.clipPath(data, controller._transform) : zrUtil.clone(data);\n}\n\nfunction pointsToRect(points) {\n  var xmin = mathMin(points[0][0], points[1][0]);\n  var ymin = mathMin(points[0][1], points[1][1]);\n  var xmax = mathMax(points[0][0], points[1][0]);\n  var ymax = mathMax(points[0][1], points[1][1]);\n  return {\n    x: xmin,\n    y: ymin,\n    width: xmax - xmin,\n    height: ymax - ymin\n  };\n}\n\nfunction resetCursor(controller, e, localCursorPoint) {\n  // Check active\n  if (!controller._brushType) {\n    return;\n  }\n\n  var zr = controller._zr;\n  var covers = controller._covers;\n  var currPanel = getPanelByPoint(controller, e, localCursorPoint); // Check whether in covers.\n\n  if (!controller._dragging) {\n    for (var i = 0; i < covers.length; i++) {\n      var brushOption = covers[i].__brushOption;\n\n      if (currPanel && (currPanel === true || brushOption.panelId === currPanel.panelId) && coverRenderers[brushOption.brushType].contain(covers[i], localCursorPoint[0], localCursorPoint[1])) {\n        // Use cursor style set on cover.\n        return;\n      }\n    }\n  }\n\n  currPanel && zr.setCursorStyle('crosshair');\n}\n\nfunction preventDefault(e) {\n  var rawE = e.event;\n  rawE.preventDefault && rawE.preventDefault();\n}\n\nfunction mainShapeContain(cover, x, y) {\n  return cover.childOfName('main').contain(x, y);\n}\n\nfunction updateCoverByMouse(controller, e, localCursorPoint, isEnd) {\n  var creatingCover = controller._creatingCover;\n  var panel = controller._creatingPanel;\n  var thisBrushOption = controller._brushOption;\n  var eventParams;\n\n  controller._track.push(localCursorPoint.slice());\n\n  if (shouldShowCover(controller) || creatingCover) {\n    if (panel && !creatingCover) {\n      thisBrushOption.brushMode === 'single' && clearCovers(controller);\n      var brushOption = zrUtil.clone(thisBrushOption);\n      brushOption.brushType = determineBrushType(brushOption.brushType, panel);\n      brushOption.panelId = panel === true ? null : panel.panelId;\n      creatingCover = controller._creatingCover = createCover(controller, brushOption);\n\n      controller._covers.push(creatingCover);\n    }\n\n    if (creatingCover) {\n      var coverRenderer = coverRenderers[determineBrushType(controller._brushType, panel)];\n      var coverBrushOption = creatingCover.__brushOption;\n      coverBrushOption.range = coverRenderer.getCreatingRange(clipByPanel(controller, creatingCover, controller._track));\n\n      if (isEnd) {\n        endCreating(controller, creatingCover);\n        coverRenderer.updateCommon(controller, creatingCover);\n      }\n\n      updateCoverShape(controller, creatingCover);\n      eventParams = {\n        isEnd: isEnd\n      };\n    }\n  } else if (isEnd && thisBrushOption.brushMode === 'single' && thisBrushOption.removeOnClick) {\n    // Help user to remove covers easily, only by a tiny drag, in 'single' mode.\n    // But a single click do not clear covers, because user may have casual\n    // clicks (for example, click on other component and do not expect covers\n    // disappear).\n    // Only some cover removed, trigger action, but not every click trigger action.\n    if (getPanelByPoint(controller, e, localCursorPoint) && clearCovers(controller)) {\n      eventParams = {\n        isEnd: isEnd,\n        removeOnClick: true\n      };\n    }\n  }\n\n  return eventParams;\n}\n\nfunction determineBrushType(brushType, panel) {\n  if (brushType === 'auto') {\n    return panel.defaultBrushType;\n  }\n\n  return brushType;\n}\n\nvar mouseHandlers = {\n  mousedown: function (e) {\n    if (this._dragging) {\n      // In case some browser do not support globalOut,\n      // and release mose out side the browser.\n      handleDragEnd.call(this, e);\n    } else if (!e.target || !e.target.draggable) {\n      preventDefault(e);\n      var localCursorPoint = this.group.transformCoordToLocal(e.offsetX, e.offsetY);\n      this._creatingCover = null;\n      var panel = this._creatingPanel = getPanelByPoint(this, e, localCursorPoint);\n\n      if (panel) {\n        this._dragging = true;\n        this._track = [localCursorPoint.slice()];\n      }\n    }\n  },\n  mousemove: function (e) {\n    var localCursorPoint = this.group.transformCoordToLocal(e.offsetX, e.offsetY);\n    resetCursor(this, e, localCursorPoint);\n\n    if (this._dragging) {\n      preventDefault(e);\n      var eventParams = updateCoverByMouse(this, e, localCursorPoint, false);\n      eventParams && trigger(this, eventParams);\n    }\n  },\n  mouseup: handleDragEnd //,\n  // FIXME\n  // in tooltip, globalout should not be triggered.\n  // globalout: handleDragEnd\n\n};\n\nfunction handleDragEnd(e) {\n  if (this._dragging) {\n    preventDefault(e);\n    var localCursorPoint = this.group.transformCoordToLocal(e.offsetX, e.offsetY);\n    var eventParams = updateCoverByMouse(this, e, localCursorPoint, true);\n    this._dragging = false;\n    this._track = [];\n    this._creatingCover = null; // trigger event shoule be at final, after procedure will be nested.\n\n    eventParams && trigger(this, eventParams);\n  }\n}\n/**\n * key: brushType\n * @type {Object}\n */\n\n\nvar coverRenderers = {\n  lineX: getLineRenderer(0),\n  lineY: getLineRenderer(1),\n  rect: {\n    createCover: function (controller, brushOption) {\n      return createBaseRectCover(curry(driftRect, function (range) {\n        return range;\n      }, function (range) {\n        return range;\n      }), controller, brushOption, ['w', 'e', 'n', 's', 'se', 'sw', 'ne', 'nw']);\n    },\n    getCreatingRange: function (localTrack) {\n      var ends = getTrackEnds(localTrack);\n      return formatRectRange(ends[1][0], ends[1][1], ends[0][0], ends[0][1]);\n    },\n    updateCoverShape: function (controller, cover, localRange, brushOption) {\n      updateBaseRect(controller, cover, localRange, brushOption);\n    },\n    updateCommon: updateCommon,\n    contain: mainShapeContain\n  },\n  polygon: {\n    createCover: function (controller, brushOption) {\n      var cover = new graphic.Group(); // Do not use graphic.Polygon because graphic.Polyline do not close the\n      // border of the shape when drawing, which is a better experience for user.\n\n      cover.add(new graphic.Polyline({\n        name: 'main',\n        style: makeStyle(brushOption),\n        silent: true\n      }));\n      return cover;\n    },\n    getCreatingRange: function (localTrack) {\n      return localTrack;\n    },\n    endCreating: function (controller, cover) {\n      cover.remove(cover.childAt(0)); // Use graphic.Polygon close the shape.\n\n      cover.add(new graphic.Polygon({\n        name: 'main',\n        draggable: true,\n        drift: curry(driftPolygon, controller, cover),\n        ondragend: curry(trigger, controller, {\n          isEnd: true\n        })\n      }));\n    },\n    updateCoverShape: function (controller, cover, localRange, brushOption) {\n      cover.childAt(0).setShape({\n        points: clipByPanel(controller, cover, localRange)\n      });\n    },\n    updateCommon: updateCommon,\n    contain: mainShapeContain\n  }\n};\n\nfunction getLineRenderer(xyIndex) {\n  return {\n    createCover: function (controller, brushOption) {\n      return createBaseRectCover(curry(driftRect, function (range) {\n        var rectRange = [range, [0, 100]];\n        xyIndex && rectRange.reverse();\n        return rectRange;\n      }, function (rectRange) {\n        return rectRange[xyIndex];\n      }), controller, brushOption, [['w', 'e'], ['n', 's']][xyIndex]);\n    },\n    getCreatingRange: function (localTrack) {\n      var ends = getTrackEnds(localTrack);\n      var min = mathMin(ends[0][xyIndex], ends[1][xyIndex]);\n      var max = mathMax(ends[0][xyIndex], ends[1][xyIndex]);\n      return [min, max];\n    },\n    updateCoverShape: function (controller, cover, localRange, brushOption) {\n      var otherExtent; // If brushWidth not specified, fit the panel.\n\n      var panel = getPanelByCover(controller, cover);\n\n      if (panel !== true && panel.getLinearBrushOtherExtent) {\n        otherExtent = panel.getLinearBrushOtherExtent(xyIndex, controller._transform);\n      } else {\n        var zr = controller._zr;\n        otherExtent = [0, [zr.getWidth(), zr.getHeight()][1 - xyIndex]];\n      }\n\n      var rectRange = [localRange, otherExtent];\n      xyIndex && rectRange.reverse();\n      updateBaseRect(controller, cover, rectRange, brushOption);\n    },\n    updateCommon: updateCommon,\n    contain: mainShapeContain\n  };\n}\n\nvar _default = BrushController;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar ATTR = '\\0_ec_interaction_mutex';\n\nfunction take(zr, resourceKey, userKey) {\n  var store = getStore(zr);\n  store[resourceKey] = userKey;\n}\n\nfunction release(zr, resourceKey, userKey) {\n  var store = getStore(zr);\n  var uKey = store[resourceKey];\n\n  if (uKey === userKey) {\n    store[resourceKey] = null;\n  }\n}\n\nfunction isTaken(zr, resourceKey) {\n  return !!getStore(zr)[resourceKey];\n}\n\nfunction getStore(zr) {\n  return zr[ATTR] || (zr[ATTR] = {});\n}\n/**\n * payload: {\n *     type: 'takeGlobalCursor',\n *     key: 'dataZoomSelect', or 'brush', or ...,\n *         If no userKey, release global cursor.\n * }\n */\n\n\necharts.registerAction({\n  type: 'takeGlobalCursor',\n  event: 'globalCursorTaken',\n  update: 'update'\n}, function () {});\nexports.take = take;\nexports.release = release;\nexports.isTaken = isTaken;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar features = {};\n\nfunction register(name, ctor) {\n  features[name] = ctor;\n}\n\nfunction get(name) {\n  return features[name];\n}\n\nexports.register = register;\nexports.get = get;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar each = zrUtil.each;\nvar ATTR = '\\0_ec_hist_store';\n/**\n * @param {module:echarts/model/Global} ecModel\n * @param {Object} newSnapshot {dataZoomId, batch: [payloadInfo, ...]}\n */\n\nfunction push(ecModel, newSnapshot) {\n  var store = giveStore(ecModel); // If previous dataZoom can not be found,\n  // complete an range with current range.\n\n  each(newSnapshot, function (batchItem, dataZoomId) {\n    var i = store.length - 1;\n\n    for (; i >= 0; i--) {\n      var snapshot = store[i];\n\n      if (snapshot[dataZoomId]) {\n        break;\n      }\n    }\n\n    if (i < 0) {\n      // No origin range set, create one by current range.\n      var dataZoomModel = ecModel.queryComponents({\n        mainType: 'dataZoom',\n        subType: 'select',\n        id: dataZoomId\n      })[0];\n\n      if (dataZoomModel) {\n        var percentRange = dataZoomModel.getPercentRange();\n        store[0][dataZoomId] = {\n          dataZoomId: dataZoomId,\n          start: percentRange[0],\n          end: percentRange[1]\n        };\n      }\n    }\n  });\n  store.push(newSnapshot);\n}\n/**\n * @param {module:echarts/model/Global} ecModel\n * @return {Object} snapshot\n */\n\n\nfunction pop(ecModel) {\n  var store = giveStore(ecModel);\n  var head = store[store.length - 1];\n  store.length > 1 && store.pop(); // Find top for all dataZoom.\n\n  var snapshot = {};\n  each(head, function (batchItem, dataZoomId) {\n    for (var i = store.length - 1; i >= 0; i--) {\n      var batchItem = store[i][dataZoomId];\n\n      if (batchItem) {\n        snapshot[dataZoomId] = batchItem;\n        break;\n      }\n    }\n  });\n  return snapshot;\n}\n/**\n * @param {module:echarts/model/Global} ecModel\n */\n\n\nfunction clear(ecModel) {\n  ecModel[ATTR] = null;\n}\n/**\n * @param {module:echarts/model/Global} ecModel\n * @return {number} records. always >= 1.\n */\n\n\nfunction count(ecModel) {\n  return giveStore(ecModel).length;\n}\n/**\n * [{key: dataZoomId, value: {dataZoomId, range}}, ...]\n * History length of each dataZoom may be different.\n * this._history[0] is used to store origin range.\n * @type {Array.<Object>}\n */\n\n\nfunction giveStore(ecModel) {\n  var store = ecModel[ATTR];\n\n  if (!store) {\n    store = ecModel[ATTR] = [{}];\n  }\n\n  return store;\n}\n\nexports.push = push;\nexports.pop = pop;\nexports.clear = clear;\nexports.count = count;","var BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar _cursorHelper = require(\"./cursorHelper\");\n\nvar onIrrelevantElement = _cursorHelper.onIrrelevantElement;\n\nvar graphicUtil = require(\"../../util/graphic\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction makeRectPanelClipPath(rect) {\n  rect = normalizeRect(rect);\n  return function (localPoints, transform) {\n    return graphicUtil.clipPointsByRect(localPoints, rect);\n  };\n}\n\nfunction makeLinearBrushOtherExtent(rect, specifiedXYIndex) {\n  rect = normalizeRect(rect);\n  return function (xyIndex) {\n    var idx = specifiedXYIndex != null ? specifiedXYIndex : xyIndex;\n    var brushWidth = idx ? rect.width : rect.height;\n    var base = idx ? rect.x : rect.y;\n    return [base, base + (brushWidth || 0)];\n  };\n}\n\nfunction makeRectIsTargetByCursor(rect, api, targetModel) {\n  rect = normalizeRect(rect);\n  return function (e, localCursorPoint, transform) {\n    return rect.contain(localCursorPoint[0], localCursorPoint[1]) && !onIrrelevantElement(e, api, targetModel);\n  };\n} // Consider width/height is negative.\n\n\nfunction normalizeRect(rect) {\n  return BoundingRect.create(rect);\n}\n\nexports.makeRectPanelClipPath = makeRectPanelClipPath;\nexports.makeLinearBrushOtherExtent = makeLinearBrushOtherExtent;\nexports.makeRectIsTargetByCursor = makeRectIsTargetByCursor;","var DataZoomModel = require(\"./DataZoomModel\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = DataZoomModel.extend({\n  type: 'dataZoom.select'\n});\n\nmodule.exports = _default;","var DataZoomView = require(\"./DataZoomView\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = DataZoomView.extend({\n  type: 'dataZoom.select'\n});\n\nmodule.exports = _default;","var env = require(\"zrender/lib/core/env\");\n\nvar lang = require(\"../../../lang\");\n\nvar featureManager = require(\"../featureManager\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar saveAsImageLang = lang.toolbox.saveAsImage;\n\nfunction SaveAsImage(model) {\n  this.model = model;\n}\n\nSaveAsImage.defaultOption = {\n  show: true,\n  icon: 'M4.7,22.9L29.3,45.5L54.7,23.4M4.6,43.6L4.6,58L53.8,58L53.8,43.6M29.2,45.1L29.2,0',\n  title: saveAsImageLang.title,\n  type: 'png',\n  // Default use option.backgroundColor\n  // backgroundColor: '#fff',\n  name: '',\n  excludeComponents: ['toolbox'],\n  pixelRatio: 1,\n  lang: saveAsImageLang.lang.slice()\n};\nSaveAsImage.prototype.unusable = !env.canvasSupported;\nvar proto = SaveAsImage.prototype;\n\nproto.onclick = function (ecModel, api) {\n  var model = this.model;\n  var title = model.get('name') || ecModel.get('title.0.text') || 'echarts';\n  var $a = document.createElement('a');\n  var type = model.get('type', true) || 'png';\n  $a.download = title + '.' + type;\n  $a.target = '_blank';\n  var url = api.getConnectedDataURL({\n    type: type,\n    backgroundColor: model.get('backgroundColor', true) || ecModel.get('backgroundColor') || '#fff',\n    excludeComponents: model.get('excludeComponents'),\n    pixelRatio: model.get('pixelRatio')\n  });\n  $a.href = url; // Chrome and Firefox\n\n  if (typeof MouseEvent === 'function' && !env.browser.ie && !env.browser.edge) {\n    var evt = new MouseEvent('click', {\n      view: window,\n      bubbles: true,\n      cancelable: false\n    });\n    $a.dispatchEvent(evt);\n  } // IE\n  else {\n      if (window.navigator.msSaveOrOpenBlob) {\n        var bstr = atob(url.split(',')[1]);\n        var n = bstr.length;\n        var u8arr = new Uint8Array(n);\n\n        while (n--) {\n          u8arr[n] = bstr.charCodeAt(n);\n        }\n\n        var blob = new Blob([u8arr]);\n        window.navigator.msSaveOrOpenBlob(blob, title + '.' + type);\n      } else {\n        var lang = model.get('lang');\n        var html = '' + '<body style=\"margin:0;\">' + '<img src=\"' + url + '\" style=\"max-width:100%;\" title=\"' + (lang && lang[0] || '') + '\" />' + '</body>';\n        var tab = window.open();\n        tab.document.write(html);\n      }\n    }\n};\n\nfeatureManager.register('saveAsImage', SaveAsImage);\nvar _default = SaveAsImage;\nmodule.exports = _default;","require(\"./toolbox/ToolboxModel\");\n\nrequire(\"./toolbox/ToolboxView\");\n\nrequire(\"./toolbox/feature/SaveAsImage\");\n\nrequire(\"./toolbox/feature/MagicType\");\n\nrequire(\"./toolbox/feature/DataView\");\n\nrequire(\"./toolbox/feature/DataZoom\");\n\nrequire(\"./toolbox/feature/Restore\");","require(\"./dataZoom/typeDefaulter\");\n\nrequire(\"./dataZoom/DataZoomModel\");\n\nrequire(\"./dataZoom/DataZoomView\");\n\nrequire(\"./dataZoom/SelectZoomModel\");\n\nrequire(\"./dataZoom/SelectZoomView\");\n\nrequire(\"./dataZoom/dataZoomProcessor\");\n\nrequire(\"./dataZoom/dataZoomAction\");","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar IRRELEVANT_EXCLUDES = {\n  'axisPointer': 1,\n  'tooltip': 1,\n  'brush': 1\n};\n/**\n * Avoid that: mouse click on a elements that is over geo or graph,\n * but roam is triggered.\n */\n\nfunction onIrrelevantElement(e, api, targetCoordSysModel) {\n  var model = api.getComponentByElement(e.topTarget); // If model is axisModel, it works only if it is injected with coordinateSystem.\n\n  var coordSys = model && model.coordinateSystem;\n  return model && model !== targetCoordSysModel && !IRRELEVANT_EXCLUDES[model.mainType] && coordSys && coordSys.model !== targetCoordSysModel;\n}\n\nexports.onIrrelevantElement = onIrrelevantElement;","var echarts = require(\"../../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar lang = require(\"../../../lang\");\n\nvar featureManager = require(\"../featureManager\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar magicTypeLang = lang.toolbox.magicType;\n\nfunction MagicType(model) {\n  this.model = model;\n}\n\nMagicType.defaultOption = {\n  show: true,\n  type: [],\n  // Icon group\n  icon: {\n    line: 'M4.1,28.9h7.1l9.3-22l7.4,38l9.7-19.7l3,12.8h14.9M4.1,58h51.4',\n    bar: 'M6.7,22.9h10V48h-10V22.9zM24.9,13h10v35h-10V13zM43.2,2h10v46h-10V2zM3.1,58h53.7',\n    stack: 'M8.2,38.4l-8.4,4.1l30.6,15.3L60,42.5l-8.1-4.1l-21.5,11L8.2,38.4z M51.9,30l-8.1,4.2l-13.4,6.9l-13.9-6.9L8.2,30l-8.4,4.2l8.4,4.2l22.2,11l21.5-11l8.1-4.2L51.9,30z M51.9,21.7l-8.1,4.2L35.7,30l-5.3,2.8L24.9,30l-8.4-4.1l-8.3-4.2l-8.4,4.2L8.2,30l8.3,4.2l13.9,6.9l13.4-6.9l8.1-4.2l8.1-4.1L51.9,21.7zM30.4,2.2L-0.2,17.5l8.4,4.1l8.3,4.2l8.4,4.2l5.5,2.7l5.3-2.7l8.1-4.2l8.1-4.2l8.1-4.1L30.4,2.2z',\n    // jshint ignore:line\n    tiled: 'M2.3,2.2h22.8V25H2.3V2.2z M35,2.2h22.8V25H35V2.2zM2.3,35h22.8v22.8H2.3V35z M35,35h22.8v22.8H35V35z'\n  },\n  // `line`, `bar`, `stack`, `tiled`\n  title: zrUtil.clone(magicTypeLang.title),\n  option: {},\n  seriesIndex: {}\n};\nvar proto = MagicType.prototype;\n\nproto.getIcons = function () {\n  var model = this.model;\n  var availableIcons = model.get('icon');\n  var icons = {};\n  zrUtil.each(model.get('type'), function (type) {\n    if (availableIcons[type]) {\n      icons[type] = availableIcons[type];\n    }\n  });\n  return icons;\n};\n\nvar seriesOptGenreator = {\n  'line': function (seriesType, seriesId, seriesModel, model) {\n    if (seriesType === 'bar') {\n      return zrUtil.merge({\n        id: seriesId,\n        type: 'line',\n        // Preserve data related option\n        data: seriesModel.get('data'),\n        stack: seriesModel.get('stack'),\n        markPoint: seriesModel.get('markPoint'),\n        markLine: seriesModel.get('markLine')\n      }, model.get('option.line') || {}, true);\n    }\n  },\n  'bar': function (seriesType, seriesId, seriesModel, model) {\n    if (seriesType === 'line') {\n      return zrUtil.merge({\n        id: seriesId,\n        type: 'bar',\n        // Preserve data related option\n        data: seriesModel.get('data'),\n        stack: seriesModel.get('stack'),\n        markPoint: seriesModel.get('markPoint'),\n        markLine: seriesModel.get('markLine')\n      }, model.get('option.bar') || {}, true);\n    }\n  },\n  'stack': function (seriesType, seriesId, seriesModel, model) {\n    if (seriesType === 'line' || seriesType === 'bar') {\n      return zrUtil.merge({\n        id: seriesId,\n        stack: '__ec_magicType_stack__'\n      }, model.get('option.stack') || {}, true);\n    }\n  },\n  'tiled': function (seriesType, seriesId, seriesModel, model) {\n    if (seriesType === 'line' || seriesType === 'bar') {\n      return zrUtil.merge({\n        id: seriesId,\n        stack: ''\n      }, model.get('option.tiled') || {}, true);\n    }\n  }\n};\nvar radioTypes = [['line', 'bar'], ['stack', 'tiled']];\n\nproto.onclick = function (ecModel, api, type) {\n  var model = this.model;\n  var seriesIndex = model.get('seriesIndex.' + type); // Not supported magicType\n\n  if (!seriesOptGenreator[type]) {\n    return;\n  }\n\n  var newOption = {\n    series: []\n  };\n\n  var generateNewSeriesTypes = function (seriesModel) {\n    var seriesType = seriesModel.subType;\n    var seriesId = seriesModel.id;\n    var newSeriesOpt = seriesOptGenreator[type](seriesType, seriesId, seriesModel, model);\n\n    if (newSeriesOpt) {\n      // PENDING If merge original option?\n      zrUtil.defaults(newSeriesOpt, seriesModel.option);\n      newOption.series.push(newSeriesOpt);\n    } // Modify boundaryGap\n\n\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys && coordSys.type === 'cartesian2d' && (type === 'line' || type === 'bar')) {\n      var categoryAxis = coordSys.getAxesByScale('ordinal')[0];\n\n      if (categoryAxis) {\n        var axisDim = categoryAxis.dim;\n        var axisType = axisDim + 'Axis';\n        var axisModel = ecModel.queryComponents({\n          mainType: axisType,\n          index: seriesModel.get(name + 'Index'),\n          id: seriesModel.get(name + 'Id')\n        })[0];\n        var axisIndex = axisModel.componentIndex;\n        newOption[axisType] = newOption[axisType] || [];\n\n        for (var i = 0; i <= axisIndex; i++) {\n          newOption[axisType][axisIndex] = newOption[axisType][axisIndex] || {};\n        }\n\n        newOption[axisType][axisIndex].boundaryGap = type === 'bar' ? true : false;\n      }\n    }\n  };\n\n  zrUtil.each(radioTypes, function (radio) {\n    if (zrUtil.indexOf(radio, type) >= 0) {\n      zrUtil.each(radio, function (item) {\n        model.setIconStatus(item, 'normal');\n      });\n    }\n  });\n  model.setIconStatus(type, 'emphasis');\n  ecModel.eachComponent({\n    mainType: 'series',\n    query: seriesIndex == null ? null : {\n      seriesIndex: seriesIndex\n    }\n  }, generateNewSeriesTypes);\n  api.dispatchAction({\n    type: 'changeMagicType',\n    currentType: type,\n    newOption: newOption\n  });\n};\n\necharts.registerAction({\n  type: 'changeMagicType',\n  event: 'magicTypeChanged',\n  update: 'prepareAndUpdate'\n}, function (payload, ecModel) {\n  ecModel.mergeOption(payload.newOption);\n});\nfeatureManager.register('magicType', MagicType);\nvar _default = MagicType;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\nvar each = _util.each;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerProcessor({\n  // `dataZoomProcessor` will only be performed in needed series. Consider if\n  // there is a line series and a pie series, it is better not to update the\n  // line series if only pie series is needed to be updated.\n  getTargetSeries: function (ecModel) {\n    var seriesModelMap = createHashMap();\n    ecModel.eachComponent('dataZoom', function (dataZoomModel) {\n      dataZoomModel.eachTargetAxis(function (dimNames, axisIndex, dataZoomModel) {\n        var axisProxy = dataZoomModel.getAxisProxy(dimNames.name, axisIndex);\n        each(axisProxy.getTargetSeriesModels(), function (seriesModel) {\n          seriesModelMap.set(seriesModel.uid, seriesModel);\n        });\n      });\n    });\n    return seriesModelMap;\n  },\n  modifyOutputEnd: true,\n  // Consider appendData, where filter should be performed. Because data process is\n  // in block mode currently, it is not need to worry about that the overallProgress\n  // execute every frame.\n  overallReset: function (ecModel, api) {\n    ecModel.eachComponent('dataZoom', function (dataZoomModel) {\n      // We calculate window and reset axis here but not in model\n      // init stage and not after action dispatch handler, because\n      // reset should be called after seriesData.restoreData.\n      dataZoomModel.eachTargetAxis(function (dimNames, axisIndex, dataZoomModel) {\n        dataZoomModel.getAxisProxy(dimNames.name, axisIndex).reset(dataZoomModel, api);\n      }); // Caution: data zoom filtering is order sensitive when using\n      // percent range and no min/max/scale set on axis.\n      // For example, we have dataZoom definition:\n      // [\n      //      {xAxisIndex: 0, start: 30, end: 70},\n      //      {yAxisIndex: 0, start: 20, end: 80}\n      // ]\n      // In this case, [20, 80] of y-dataZoom should be based on data\n      // that have filtered by x-dataZoom using range of [30, 70],\n      // but should not be based on full raw data. Thus sliding\n      // x-dataZoom will change both ranges of xAxis and yAxis,\n      // while sliding y-dataZoom will only change the range of yAxis.\n      // So we should filter x-axis after reset x-axis immediately,\n      // and then reset y-axis and filter y-axis.\n\n      dataZoomModel.eachTargetAxis(function (dimNames, axisIndex, dataZoomModel) {\n        dataZoomModel.getAxisProxy(dimNames.name, axisIndex).filterData(dataZoomModel, api);\n      });\n    });\n    ecModel.eachComponent('dataZoom', function (dataZoomModel) {\n      // Fullfill all of the range props so that user\n      // is able to get them from chart.getOption().\n      var axisProxy = dataZoomModel.findRepresentativeAxisProxy();\n      var percentRange = axisProxy.getDataPercentWindow();\n      var valueRange = axisProxy.getDataValueWindow();\n      dataZoomModel.setRawRange({\n        start: percentRange[0],\n        end: percentRange[1],\n        startValue: valueRange[0],\n        endValue: valueRange[1]\n      }, true);\n    });\n  }\n});","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Calculate slider move result.\n * Usage:\n * (1) If both handle0 and handle1 are needed to be moved, set minSpan the same as\n * maxSpan and the same as `Math.abs(handleEnd[1] - handleEnds[0])`.\n * (2) If handle0 is forbidden to cross handle1, set minSpan as `0`.\n *\n * @param {number} delta Move length.\n * @param {Array.<number>} handleEnds handleEnds[0] can be bigger then handleEnds[1].\n *              handleEnds will be modified in this method.\n * @param {Array.<number>} extent handleEnds is restricted by extent.\n *              extent[0] should less or equals than extent[1].\n * @param {number|string} handleIndex Can be 'all', means that both move the two handleEnds,\n *              where the input minSpan and maxSpan will not work.\n * @param {number} [minSpan] The range of dataZoom can not be smaller than that.\n *              If not set, handle0 and cross handle1. If set as a non-negative\n *              number (including `0`), handles will push each other when reaching\n *              the minSpan.\n * @param {number} [maxSpan] The range of dataZoom can not be larger than that.\n * @return {Array.<number>} The input handleEnds.\n */\nfunction _default(delta, handleEnds, extent, handleIndex, minSpan, maxSpan) {\n  // Normalize firstly.\n  handleEnds[0] = restrict(handleEnds[0], extent);\n  handleEnds[1] = restrict(handleEnds[1], extent);\n  delta = delta || 0;\n  var extentSpan = extent[1] - extent[0]; // Notice maxSpan and minSpan can be null/undefined.\n\n  if (minSpan != null) {\n    minSpan = restrict(minSpan, [0, extentSpan]);\n  }\n\n  if (maxSpan != null) {\n    maxSpan = Math.max(maxSpan, minSpan != null ? minSpan : 0);\n  }\n\n  if (handleIndex === 'all') {\n    minSpan = maxSpan = Math.abs(handleEnds[1] - handleEnds[0]);\n    handleIndex = 0;\n  }\n\n  var originalDistSign = getSpanSign(handleEnds, handleIndex);\n  handleEnds[handleIndex] += delta; // Restrict in extent.\n\n  var extentMinSpan = minSpan || 0;\n  var realExtent = extent.slice();\n  originalDistSign.sign < 0 ? realExtent[0] += extentMinSpan : realExtent[1] -= extentMinSpan;\n  handleEnds[handleIndex] = restrict(handleEnds[handleIndex], realExtent); // Expand span.\n\n  var currDistSign = getSpanSign(handleEnds, handleIndex);\n\n  if (minSpan != null && (currDistSign.sign !== originalDistSign.sign || currDistSign.span < minSpan)) {\n    // If minSpan exists, 'cross' is forbinden.\n    handleEnds[1 - handleIndex] = handleEnds[handleIndex] + originalDistSign.sign * minSpan;\n  } // Shrink span.\n\n\n  var currDistSign = getSpanSign(handleEnds, handleIndex);\n\n  if (maxSpan != null && currDistSign.span > maxSpan) {\n    handleEnds[1 - handleIndex] = handleEnds[handleIndex] + currDistSign.sign * maxSpan;\n  }\n\n  return handleEnds;\n}\n\nfunction getSpanSign(handleEnds, handleIndex) {\n  var dist = handleEnds[handleIndex] - handleEnds[1 - handleIndex]; // If `handleEnds[0] === handleEnds[1]`, always believe that handleEnd[0]\n  // is at left of handleEnds[1] for non-cross case.\n\n  return {\n    span: Math.abs(dist),\n    sign: dist > 0 ? -1 : dist < 0 ? 1 : handleIndex ? -1 : 1\n  };\n}\n\nfunction restrict(value, extend) {\n  return Math.min(extend[1], Math.max(extend[0], value));\n}\n\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar helper = require(\"./helper\");\n\nvar AxisProxy = require(\"./AxisProxy\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar each = zrUtil.each;\nvar eachAxisDim = helper.eachAxisDim;\nvar DataZoomModel = echarts.extendComponentModel({\n  type: 'dataZoom',\n  dependencies: ['xAxis', 'yAxis', 'zAxis', 'radiusAxis', 'angleAxis', 'singleAxis', 'series'],\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    zlevel: 0,\n    z: 4,\n    // Higher than normal component (z: 2).\n    orient: null,\n    // Default auto by axisIndex. Possible value: 'horizontal', 'vertical'.\n    xAxisIndex: null,\n    // Default the first horizontal category axis.\n    yAxisIndex: null,\n    // Default the first vertical category axis.\n    filterMode: 'filter',\n    // Possible values: 'filter' or 'empty' or 'weakFilter'.\n    // 'filter': data items which are out of window will be removed. This option is\n    //          applicable when filtering outliers. For each data item, it will be\n    //          filtered if one of the relevant dimensions is out of the window.\n    // 'weakFilter': data items which are out of window will be removed. This option\n    //          is applicable when filtering outliers. For each data item, it will be\n    //          filtered only if all  of the relevant dimensions are out of the same\n    //          side of the window.\n    // 'empty': data items which are out of window will be set to empty.\n    //          This option is applicable when user should not neglect\n    //          that there are some data items out of window.\n    // 'none': Do not filter.\n    // Taking line chart as an example, line will be broken in\n    // the filtered points when filterModel is set to 'empty', but\n    // be connected when set to 'filter'.\n    throttle: null,\n    // Dispatch action by the fixed rate, avoid frequency.\n    // default 100. Do not throttle when use null/undefined.\n    // If animation === true and animationDurationUpdate > 0,\n    // default value is 100, otherwise 20.\n    start: 0,\n    // Start percent. 0 ~ 100\n    end: 100,\n    // End percent. 0 ~ 100\n    startValue: null,\n    // Start value. If startValue specified, start is ignored.\n    endValue: null,\n    // End value. If endValue specified, end is ignored.\n    minSpan: null,\n    // 0 ~ 100\n    maxSpan: null,\n    // 0 ~ 100\n    minValueSpan: null,\n    // The range of dataZoom can not be smaller than that.\n    maxValueSpan: null,\n    // The range of dataZoom can not be larger than that.\n    rangeMode: null // Array, can be 'value' or 'percent'.\n\n  },\n\n  /**\n   * @override\n   */\n  init: function (option, parentModel, ecModel) {\n    /**\n     * key like x_0, y_1\n     * @private\n     * @type {Object}\n     */\n    this._dataIntervalByAxis = {};\n    /**\n     * @private\n     */\n\n    this._dataInfo = {};\n    /**\n     * key like x_0, y_1\n     * @private\n     */\n\n    this._axisProxies = {};\n    /**\n     * @readOnly\n     */\n\n    this.textStyleModel;\n    /**\n     * @private\n     */\n\n    this._autoThrottle = true;\n    /**\n     * 'percent' or 'value'\n     * @private\n     */\n\n    this._rangePropMode = ['percent', 'percent'];\n    var rawOption = retrieveRaw(option);\n    this.mergeDefaultAndTheme(option, ecModel);\n    this.doInit(rawOption);\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function (newOption) {\n    var rawOption = retrieveRaw(newOption); //FIX #2591\n\n    zrUtil.merge(this.option, newOption, true);\n    this.doInit(rawOption);\n  },\n\n  /**\n   * @protected\n   */\n  doInit: function (rawOption) {\n    var thisOption = this.option; // Disable realtime view update if canvas is not supported.\n\n    if (!env.canvasSupported) {\n      thisOption.realtime = false;\n    }\n\n    this._setDefaultThrottle(rawOption);\n\n    updateRangeUse(this, rawOption);\n    each([['start', 'startValue'], ['end', 'endValue']], function (names, index) {\n      // start/end has higher priority over startValue/endValue if they\n      // both set, but we should make chart.setOption({endValue: 1000})\n      // effective, rather than chart.setOption({endValue: 1000, end: null}).\n      if (this._rangePropMode[index] === 'value') {\n        thisOption[names[0]] = null;\n      } // Otherwise do nothing and use the merge result.\n\n    }, this);\n    this.textStyleModel = this.getModel('textStyle');\n\n    this._resetTarget();\n\n    this._giveAxisProxies();\n  },\n\n  /**\n   * @private\n   */\n  _giveAxisProxies: function () {\n    var axisProxies = this._axisProxies;\n    this.eachTargetAxis(function (dimNames, axisIndex, dataZoomModel, ecModel) {\n      var axisModel = this.dependentModels[dimNames.axis][axisIndex]; // If exists, share axisProxy with other dataZoomModels.\n\n      var axisProxy = axisModel.__dzAxisProxy || ( // Use the first dataZoomModel as the main model of axisProxy.\n      axisModel.__dzAxisProxy = new AxisProxy(dimNames.name, axisIndex, this, ecModel)); // FIXME\n      // dispose __dzAxisProxy\n\n      axisProxies[dimNames.name + '_' + axisIndex] = axisProxy;\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _resetTarget: function () {\n    var thisOption = this.option;\n\n    var autoMode = this._judgeAutoMode();\n\n    eachAxisDim(function (dimNames) {\n      var axisIndexName = dimNames.axisIndex;\n      thisOption[axisIndexName] = modelUtil.normalizeToArray(thisOption[axisIndexName]);\n    }, this);\n\n    if (autoMode === 'axisIndex') {\n      this._autoSetAxisIndex();\n    } else if (autoMode === 'orient') {\n      this._autoSetOrient();\n    }\n  },\n\n  /**\n   * @private\n   */\n  _judgeAutoMode: function () {\n    // Auto set only works for setOption at the first time.\n    // The following is user's reponsibility. So using merged\n    // option is OK.\n    var thisOption = this.option;\n    var hasIndexSpecified = false;\n    eachAxisDim(function (dimNames) {\n      // When user set axisIndex as a empty array, we think that user specify axisIndex\n      // but do not want use auto mode. Because empty array may be encountered when\n      // some error occured.\n      if (thisOption[dimNames.axisIndex] != null) {\n        hasIndexSpecified = true;\n      }\n    }, this);\n    var orient = thisOption.orient;\n\n    if (orient == null && hasIndexSpecified) {\n      return 'orient';\n    } else if (!hasIndexSpecified) {\n      if (orient == null) {\n        thisOption.orient = 'horizontal';\n      }\n\n      return 'axisIndex';\n    }\n  },\n\n  /**\n   * @private\n   */\n  _autoSetAxisIndex: function () {\n    var autoAxisIndex = true;\n    var orient = this.get('orient', true);\n    var thisOption = this.option;\n    var dependentModels = this.dependentModels;\n\n    if (autoAxisIndex) {\n      // Find axis that parallel to dataZoom as default.\n      var dimName = orient === 'vertical' ? 'y' : 'x';\n\n      if (dependentModels[dimName + 'Axis'].length) {\n        thisOption[dimName + 'AxisIndex'] = [0];\n        autoAxisIndex = false;\n      } else {\n        each(dependentModels.singleAxis, function (singleAxisModel) {\n          if (autoAxisIndex && singleAxisModel.get('orient', true) === orient) {\n            thisOption.singleAxisIndex = [singleAxisModel.componentIndex];\n            autoAxisIndex = false;\n          }\n        });\n      }\n    }\n\n    if (autoAxisIndex) {\n      // Find the first category axis as default. (consider polar)\n      eachAxisDim(function (dimNames) {\n        if (!autoAxisIndex) {\n          return;\n        }\n\n        var axisIndices = [];\n        var axisModels = this.dependentModels[dimNames.axis];\n\n        if (axisModels.length && !axisIndices.length) {\n          for (var i = 0, len = axisModels.length; i < len; i++) {\n            if (axisModels[i].get('type') === 'category') {\n              axisIndices.push(i);\n            }\n          }\n        }\n\n        thisOption[dimNames.axisIndex] = axisIndices;\n\n        if (axisIndices.length) {\n          autoAxisIndex = false;\n        }\n      }, this);\n    }\n\n    if (autoAxisIndex) {\n      // FIXME\n      // 这里是兼容ec2的写法（没指定xAxisIndex和yAxisIndex时把scatter和双数值轴折柱纳入dataZoom控制），\n      // 但是实际是否需要Grid.js#getScaleByOption来判断（考虑time，log等axis type）？\n      // If both dataZoom.xAxisIndex and dataZoom.yAxisIndex is not specified,\n      // dataZoom component auto adopts series that reference to\n      // both xAxis and yAxis which type is 'value'.\n      this.ecModel.eachSeries(function (seriesModel) {\n        if (this._isSeriesHasAllAxesTypeOf(seriesModel, 'value')) {\n          eachAxisDim(function (dimNames) {\n            var axisIndices = thisOption[dimNames.axisIndex];\n            var axisIndex = seriesModel.get(dimNames.axisIndex);\n            var axisId = seriesModel.get(dimNames.axisId);\n            var axisModel = seriesModel.ecModel.queryComponents({\n              mainType: dimNames.axis,\n              index: axisIndex,\n              id: axisId\n            })[0];\n            axisIndex = axisModel.componentIndex;\n\n            if (zrUtil.indexOf(axisIndices, axisIndex) < 0) {\n              axisIndices.push(axisIndex);\n            }\n          });\n        }\n      }, this);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _autoSetOrient: function () {\n    var dim; // Find the first axis\n\n    this.eachTargetAxis(function (dimNames) {\n      !dim && (dim = dimNames.name);\n    }, this);\n    this.option.orient = dim === 'y' ? 'vertical' : 'horizontal';\n  },\n\n  /**\n   * @private\n   */\n  _isSeriesHasAllAxesTypeOf: function (seriesModel, axisType) {\n    // FIXME\n    // 需要series的xAxisIndex和yAxisIndex都首先自动设置上。\n    // 例如series.type === scatter时。\n    var is = true;\n    eachAxisDim(function (dimNames) {\n      var seriesAxisIndex = seriesModel.get(dimNames.axisIndex);\n      var axisModel = this.dependentModels[dimNames.axis][seriesAxisIndex];\n\n      if (!axisModel || axisModel.get('type') !== axisType) {\n        is = false;\n      }\n    }, this);\n    return is;\n  },\n\n  /**\n   * @private\n   */\n  _setDefaultThrottle: function (rawOption) {\n    // When first time user set throttle, auto throttle ends.\n    if (rawOption.hasOwnProperty('throttle')) {\n      this._autoThrottle = false;\n    }\n\n    if (this._autoThrottle) {\n      var globalOption = this.ecModel.option;\n      this.option.throttle = globalOption.animation && globalOption.animationDurationUpdate > 0 ? 100 : 20;\n    }\n  },\n\n  /**\n   * @public\n   */\n  getFirstTargetAxisModel: function () {\n    var firstAxisModel;\n    eachAxisDim(function (dimNames) {\n      if (firstAxisModel == null) {\n        var indices = this.get(dimNames.axisIndex);\n\n        if (indices.length) {\n          firstAxisModel = this.dependentModels[dimNames.axis][indices[0]];\n        }\n      }\n    }, this);\n    return firstAxisModel;\n  },\n\n  /**\n   * @public\n   * @param {Function} callback param: axisModel, dimNames, axisIndex, dataZoomModel, ecModel\n   */\n  eachTargetAxis: function (callback, context) {\n    var ecModel = this.ecModel;\n    eachAxisDim(function (dimNames) {\n      each(this.get(dimNames.axisIndex), function (axisIndex) {\n        callback.call(context, dimNames, axisIndex, this, ecModel);\n      }, this);\n    }, this);\n  },\n\n  /**\n   * @param {string} dimName\n   * @param {number} axisIndex\n   * @return {module:echarts/component/dataZoom/AxisProxy} If not found, return null/undefined.\n   */\n  getAxisProxy: function (dimName, axisIndex) {\n    return this._axisProxies[dimName + '_' + axisIndex];\n  },\n\n  /**\n   * @param {string} dimName\n   * @param {number} axisIndex\n   * @return {module:echarts/model/Model} If not found, return null/undefined.\n   */\n  getAxisModel: function (dimName, axisIndex) {\n    var axisProxy = this.getAxisProxy(dimName, axisIndex);\n    return axisProxy && axisProxy.getAxisModel();\n  },\n\n  /**\n   * If not specified, set to undefined.\n   *\n   * @public\n   * @param {Object} opt\n   * @param {number} [opt.start]\n   * @param {number} [opt.end]\n   * @param {number} [opt.startValue]\n   * @param {number} [opt.endValue]\n   * @param {boolean} [ignoreUpdateRangeUsg=false]\n   */\n  setRawRange: function (opt, ignoreUpdateRangeUsg) {\n    var option = this.option;\n    each([['start', 'startValue'], ['end', 'endValue']], function (names) {\n      // If only one of 'start' and 'startValue' is not null/undefined, the other\n      // should be cleared, which enable clear the option.\n      // If both of them are not set, keep option with the original value, which\n      // enable use only set start but not set end when calling `dispatchAction`.\n      // The same as 'end' and 'endValue'.\n      if (opt[names[0]] != null || opt[names[1]] != null) {\n        option[names[0]] = opt[names[0]];\n        option[names[1]] = opt[names[1]];\n      }\n    }, this);\n    !ignoreUpdateRangeUsg && updateRangeUse(this, opt);\n  },\n\n  /**\n   * @public\n   * @return {Array.<number>} [startPercent, endPercent]\n   */\n  getPercentRange: function () {\n    var axisProxy = this.findRepresentativeAxisProxy();\n\n    if (axisProxy) {\n      return axisProxy.getDataPercentWindow();\n    }\n  },\n\n  /**\n   * @public\n   * For example, chart.getModel().getComponent('dataZoom').getValueRange('y', 0);\n   *\n   * @param {string} [axisDimName]\n   * @param {number} [axisIndex]\n   * @return {Array.<number>} [startValue, endValue] value can only be '-' or finite number.\n   */\n  getValueRange: function (axisDimName, axisIndex) {\n    if (axisDimName == null && axisIndex == null) {\n      var axisProxy = this.findRepresentativeAxisProxy();\n\n      if (axisProxy) {\n        return axisProxy.getDataValueWindow();\n      }\n    } else {\n      return this.getAxisProxy(axisDimName, axisIndex).getDataValueWindow();\n    }\n  },\n\n  /**\n   * @public\n   * @param {module:echarts/model/Model} [axisModel] If axisModel given, find axisProxy\n   *      corresponding to the axisModel\n   * @return {module:echarts/component/dataZoom/AxisProxy}\n   */\n  findRepresentativeAxisProxy: function (axisModel) {\n    if (axisModel) {\n      return axisModel.__dzAxisProxy;\n    } // Find the first hosted axisProxy\n\n\n    var axisProxies = this._axisProxies;\n\n    for (var key in axisProxies) {\n      if (axisProxies.hasOwnProperty(key) && axisProxies[key].hostedBy(this)) {\n        return axisProxies[key];\n      }\n    } // If no hosted axis find not hosted axisProxy.\n    // Consider this case: dataZoomModel1 and dataZoomModel2 control the same axis,\n    // and the option.start or option.end settings are different. The percentRange\n    // should follow axisProxy.\n    // (We encounter this problem in toolbox data zoom.)\n\n\n    for (var key in axisProxies) {\n      if (axisProxies.hasOwnProperty(key) && !axisProxies[key].hostedBy(this)) {\n        return axisProxies[key];\n      }\n    }\n  },\n\n  /**\n   * @return {Array.<string>}\n   */\n  getRangePropMode: function () {\n    return this._rangePropMode.slice();\n  }\n});\n\nfunction retrieveRaw(option) {\n  var ret = {};\n  each(['start', 'end', 'startValue', 'endValue', 'throttle'], function (name) {\n    option.hasOwnProperty(name) && (ret[name] = option[name]);\n  });\n  return ret;\n}\n\nfunction updateRangeUse(dataZoomModel, rawOption) {\n  var rangePropMode = dataZoomModel._rangePropMode;\n  var rangeModeInOption = dataZoomModel.get('rangeMode');\n  each([['start', 'startValue'], ['end', 'endValue']], function (names, index) {\n    var percentSpecified = rawOption[names[0]] != null;\n    var valueSpecified = rawOption[names[1]] != null;\n\n    if (percentSpecified && !valueSpecified) {\n      rangePropMode[index] = 'percent';\n    } else if (!percentSpecified && valueSpecified) {\n      rangePropMode[index] = 'value';\n    } else if (rangeModeInOption) {\n      rangePropMode[index] = rangeModeInOption[index];\n    } else if (percentSpecified) {\n      // percentSpecified && valueSpecified\n      rangePropMode[index] = 'percent';\n    } // else remain its original setting.\n\n  });\n}\n\nvar _default = DataZoomModel;\nmodule.exports = _default;","var echarts = require(\"../../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar eventTool = require(\"zrender/lib/core/event\");\n\nvar lang = require(\"../../../lang\");\n\nvar featureManager = require(\"../featureManager\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar dataViewLang = lang.toolbox.dataView;\nvar BLOCK_SPLITER = new Array(60).join('-');\nvar ITEM_SPLITER = '\\t';\n/**\n * Group series into two types\n *  1. on category axis, like line, bar\n *  2. others, like scatter, pie\n * @param {module:echarts/model/Global} ecModel\n * @return {Object}\n * @inner\n */\n\nfunction groupSeries(ecModel) {\n  var seriesGroupByCategoryAxis = {};\n  var otherSeries = [];\n  var meta = [];\n  ecModel.eachRawSeries(function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys && (coordSys.type === 'cartesian2d' || coordSys.type === 'polar')) {\n      var baseAxis = coordSys.getBaseAxis();\n\n      if (baseAxis.type === 'category') {\n        var key = baseAxis.dim + '_' + baseAxis.index;\n\n        if (!seriesGroupByCategoryAxis[key]) {\n          seriesGroupByCategoryAxis[key] = {\n            categoryAxis: baseAxis,\n            valueAxis: coordSys.getOtherAxis(baseAxis),\n            series: []\n          };\n          meta.push({\n            axisDim: baseAxis.dim,\n            axisIndex: baseAxis.index\n          });\n        }\n\n        seriesGroupByCategoryAxis[key].series.push(seriesModel);\n      } else {\n        otherSeries.push(seriesModel);\n      }\n    } else {\n      otherSeries.push(seriesModel);\n    }\n  });\n  return {\n    seriesGroupByCategoryAxis: seriesGroupByCategoryAxis,\n    other: otherSeries,\n    meta: meta\n  };\n}\n/**\n * Assemble content of series on cateogory axis\n * @param {Array.<module:echarts/model/Series>} series\n * @return {string}\n * @inner\n */\n\n\nfunction assembleSeriesWithCategoryAxis(series) {\n  var tables = [];\n  zrUtil.each(series, function (group, key) {\n    var categoryAxis = group.categoryAxis;\n    var valueAxis = group.valueAxis;\n    var valueAxisDim = valueAxis.dim;\n    var headers = [' '].concat(zrUtil.map(group.series, function (series) {\n      return series.name;\n    }));\n    var columns = [categoryAxis.model.getCategories()];\n    zrUtil.each(group.series, function (series) {\n      columns.push(series.getRawData().mapArray(valueAxisDim, function (val) {\n        return val;\n      }));\n    }); // Assemble table content\n\n    var lines = [headers.join(ITEM_SPLITER)];\n\n    for (var i = 0; i < columns[0].length; i++) {\n      var items = [];\n\n      for (var j = 0; j < columns.length; j++) {\n        items.push(columns[j][i]);\n      }\n\n      lines.push(items.join(ITEM_SPLITER));\n    }\n\n    tables.push(lines.join('\\n'));\n  });\n  return tables.join('\\n\\n' + BLOCK_SPLITER + '\\n\\n');\n}\n/**\n * Assemble content of other series\n * @param {Array.<module:echarts/model/Series>} series\n * @return {string}\n * @inner\n */\n\n\nfunction assembleOtherSeries(series) {\n  return zrUtil.map(series, function (series) {\n    var data = series.getRawData();\n    var lines = [series.name];\n    var vals = [];\n    data.each(data.dimensions, function () {\n      var argLen = arguments.length;\n      var dataIndex = arguments[argLen - 1];\n      var name = data.getName(dataIndex);\n\n      for (var i = 0; i < argLen - 1; i++) {\n        vals[i] = arguments[i];\n      }\n\n      lines.push((name ? name + ITEM_SPLITER : '') + vals.join(ITEM_SPLITER));\n    });\n    return lines.join('\\n');\n  }).join('\\n\\n' + BLOCK_SPLITER + '\\n\\n');\n}\n/**\n * @param {module:echarts/model/Global}\n * @return {Object}\n * @inner\n */\n\n\nfunction getContentFromModel(ecModel) {\n  var result = groupSeries(ecModel);\n  return {\n    value: zrUtil.filter([assembleSeriesWithCategoryAxis(result.seriesGroupByCategoryAxis), assembleOtherSeries(result.other)], function (str) {\n      return str.replace(/[\\n\\t\\s]/g, '');\n    }).join('\\n\\n' + BLOCK_SPLITER + '\\n\\n'),\n    meta: result.meta\n  };\n}\n\nfunction trim(str) {\n  return str.replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\n}\n/**\n * If a block is tsv format\n */\n\n\nfunction isTSVFormat(block) {\n  // Simple method to find out if a block is tsv format\n  var firstLine = block.slice(0, block.indexOf('\\n'));\n\n  if (firstLine.indexOf(ITEM_SPLITER) >= 0) {\n    return true;\n  }\n}\n\nvar itemSplitRegex = new RegExp('[' + ITEM_SPLITER + ']+', 'g');\n/**\n * @param {string} tsv\n * @return {Object}\n */\n\nfunction parseTSVContents(tsv) {\n  var tsvLines = tsv.split(/\\n+/g);\n  var headers = trim(tsvLines.shift()).split(itemSplitRegex);\n  var categories = [];\n  var series = zrUtil.map(headers, function (header) {\n    return {\n      name: header,\n      data: []\n    };\n  });\n\n  for (var i = 0; i < tsvLines.length; i++) {\n    var items = trim(tsvLines[i]).split(itemSplitRegex);\n    categories.push(items.shift());\n\n    for (var j = 0; j < items.length; j++) {\n      series[j] && (series[j].data[i] = items[j]);\n    }\n  }\n\n  return {\n    series: series,\n    categories: categories\n  };\n}\n/**\n * @param {string} str\n * @return {Array.<Object>}\n * @inner\n */\n\n\nfunction parseListContents(str) {\n  var lines = str.split(/\\n+/g);\n  var seriesName = trim(lines.shift());\n  var data = [];\n\n  for (var i = 0; i < lines.length; i++) {\n    var items = trim(lines[i]).split(itemSplitRegex);\n    var name = '';\n    var value;\n    var hasName = false;\n\n    if (isNaN(items[0])) {\n      // First item is name\n      hasName = true;\n      name = items[0];\n      items = items.slice(1);\n      data[i] = {\n        name: name,\n        value: []\n      };\n      value = data[i].value;\n    } else {\n      value = data[i] = [];\n    }\n\n    for (var j = 0; j < items.length; j++) {\n      value.push(+items[j]);\n    }\n\n    if (value.length === 1) {\n      hasName ? data[i].value = value[0] : data[i] = value[0];\n    }\n  }\n\n  return {\n    name: seriesName,\n    data: data\n  };\n}\n/**\n * @param {string} str\n * @param {Array.<Object>} blockMetaList\n * @return {Object}\n * @inner\n */\n\n\nfunction parseContents(str, blockMetaList) {\n  var blocks = str.split(new RegExp('\\n*' + BLOCK_SPLITER + '\\n*', 'g'));\n  var newOption = {\n    series: []\n  };\n  zrUtil.each(blocks, function (block, idx) {\n    if (isTSVFormat(block)) {\n      var result = parseTSVContents(block);\n      var blockMeta = blockMetaList[idx];\n      var axisKey = blockMeta.axisDim + 'Axis';\n\n      if (blockMeta) {\n        newOption[axisKey] = newOption[axisKey] || [];\n        newOption[axisKey][blockMeta.axisIndex] = {\n          data: result.categories\n        };\n        newOption.series = newOption.series.concat(result.series);\n      }\n    } else {\n      var result = parseListContents(block);\n      newOption.series.push(result);\n    }\n  });\n  return newOption;\n}\n/**\n * @alias {module:echarts/component/toolbox/feature/DataView}\n * @constructor\n * @param {module:echarts/model/Model} model\n */\n\n\nfunction DataView(model) {\n  this._dom = null;\n  this.model = model;\n}\n\nDataView.defaultOption = {\n  show: true,\n  readOnly: false,\n  optionToContent: null,\n  contentToOption: null,\n  icon: 'M17.5,17.3H33 M17.5,17.3H33 M45.4,29.5h-28 M11.5,2v56H51V14.8L38.4,2H11.5z M38.4,2.2v12.7H51 M45.4,41.7h-28',\n  title: zrUtil.clone(dataViewLang.title),\n  lang: zrUtil.clone(dataViewLang.lang),\n  backgroundColor: '#fff',\n  textColor: '#000',\n  textareaColor: '#fff',\n  textareaBorderColor: '#333',\n  buttonColor: '#c23531',\n  buttonTextColor: '#fff'\n};\n\nDataView.prototype.onclick = function (ecModel, api) {\n  var container = api.getDom();\n  var model = this.model;\n\n  if (this._dom) {\n    container.removeChild(this._dom);\n  }\n\n  var root = document.createElement('div');\n  root.style.cssText = 'position:absolute;left:5px;top:5px;bottom:5px;right:5px;';\n  root.style.backgroundColor = model.get('backgroundColor') || '#fff'; // Create elements\n\n  var header = document.createElement('h4');\n  var lang = model.get('lang') || [];\n  header.innerHTML = lang[0] || model.get('title');\n  header.style.cssText = 'margin: 10px 20px;';\n  header.style.color = model.get('textColor');\n  var viewMain = document.createElement('div');\n  var textarea = document.createElement('textarea');\n  viewMain.style.cssText = 'display:block;width:100%;overflow:auto;';\n  var optionToContent = model.get('optionToContent');\n  var contentToOption = model.get('contentToOption');\n  var result = getContentFromModel(ecModel);\n\n  if (typeof optionToContent === 'function') {\n    var htmlOrDom = optionToContent(api.getOption());\n\n    if (typeof htmlOrDom === 'string') {\n      viewMain.innerHTML = htmlOrDom;\n    } else if (zrUtil.isDom(htmlOrDom)) {\n      viewMain.appendChild(htmlOrDom);\n    }\n  } else {\n    // Use default textarea\n    viewMain.appendChild(textarea);\n    textarea.readOnly = model.get('readOnly');\n    textarea.style.cssText = 'width:100%;height:100%;font-family:monospace;font-size:14px;line-height:1.6rem;';\n    textarea.style.color = model.get('textColor');\n    textarea.style.borderColor = model.get('textareaBorderColor');\n    textarea.style.backgroundColor = model.get('textareaColor');\n    textarea.value = result.value;\n  }\n\n  var blockMetaList = result.meta;\n  var buttonContainer = document.createElement('div');\n  buttonContainer.style.cssText = 'position:absolute;bottom:0;left:0;right:0;';\n  var buttonStyle = 'float:right;margin-right:20px;border:none;' + 'cursor:pointer;padding:2px 5px;font-size:12px;border-radius:3px';\n  var closeButton = document.createElement('div');\n  var refreshButton = document.createElement('div');\n  buttonStyle += ';background-color:' + model.get('buttonColor');\n  buttonStyle += ';color:' + model.get('buttonTextColor');\n  var self = this;\n\n  function close() {\n    container.removeChild(root);\n    self._dom = null;\n  }\n\n  eventTool.addEventListener(closeButton, 'click', close);\n  eventTool.addEventListener(refreshButton, 'click', function () {\n    var newOption;\n\n    try {\n      if (typeof contentToOption === 'function') {\n        newOption = contentToOption(viewMain, api.getOption());\n      } else {\n        newOption = parseContents(textarea.value, blockMetaList);\n      }\n    } catch (e) {\n      close();\n      throw new Error('Data view format error ' + e);\n    }\n\n    if (newOption) {\n      api.dispatchAction({\n        type: 'changeDataView',\n        newOption: newOption\n      });\n    }\n\n    close();\n  });\n  closeButton.innerHTML = lang[1];\n  refreshButton.innerHTML = lang[2];\n  refreshButton.style.cssText = buttonStyle;\n  closeButton.style.cssText = buttonStyle;\n  !model.get('readOnly') && buttonContainer.appendChild(refreshButton);\n  buttonContainer.appendChild(closeButton); // http://stackoverflow.com/questions/6637341/use-tab-to-indent-in-textarea\n\n  eventTool.addEventListener(textarea, 'keydown', function (e) {\n    if ((e.keyCode || e.which) === 9) {\n      // get caret position/selection\n      var val = this.value;\n      var start = this.selectionStart;\n      var end = this.selectionEnd; // set textarea value to: text before caret + tab + text after caret\n\n      this.value = val.substring(0, start) + ITEM_SPLITER + val.substring(end); // put caret at right position again\n\n      this.selectionStart = this.selectionEnd = start + 1; // prevent the focus lose\n\n      eventTool.stop(e);\n    }\n  });\n  root.appendChild(header);\n  root.appendChild(viewMain);\n  root.appendChild(buttonContainer);\n  viewMain.style.height = container.clientHeight - 80 + 'px';\n  container.appendChild(root);\n  this._dom = root;\n};\n\nDataView.prototype.remove = function (ecModel, api) {\n  this._dom && api.getDom().removeChild(this._dom);\n};\n\nDataView.prototype.dispose = function (ecModel, api) {\n  this.remove(ecModel, api);\n};\n/**\n * @inner\n */\n\n\nfunction tryMergeDataOption(newData, originalData) {\n  return zrUtil.map(newData, function (newVal, idx) {\n    var original = originalData && originalData[idx];\n\n    if (zrUtil.isObject(original) && !zrUtil.isArray(original)) {\n      if (zrUtil.isObject(newVal) && !zrUtil.isArray(newVal)) {\n        newVal = newVal.value;\n      } // Original data has option\n\n\n      return zrUtil.defaults({\n        value: newVal\n      }, original);\n    } else {\n      return newVal;\n    }\n  });\n}\n\nfeatureManager.register('dataView', DataView);\necharts.registerAction({\n  type: 'changeDataView',\n  event: 'dataViewChanged',\n  update: 'prepareAndUpdate'\n}, function (payload, ecModel) {\n  var newSeriesOptList = [];\n  zrUtil.each(payload.newOption.series, function (seriesOpt) {\n    var seriesModel = ecModel.getSeriesByName(seriesOpt.name)[0];\n\n    if (!seriesModel) {\n      // New created series\n      // Geuss the series type\n      newSeriesOptList.push(zrUtil.extend({\n        // Default is scatter\n        type: 'scatter'\n      }, seriesOpt));\n    } else {\n      var originalData = seriesModel.get('data');\n      newSeriesOptList.push({\n        name: seriesOpt.name,\n        data: tryMergeDataOption(seriesOpt.data, originalData)\n      });\n    }\n  });\n  ecModel.mergeOption(zrUtil.defaults({\n    series: newSeriesOptList\n  }, payload.newOption));\n});\nvar _default = DataView;\nmodule.exports = _default;","import mod from \"-!../../../../node_modules/_mini-css-extract-plugin@0.4.4@mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../../node_modules/_css-loader@1.0.0@css-loader/index.js??ref--6-oneOf-1-1!../../../../node_modules/_vue-loader@15.4.2@vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/_postcss-loader@2.1.6@postcss-loader/lib/index.js??ref--6-oneOf-1-2!../../../../node_modules/_cache-loader@1.2.2@cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/_vue-loader@15.4.2@vue-loader/lib/index.js??vue-loader-options!./NormalToggleChart.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../../../node_modules/_mini-css-extract-plugin@0.4.4@mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../../node_modules/_css-loader@1.0.0@css-loader/index.js??ref--6-oneOf-1-1!../../../../node_modules/_vue-loader@15.4.2@vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/_postcss-loader@2.1.6@postcss-loader/lib/index.js??ref--6-oneOf-1-2!../../../../node_modules/_cache-loader@1.2.2@cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/_vue-loader@15.4.2@vue-loader/lib/index.js??vue-loader-options!./NormalToggleChart.vue?vue&type=style&index=0&lang=css&\"","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar brushHelper = require(\"./brushHelper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar each = zrUtil.each;\nvar indexOf = zrUtil.indexOf;\nvar curry = zrUtil.curry;\nvar COORD_CONVERTS = ['dataToPoint', 'pointToData']; // FIXME\n// how to genarialize to more coordinate systems.\n\nvar INCLUDE_FINDER_MAIN_TYPES = ['grid', 'xAxis', 'yAxis', 'geo', 'graph', 'polar', 'radiusAxis', 'angleAxis', 'bmap'];\n/**\n * [option in constructor]:\n * {\n *     Index/Id/Name of geo, xAxis, yAxis, grid: See util/model#parseFinder.\n * }\n *\n *\n * [targetInfo]:\n *\n * There can be multiple axes in a single targetInfo. Consider the case\n * of `grid` component, a targetInfo represents a grid which contains one or more\n * cartesian and one or more axes. And consider the case of parallel system,\n * which has multiple axes in a coordinate system.\n * Can be {\n *     panelId: ...,\n *     coordSys: <a representitive cartesian in grid (first cartesian by default)>,\n *     coordSyses: all cartesians.\n *     gridModel: <grid component>\n *     xAxes: correspond to coordSyses on index\n *     yAxes: correspond to coordSyses on index\n * }\n * or {\n *     panelId: ...,\n *     coordSys: <geo coord sys>\n *     coordSyses: [<geo coord sys>]\n *     geoModel: <geo component>\n * }\n *\n *\n * [panelOpt]:\n *\n * Make from targetInfo. Input to BrushController.\n * {\n *     panelId: ...,\n *     rect: ...\n * }\n *\n *\n * [area]:\n *\n * Generated by BrushController or user input.\n * {\n *     panelId: Used to locate coordInfo directly. If user inpput, no panelId.\n *     brushType: determine how to convert to/from coord('rect' or 'polygon' or 'lineX/Y').\n *     Index/Id/Name of geo, xAxis, yAxis, grid: See util/model#parseFinder.\n *     range: pixel range.\n *     coordRange: representitive coord range (the first one of coordRanges).\n *     coordRanges: <Array> coord ranges, used in multiple cartesian in one grid.\n * }\n */\n\n/**\n * @param {Object} option contains Index/Id/Name of xAxis/yAxis/geo/grid\n *        Each can be {number|Array.<number>}. like: {xAxisIndex: [3, 4]}\n * @param {module:echarts/model/Global} ecModel\n * @param {Object} [opt]\n * @param {Array.<string>} [opt.include] include coordinate system types.\n */\n\nfunction BrushTargetManager(option, ecModel, opt) {\n  /**\n   * @private\n   * @type {Array.<Object>}\n   */\n  var targetInfoList = this._targetInfoList = [];\n  var info = {};\n  var foundCpts = parseFinder(ecModel, option);\n  each(targetInfoBuilders, function (builder, type) {\n    if (!opt || !opt.include || indexOf(opt.include, type) >= 0) {\n      builder(foundCpts, targetInfoList, info);\n    }\n  });\n}\n\nvar proto = BrushTargetManager.prototype;\n\nproto.setOutputRanges = function (areas, ecModel) {\n  this.matchOutputRanges(areas, ecModel, function (area, coordRange, coordSys) {\n    (area.coordRanges || (area.coordRanges = [])).push(coordRange); // area.coordRange is the first of area.coordRanges\n\n    if (!area.coordRange) {\n      area.coordRange = coordRange; // In 'category' axis, coord to pixel is not reversible, so we can not\n      // rebuild range by coordRange accrately, which may bring trouble when\n      // brushing only one item. So we use __rangeOffset to rebuilding range\n      // by coordRange. And this it only used in brush component so it is no\n      // need to be adapted to coordRanges.\n\n      var result = coordConvert[area.brushType](0, coordSys, coordRange);\n      area.__rangeOffset = {\n        offset: diffProcessor[area.brushType](result.values, area.range, [1, 1]),\n        xyMinMax: result.xyMinMax\n      };\n    }\n  });\n};\n\nproto.matchOutputRanges = function (areas, ecModel, cb) {\n  each(areas, function (area) {\n    var targetInfo = this.findTargetInfo(area, ecModel);\n\n    if (targetInfo && targetInfo !== true) {\n      zrUtil.each(targetInfo.coordSyses, function (coordSys) {\n        var result = coordConvert[area.brushType](1, coordSys, area.range);\n        cb(area, result.values, coordSys, ecModel);\n      });\n    }\n  }, this);\n};\n\nproto.setInputRanges = function (areas, ecModel) {\n  each(areas, function (area) {\n    var targetInfo = this.findTargetInfo(area, ecModel);\n    area.range = area.range || []; // convert coordRange to global range and set panelId.\n\n    if (targetInfo && targetInfo !== true) {\n      area.panelId = targetInfo.panelId; // (1) area.range shoule always be calculate from coordRange but does\n      // not keep its original value, for the sake of the dataZoom scenario,\n      // where area.coordRange remains unchanged but area.range may be changed.\n      // (2) Only support converting one coordRange to pixel range in brush\n      // component. So do not consider `coordRanges`.\n      // (3) About __rangeOffset, see comment above.\n\n      var result = coordConvert[area.brushType](0, targetInfo.coordSys, area.coordRange);\n      var rangeOffset = area.__rangeOffset;\n      area.range = rangeOffset ? diffProcessor[area.brushType](result.values, rangeOffset.offset, getScales(result.xyMinMax, rangeOffset.xyMinMax)) : result.values;\n    }\n  }, this);\n};\n\nproto.makePanelOpts = function (api, getDefaultBrushType) {\n  return zrUtil.map(this._targetInfoList, function (targetInfo) {\n    var rect = targetInfo.getPanelRect();\n    return {\n      panelId: targetInfo.panelId,\n      defaultBrushType: getDefaultBrushType && getDefaultBrushType(targetInfo),\n      clipPath: brushHelper.makeRectPanelClipPath(rect),\n      isTargetByCursor: brushHelper.makeRectIsTargetByCursor(rect, api, targetInfo.coordSysModel),\n      getLinearBrushOtherExtent: brushHelper.makeLinearBrushOtherExtent(rect)\n    };\n  });\n};\n\nproto.controlSeries = function (area, seriesModel, ecModel) {\n  // Check whether area is bound in coord, and series do not belong to that coord.\n  // If do not do this check, some brush (like lineX) will controll all axes.\n  var targetInfo = this.findTargetInfo(area, ecModel);\n  return targetInfo === true || targetInfo && indexOf(targetInfo.coordSyses, seriesModel.coordinateSystem) >= 0;\n};\n/**\n * If return Object, a coord found.\n * If reutrn true, global found.\n * Otherwise nothing found.\n *\n * @param {Object} area\n * @param {Array} targetInfoList\n * @return {Object|boolean}\n */\n\n\nproto.findTargetInfo = function (area, ecModel) {\n  var targetInfoList = this._targetInfoList;\n  var foundCpts = parseFinder(ecModel, area);\n\n  for (var i = 0; i < targetInfoList.length; i++) {\n    var targetInfo = targetInfoList[i];\n    var areaPanelId = area.panelId;\n\n    if (areaPanelId) {\n      if (targetInfo.panelId === areaPanelId) {\n        return targetInfo;\n      }\n    } else {\n      for (var i = 0; i < targetInfoMatchers.length; i++) {\n        if (targetInfoMatchers[i](foundCpts, targetInfo)) {\n          return targetInfo;\n        }\n      }\n    }\n  }\n\n  return true;\n};\n\nfunction formatMinMax(minMax) {\n  minMax[0] > minMax[1] && minMax.reverse();\n  return minMax;\n}\n\nfunction parseFinder(ecModel, option) {\n  return modelUtil.parseFinder(ecModel, option, {\n    includeMainTypes: INCLUDE_FINDER_MAIN_TYPES\n  });\n}\n\nvar targetInfoBuilders = {\n  grid: function (foundCpts, targetInfoList) {\n    var xAxisModels = foundCpts.xAxisModels;\n    var yAxisModels = foundCpts.yAxisModels;\n    var gridModels = foundCpts.gridModels; // Remove duplicated.\n\n    var gridModelMap = zrUtil.createHashMap();\n    var xAxesHas = {};\n    var yAxesHas = {};\n\n    if (!xAxisModels && !yAxisModels && !gridModels) {\n      return;\n    }\n\n    each(xAxisModels, function (axisModel) {\n      var gridModel = axisModel.axis.grid.model;\n      gridModelMap.set(gridModel.id, gridModel);\n      xAxesHas[gridModel.id] = true;\n    });\n    each(yAxisModels, function (axisModel) {\n      var gridModel = axisModel.axis.grid.model;\n      gridModelMap.set(gridModel.id, gridModel);\n      yAxesHas[gridModel.id] = true;\n    });\n    each(gridModels, function (gridModel) {\n      gridModelMap.set(gridModel.id, gridModel);\n      xAxesHas[gridModel.id] = true;\n      yAxesHas[gridModel.id] = true;\n    });\n    gridModelMap.each(function (gridModel) {\n      var grid = gridModel.coordinateSystem;\n      var cartesians = [];\n      each(grid.getCartesians(), function (cartesian, index) {\n        if (indexOf(xAxisModels, cartesian.getAxis('x').model) >= 0 || indexOf(yAxisModels, cartesian.getAxis('y').model) >= 0) {\n          cartesians.push(cartesian);\n        }\n      });\n      targetInfoList.push({\n        panelId: 'grid--' + gridModel.id,\n        gridModel: gridModel,\n        coordSysModel: gridModel,\n        // Use the first one as the representitive coordSys.\n        coordSys: cartesians[0],\n        coordSyses: cartesians,\n        getPanelRect: panelRectBuilder.grid,\n        xAxisDeclared: xAxesHas[gridModel.id],\n        yAxisDeclared: yAxesHas[gridModel.id]\n      });\n    });\n  },\n  geo: function (foundCpts, targetInfoList) {\n    each(foundCpts.geoModels, function (geoModel) {\n      var coordSys = geoModel.coordinateSystem;\n      targetInfoList.push({\n        panelId: 'geo--' + geoModel.id,\n        geoModel: geoModel,\n        coordSysModel: geoModel,\n        coordSys: coordSys,\n        coordSyses: [coordSys],\n        getPanelRect: panelRectBuilder.geo\n      });\n    });\n  }\n};\nvar targetInfoMatchers = [// grid\nfunction (foundCpts, targetInfo) {\n  var xAxisModel = foundCpts.xAxisModel;\n  var yAxisModel = foundCpts.yAxisModel;\n  var gridModel = foundCpts.gridModel;\n  !gridModel && xAxisModel && (gridModel = xAxisModel.axis.grid.model);\n  !gridModel && yAxisModel && (gridModel = yAxisModel.axis.grid.model);\n  return gridModel && gridModel === targetInfo.gridModel;\n}, // geo\nfunction (foundCpts, targetInfo) {\n  var geoModel = foundCpts.geoModel;\n  return geoModel && geoModel === targetInfo.geoModel;\n}];\nvar panelRectBuilder = {\n  grid: function () {\n    // grid is not Transformable.\n    return this.coordSys.grid.getRect().clone();\n  },\n  geo: function () {\n    var coordSys = this.coordSys;\n    var rect = coordSys.getBoundingRect().clone(); // geo roam and zoom transform\n\n    rect.applyTransform(graphic.getTransform(coordSys));\n    return rect;\n  }\n};\nvar coordConvert = {\n  lineX: curry(axisConvert, 0),\n  lineY: curry(axisConvert, 1),\n  rect: function (to, coordSys, rangeOrCoordRange) {\n    var xminymin = coordSys[COORD_CONVERTS[to]]([rangeOrCoordRange[0][0], rangeOrCoordRange[1][0]]);\n    var xmaxymax = coordSys[COORD_CONVERTS[to]]([rangeOrCoordRange[0][1], rangeOrCoordRange[1][1]]);\n    var values = [formatMinMax([xminymin[0], xmaxymax[0]]), formatMinMax([xminymin[1], xmaxymax[1]])];\n    return {\n      values: values,\n      xyMinMax: values\n    };\n  },\n  polygon: function (to, coordSys, rangeOrCoordRange) {\n    var xyMinMax = [[Infinity, -Infinity], [Infinity, -Infinity]];\n    var values = zrUtil.map(rangeOrCoordRange, function (item) {\n      var p = coordSys[COORD_CONVERTS[to]](item);\n      xyMinMax[0][0] = Math.min(xyMinMax[0][0], p[0]);\n      xyMinMax[1][0] = Math.min(xyMinMax[1][0], p[1]);\n      xyMinMax[0][1] = Math.max(xyMinMax[0][1], p[0]);\n      xyMinMax[1][1] = Math.max(xyMinMax[1][1], p[1]);\n      return p;\n    });\n    return {\n      values: values,\n      xyMinMax: xyMinMax\n    };\n  }\n};\n\nfunction axisConvert(axisNameIndex, to, coordSys, rangeOrCoordRange) {\n  var axis = coordSys.getAxis(['x', 'y'][axisNameIndex]);\n  var values = formatMinMax(zrUtil.map([0, 1], function (i) {\n    return to ? axis.coordToData(axis.toLocalCoord(rangeOrCoordRange[i])) : axis.toGlobalCoord(axis.dataToCoord(rangeOrCoordRange[i]));\n  }));\n  var xyMinMax = [];\n  xyMinMax[axisNameIndex] = values;\n  xyMinMax[1 - axisNameIndex] = [NaN, NaN];\n  return {\n    values: values,\n    xyMinMax: xyMinMax\n  };\n}\n\nvar diffProcessor = {\n  lineX: curry(axisDiffProcessor, 0),\n  lineY: curry(axisDiffProcessor, 1),\n  rect: function (values, refer, scales) {\n    return [[values[0][0] - scales[0] * refer[0][0], values[0][1] - scales[0] * refer[0][1]], [values[1][0] - scales[1] * refer[1][0], values[1][1] - scales[1] * refer[1][1]]];\n  },\n  polygon: function (values, refer, scales) {\n    return zrUtil.map(values, function (item, idx) {\n      return [item[0] - scales[0] * refer[idx][0], item[1] - scales[1] * refer[idx][1]];\n    });\n  }\n};\n\nfunction axisDiffProcessor(axisNameIndex, values, refer, scales) {\n  return [values[0] - scales[axisNameIndex] * refer[0], values[1] - scales[axisNameIndex] * refer[1]];\n} // We have to process scale caused by dataZoom manually,\n// although it might be not accurate.\n\n\nfunction getScales(xyMinMaxCurr, xyMinMaxOrigin) {\n  var sizeCurr = getSize(xyMinMaxCurr);\n  var sizeOrigin = getSize(xyMinMaxOrigin);\n  var scales = [sizeCurr[0] / sizeOrigin[0], sizeCurr[1] / sizeOrigin[1]];\n  isNaN(scales[0]) && (scales[0] = 1);\n  isNaN(scales[1]) && (scales[1] = 1);\n  return scales;\n}\n\nfunction getSize(xyMinMax) {\n  return xyMinMax ? [xyMinMax[0][1] - xyMinMax[0][0], xyMinMax[1][1] - xyMinMax[1][0]] : [NaN, NaN];\n}\n\nvar _default = BrushTargetManager;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar formatUtil = require(\"../../util/format\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar AXIS_DIMS = ['x', 'y', 'z', 'radius', 'angle', 'single']; // Supported coords.\n\nvar COORDS = ['cartesian2d', 'polar', 'singleAxis'];\n/**\n * @param {string} coordType\n * @return {boolean}\n */\n\nfunction isCoordSupported(coordType) {\n  return zrUtil.indexOf(COORDS, coordType) >= 0;\n}\n/**\n * Create \"each\" method to iterate names.\n *\n * @pubilc\n * @param  {Array.<string>} names\n * @param  {Array.<string>=} attrs\n * @return {Function}\n */\n\n\nfunction createNameEach(names, attrs) {\n  names = names.slice();\n  var capitalNames = zrUtil.map(names, formatUtil.capitalFirst);\n  attrs = (attrs || []).slice();\n  var capitalAttrs = zrUtil.map(attrs, formatUtil.capitalFirst);\n  return function (callback, context) {\n    zrUtil.each(names, function (name, index) {\n      var nameObj = {\n        name: name,\n        capital: capitalNames[index]\n      };\n\n      for (var j = 0; j < attrs.length; j++) {\n        nameObj[attrs[j]] = name + capitalAttrs[j];\n      }\n\n      callback.call(context, nameObj);\n    });\n  };\n}\n/**\n * Iterate each dimension name.\n *\n * @public\n * @param {Function} callback The parameter is like:\n *                            {\n *                                name: 'angle',\n *                                capital: 'Angle',\n *                                axis: 'angleAxis',\n *                                axisIndex: 'angleAixs',\n *                                index: 'angleIndex'\n *                            }\n * @param {Object} context\n */\n\n\nvar eachAxisDim = createNameEach(AXIS_DIMS, ['axisIndex', 'axis', 'index', 'id']);\n/**\n * If tow dataZoomModels has the same axis controlled, we say that they are 'linked'.\n * dataZoomModels and 'links' make up one or more graphics.\n * This function finds the graphic where the source dataZoomModel is in.\n *\n * @public\n * @param {Function} forEachNode Node iterator.\n * @param {Function} forEachEdgeType edgeType iterator\n * @param {Function} edgeIdGetter Giving node and edgeType, return an array of edge id.\n * @return {Function} Input: sourceNode, Output: Like {nodes: [], dims: {}}\n */\n\nfunction createLinkedNodesFinder(forEachNode, forEachEdgeType, edgeIdGetter) {\n  return function (sourceNode) {\n    var result = {\n      nodes: [],\n      records: {} // key: edgeType.name, value: Object (key: edge id, value: boolean).\n\n    };\n    forEachEdgeType(function (edgeType) {\n      result.records[edgeType.name] = {};\n    });\n\n    if (!sourceNode) {\n      return result;\n    }\n\n    absorb(sourceNode, result);\n    var existsLink;\n\n    do {\n      existsLink = false;\n      forEachNode(processSingleNode);\n    } while (existsLink);\n\n    function processSingleNode(node) {\n      if (!isNodeAbsorded(node, result) && isLinked(node, result)) {\n        absorb(node, result);\n        existsLink = true;\n      }\n    }\n\n    return result;\n  };\n\n  function isNodeAbsorded(node, result) {\n    return zrUtil.indexOf(result.nodes, node) >= 0;\n  }\n\n  function isLinked(node, result) {\n    var hasLink = false;\n    forEachEdgeType(function (edgeType) {\n      zrUtil.each(edgeIdGetter(node, edgeType) || [], function (edgeId) {\n        result.records[edgeType.name][edgeId] && (hasLink = true);\n      });\n    });\n    return hasLink;\n  }\n\n  function absorb(node, result) {\n    result.nodes.push(node);\n    forEachEdgeType(function (edgeType) {\n      zrUtil.each(edgeIdGetter(node, edgeType) || [], function (edgeId) {\n        result.records[edgeType.name][edgeId] = true;\n      });\n    });\n  }\n}\n\nexports.isCoordSupported = isCoordSupported;\nexports.createNameEach = createNameEach;\nexports.eachAxisDim = eachAxisDim;\nexports.createLinkedNodesFinder = createLinkedNodesFinder;","var echarts = require(\"../../../echarts\");\n\nvar history = require(\"../../dataZoom/history\");\n\nvar lang = require(\"../../../lang\");\n\nvar featureManager = require(\"../featureManager\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar restoreLang = lang.toolbox.restore;\n\nfunction Restore(model) {\n  this.model = model;\n}\n\nRestore.defaultOption = {\n  show: true,\n  icon: 'M3.8,33.4 M47,18.9h9.8V8.7 M56.3,20.1 C52.1,9,40.5,0.6,26.8,2.1C12.6,3.7,1.6,16.2,2.1,30.6 M13,41.1H3.1v10.2 M3.7,39.9c4.2,11.1,15.8,19.5,29.5,18 c14.2-1.6,25.2-14.1,24.7-28.5',\n  title: restoreLang.title\n};\nvar proto = Restore.prototype;\n\nproto.onclick = function (ecModel, api, type) {\n  history.clear(ecModel);\n  api.dispatchAction({\n    type: 'restore',\n    from: this.uid\n  });\n};\n\nfeatureManager.register('restore', Restore);\necharts.registerAction({\n  type: 'restore',\n  event: 'restore',\n  update: 'prepareAndUpdate'\n}, function (payload, ecModel) {\n  ecModel.resetOption('recreate');\n});\nvar _default = Restore;\nmodule.exports = _default;","var echarts = require(\"../../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar BrushController = require(\"../../helper/BrushController\");\n\nvar BrushTargetManager = require(\"../../helper/BrushTargetManager\");\n\nvar history = require(\"../../dataZoom/history\");\n\nvar sliderMove = require(\"../../helper/sliderMove\");\n\nvar lang = require(\"../../../lang\");\n\nvar featureManager = require(\"../featureManager\");\n\nrequire(\"../../dataZoomSelect\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Use dataZoomSelect\nvar dataZoomLang = lang.toolbox.dataZoom;\nvar each = zrUtil.each; // Spectial component id start with \\0ec\\0, see echarts/model/Global.js~hasInnerId\n\nvar DATA_ZOOM_ID_BASE = '\\0_ec_\\0toolbox-dataZoom_';\n\nfunction DataZoom(model, ecModel, api) {\n  /**\n   * @private\n   * @type {module:echarts/component/helper/BrushController}\n   */\n  (this._brushController = new BrushController(api.getZr())).on('brush', zrUtil.bind(this._onBrush, this)).mount();\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._isZoomActive;\n}\n\nDataZoom.defaultOption = {\n  show: true,\n  // Icon group\n  icon: {\n    zoom: 'M0,13.5h26.9 M13.5,26.9V0 M32.1,13.5H58V58H13.5 V32.1',\n    back: 'M22,1.4L9.9,13.5l12.3,12.3 M10.3,13.5H54.9v44.6 H10.3v-26'\n  },\n  // `zoom`, `back`\n  title: zrUtil.clone(dataZoomLang.title)\n};\nvar proto = DataZoom.prototype;\n\nproto.render = function (featureModel, ecModel, api, payload) {\n  this.model = featureModel;\n  this.ecModel = ecModel;\n  this.api = api;\n  updateZoomBtnStatus(featureModel, ecModel, this, payload, api);\n  updateBackBtnStatus(featureModel, ecModel);\n};\n\nproto.onclick = function (ecModel, api, type) {\n  handlers[type].call(this);\n};\n\nproto.remove = function (ecModel, api) {\n  this._brushController.unmount();\n};\n\nproto.dispose = function (ecModel, api) {\n  this._brushController.dispose();\n};\n/**\n * @private\n */\n\n\nvar handlers = {\n  zoom: function () {\n    var nextActive = !this._isZoomActive;\n    this.api.dispatchAction({\n      type: 'takeGlobalCursor',\n      key: 'dataZoomSelect',\n      dataZoomSelectActive: nextActive\n    });\n  },\n  back: function () {\n    this._dispatchZoomAction(history.pop(this.ecModel));\n  }\n};\n/**\n * @private\n */\n\nproto._onBrush = function (areas, opt) {\n  if (!opt.isEnd || !areas.length) {\n    return;\n  }\n\n  var snapshot = {};\n  var ecModel = this.ecModel;\n\n  this._brushController.updateCovers([]); // remove cover\n\n\n  var brushTargetManager = new BrushTargetManager(retrieveAxisSetting(this.model.option), ecModel, {\n    include: ['grid']\n  });\n  brushTargetManager.matchOutputRanges(areas, ecModel, function (area, coordRange, coordSys) {\n    if (coordSys.type !== 'cartesian2d') {\n      return;\n    }\n\n    var brushType = area.brushType;\n\n    if (brushType === 'rect') {\n      setBatch('x', coordSys, coordRange[0]);\n      setBatch('y', coordSys, coordRange[1]);\n    } else {\n      setBatch({\n        lineX: 'x',\n        lineY: 'y'\n      }[brushType], coordSys, coordRange);\n    }\n  });\n  history.push(ecModel, snapshot);\n\n  this._dispatchZoomAction(snapshot);\n\n  function setBatch(dimName, coordSys, minMax) {\n    var axis = coordSys.getAxis(dimName);\n    var axisModel = axis.model;\n    var dataZoomModel = findDataZoom(dimName, axisModel, ecModel); // Restrict range.\n\n    var minMaxSpan = dataZoomModel.findRepresentativeAxisProxy(axisModel).getMinMaxSpan();\n\n    if (minMaxSpan.minValueSpan != null || minMaxSpan.maxValueSpan != null) {\n      minMax = sliderMove(0, minMax.slice(), axis.scale.getExtent(), 0, minMaxSpan.minValueSpan, minMaxSpan.maxValueSpan);\n    }\n\n    dataZoomModel && (snapshot[dataZoomModel.id] = {\n      dataZoomId: dataZoomModel.id,\n      startValue: minMax[0],\n      endValue: minMax[1]\n    });\n  }\n\n  function findDataZoom(dimName, axisModel, ecModel) {\n    var found;\n    ecModel.eachComponent({\n      mainType: 'dataZoom',\n      subType: 'select'\n    }, function (dzModel) {\n      var has = dzModel.getAxisModel(dimName, axisModel.componentIndex);\n      has && (found = dzModel);\n    });\n    return found;\n  }\n};\n/**\n * @private\n */\n\n\nproto._dispatchZoomAction = function (snapshot) {\n  var batch = []; // Convert from hash map to array.\n\n  each(snapshot, function (batchItem, dataZoomId) {\n    batch.push(zrUtil.clone(batchItem));\n  });\n  batch.length && this.api.dispatchAction({\n    type: 'dataZoom',\n    from: this.uid,\n    batch: batch\n  });\n};\n\nfunction retrieveAxisSetting(option) {\n  var setting = {}; // Compatible with previous setting: null => all axis, false => no axis.\n\n  zrUtil.each(['xAxisIndex', 'yAxisIndex'], function (name) {\n    setting[name] = option[name];\n    setting[name] == null && (setting[name] = 'all');\n    (setting[name] === false || setting[name] === 'none') && (setting[name] = []);\n  });\n  return setting;\n}\n\nfunction updateBackBtnStatus(featureModel, ecModel) {\n  featureModel.setIconStatus('back', history.count(ecModel) > 1 ? 'emphasis' : 'normal');\n}\n\nfunction updateZoomBtnStatus(featureModel, ecModel, view, payload, api) {\n  var zoomActive = view._isZoomActive;\n\n  if (payload && payload.type === 'takeGlobalCursor') {\n    zoomActive = payload.key === 'dataZoomSelect' ? payload.dataZoomSelectActive : false;\n  }\n\n  view._isZoomActive = zoomActive;\n  featureModel.setIconStatus('zoom', zoomActive ? 'emphasis' : 'normal');\n  var brushTargetManager = new BrushTargetManager(retrieveAxisSetting(featureModel.option), ecModel, {\n    include: ['grid']\n  });\n\n  view._brushController.setPanels(brushTargetManager.makePanelOpts(api, function (targetInfo) {\n    return targetInfo.xAxisDeclared && !targetInfo.yAxisDeclared ? 'lineX' : !targetInfo.xAxisDeclared && targetInfo.yAxisDeclared ? 'lineY' : 'rect';\n  })).enableBrush(zoomActive ? {\n    brushType: 'auto',\n    brushStyle: {\n      // FIXME user customized?\n      lineWidth: 0,\n      fill: 'rgba(0,0,0,0.2)'\n    }\n  } : false);\n}\n\nfeatureManager.register('dataZoom', DataZoom); // Create special dataZoom option for select\n// FIXME consider the case of merge option, where axes options are not exists.\n\necharts.registerPreprocessor(function (option) {\n  if (!option) {\n    return;\n  }\n\n  var dataZoomOpts = option.dataZoom || (option.dataZoom = []);\n\n  if (!zrUtil.isArray(dataZoomOpts)) {\n    option.dataZoom = dataZoomOpts = [dataZoomOpts];\n  }\n\n  var toolboxOpt = option.toolbox;\n\n  if (toolboxOpt) {\n    // Assume there is only one toolbox\n    if (zrUtil.isArray(toolboxOpt)) {\n      toolboxOpt = toolboxOpt[0];\n    }\n\n    if (toolboxOpt && toolboxOpt.feature) {\n      var dataZoomOpt = toolboxOpt.feature.dataZoom; // FIXME: If add dataZoom when setOption in merge mode,\n      // no axis info to be added. See `test/dataZoom-extreme.html`\n\n      addForAxis('xAxis', dataZoomOpt);\n      addForAxis('yAxis', dataZoomOpt);\n    }\n  }\n\n  function addForAxis(axisName, dataZoomOpt) {\n    if (!dataZoomOpt) {\n      return;\n    } // Try not to modify model, because it is not merged yet.\n\n\n    var axisIndicesName = axisName + 'Index';\n    var givenAxisIndices = dataZoomOpt[axisIndicesName];\n\n    if (givenAxisIndices != null && givenAxisIndices != 'all' && !zrUtil.isArray(givenAxisIndices)) {\n      givenAxisIndices = givenAxisIndices === false || givenAxisIndices === 'none' ? [] : [givenAxisIndices];\n    }\n\n    forEachComponent(axisName, function (axisOpt, axisIndex) {\n      if (givenAxisIndices != null && givenAxisIndices != 'all' && zrUtil.indexOf(givenAxisIndices, axisIndex) === -1) {\n        return;\n      }\n\n      var newOpt = {\n        type: 'select',\n        $fromToolbox: true,\n        // Id for merge mapping.\n        id: DATA_ZOOM_ID_BASE + axisName + axisIndex\n      }; // FIXME\n      // Only support one axis now.\n\n      newOpt[axisIndicesName] = axisIndex;\n      dataZoomOpts.push(newOpt);\n    });\n  }\n\n  function forEachComponent(mainType, cb) {\n    var opts = option[mainType];\n\n    if (!zrUtil.isArray(opts)) {\n      opts = opts ? [opts] : [];\n    }\n\n    each(opts, cb);\n  }\n});\nvar _default = DataZoom;\nmodule.exports = _default;","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"normal-toggle-chart\"},[_c('ve-line',{attrs:{\"data\":_vm.chartData,\"toolbox\":_vm.toolbox}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"normal-toggle-chart\">\r\n    <ve-line :data=\"chartData\" :toolbox=\"toolbox\"></ve-line>\r\n  </div>\r\n</template>\r\n\r\n\r\n<script>\r\n  import 'echarts/lib/component/toolbox';\r\n  import VeLine from 'v-charts/lib/line';\r\n  import VeBar from 'v-charts/lib/bar';\r\n\r\n  export default {\r\n    components: { VeLine,VeBar},\r\n    name: 'NormalToggleChart',\r\n    data() {\r\n      return {\r\n        toolbox: {\r\n          feature: {\r\n            magicType: { type: ['line', 'bar']},\r\n            saveAsImage: {\r\n              name: 'v-chart-temp'\r\n            }\r\n          }\r\n        },\r\n        initIndex: 0,\r\n        chartData: {\r\n          columns: ['日期', '访问用户'],\r\n          rows: [\r\n            { 日期: '1月1日', 访问用户: 1523 },\r\n            { 日期: '1月2日', 访问用户: 1223 },\r\n            { 日期: '1月3日', 访问用户: 2123 },\r\n            { 日期: '1月4日', 访问用户: 4123 },\r\n            { 日期: '1月5日', 访问用户: 3123 },\r\n            { 日期: '1月6日', 访问用户: 7123 },\r\n          ]\r\n        }\r\n      };\r\n    }\r\n  };\r\n\r\n</script>\r\n\r\n<style>\r\n  .normal-toggle-chart {\r\n\r\n  }\r\n</style>\r\n","import mod from \"-!../../../../node_modules/_cache-loader@1.2.2@cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/_thread-loader@1.2.0@thread-loader/dist/cjs.js!../../../../node_modules/_babel-loader@8.0.4@babel-loader/lib/index.js!../../../../node_modules/_cache-loader@1.2.2@cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/_vue-loader@15.4.2@vue-loader/lib/index.js??vue-loader-options!./NormalToggleChart.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/_cache-loader@1.2.2@cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/_thread-loader@1.2.0@thread-loader/dist/cjs.js!../../../../node_modules/_babel-loader@8.0.4@babel-loader/lib/index.js!../../../../node_modules/_cache-loader@1.2.2@cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/_vue-loader@15.4.2@vue-loader/lib/index.js??vue-loader-options!./NormalToggleChart.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./NormalToggleChart.vue?vue&type=template&id=ee950658&\"\nimport script from \"./NormalToggleChart.vue?vue&type=script&lang=js&\"\nexport * from \"./NormalToggleChart.vue?vue&type=script&lang=js&\"\nimport style0 from \"./NormalToggleChart.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/_vue-loader@15.4.2@vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\ncomponent.options.__file = \"NormalToggleChart.vue\"\nexport default component.exports","var ComponentView = require(\"../../view/Component\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = ComponentView.extend({\n  type: 'dataZoom',\n  render: function (dataZoomModel, ecModel, api, payload) {\n    this.dataZoomModel = dataZoomModel;\n    this.ecModel = ecModel;\n    this.api = api;\n  },\n\n  /**\n   * Find the first target coordinate system.\n   *\n   * @protected\n   * @return {Object} {\n   *                   grid: [\n   *                       {model: coord0, axisModels: [axis1, axis3], coordIndex: 1},\n   *                       {model: coord1, axisModels: [axis0, axis2], coordIndex: 0},\n   *                       ...\n   *                   ],  // cartesians must not be null/undefined.\n   *                   polar: [\n   *                       {model: coord0, axisModels: [axis4], coordIndex: 0},\n   *                       ...\n   *                   ],  // polars must not be null/undefined.\n   *                   singleAxis: [\n   *                       {model: coord0, axisModels: [], coordIndex: 0}\n   *                   ]\n   */\n  getTargetCoordInfo: function () {\n    var dataZoomModel = this.dataZoomModel;\n    var ecModel = this.ecModel;\n    var coordSysLists = {};\n    dataZoomModel.eachTargetAxis(function (dimNames, axisIndex) {\n      var axisModel = ecModel.getComponent(dimNames.axis, axisIndex);\n\n      if (axisModel) {\n        var coordModel = axisModel.getCoordSysModel();\n        coordModel && save(coordModel, axisModel, coordSysLists[coordModel.mainType] || (coordSysLists[coordModel.mainType] = []), coordModel.componentIndex);\n      }\n    }, this);\n\n    function save(coordModel, axisModel, store, coordIndex) {\n      var item;\n\n      for (var i = 0; i < store.length; i++) {\n        if (store[i].model === coordModel) {\n          item = store[i];\n          break;\n        }\n      }\n\n      if (!item) {\n        store.push(item = {\n          model: coordModel,\n          axisModels: [],\n          coordIndex: coordIndex\n        });\n      }\n\n      item.axisModels.push(axisModel);\n    }\n\n    return coordSysLists;\n  }\n});\n\nmodule.exports = _default;"],"sourceRoot":""}